{"s are equal.\r\n            ":"S相等。\r\n            \r\n","The nameSyntax node to get semantic information for.":"nameyntax节点以获取语义信息。\r\n","\r\n            Provides optional script-callable utility functions.\r\n            ":"\r\n            提供可选的脚本可爱的实用程序功能。\r\n            \r\n","\r\n            Initializes a new VBScript engine instance with the specified options.\r\n            ":"\r\n            用指定选项初始化新的VBScript引擎实例。\r\n            \r\n","\r\n            Type parameter of a named type. For example: ":"\r\n            命名类型的类型参数。例如：\r\n"," of the compilation.\r\n            Allowed option values: One or more fields of ":" 汇编。\r\n            允许的选项值：一个或多个字段\r\n","\r\n            constructor, and calls the ":"\r\n            构造函数，并调用\r\n"," task for initialization.\r\n            Note: This method must be invoked exactly once on the driver.\r\n            ":" 初始化的任务。\r\n            注意：必须在驱动程序上精确调用此方法。\r\n            \r\n","\r\n            Type arguments.\r\n            ":"\r\n            类型参数。\r\n            \r\n","\r\n            but not ":"\r\n            但不是\r\n","\r\n            Resolves type reference.\r\n            ":"\r\n            解决类型参考。\r\n            \r\n","\r\n            Returns true if the given symbol has been configured to be excluded from analysis by options in context of the given containing symbol.\r\n            ":"如果给定符号被配置为在给定包含符号的上下文中，则返回为true。\r\n            \r\n","\r\n            Record effects of that currently emitted instruction on the eval stack.\r\n            ":"\r\n            该记录的效果当前在评估堆栈上发出的指令。\r\n            \r\n","An enumerator for the set.":"该集合的枚举器。\r\n","\r\n            Creates a new tree of nodes with new trivia inserted after the specified trivia.\r\n            ":"\r\n            在指定的琐事之后，创建了一棵新的节点树，并插入了新的琐事。\r\n            \r\n","\r\n              Looks up a localized string similar to Can't create a reference to a submission..\r\n            ":"\r\n              查找类似于提交的本地化字符串。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer '{0}' threw an exception of type '{1}' with message '{2}'..\r\n            ":"\r\n              查找类似于分析仪'{0}'的本地化字符串，带有消息'{2}'..的类型'{1}'的例外\r\n            \r\n","\r\n            If specified the values of ":"\r\n            如果指定了\r\n","\r\n            Current usage:\r\n             (1) C# empty statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃空语句。\r\n            \r\n","\r\n            A concurrent, simplified HashSet.\r\n            ":"\r\n            并发简化的标签。\r\n            \r\n","The script code to evaluate.":"评估脚本代码。\r\n","\r\n            Compute AssemblySymbols referenced by the input AssemblySymbol and fill in ":"\r\n            计算输入组件符号引用并填写的计算汇编符号\r\n","\r\n            The parent token that contains this token in its LeadingTrivia or TrailingTrivia collection.\r\n            ":"\r\n            在其领先或Trailingtrivia系列中包含该令牌的父母令牌。\r\n            \r\n","Resource data provider should return non-null stream":"资源数据提供商应返回非挂钩流\r\n","\r\n            Boolean option to exclude analysis of async void methods.\r\n            ":"\r\n            布尔值选项排除异步空隙方法的分析。\r\n            \r\n","\r\n            A class used to provide XML documentation to the compiler for members from metadata. A\r\n            custom implementation of this class should be returned from a DocumentationResolver to provide XML\r\n            documentation comments from custom caches or locations.\r\n            ":"\r\n            用于向元数据成员提供XML文档的课程。一个\r\n            该类的自定义实现应从Documentation Resolver退还以提供XML\r\n            文档评论来自自定义缓存或位置。\r\n            \r\n","A duplicate of the SymbolDisplayFormat, with a replaced set of ":"SymboldisPlayFormat的重复，一组已更换\r\n","\r\n            We reserve the right to change this struct in the future.\r\n            ":"\r\n            我们保留将来更改该结构的权利。\r\n            \r\n"," used to access the file system inside this instance.\r\n            ":" 用于访问此实例中的文件系统。\r\n            \r\n","\r\n            Syntax nodes for executable code blocks (method body, initializers, etc.) associated with this declaration.\r\n            ":"\r\n            与此声明关联的可执行代码块（方法主体，初始化器等）的语法节点。\r\n            \r\n","\r\n            Generates code that loads an address of an element of a multidimensional array.\r\n            ":"\r\n            生成加载多维数组元素地址的代码。\r\n            \r\n","the value if successfully parsed or None otherwise":"值如果成功解析或无否则\r\n","\r\n            Initializes a new V8 script engine instance with the specified resource constraints.\r\n            ":"\r\n            用指定的资源约束初始化新的V8脚本引擎实例。\r\n            \r\n","\r\n            This temp is not interesting to the expression compiler.  However, it \r\n            may be replaced by an interesting local in a later stage.\r\n            ":"\r\n            对于表达编译器而言，此温度并不有趣。但是，它\r\n            在以后的阶段，可能被有趣的当地人所取代。\r\n            \r\n","\r\n            Returns false if the field wasn't declared as \"const\", or constant value was omitted or erroneous.\r\n            True otherwise.\r\n            ":"\r\n            如果该字段未声明为“ const”，则返回false，或省略或错误的恒定值。\r\n            否则否则。\r\n            \r\n","\r\n            Format member names in a way consistent with FxCop's display format.\r\n            ":"\r\n            格式成员名称的方式与FXCOP的显示格式一致。\r\n            \r\n","The extra input used by mapping delegate":"映射委托使用的额外输入\r\n","\r\n            The type of the discarded value.\r\n            ":"\r\n            废弃值的类型。\r\n            \r\n","Resource constraints for the V8 runtime (see remarks).":"V8运行时的资源约束（请参阅备注）。\r\n","\r\n            Read a Byte value from the stream. This value must have been written using ":"\r\n            从流中读取字节值。该值必须使用\r\n","\r\n            Get the values associated with a key. \r\n            ":"\r\n            获取与键关联的值。\r\n            \r\n","\r\n            Returns a new IFunctionPointerTypeSymbol representing a function pointer type tied to types in this\r\n            Compilation.\r\n            ":"\r\n            返回一个新的IfunctionPoInterTypesymbol，代表与此类型相关的功能指针类型\r\n            汇编。\r\n            \r\n","\r\n            Provides values associated with ":"\r\n            提供与\r\n","\r\n            Returns memory usage information for the V8 runtime.\r\n            ":"\r\n            返回V8运行时的内存使用信息。\r\n            \r\n"," implementation of this property returns a\r\n            ":" 此属性的实施返回\r\n            \r\n","\r\n            Formats the value of the current instance using the optionally specified format. \r\n            ":"\r\n            使用选项指定格式格式化当前实例的值。\r\n            \r\n","Display string used in error messages to identity the reference.":"显示字符串在错误消息中用于标识参考。\r\n","unbound":"未绑定\r\n","\r\n            Path to the text.\r\n            ":"\r\n            文本的路径。\r\n            \r\n"," for the given executable code block ":" 对于给定的可执行代码块\r\n","\r\n            The position to check.\r\n            ":"\r\n            检查的位置。\r\n            \r\n","The type of the value associated with the key.":"与密钥关联的值类型。\r\n","Never returned - only set in user-constructed parts.":"永不返回 - 仅设置在用户构造的零件中。\r\n","\r\n            Current usage:\r\n             (1) C# property reference expression.\r\n             (2) VB property reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃属性参考表达式。\r\n             （2）VB属性参考表达式。\r\n            \r\n","\r\n            ParseOptions to use when parsing generator provided source.\r\n            ":"\r\n            解析生成器提供源时要使用的羊角面包。\r\n            \r\n","\r\n            The negated pattern.\r\n            ":"\r\n            被否定的模式。\r\n            \r\n","\r\n            The location within the syntax tree that this location is associated with.\r\n            ":"\r\n            该位置与之关联的语法树中的位置。\r\n            \r\n","\r\n            Creates a reference to the assembly metadata.\r\n            ":"\r\n            创建对组件元数据的引用。\r\n            \r\n"," is also true.\r\n            If we are using or performing points to analysis, certain operations can invalidate all the analysis data off the containing instance.\r\n            ":" 也是真的。\r\n            如果我们使用或执行分析点，则某些操作可能会使包含实例的所有分析数据无效。\r\n            \r\n"," of the first byte to copy.":" 第一个复制字节。\r\n","\r\n            This class associates a symbol with particular format for display.\r\n            It can be passed as an argument for an error message in place where symbol display should go, \r\n            which allows to defer building strings and doing many other things (like loading metadata) \r\n            associated with that until the error message is actually requested.\r\n            ":"\r\n            此类将一个符号与特定格式相关联。\r\n            可以将其作为参数传递，以获取符号显示的位置中的错误消息，\r\n            这允许推迟建筑字符串并做许多其他事情（例如加载元数据）\r\n            与此关联，直到实际请求错误消息为止。\r\n            \r\n","\r\n            Defines sequence points.\r\n            ":"\r\n            定义序列点。\r\n            \r\n","\r\n            Helper method to update analysis data for existing entries in ":"\r\n            为更新现有条目的分析数据的帮助方法\r\n"," for the specified host type. This version is invoked\r\n            if the specified object can be used as a type argument.\r\n            ":" 对于指定的主机类型。此版本被调用\r\n            如果指定的对象可以用作类型参数。\r\n            \r\n","\r\n            The statement must be fully inside the same method body.\r\n            ":"\r\n            该语句必须完全在同一方法主体内。\r\n            \r\n","The compilation.":"汇编。\r\n","\r\n            Find the slot that contains the given offset.\r\n            ":"\r\n            找到包含给定偏移的插槽。\r\n            \r\n","\r\n            Represents an object creation with a dynamically bound constructor.\r\n            ":"\r\n            代表具有动态绑定构造函数的对象创建。\r\n            \r\n"," if the\r\n             applicable ":" 如果是\r\n             适用的\r\n","\r\n            csc.exe and vbc.exe entry point.\r\n            ":"\r\n            csc.exe和vbc.exe入口点。\r\n            \r\n","\r\n            Convert a symbol to a string that can be displayed to the user. May be tailored to a\r\n            specific location in the source code.\r\n            ":"\r\n            将符号转换为可以显示给用户的字符串。可以量身定制\r\n            源代码中的特定位置。\r\n            \r\n","\r\n            Metadata observed by the compiler.\r\n            May be shared across multiple Reference Managers.\r\n            Access only under lock(":"\r\n            编译器观察到元数据。\r\n            可以在多个参考经理中共享。\r\n            仅在锁定下访问（\r\n","\r\n            The attribute in question.\r\n            ":"\r\n            有问题的属性。\r\n            \r\n","\r\n            Add a value to the dictionary.\r\n            ":"\r\n            为字典添加值。\r\n            \r\n","\r\n            Specifies that no miscellaneous options should be applied.\r\n            ":"\r\n            指定不应应用其他选项。\r\n            \r\n","Loader for obtaining the ":"用于获得的装载机\r\n","\r\n            In C#, this will always be null.\r\n            ":"\r\n            在C＃中，这将永远是零的。\r\n            \r\n","\r\n            Flags that control the behavior of the target operating system. CLI implementations are supposed to ignore this, but some operating system pay attention.\r\n            ":"\r\n            旗帜控制目标操作系统的行为。 CLI实现应该忽略这一点，但是一些操作系统会注意。\r\n            \r\n","\r\n            Post process argument which needs to be escaped/reset after being passed to an invocation/creation target\r\n            without interprocedural analysis.\r\n            This method resets the analysis data for an object instance passed around as an ":"\r\n            传递给调用/创建目标后需要逃脱/重置的过程参数\r\n            没有概要分析。\r\n            此方法重置作为对象实例作为一个作为一个作为一个的分析数据\r\n","\r\n            Type is a delegate.\r\n            ":"\r\n            类型是代表。\r\n            \r\n","\r\n            Indicates whether the method is readonly,\r\n            i.e. whether the 'this' receiver parameter is 'ref readonly'.\r\n            Returns true for readonly instance methods and accessors\r\n            and for reduced extension methods with a 'this in' parameter.\r\n            ":"\r\n            指示该方法是否已阅读，\r\n            即，“此“接收器”参数是否为'ref readonly'。\r\n            返回可读取实例方法和访问者的返回\r\n            以及使用“ this”参数的减少扩展方法。\r\n            \r\n","\r\n            Cases of the switch.\r\n            ":"\r\n            开关的情况。\r\n            \r\n","\r\n            Abstract Execution state. \r\n            If we know something interesting about IL stream we put it here.\r\n            ":"\r\n            抽象执行状态。\r\n            如果我们对IL流有一些有趣的知识，我们将其放在这里。\r\n            \r\n","\r\n            A class that writes both primitive values and non-cyclical object graphs to a stream that may be\r\n            later read back using the ObjectReader class.\r\n            ":"\r\n            将原始值和非周期性对象图写入流的类\r\n            稍后使用ObjectReader类回复。\r\n            \r\n","\r\n            Determines if the assembly might contain extension methods.\r\n            If false, the assembly does not contain extension methods.\r\n            ":"\r\n            确定组件是否可能包含扩展方法。\r\n            如果是错误的，则组件不包含扩展方法。\r\n            \r\n","\r\n            A list of the files that constitute the assembly. Empty for netmodule. These are not the source language files that may have been\r\n            used to compile the assembly, but the files that contain constituent modules of a multi-module assembly as well\r\n            as any external resources. It corresponds to the File table of the .NET assembly file format.\r\n            ":"\r\n            构成程序集的文件列表。为NetModule空。这些不是可能已经存在的源语言文件\r\n            用于编译组件，但还包含多模块组件的组成模块的文件\r\n            作为任何外部资源。它对应于.NET汇编文件格式的文件表。\r\n            \r\n","\r\n            Gets the used heap size in bytes.\r\n            ":"\r\n            在字节中获取用过的堆尺寸。\r\n            \r\n"," resides, i.e. ":" 居住，即\r\n","\r\n            Enables or disables the host's modeless dialogs.\r\n            ":"\r\n            启用或禁用主机的无模式对话框。\r\n            \r\n","\r\n            Left operand.\r\n            ":"\r\n            左操作数。\r\n            \r\n","\r\n            Suppress analyzer and/or compiler non-error diagnostics reported for the compilation.\r\n            This may be a subset of the full set of reported diagnostics, as an optimization for\r\n            supporting incremental and partial analysis scenarios.\r\n            A diagnostic is considered suppressible by a DiagnosticSuppressor if *all* of the following conditions are met:\r\n                1. Diagnostic is not already suppressed in source via pragma/suppress message attribute.\r\n                2. Diagnostic's ":"\r\n            抑制分析仪和/或编译器的非错误诊断，报告了该编译。\r\n            这可能是全套报告诊断的子集，以优化\r\n            支持增量和部分分析方案。\r\n            如果满足以下所有 *，则诊断抑制器认为可以抑制诊断：\r\n                1.诊断尚未通过pragma/抑制消息属性在源中抑制。\r\n                2.诊断\r\n","\r\n            Represents a variable declaration statement.\r\n            ":"\r\n            代表可变声明语句。\r\n            \r\n","\r\n            Secure Hash Algorithm 2 with a hash size of 256 bits.\r\n            ":"\r\n            安全哈希算法2，哈希尺寸为256位。\r\n            \r\n","AddHostObject":"AddHostObject\r\n","\r\n            Determines whether a sequence contains more than ":"\r\n            确定序列是否包含超过\r\n","\r\n            A possible empty list of upper bounds for dimension indices.\r\n            The first upper bound in the list corresponds to the first dimension. Dimensions cannot be skipped.\r\n            An unspecified upper bound means that instances of this type can have an arbitrary upper bound for that dimension.\r\n            ":"\r\n            尺寸指数的上限可能的空列表。\r\n            列表中的第一个上限对应于第一个维度。尺寸不能跳过。\r\n            未指定的上限意味着这种类型的实例可以为该维度具有任意的上限。\r\n            \r\n","\r\n              Current usage:\r\n              (1) C# with expression.\r\n            ":"\r\n              当前用法：\r\n              （1）C＃带表达。\r\n            \r\n","\r\n            Gets or sets the heap expansion multiplier.\r\n            ":"\r\n            获取或设置堆扩展乘数。\r\n            \r\n","\r\n            Enum that describes the state related to the #line or #externalsource directives at a position in source.\r\n            ":"描述与#line或#externalsource指令相关的状态的枚举。\r\n            \r\n","\r\n            A set of ints that is small, thread-safe and lock free.\r\n            Several assumptions have been made that allow it to be small and fast:\r\n            1. Deletes never happen.\r\n            2. The size is small. In dogfooding experiments, 89% had 4 or fewer elements and\r\n               98% had 8 or fewer elements. The largest size was 17.\r\n            3. As a result of assumption 2, linear look-up is good enough.\r\n            4. One value, in this case int.MinValue, is used as a sentinel and may never appear in the set.\r\n            ":"\r\n            一组小型，螺纹安全和锁定的INT。\r\n            已经做出了几个假设，使其变得越来越快：\r\n            1.删​​除永远不会发生。\r\n            2.尺寸很小。在狗食实验中，有89％的人有4个或更少的元素，\r\n               98％的元素有8个或更少。最大的尺寸是17。\r\n            3.由于假设2，线性查找足够好。\r\n            4.在这种情况下，一个值在int.minvalue中用作前哨，可能永远不会出现在集合中。\r\n            \r\n"," Event - type is unsupported ":" 事件 - 类型不支持\r\n","\r\n            Returns marshalling data or null of MarshalAs attribute isn't applied on the field.\r\n            ":"\r\n            返回编组数据或Marshalas属性的零件未在现场上应用。\r\n            \r\n","The kind of annotation to remove.":"删除的注释。\r\n","\r\n            A mapped path is a path specified in source via ":"\r\n            映射路径是通过源中指定的路径\r\n","\r\n            Unfortunatelly, we cannot depend on Path.GetInvalidPathChars() or Path.GetInvalidFileNameChars()\r\n            From MSDN: The array returned from this method is not guaranteed to contain the complete set of characters\r\n            that are invalid in file and directory names. The full set of invalid characters can vary by file system.\r\n            https://msdn.microsoft.com/en-us/library/system.io.path.getinvalidfilenamechars.aspx\r\n            \r\n            Additionally, Path.GetInvalidPathChars() doesn't include \"?\" or \"*\" which are invalid characters,\r\n            and Path.GetInvalidFileNameChars() includes \":\" and \"\\\" which are valid characters.\r\n            \r\n            The more accurate way is to let the framework parse the path and throw on any errors.\r\n            ":"\r\n            不幸的是，我们不能依靠path.getinvalidpathars（）或path。\r\n            来自MSDN：不能保证从该方法返回的数组包含完整的字符集\r\n            文件和目录名称无效。完整的无效字符可以随文件系统而变化。\r\n            https://msdn.microsoft.com/en-us/library/system.io.path.getinvalidfilenamechars.aspx\r\n            \r\n            另外，path.getInvalidpathars（）不包括“？”或“*”是无效的字符，\r\n            and path.getInvalidFilenameChars（）包括“：”和“ \\”，它们是有效的字符。\r\n            \r\n            更准确的方法是让框架解析路径并抛弃任何错误。\r\n            \r\n","\r\n            Get the location of this trivia.\r\n            ":"\r\n            获取这个琐事的位置。\r\n            \r\n","The type to expose.":"暴露的类型。\r\n","\r\n            Determines whether the calling thread has access to the script engine.\r\n            ":"\r\n            确定调用线程是否可以访问脚本引擎。\r\n            \r\n","\r\n            A unit of metadata stored as a single artifact and potentially produced and revised independently from other units.\r\n            Examples of units include .NET assemblies and modules, as well C++ object files and compiled headers.\r\n            ":"\r\n            一个元数据单位存储为单个伪像，并可能独立于其他单位生产和修订。\r\n            单位的示例包括.NET组件和模块，以及C ++对象文件和编译标头。\r\n            \r\n"," (via ":" （通过\r\n","'s name for the new global script item that\r\n            will represent it.\r\n            ":"新的全局脚本项目的名称\r\n            将代表它。\r\n            \r\n","An optional assembly name.":"可选的组件名称。\r\n"," to continue script execution, ":" 要继续执行脚本，\r\n","\r\n            True iff an exception was thrown during a call to ":"\r\n            是的，如果在打电话期间提出了一个例外\r\n","\r\n             Maps index to ":"\r\n             地图索引到\r\n","\r\n            Number of well known types in WellKnownType enum\r\n            ":"\r\n            众所周知的众所周知类型的数量\r\n            \r\n","\r\n            Gets the current PDB signature.\r\n            ":"\r\n            获取当前的PDB签名。\r\n            \r\n","\r\n            Label instruction corresponding to the start of filter decision block\r\n            ":"\r\n            标签指令对应于滤波器决策块的开始\r\n            \r\n","\r\n            This property is specified in bytes. When it is set to the default value, no stack\r\n            usage limit is enforced, and scripts with unchecked recursion or other excessive stack\r\n            usage can cause unrecoverable errors and process termination.\r\n            ":"\r\n            该属性在字节中指定。将其设置为默认值时，没有堆栈\r\n            使用限制是强制执行的，并且具有未选中的递归或其他过多堆栈的脚本\r\n            使用可能会导致无法恢复的错误和过程终止。\r\n            \r\n"," to register actions to be executed at any of:\r\n            ":" 注册措施将在任何一个以下执行：\r\n            \r\n","\r\n            Looks up a property value in the ":"\r\n            在\r\n","\r\n            DocumentationProviders are compared when determining whether an AssemblySymbol can be reused.\r\n            Hence, if multiple instances can represent the same documentation, it is imperative that\r\n            Equals (and GetHashCode) be overridden to capture this fact.  Otherwise, it is possible to end\r\n            up with multiple AssemblySymbols for the same assembly, which plays havoc with the type hierarchy.\r\n            ":"\r\n            在确定是否可以重复使用汇编符号时，比较了Documentation -Providers。\r\n            因此，如果多个实例可以代表相同的文档，则必须\r\n            等于（和Gethashcode）被覆盖以捕获这一事实。否则，可以结束\r\n            在同一组件上使用多个组合符号，该组件与类型层次结构扮演破坏。\r\n            \r\n","\r\n            Dataflow analysis to track value content of ":"\r\n            数据流分析以跟踪价值内容的内容\r\n","\r\n              Degenerate buckets here are buckets with contiguous range of constants\r\n              leading to the same label. Like:\r\n            \r\n                  case 0:\r\n                  case 1:\r\n                  case 2:\r\n                  case 3:\r\n                       DoOneThing();\r\n                       break;               \r\n            \r\n                  case 4:\r\n                  case 5:\r\n                  case 6:\r\n                  case 7:\r\n                       DoAnotherThing();\r\n                       break;   \r\n              \r\n              NOTE: A trivial bucket with only one case constant is by definition degenerate.\r\n             ":"\r\n              退化的水桶这里是具有连续常数范围的桶\r\n              导致相同的标签。喜欢：\r\n            \r\n                  情况0：\r\n                  情况1：\r\n                  案例2：\r\n                  案例3：\r\n                       doonething（）;\r\n                       休息;\r\n            \r\n                  案例4：\r\n                  案例5：\r\n                  案例6：\r\n                  案例7：\r\n                       doAnthing（）;\r\n                       休息;\r\n              \r\n              注意：一个只有一个情况常数的微不足道的水桶是定义上的退化。\r\n             \r\n","\r\n            Checks if the given method is a Finalizer implementation.\r\n            ":"\r\n            检查给定方法是否是最终器实现。\r\n            \r\n"," is invoked only once per-analyzer.\r\n            2) ":" 仅调用一次每分析仪。\r\n            2）\r\n","An instance of the representative type.":"代表类型的实例。\r\n","\r\n            Gets what kind of method this is. There are several different kinds of things in the\r\n            C# language that are represented as methods. This property allow distinguishing those things\r\n            without having to decode the name of the method.\r\n            ":"\r\n            得到这是什么方法。有几种不同的东西\r\n            C＃语言表示为方法。该属性允许区分这些东西\r\n            无需解码该方法的名称。\r\n            \r\n","<in-memory assembly>":"<内存组件>\r\n"," if this is a 'lifted' range operation.  When there is an\r\n            operator that is defined to work on a value type, 'lifted' operators are\r\n            created to work on the ":" 如果这是“抬高”范围操作。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","The node to add.":"要添加的节点。\r\n","\r\n            Given a path to an assembly and a set of paths to possible dependencies,\r\n            identifies which of the assembly's references are missing. May throw.\r\n            ":"\r\n            给定通往组件的途径和一组可能的依赖性路径，\r\n            标识大会的参考缺失。可能会扔。\r\n            \r\n","The accumulated hash code":"累积的哈希代码\r\n","This method is not thread-safe.":"此方法不是线程安全。\r\n","\r\n            Sets a property value without checking whether the ":"\r\n            设置属性值，而无需检查是否是否\r\n","Start position.":"开始位置。\r\n"," is\r\n            a property rather than metadata. We expect it to be cheap and immutable, but we can't force them to be so, we cache them\r\n            and ask only once.\r\n            ":" 是\r\n            财产而不是元数据。我们希望它便宜且不可变，但我们不能强迫他们这样，我们可以缓存他们\r\n            只问一次。\r\n            \r\n","\r\n            Information that describes a method or property parameter, but does not include all the information in a IParameterDefinition.\r\n            ":"\r\n            描述方法或属性参数的信息，但并未在iParameterDefinition中包含所有信息。\r\n            \r\n","\r\n            The number of positional arguments.\r\n            ":"\r\n            位置参数的数量。\r\n            \r\n","\r\n            If this is a native integer, returns the symbol for the underlying type,\r\n            either ":"如果这是本地整数，请返回基础类型的符号，\r\n            任何一个\r\n","\r\n            A type\r\n            ":"\r\n            一种\r\n            \r\n","\r\n            No accessibility specified.\r\n            ":"\r\n            未指定可访问性。\r\n            \r\n",". Note that this is\r\n            nearly always more useful than the usual return from ":"。请注意这是\r\n            几乎总是比从通常的回报更有用\r\n","\r\n            Information decoded from early well-known custom attributes applied on a method.\r\n            ":"\r\n            从方法上应用的早期众所周知的自定义属性解码的信息。\r\n            \r\n"," The last token in the list.":" 列表中的最后一个令牌。\r\n","The files being checked for existence.":"被检查的文件是否存在。\r\n","Path to the assembly file.":"汇编文件的路径。\r\n",", which is the first operand that is unconditionally evaluated and is the result of the operation if non null.\r\n             (2) ":"，这是第一个无条件评估的操作数，如果无效，则是操作的结果。\r\n             （2）\r\n","The immediate type arguments to be replaced for type\r\n            parameters in the method.":"直接类型的参数要替换为类型\r\n            该方法中的参数。\r\n","\r\n            Returns true if the local variable is declared with fixed-pointer-initializer (in unsafe context).\r\n            ":"\r\n            如果用固定的销售器声明本地变量（在不安全的上下文中），则返回true。\r\n            \r\n","A name for the profile.":"配置文件的名称。\r\n","\r\n            Exposes a host object to script code.\r\n            ":"\r\n            将主机对象暴露于脚本代码。\r\n            \r\n","Root property initializer operation, which must have a null parent.":"root属性初始化器操作，该操作必须具有无效父母。\r\n","\r\n            Converts a ruleset file at the given ":"\r\n            在给定的\r\n","\r\n            Method is declared inside of another method.\r\n            ":"\r\n            方法在另一种方法内声明。\r\n            \r\n","\r\n            Checked if IsMarshalledExplicitly == true and MarshallingInformation is null\r\n            ":"\r\n            检查是否ismarshalledexplicly == true且编组信息为无效\r\n            \r\n","\r\n            A symbols specifying the type to examine.\r\n            ":"\r\n            一个指定要检查类型的符号。\r\n            \r\n","\r\n            An object specifying how members will be formatted.\r\n            ":"\r\n            指定成员如何格式的对象。\r\n            \r\n","\"TEST1\"":"“ test1”\r\n","\r\n            Ids of well known runtime types.\r\n            Values should not intersect with SpecialType enum!\r\n            ":"\r\n            众所周知的运行时类型的ID。\r\n            值不应与专业题材相交！\r\n            \r\n","\r\n            The value is not used by Windows loader, but the OS appcompat infrastructure uses it to identify apps. \r\n            It is useful for us to have a mechanism to identify the compiler that produced the binary. \r\n            This is the appropriate value to use for that. That is what it was invented for. \r\n            We don't want to have the high bit set for this in case some users perform a signed comparison to \r\n            determine if the value is less than some version. The C++ linker is at 0x0B. \r\n            We'll start our numbering at 0x30 for C#, 0x50 for VB.\r\n            ":"\r\n            Windows Loader不使用该值，但是OS AppCompat基础结构使用它来识别应用程序。\r\n            对于我们来说，有一种机制来识别产生二进制的编译器的机制。\r\n            这是适当的值。这就是它的发明。\r\n            如果某些用户对此进行签名比较，我们不想为此设置高位\r\n            确定该值是否小于某些版本。 C ++链接器为0x0b。\r\n            对于C＃，VB 0x50，我们将以0x30的速度启动我们的编号。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid compilation options -- submission can't be signed..\r\n            ":"\r\n              查找类似于无效汇编选项的本地化字符串 - 无法签名。\r\n            \r\n","\r\n            Programmatic suppression of a ":"\r\n            程序抑制\r\n","\r\n            Because TypeSymbol equality can differ based on e.g. nullability, any symbols that contain TypeSymbols can also differ in the same way\r\n            This call allows the symbol to accept a comparison kind that should be used when comparing its contained types\r\n            ":"\r\n            因为类型符号平等可能会根据例如无效，任何包含类型符号的符号也可以以相同的方式差异\r\n            此调用允许该符号接受比较类型时应使用的比较类型\r\n            \r\n","\r\n              Looks up a localized string similar to Can't embed interop types from module..\r\n            ":"\r\n              查找类似于模块中无法嵌入Interop类型的本地化字符串。\r\n            \r\n","\r\n            Creates a copy of the SymbolDisplayFormat but with replaced set of ":"\r\n            创建SymboldisPlayFormat的副本，但已更换\r\n","\r\n            True, if field is an IContextualNamedEntity, even if field reference implements the interface,\r\n            doesn't mean it is contextual.\r\n            ":"\r\n            是的，如果字段是iContextualNeventity，即使字段引用实现接口，\r\n            并不意味着这是上下文。\r\n            \r\n","\r\n            Gets or sets a value indicating whether this is an entry point to a parallel algorithm.\r\n            ":"\r\n            获取或设置一个值，指示这是对并行算法的切入点。\r\n            \r\n","\r\n            Given the ExecutableType of the tool being wrapped and information that we \r\n            know about our current bitness, figures out and returns the path to the correct\r\n            Tracker.exe. \r\n            ":"\r\n            鉴于要包装的工具的执行程序和我们的信息\r\n            了解我们当前的位置，弄清楚并返回正确的道路\r\n            tracker.exe。\r\n            \r\n","\r\n            A symbol representing the implicit Script class. This is null if the class is not\r\n            defined in the compilation.\r\n            ":"\r\n            代表隐式脚本类的符号。如果班级不\r\n            在汇编中定义。\r\n            \r\n","Arrays with more than one dimension cannot be serialized.":"具有多个维度的数组无法序列化。\r\n","\r\n            Marks the given event as fully analyzed for the given analyzers.\r\n            ":"\r\n            将给定的事件标记为给定分析仪的全面分析。\r\n            \r\n","\r\n            Scope for setting up analyzers for code within a symbol and its members.\r\n            ":"\r\n            用于在符号及其成员中设置代码的分析仪的范围。\r\n            \r\n","Arguments to the message of the diagnostic":"诊断信息的论点\r\n","\r\n            Removes an element from a dynamic host object that implements ":"\r\n            从动态主机对象中删除元素\r\n","\r\n              Looks up a localized string similar to Parameter '{0}' must be an 'INamedTypeSymbol' or an 'IAssemblySymbol'..\r\n            ":"\r\n              查找类似于参数'{0}'的本地化字符串必须是“ inamedtypesymbol”或“ iassemblysymbol”。\r\n            \r\n","A full assembly identity.":"完整的组装身份。\r\n","\r\n            Get the number of distinct keys.\r\n            Forces a full population of the cache.\r\n            ":"\r\n            获取不同的键。\r\n            强迫全部缓存。\r\n            \r\n","\r\n            Tries to find supportPortability elements in the given XML:\r\n            ":"\r\n            试图在给定XML中查找可提供的通用性元素：\r\n            \r\n","\r\n            The name assigned to the GreaterThanOrEqual operator.\r\n            ":"\r\n            分配给大塔雷雷奎尔操作员的名称。\r\n            \r\n","An object that can be passed to a parameter of type ":"可以传递给类型参数的对象\r\n","\r\n            An integer representing the language specific kind of this token.\r\n            ":"\r\n            代表该令牌的语言特定类型的整数。\r\n            \r\n","\r\n            Validates the arguments passed to ":"\r\n            验证传递给的论点\r\n","\r\n            True if the module contains only IL and is processor independent. Should there be a choice between launching as a 64-bit or 32-bit\r\n            process, this setting will cause the host to launch it as a 32-bit process. \r\n            ":"\r\n            如果模块仅包含IL并且与处理器无关，则为true。是否以64位或32位的启动之间有选择\r\n            流程，此设置将导致主机作为32位流程启动。\r\n            \r\n","\r\n            A mapping from diagnostic id to diagnostic reporting level. The diagnostic ID may be case-sensitive depending\r\n            on the language.\r\n            ":"\r\n            从诊断ID到诊断报告级别的映射。诊断ID可能对病例敏感\r\n            关于语言。\r\n            \r\n","\r\n            Ready for processing.\r\n            Indicates it is either completely unprocessed or partially processed by one or more older requests that was either completed or cancelled.\r\n            ":"\r\n            准备处理。\r\n            表明它是完全未经处理的，或者由一个或多个旧请求进行了部分处理，该请求已完成或取消。\r\n            \r\n","\r\n            Variable holding on the object being locked while the execution is within the block of the lock statement (C#) or SyncLock statement (VB).\r\n            ":"当执行在锁定语句（C＃）或Synclock语句（VB）的块内时，要锁定对象上的变量。\r\n            \r\n","\r\n            This is intended for symbols that are ordinary symbols in the language sense, and may be\r\n            used by code, but that are simply declared implicitly rather than with explicit language\r\n            syntax.\r\n            \r\n            Examples include (this list is not exhaustive):\r\n              the default constructor for a class or struct that is created if one is not provided,\r\n              the BeginInvoke/Invoke/EndInvoke methods for a delegate,\r\n              the generated backing field for an auto property or a field-like event,\r\n              the \"this\" parameter for non-static methods,\r\n              the \"value\" parameter for a property setter,\r\n              the parameters on indexer accessor methods (not on the indexer itself),\r\n              methods in anonymous types\r\n            ":"\r\n            这是针对语言意义上的普通符号的符号，并且可能是\r\n            代码使用，但仅仅是隐式声明而不是用明确的语言声明\r\n            句法。\r\n            \r\n            示例包括（此列表并不详尽）：\r\n              如果不提供一个类别的类或结构的默认构造函数，则\r\n              委托人的开头/调用/endinvoke方法，\r\n              自动属性或类似现场的事件的生成的背面字段，\r\n              非静态方法的“此”参数，\r\n              属性设置器的“值”参数，\r\n              索引器访问者方法上的参数（不在索引本身上）​​，\r\n              匿名类型的方法\r\n            \r\n"," after disposal to see if any\r\n            exceptions were thrown during disposal.\r\n            ":" 处置后看看是否有\r\n            处置期间抛出了例外。\r\n            \r\n"," for additional modules (other than ":" 对于其他模块（除了\r\n","\r\n            Executes the compilation start actions.\r\n            ":"\r\n            执行汇编启动操作。\r\n            \r\n","The delegate to invoke on the script engine's thread.":"调用脚本引擎线程的代表。\r\n","\r\n            Reduces the number of segments toward the target number of segments,\r\n            if the number of regments is deemed to be too large (beyond the maximum).\r\n            ":"\r\n            减少了针对目标段数的段数，\r\n            如果区域数量被认为太大（超出了最大值）。\r\n            \r\n","M(out _)":"m（out _）\r\n","The symbols declared by the node.":"节点声明的符号。\r\n","Assembly definition identity.":"汇编定义身份。\r\n","\r\n              Looks up a localized string similar to Stream must support read and seek operations..\r\n            ":"\r\n              查找类似于流的本地化字符串必须支持阅读和寻求操作。\r\n            \r\n","The attribute member.":"属性成员。\r\n"," for increment operator.":" 用于增量操作员。\r\n","\r\n            Scope for setting up analyzers for an entire session, automatically associating actions with analyzers.\r\n            ":"\r\n            为整个会话设置分析仪的范围，将动作与分析仪自动关联。\r\n            \r\n",".\r\n            Note that the pair {":"。\r\n            请注意，这对{\r\n","Property/Field":"属性/字段\r\n","\r\n            Represents a case clause with a single value for comparison.\r\n            ":"\r\n            代表具有单个值的案例子句进行比较。\r\n            \r\n","\r\n            if the stream contains invalid UTF-8 bytes.\r\n            ":"\r\n            如果该流包含无效的UTF-8字节。\r\n            \r\n","\r\n            Adds a property to the ":"\r\n            将属性添加到\r\n","The normalized rooting marker based on that set of tlogs":"基于那组TLOG的标准化标记\r\n","\r\n            Returns true (false) if specified assembly identities are (not) equal \r\n            regardless of unification, retargeting or other assembly binding policies. \r\n            Returns null if these policies must be consulted to determine name equivalence.\r\n            ":"\r\n            如果指定的汇编身份为（非）相等\r\n            不管统一，重新定位或其他装配结合政策如何。\r\n            如果必须咨询这些策略以确定名称等效性，则返回无效。\r\n            \r\n","\r\n            Filter a ":"\r\n            过滤a\r\n",",\r\n            its location and the location of all of its dependencies must first be specified\r\n            by calls to ":"，，，，\r\n            必须首先指定其位置及其所有依赖项的位置\r\n            通过电话\r\n","\r\n            Base class for storing information decoded from early well-known custom attributes.\r\n            ":"\r\n            从早期知名的自定义属性解码的存储信息的基类。\r\n            \r\n","Random(Int32)":"随机（INT32）\r\n","\r\n            True if the conversion can fail at runtime with an overflow exception. This corresponds to C# checked and unchecked blocks.\r\n            ":"\r\n            正确，如果转换在运行时可能会失败，而溢出异常。这对应于C＃检查和未检查的块。\r\n            \r\n","The name of an alias.":"别名的名称。\r\n","If the PE image format is invalid.":"如果PE图像格式无效。\r\n"," is true and\r\n            (3) ":" 是真的\r\n            （3）\r\n","\r\n            Treats documentation comments as regular comments.\r\n            ":"\r\n            将文档评论视为常规评论。\r\n            \r\n","\r\n            Represents a local variable declaration.\r\n            ":"\r\n            代表局部变量声明。\r\n            \r\n","\r\n            Scope for setting up analyzers for analyzing a symbol and its members.\r\n            ":"\r\n            用于设置分析仪以分析符号及其成员的范围。\r\n            \r\n","\r\n            Indicates whether there is any element in the list.\r\n            ":"\r\n            指示列表中是否有任何元素。\r\n            \r\n","A reference to the assembly metadata.":"对组件元数据的引用。\r\n"," implements both the\r\n            equality and inequality operators, otherwise false.\r\n            ":" 同时实现\r\n            平等和不平等运营商，否则是错误的。\r\n            \r\n","\r\n            Enables or disables instance method enumeration.\r\n            ":"\r\n            启用或禁用实例方法枚举。\r\n            \r\n"," is null.\r\n            For example, this returns true for attribute operations.\r\n            ":" 一片空白。\r\n            例如，这对于属性操作返回。\r\n            \r\n","The stream to which to write the heap snapshot.":"写堆快照的流。\r\n","\r\n            Updates the the copy values for all entities that are part of the given ":"\r\n            更新给定的所有实体的复制值\r\n","\r\n            Some features of the compiler (such as anonymous types, pay-as-you-go, NoPIA, ...)\r\n            rely on all referenced symbols to go through translate mechanism. Because by default\r\n            symbol translator does not translate some of indirectly referenced symbols, such as \r\n            type argument, we have to force translation here\r\n            \r\n            This class provides unified implementation for this functionality.\r\n            ":"\r\n            编译器的某些功能（例如匿名类型，付款方式，nopia，...）\r\n            依靠所有引用的符号通过翻译机制。因为默认情况下\r\n            符号翻译器不会翻译一些间接引用的符号，例如\r\n            类型参数，我们必须在这里强制翻译\r\n            \r\n            此类为此功能提供统一的实现。\r\n            \r\n","\r\n            Returns true if the conversion exists, as defined by the target language.\r\n            ":"\r\n            如果存在转换，则返回true，如目标语言所定义。\r\n            \r\n","\r\n            Compute the hashcode of a single character using the FNV-1a algorithm\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            Note: In general, this isn't any more useful than \"char.GetHashCode\". However,\r\n            it may be needed if you need to generate the same hash code as a string or\r\n            substring with just a single character.\r\n            ":"\r\n            使用FNV-1A算法计算单个字符的哈希码\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            注意：通常，这并不比“ char.gethashcode”更有用。然而，\r\n            如果您需要生成与字符串相同的哈希代码或\r\n            仅具有一个字符的子字符串。\r\n            \r\n","The nullable annotation to use":"使用的无效注释\r\n"," behavior is to be\r\n            disabled. This option yields a significant performance benefit for global item access.\r\n            ":" 行为是\r\n            禁用。此选项可为全球项目访问带来重大的性能好处。\r\n            \r\n","\r\n            Gets the token that precedes this token in the syntax tree.\r\n            ":"\r\n            获取在语法树中此令牌之前的令牌。\r\n            \r\n","\r\n            Represents a delegate creation. This is created whenever a new delegate is created.\r\n            ":"\r\n            代表代表的创建。每当创建新的代表时，都会创建这。\r\n            \r\n","\r\n            Stores all the ":"\r\n            存储所有\r\n","\r\n            Represents Case x To y in VB.\r\n            ":"\r\n            表示VB中的情况x至y。\r\n            \r\n","\r\n            Represents a local function statement.\r\n            ":"\r\n            代表本地函数语句。\r\n            \r\n","\r\n            Gets the available named label symbols in the context of the specified location and optional container.\r\n            Only members that are accessible and visible from the given location are returned.\r\n            ":"\r\n            在指定位置和可选容器的上下文中获取可用的标签符号。\r\n            仅返回从给定位置可访问和可见的成员。\r\n            \r\n","\r\n            Represents a C# switch or VB Select Case statement.\r\n            ":"\r\n            表示C＃开关或VB选择案例语句。\r\n            \r\n","\r\n            The syntax tree this model was obtained from.\r\n            ":"\r\n            语法树此模型是从中获得的。\r\n            \r\n","\r\n            Returns User Strings referenced from the IL in the module. \r\n            ":"\r\n            从模块中的IL引用的返回用户字符串。\r\n            \r\n","Path of the file from which the compilation's Win32 resources will be read (in RES format).  \r\n            Null to indicate that there are none.":"将读取汇编WIN32资源的文件路径（以RES格式）。\r\n            null表示没有。\r\n","Action will be executed only if a ":"只有在\r\n","The last trivia in the list.":"列表中的最后一个琐事。\r\n","\r\n            var StringT = host.type(\"System.String\");\r\n            var StringDictT = host.type(\"System.Collections.Generic.Dictionary\", StringT, StringT);\r\n            var dict = host.newObj(StringDictT);\r\n            ":"\r\n            var stringt = host.type（“ system.string”）;\r\n            var stringDictt = host.type（“ system.collections.generic.dictionary”，stringt，stringt）;\r\n            var dict = host.newobj（stringDictt）;\r\n            \r\n"," when the type contains one of the supported collection count property; otherwise ":" 当该类型包含受支持的收集计数属性之一时；否则\r\n","\r\n            Current usage:\r\n             (1) VB relational case clause of the form \"Case Is op x\".\r\n            ":"\r\n            当前用法：\r\n             （1）形式的“案例为op x”的VB关系案例条款。\r\n            \r\n","\r\n            Resolves references to source documents specified in the source.\r\n            ":"\r\n            解决对源中指定的源文档的引用。\r\n            \r\n","\r\n            Indicates if the given ":"\r\n            指示给定的\r\n","\r\n            Converts an immutable array of ":"\r\n            转换一个不变的阵列\r\n","\r\n            Gets the end position of the span.\r\n            ":"\r\n            获取跨度的末端位置。\r\n            \r\n",", which is further differentiated by ":"，这进一步通过\r\n","\r\n            Represents the different kinds of type parameters.\r\n            ":"\r\n            代表不同类型的类型参数。\r\n            \r\n","\r\n            Symbol is an alias.\r\n            ":"\r\n            符号是一个别名。\r\n            \r\n","Absolute path expected.":"预期的绝对路径。\r\n","\r\n            Current usage: C# discard expressions\r\n            ":"\r\n            当前用法：C＃丢弃表达式\r\n            \r\n","UpToDateCheckType":"uptodatechecktype\r\n","Storage for diagnostics.":"诊断存储。\r\n","\r\n            The language name that this node or token is syntax of.\r\n            ":"\r\n            该节点或令牌是语法的语言名称。\r\n            \r\n","\r\n            Symbol declared by this declaration.\r\n            ":"\r\n            该声明声明的符号。\r\n            \r\n","Analyzer Driver Failure":"分析仪驱动程序故障\r\n","\r\n            A metadata custom attribute.\r\n            ":"\r\n            元数据自定义属性。\r\n            \r\n","). This property enables external\r\n            heap size monitoring that can prevent termination in some scenarios. To be effective,\r\n            it should be set to a value that is significantly lower than\r\n            ":"）。此属性启用了外部\r\n            堆尺寸监视可以防止在某些情况下终止。有效，\r\n            它应该设置为明显低于\r\n            \r\n","\r\n            Represents an array.\r\n            ":"\r\n            代表一个数组。\r\n            \r\n","The directory into which to write the tracking log files":"要编写跟踪日志文件的目录\r\n","\r\n            The maximum warning level represented by a large value of 9999.\r\n            ":"\r\n            最大警告级别表示为9999。\r\n            \r\n","PE stream.":"PE流。\r\n","\r\n            Enables or disables type restriction for array and list elements retrieved by index.\r\n            ":"\r\n            启用或禁用对数组的类型限制，并通过索引检索到列表元素。\r\n            \r\n","\r\n             Compares descriptors by the values that we write to a SARIF log and nothing else.\r\n            \r\n             We cannot just use ":"\r\n             通过我们写入的sarif日志的值比较描述符，而没有其他内容。\r\n            \r\n             我们不能只使用\r\n","\r\n            Given that an assembly with identity assemblyGrantingAccessIdentity granted access to assemblyWantingAccess,\r\n            check the public keys to ensure the internals-visible-to check should succeed. This is used by both the\r\n            C# and VB implementations as a helper to implement `bool IAssemblySymbol.GivesAccessTo(IAssemblySymbol toAssembly)`.\r\n            ":"\r\n            鉴于具有身份汇编格兰特林申请人的组装授予了访问汇编的访问权限，\r\n            检查公共钥匙，以确保内部可视检查应成功。这两者都使用\r\n            C＃和VB实现是实现`bool iassemblysymbol.givesAccescesto（iassemblysymbol toeSembly）`。\r\n            \r\n","\r\n            Returns the full string representation of this token including its leading and trailing trivia.\r\n            ":"\r\n            返回这个令牌的完整字符串表示，包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Can be either a PUBLICKEYBLOB or PRIVATEKEYBLOB. The BLOB must /// be unencrypted.\r\n            ":"\r\n            可以是publicKeyblob或privateKeyblob。斑点必须///未加密。\r\n            \r\n","\r\n            This is the maximum length of a path in metadata, assuming the path is in UTF-8\r\n            format and not (yet) null-terminated.\r\n            ":"\r\n            假设该路径在UTF-8中，这是元数据中路径的最大长度\r\n            格式而不是（尚未）终止。\r\n            \r\n",". VBScript interprets this as the special object\r\n            reference\r\n            ":"。 VBScript将其解释为特殊对象\r\n            参考\r\n            \r\n"," instead of a byte[] to avoid the\r\n            allocation cost when called from native code.\r\n            ":" 而不是一个字节[]，以避免\r\n            从本机代码调用时的分配成本。\r\n            \r\n","\r\n            Returns true if this is a warning treated as an error; otherwise false.\r\n            ":"\r\n            如果这是被视为错误的警告，则返回true；否则错误。\r\n            \r\n","\r\n            Decode the arguments to ObsoleteAttribute. ObsoleteAttribute can have 0, 1 or 2 arguments.\r\n            ":"\r\n            将论点解码为淘汰。 OmpoleTeatTribute可以具有0、1或2个参数。\r\n            \r\n","\r\n            True if the method is a source method implemented as an iterator.\r\n            ":"如果该方法是实现为迭代器的源方法，则为true。\r\n            \r\n"," contains the following data:\r\n             \r\n             -    Suitable AssemblySymbol instance for the corresponding assembly, \r\n                 null reference if none is available/found. Always null for the first element, which corresponds to the assembly being built.\r\n            \r\n             -    Result of resolving assembly references of the corresponding assembly \r\n                 against provided set of assembly definitions. Essentially, this is an array returned by\r\n                 ":" 包含以下数据：\r\n             \r\n              - 相应组件的合适汇编实例，\r\n                 null引用如果没有可用/发现。对于第一个元素，始终为null，这对应于要构建的组件。\r\n            \r\n              - 解决相应组件的组装参考的结果\r\n                 针对提供的组装定义集。本质上，这是一个由\r\n                 \r\n"," doesn't belong to the corresponding ":" 不属于相应的\r\n","\r\n            Return true if there is a source declaration symbol name that matches the provided name.\r\n            This may be faster than ":"\r\n            如果有一个与提供名称匹配的源声明符号名称，则返回true。\r\n            这可能比\r\n","\r\n            True if the type is readonly.\r\n            ":"\r\n            如果可以阅读类型，则为thu。\r\n            \r\n"," for inequality.\r\n            ":" 不平等。\r\n            \r\n","\r\n            Creates a new node or token identical to this one without the specified annotations.\r\n            ":"\r\n            在没有指定注释的情况下，创建一个与该节点相同的新节点或代币。\r\n            \r\n","\r\n            Indicates this represents the initial unknown but distinct location for an analysis entity.\r\n            ":"\r\n            指示这代表了分析实体的初始未知但不同的位置。\r\n            \r\n","\r\n            Attempts to add a value to the set.\r\n            ":"\r\n            尝试为集合添加值。\r\n            \r\n","\r\n            For information about the types of result values that script code can return, see\r\n            ":"\r\n            有关脚本代码可以返回的结果值类型的信息，请参阅\r\n            \r\n"," that represents the entire source text of this ":" 代表了整个源文本\r\n"," nodes, using a slot-based system that tracks\r\n            the current slot, and the current index in the slot if the current slot is an immutable array. This type is not hardened\r\n            to ":" 节点，使用基于插槽的系统跟踪\r\n            如果当前插槽是不可变的阵列，则当前插槽和插槽中的当前索引。这种类型没有硬化\r\n            至\r\n","\r\n            Returns the local info for all locals indexed by slot.\r\n            ":"\r\n            返回所有由插槽索引的本地人的本地信息。\r\n            \r\n","\r\n            True if the value type constraint (":"\r\n            true如果值类型约束（\r\n","The full string representation of this token including its leading and trailing trivia.":"这个令牌的完整字符串表示，包括其领先和尾随的琐事。\r\n","\r\n            Represents the specialized event definition.\r\n            ":"\r\n            代表专业事件定义。\r\n            \r\n","\r\n            Whether the parameter passed by value or by reference.\r\n            ":"\r\n            无论是按值传递还是通过引用传递的参数。\r\n            \r\n","Exposed As":"暴露为\r\n"," cannot be embedded (see ":" 无法嵌入（请参阅\r\n","\r\n            Indicates that no attributes are present.\r\n            ":"\r\n            表示没有属性。\r\n            \r\n","\r\n            True if no analyzer needs generated code analysis - we can skip all analysis on a generated code symbol/tree.\r\n            ":"\r\n            是的，如果没有分析仪需要生成的代码分析 - 我们可以跳过生成的代码符号/树上的所有分析。\r\n            \r\n"," with a non-null ":" 与非挂钩\r\n","\r\n            Gets or sets the default script access setting for all members of exposed objects.\r\n            ":"\r\n            获取或设置所有暴露对象成员的默认脚本访问设置。\r\n            \r\n","s in each ":"每个人\r\n","\r\n            Error type symbols should be replaced with an object of this class \r\n            in the translation layer for emit.\r\n            ":"\r\n            错误类型符号应替换为此类的对象\r\n            在发射的翻译层中。\r\n            \r\n"," indicating the abstract location at which the entity is located and\r\n                3. An optional parent key if this key has the same ":" 指示实体所在的抽象位置和\r\n                3.如果此键具有相同的可选父键\r\n","An ImmutableArray containing all the types that are members of this symbol. If this symbol has no type members,\r\n            returns an empty ImmutableArray. Never returns null.":"一个不含此符号成员的类型的不可分割的arrableray。如果此符号没有类型成员，\r\n            返回一个空的Immutablearray。永远不会返回零。\r\n"," property used to determine if a task is already complete\r\n            (see C# Specification, §7.7.7.1 Awaitable expressions).\r\n            ":" 用于确定任务是否已经完成的属性\r\n            （请参阅C＃规范，第7.7.7.1节等待表达式）。\r\n            \r\n","ClearNoCheck":"Clearnocheck\r\n"," at which to store the first copied byte.":" 在其中存储第一个复制字节。\r\n"," to \r\n            be unspecified.\r\n            ":" 至\r\n            不指定。\r\n            \r\n"," with no associated semantics.\r\n            ":" 没有相关的语义。\r\n            \r\n","\r\n            Get all the members of this symbol that are namespaces.\r\n            ":"\r\n            获取该符号的所有成员是名称空间。\r\n            \r\n","\r\n            Indicates that the type is System.Runtime.CompilerServices.RuntimeFeature.\r\n            ":"\r\n            表示类型为system.runtime.compilerServices.RuntimeFeature。\r\n            \r\n","\r\n            The public part of the key used to encrypt the SHA1 hash over the persisted form of this assembly. Empty or null if not specified.\r\n            This value is used by the loader to decrypt an encrypted hash value stored in the assembly, which it then compares with a freshly computed hash value\r\n            in order to verify the integrity of the assembly.\r\n            ":"\r\n            钥匙的公共部分用于加密该集会的持续形式。如果未指定为空或空的。\r\n            加载程序使用此值来解密装置中存储的加密哈希值，然后将其与刚计算的哈希值进行比较\r\n            为了验证组件的完整性。\r\n            \r\n","\r\n            \r\n            When navigating to the definition of \"Outer\" we know about First.cs because of the MethodDebugInfo for Outer.Inner.Method()\r\n            but there would be no document information for Second.cs so this method would return that information.\r\n            \r\n            When navigating to \"Inner\" we likewise know about First.cs because of the MethodDebugInfo, and we know about Second.cs because\r\n            of the document info for its containing type, so this method would not return information for Inner. In fact this method\r\n            will never return information for any nested type.\r\n            ":"\r\n            \r\n            当导航到“ outer”的定义时，我们知道first.cs，因为for earter.inner.method（）的方法debuginfo\r\n            但是，秒没有任何文档信息，因此此方法将返回该信息。\r\n            \r\n            当导航到“内部”时，我们同样因为Methoddebuginfo而对first.cs了解，我们知道第二c\r\n            其包含类型的文档信息，因此此方法不会返回内部信息。实际上这个方法\r\n            永远不会返回任何嵌套类型的信息。\r\n            \r\n","The kind of the display part.":"显示部分的种类。\r\n","\r\n            If this field serves as a backing variable for an automatically generated\r\n            property or a field-like event, returns that \r\n            property/event. Otherwise returns null.\r\n            Note, the set of possible associated symbols might be expanded in the future to \r\n            reflect changes in the languages.\r\n            ":"\r\n            如果此字段用作自动生成的后台变量\r\n            属性或类似现场的事件，返回\r\n            属性/事件。否则返回null。\r\n            注意，将来可能会扩展一组可能的相关符号\r\n            反映语言的变化。\r\n            \r\n","\r\n              Looks up a localized string similar to The changes must be ordered and not overlapping..\r\n            ":"\r\n              查找类似于更改的本地化字符串必须订购而不是重叠。\r\n            \r\n","The type of delegate to create.":"要创建的委托类型。\r\n","\r\n            Name of the type without namespace prefix, but possibly with generic arity mangling present.\r\n            ":"\r\n            没有名称空间前缀的类型名称，但可能存在通用的杂交。\r\n            \r\n","Options for creating the profile.":"创建配置文件的选项。\r\n","\r\n             Returns whether this method is using CLI VARARG calling convention. This is used for\r\n             C-style variable argument lists. This is used extremely rarely in C# code and is\r\n             represented using the undocumented \"__arglist\" keyword.\r\n            \r\n             Note that methods with \"params\" on the last parameter are indicated with the \"IsParams\"\r\n             property on ParameterSymbol, and are not represented with this property.\r\n             ":"\r\n             返回此方法是否使用CLI VARARG调用约定。这用于\r\n             C风格变量参数列表。这很少在C＃代码中使用，并且是\r\n             使用无证件的“ __arglist”关键字表示。\r\n            \r\n             请注意，最后一个参数上带有“参数”的方法用“ Isparams”指示\r\n             属性在parametersymbol上，并未用此属性表示。\r\n             \r\n","s, and can also collect\r\n            state information to be used by other operation actions or operation block end actions.\r\n            ":"S，也可以收集\r\n            其他操作操作或操作块最终操作要使用的状态信息。\r\n            \r\n","\r\n            Local variable that holds a pinned handle of a managed reference passed to a fixed statement (C#).\r\n            ":"\r\n            将固定的托管引用的固定句柄传递给固定语句（C＃）的固定句柄。\r\n            \r\n"," indicating the current state of processing of the given compilation event.\r\n            ":" 指示给定汇编事件的当前处理状态。\r\n            \r\n","\r\n            Used by the DocumentationCommentCompiler(s) to check doc comments for XML parse errors.\r\n            As a performance optimization, this class tries to re-use the same underlying ":"\r\n            由DocumentationCommentCompiler（S）用于检查XML解析错误的DOC注释。\r\n            作为绩效优化，此类试图重新使用相同的基础\r\n","\r\n            Computes line starts faster given already computed line starts from text before the change.\r\n            ":"\r\n            计算行启动速度更快，给定的已经计算的行从更改之前的文本开始。\r\n            \r\n","\r\n            The underlying token if this ":"\r\n            基础令牌如果这个\r\n"," with all diagnostics and telemetry info.\r\n            ":" 使用所有诊断和遥测信息。\r\n            \r\n","\r\n            Gets a list of ancestor nodes (including this node) \r\n            ":"\r\n            获取祖先节点的列表（包括此节点）\r\n            \r\n","\r\n            Represents an anonymous function operation in context of a ":"\r\n            在一个上下文中代表一个匿名函数操作\r\n","\r\n            A reference to a type.\r\n            ":"\r\n            对类型的引用。\r\n            \r\n"," instance with the specified default script access setting.\r\n            ":" 带有指定默认脚本访问设置的实例。\r\n            \r\n","\r\n            Attaches event queue to the driver and start processing all events pertaining to the given analysis scope.\r\n            ":"\r\n            将事件队列附加到驾驶员，并开始处理与给定分析范围有关的所有事件。\r\n            \r\n","\r\n            The receiver of a delegate relaxation stub.\r\n            Created as a local variable but always lifted to a relaxation display class field. \r\n            We never emit debug info for hoisted relaxation variable. \r\n            TODO: Avoid using lambdas and display classes for implementation of relaxation stubs and remove this kind.\r\n            ":"\r\n            代表放松存根的接收者。\r\n            作为局部变量创建，但总是升至放松显示类字段。\r\n            我们从不为提起的放松变量发布调试信息。\r\n            TODO：避免使用lambdas并展示类以实现放松存根并删除此类。\r\n            \r\n","\r\n            Reads all bytes from the current position of the given stream to its end.\r\n            ":"\r\n            从给定流的当前位置读取所有字节到其末尾。\r\n            \r\n","\r\n            Provides and caches well known types in a compilation.\r\n            ":"\r\n            提供和缓存汇编中众所周知的类型。\r\n            \r\n","\r\n            C# only. Indicates that per-method debug information (import strings) is stored on another method, \r\n            whose token is specified.\r\n            ":"\r\n            仅C＃。指示每方法调试信息（导入字符串）存储在另一种方法上，\r\n            指定谁的令牌。\r\n            \r\n"," instead.\r\n            True if the local contains a managed pointer (for example a reference to a local variable or a reference to a field of an object).\r\n            ":" 反而。\r\n            正确，如果本地包含托管指针（例如，对本地变量的引用或对象的字段引用）。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# labeled statement.\r\n             (2) VB label statement.\r\n            ":"\r\n            当前用法：\r\n             （1）c＃标签语句。\r\n             （2）VB标签语句。\r\n            \r\n"," instances that share the same value.\r\n            ":" 共享相同值的实例。\r\n            \r\n","\r\n            True if the definition index is available (reference was successfully matched with the definition).\r\n            ":"\r\n            如果有可用的定义索引（将引用与定义成功匹配）。\r\n            \r\n","\r\n              Looks up a localized string similar to Reference of type '{0}' is not valid for this compilation..\r\n            ":"\r\n              查找类似于“ {0}”类型的引用的本地化字符串对于此汇编无效。\r\n            \r\n","\r\n            A simple class to implement IGrouping.\r\n            ":"\r\n            一个简单的课程来实施Igrouping。\r\n            \r\n"," if all of the type argument lists in its fully qualified\r\n            name are empty. Note that the type arguments of an unbound generic type will be\r\n            returned as error types because they do not really have type arguments.  An unbound\r\n            generic type yields null for its BaseType and an empty result for its Interfaces.\r\n            ":" 如果所有类型参数都在其完全合格的\r\n            名称为空。请注意，无限通用类型的类型参数将是\r\n            返回为错误类型，因为它们实际上没有类型的参数。一个未绑定的\r\n            通用类型为其底型产生零，并为其接口提供空的结果。\r\n            \r\n","\r\n            Used when label is marked to the code.\r\n            ":"\r\n            标签标记为代码时使用。\r\n            \r\n","s and provides unique integer indices\r\n            to distinguish them.\r\n            ":"S并提供独特的整数索引\r\n            区分他们。\r\n            \r\n","\r\n            Unfortunately, we cannot depend on Path.GetInvalidPathChars() or Path.GetInvalidFileNameChars()\r\n            From MSDN: The array returned from this method is not guaranteed to contain the complete set of characters\r\n            that are invalid in file and directory names. The full set of invalid characters can vary by file system.\r\n            https://msdn.microsoft.com/en-us/library/system.io.path.getinvalidfilenamechars.aspx\r\n            \r\n            Additionally, Path.GetInvalidPathChars() doesn't include \"?\" or \"*\" which are invalid characters,\r\n            and Path.GetInvalidFileNameChars() includes \":\" and \"\\\" which are valid characters.\r\n            \r\n            The more accurate way is to let the framework parse the path and throw on any errors.\r\n            ":"\r\n            不幸的是，我们不能依赖path.getinvalidpathars（）或path.getInvalidFilenameChars（）\r\n            来自MSDN：不能保证从该方法返回的数组包含完整的字符集\r\n            文件和目录名称无效。完整的无效字符可以随文件系统而变化。\r\n            https://msdn.microsoft.com/en-us/library/system.io.path.getinvalidfilenamechars.aspx\r\n            \r\n            另外，path.getInvalidpathars（）不包括“？”或“*”是无效的字符，\r\n            and path.getInvalidFilenameChars（）包括“：”和“ \\”，它们是有效的字符。\r\n            \r\n            更准确的方法是让框架解析路径并抛弃任何错误。\r\n            \r\n","\r\n            To log diagnostics in the standardized SARIF v2.1.0 format, use the SarifV2ErrorLogger.\r\n            ":"\r\n            要在标准化的SARIF v2.1.0格式中记录诊断，请使用SARIFV2ERRLOGGER。\r\n            \r\n","\r\n            The set of the local variables that have been referenced in anonymous\r\n            functions within a region and therefore must be moved to a field of a frame class.\r\n            ":"\r\n            已在匿名中引用的本地变量集\r\n            因此，区域内的功能必须移至框架类的字段。\r\n            \r\n","\r\n            Set to True if compiler generated /implicitly computed by compiler code\r\n            ":"\r\n            如果编译器代码生成 /隐式计算，则将其设置为True\r\n            \r\n","\r\n            Enable concurrent execution of analyzer actions registered by this analyzer.\r\n            An analyzer that registers for concurrent execution can have better performance than a non-concurrent analyzer.\r\n            However, such an analyzer must ensure that its actions can execute correctly in parallel.\r\n            ":"\r\n            启用该分析仪注册的分析仪操作的并发执行。\r\n            登记并发执行的分析仪比非电流分析仪具有更好的性能。\r\n            但是，这样的分析器必须确保其操作可以并行正确执行。\r\n            \r\n","\r\n            Count of registered code block actions.\r\n            ":"\r\n            注册代码块操作的计数。\r\n            \r\n","\r\n            Creates a new options instance with the deterministic property set accordingly.\r\n            ":"\r\n            使用确定性属性集相应地创建一个新的选项实例。\r\n            \r\n","\r\n            Body of the using, over which the resources of the using are maintained.\r\n            ":"\r\n            使用的主体，维持使用的资源。\r\n            \r\n","\r\n            A reference to a .NET module.\r\n            ":"\r\n            对.NET模块的引用。\r\n            \r\n","An instance of SemanticModel caches local symbols and semantic information. Thus, it\r\n            is much more efficient to use a single instance of SemanticModel when asking multiple\r\n            questions about a syntax tree, because information from the first question may be reused.\r\n            This also means that holding onto an instance of SemanticModel for a long time may keep a\r\n            significant amount of memory from being garbage collected.\r\n            ":"语义模型的实例缓存了本地符号和语义信息。因此，它\r\n            在询问多个时，使用smanticmodel的单个实例要高得多\r\n            关于语法树的问题，因为第一个问题的信息可能会重复使用。\r\n            这也意味着长时间持续使用smanticmodel实例\r\n            收集垃圾的大量记忆。\r\n            \r\n","\r\n            Declarative security actions for this type. Will be empty if this.HasSecurity is false.\r\n            ":"\r\n            这种类型的声明性安全措施。如果此功能为false，将是空的。\r\n            \r\n","\r\n            The symbol of the discard operation.\r\n            ":"\r\n            丢弃操作的象征。\r\n            \r\n","\r\n            Specifies an encoding to be used if the actual encoding can't be determined from the stream content (the stream doesn't start with Byte Order Mark).\r\n            If not specified auto-detect heuristics are used to determine the encoding. If these heuristics fail the decoding is assumed to be Encoding.Default.\r\n            Note that if the stream starts with Byte Order Mark the value of ":"\r\n            如果无法从流内容确定实际编码（流不在字节订单标记开始），则指定要使用的编码。\r\n            如果未指定的自动检测启发式方法来确定编码。如果这些启发式方法失败，则假定解码为编码。\r\n            请注意，如果流以字节顺序开头\r\n","\r\n            A class that represents no location at all. Useful for errors in command line options, for example.\r\n            ":"\r\n            一个完全没有位置的课程。例如，对于命令行选项中的错误很有用。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified node removed.\r\n            ":"\r\n            使用指定的节点删除了一个新的节点树。\r\n            \r\n","\r\n            include member symbols such as method, event, property, field\r\n            ":"\r\n            包括成员符号，例如方法，事件，属性，字段\r\n            \r\n","WriteOnly":"写着\r\n","\r\n            Single operand.\r\n            ":"\r\n            单操作数。\r\n            \r\n","\r\n            The type of the compiler class for version information in /help and /version.\r\n            We don't simply use this.GetType() because that would break mock subclasses.\r\n            ":"\r\n            编译器类的类型用于 /help和 /版本中的版本信息。\r\n            我们不简单地使用this.getType（），因为这会破坏模拟子类。\r\n            \r\n","\r\n            A program location in metadata.\r\n            ":"\r\n            元数据的程序位置。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# try statement.\r\n             (2) VB Try statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃尝试语句。\r\n             （2）VB尝试语句。\r\n            \r\n","\r\n            Register an action to be executed at the end of semantic analysis of a method body or an expression appearing outside a method body.\r\n            A code block end action reports ":"\r\n            注册在方法主体的语义分析结束时执行的操作或出现在方法主体外的表达式。\r\n            代码块结束操作报告\r\n","\r\n            Creates a delegate that invokes a script function and returns no value.\r\n            ":"\r\n            创建一个调用脚本函数并返回不值的委托。\r\n            \r\n","\r\n            generic type and uses it to create a string dictionary.\r\n            It assumes that an instance of ":"\r\n            通用类型并使用它来创建字符串字典。\r\n            它假设一个实例\r\n","\r\n            Conversion applied to the argument value passing it into the target method. Applicable only to VB Reference arguments.\r\n            ":"\r\n            转换应用于参数值将其传递到目标方法中。仅适用于VB参考参数。\r\n            \r\n","/>).\r\n                4. Location created for flow capture entities, i.e. for ":"/>）。\r\n                4.为流捕获实体创建的位置，即\r\n","A host type for use with script code.":"用于脚本代码的主机类型。\r\n","Flag indicating whether the diagnostic is suppressed by a source suppression.":"标志指示诊断是否被源抑制抑制。\r\n","\r\n            Option to specify custom behavior for each warning in this tree.\r\n            ":"\r\n            选项，为此树中的每个警告指定自定义行为。\r\n            \r\n","\r\n            Gets the root operation for the ":"\r\n            获取根部操作\r\n","\r\n            Writes all of the paths the TouchedFileLogger to the given \r\n            TextWriter in upper case. After calling this method the\r\n            logger is in an undefined state.\r\n            ":"\r\n            将所有触摸的路径写入给定的所有路径\r\n            上案中的文本作者。调用此方法后\r\n            记录仪处于未定义状态。\r\n            \r\n","\r\n            The host can modify a read-only ":"\r\n            主机可以修改只读\r\n"," if the debug information can't be read for the specified method.\r\n            This exception is caught and converted to an emit diagnostic. Other exceptions are passed through.\r\n            ":" 如果无法读取指定方法的调试信息。\r\n            该例外被捕获并转换为EMIT诊断。其他例外情况通过。\r\n            \r\n","\r\n            Properties of a C# float.\r\n            ":"\r\n            c＃float的属性。\r\n            \r\n",". Check\r\n            ":"。查看\r\n            \r\n"," is created prior to every call to ":" 是在每次呼叫之前创建的\r\n","\r\n            Mark the compilation assembly as delay-signed.\r\n            ":"\r\n            将编译组件标记为延迟签名。\r\n            \r\n","\r\n            Represents an optional bool as a single byte.\r\n            ":"\r\n            代表可选的布尔作为单个字节。\r\n            \r\n","\r\n            The latest supported SARIF version.\r\n            ":"\r\n            最新支持的SARIF版本。\r\n            \r\n","\r\n            Creates a representation of a resource whose contents are to be embedded in the output assembly.\r\n            ":"\r\n            创建一个资源的表示，其内容要嵌入到输出组件中。\r\n            \r\n","Diagnostics to be filtered.":"诊断要过滤。\r\n","\r\n            Determines whether this token represents a language construct that was actually parsed from source code.\r\n            Missing tokens are typically generated by the parser in error scenarios to represent constructs that should\r\n            have been present in the source code for the source code to compile successfully but were actually missing.\r\n            ":"\r\n            确定该令牌是否代表从源代码中实际解析的语言构造。\r\n            丢失令牌通常由解析器在错误方案中生成，以表示应\r\n            源代码中的源代码已在源代码中存在，但实际上丢失了。\r\n            \r\n","\r\n            Determines whether the calling thread has access to the current script engine.\r\n            ":"\r\n            确定调用线程是否可以访问当前脚本引擎。\r\n            \r\n"," can be used as a type argument.\r\n            ":" 可以用作类型参数。\r\n            \r\n","\r\n            Represents a for each loop.\r\n            ":"\r\n            代表每个循环。\r\n            \r\n","\r\n            The kind of namespace: Module, Assembly or Compilation.\r\n            Module namespaces contain only members from the containing module that share the same namespace name.\r\n            Assembly namespaces contain members for all modules in the containing assembly that share the same namespace name.\r\n            Compilation namespaces contain all members, from source or referenced metadata (assemblies and modules) that share the same namespace name.\r\n            ":"\r\n            命名空间的种类：模块，汇编或编译。\r\n            模块名称空间仅包含共享同一名称空间名称的包含模块中的成员。\r\n            汇编名称空间包含共享相同名称名称的包含组件中所有模块的成员。\r\n            编译名称空间包含所有成员，从源或引用的元数据（汇编和模块）共享相同的名称名称。\r\n            \r\n","\r\n            This value represents the number of times the CPU profiler observed the node's\r\n            script function at the top of the call stack.\r\n            ":"\r\n            此值表示CPU剖面仪观察到节点的次数\r\n            脚本功能位于呼叫堆栈的顶部。\r\n            \r\n"," if the spans intersect, otherwise ":" 如果跨越相交，则\r\n","\r\n            True if the SemanticModel should ignore accessibility rules when answering semantic questions.\r\n            ":"\r\n            如果在回答语义问题时应忽略senanticmodel忽略可访问性规则，则是的。\r\n            \r\n","\r\n            Returns the underlying type of a given generator\r\n            ":"\r\n            返回给定发生器的基础类型\r\n            \r\n","\r\n            Region representing a try region. For example, ":"\r\n            代表尝试区域的区域。例如，\r\n","\r\n            Enumerates all nodes of the tree rooted by this node (including this node).\r\n            ":"\r\n            列举由该节点扎根的树的所有节点（包括该节点）。\r\n            \r\n","\r\n            or any type derived it, because ":"\r\n            或任何类型得出的类型，因为\r\n","\r\n            Describes the kind of binding to be performed in one of the SemanticModel\r\n            speculative binding methods.\r\n            ":"\r\n            描述要在semanticmodel之一中执行的绑定类型\r\n            投机结合方法。\r\n            \r\n","True if one can say that ":"是真的，如果有人可以说\r\n","\r\n            Represents an empty or no-op operation.\r\n            ":"\r\n            代表一个空或无操作的操作。\r\n            \r\n","Syntax the ":"语法\r\n","\r\n            Count of registered operation block end actions.\r\n            ":"\r\n            注册操作块最终操作的计数。\r\n            \r\n","\r\n            Creates a new generator state that contains information and constant trees\r\n            ":"\r\n            创建一个包含信息和恒定树的新发电机状态\r\n            \r\n","\r\n            Not using System.Func{T} because this file is linked into the (debugger) Formatter,\r\n            which does not have that type (since it compiles against .NET 2.0).\r\n            ":"\r\n            不使用system.func {t}，因为此文件已链接到（debugger）formatter，\r\n            没有该类型（因为它反对.NET 2.0编译）。\r\n            \r\n","\r\n            Returns a symbol (e.g. property, event, etc.) associated with the method.\r\n            ":"\r\n            返回与该方法关联的符号（例如属性，事件等）。\r\n            \r\n","\r\n            Logs a message of the given importance using the specified string.\r\n            ":"\r\n            使用指定的字符串记录给定重要性的消息。\r\n            \r\n","Indicates whether to binding the name as a full expression,\r\n            or as a type or namespace. If SpeculativeBindingOption.BindAsTypeOrNamespace is supplied, then\r\n            expression should derive from TypeSyntax.":"指示是否将名称绑定为完整的表达式，\r\n            或类型或名称空间。如果提供了猜测bindingoption.bindastypeornamespace，则\r\n            表达应源自型号。\r\n","\r\n            var fso = host.newComObj('Scripting.FileSystemObject');\r\n            var ConsoleT = host.type('System.Console');\r\n            for (en = fso.Drives.GetEnumerator(); en.MoveNext();) {\r\n                ConsoleT.WriteLine(en.Current.Path);\r\n            }\r\n            ":"\r\n            var fso = host.newcomobj（'scripting.filesystemobject'）;\r\n            var consolet = host.type（'system.console'）;\r\n            for（en = fso.drives.getEnumerator（）; en.movenext（）;）{\r\n                consolet.Writeline（en.Current.Path）;\r\n            }\r\n            \r\n","\r\n            Get the original definition of this symbol. If this symbol is derived from another\r\n            symbol by (say) type substitution, this gets the original symbol, as it was defined in\r\n            source or metadata.\r\n            ":"\r\n            获取此符号的原始定义。如果此符号来自另一个符号\r\n            符号（说）类型替代，这将获得原始符号，因为它已定义\r\n            来源或元数据。\r\n            \r\n","\r\n            Emit mode that favors debuggability. \r\n            ":"\r\n            发出有利于辩论性的模式。\r\n            \r\n","References to XML documents are not supported.":"不支持对XML文档的参考。\r\n","\r\n            Block is not reachable or reachability analysis\r\n            has not been performed.\r\n            ":"\r\n            块无法达到或可及性分析\r\n            尚未执行。\r\n            \r\n","\r\n            Walks the syntax tree, allowing subclasses to operate on all nodes, token and trivia.  The\r\n            walker will perform a depth first walk of the tree.\r\n            ":"\r\n            行走语法树，允许子类在所有节点，令牌和琐事上进行操作。这\r\n            沃克将进行树的深度步行。\r\n            \r\n","\r\n            A placeholder value type for ":"\r\n            占位符的价值类型\r\n"," is known to have ":" 已知有\r\n","s of a tree of conditional accesses. The top of the stack is the\r\n            deepest node, and except in error conditions it should contain a ":"有条件访问的树的s。堆栈的顶部是\r\n            最深的节点，除错误条件外，它应该包含一个\r\n","\r\n            Returns the metadata reader.\r\n            ":"\r\n            返回元数据读者。\r\n            \r\n","\r\n            Delegate to emit string compare call and conditional branch based on the compare result.\r\n            ":"\r\n            根据比较结果，委派发出字符串比较呼叫和条件分支。\r\n            \r\n","\r\n            Statement executed if the condition is true.\r\n            ":"\r\n            如果条件为真，则执行语句。\r\n            \r\n","\r\n            Includes the parameters of methods and properties/indexers.\r\n            ":"\r\n            包括方法和属性/索引器的参数。\r\n            \r\n","Assembly identity comparer.":"组装身份比较。\r\n","\r\n            Current usage:\r\n             (1) C# declaration expression. For example,\r\n                (a) \"var (x, y)\" is a deconstruction declaration expression with variables x and y.\r\n                (b) \"(var x, var y)\" is a tuple expression with two declaration expressions.\r\n                (c) \"M(out var x);\" is an invocation expression with an out \"var x\" declaration expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃声明表达式。例如，\r\n                （a）“ var（x，y）”是带有变量x和y的解构声明表达式。\r\n                （b）“（var x，var y）”是一个带有两个声明表达式的元组表达式。\r\n                （c）“ m（out var x）;”是带有“ var x”声明表达式的调用表达式。\r\n            \r\n"," is true and the session key\r\n            was provided.  Can be null\r\n            ":" 是真的，会话密钥\r\n            提供了。可以是零的\r\n            \r\n","\r\n            Any produced diagnostics while applying analyzer configuration.\r\n            ":"\r\n            应用分析仪配置时，任何产生的诊断。\r\n            \r\n"," if documentation comments are parsed, ":" 如果解析文档评论，\r\n","\r\n            Context passed to an incremental generator when ":"上下文传递给增量发电机时\r\n","\r\n            The name assigned to the UnaryNegation operator.\r\n            ":"\r\n            分配给Unarygation操作员的名称。\r\n            \r\n","\r\n            Read a Char value from the stream. This value must have been written using ":"\r\n            从流中读取字符值。该值必须使用\r\n","A new delegate that invokes the specified script function and returns a value of the specified type.":"调用指定脚本功能并返回指定类型的值的新委托。\r\n","A cancellation token that can be used to cancel the\r\n            process of obtaining the semantic info.":"取消令牌，可用于取消\r\n            获取语​​义信息的过程。\r\n"," for the module being created by compiling all of\r\n            the source code.\r\n            ":" 对于通过编译所有的模块而创建的模块\r\n            源代码。\r\n            \r\n","\r\n            Returns true if these two nodes are considered \"incrementally identical\".  An incrementally identical node\r\n            occurs when a ":"\r\n            如果这两个节点被认为是“逐渐相同的”，则返回为true。增量相同的节点\r\n            发生在a时\r\n"," to the\r\n            specified document, bypassing the configuration's document loader.\r\n            ":" 到\r\n            指定的文档，绕过配置的文档加载程序。\r\n            \r\n","Whether to search inside structured trivia.":"是否要在结构化琐事中搜索。\r\n","\r\n              Looks up a localized string similar to Invalid characters in assembly name.\r\n            ":"\r\n              在汇编名称中查找类似于无效字符的本地化字符串。\r\n            \r\n","\r\n            Represents an operation that gets a string value for the ":"\r\n            代表一个获取字符串值的操作\r\n","\r\n            Includes the (return) type of the method/field/property/event.\r\n            ":"\r\n            包括方法/字段/属性/事件的（返回）类型。\r\n            \r\n","The \"this\" parameter for non-static methods.":"非静态方法的“此”参数。\r\n"," if this is a 'lifted' increment operator.  When there is an\r\n            operator that is defined to work on a value type, 'lifted' operators are\r\n            created to work on the ":" 如果这是一个“提升”增量操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            A duplicate of the SymbolDisplayFormat, with a set of ":"\r\n            SymboldisPlayFormat的重复，一组\r\n","\r\n            To get the default severity of diagnostic's ":"\r\n            为了获得诊断的默认严重性\r\n","\r\n            Minimum value of the case range.\r\n            ":"\r\n            案件范围的最小值。\r\n            \r\n","\r\n            The set of local variables that are declared within a region. Note\r\n            that the region must be bounded by a method's body or a field's initializer, so\r\n            parameter symbols are never included in the result.\r\n            ":"\r\n            在区域内声明的本地变量集。笔记\r\n            该区域必须由方法的身体或田地的初始化器界定，因此\r\n            结果符号永远不会包含在结果中。\r\n            \r\n","\r\n            If a single node is a declarator for multiple variables of the same synthesized kind (it can only happen for synthesized variables) \r\n            we calculate additional number \"ordinal\" for such variable. We assign the ordinals to the synthesized variables with the same kind\r\n            and syntax offset in the order as they appear in the lowered bound tree. It is important that a valid EnC edit can't change \r\n            the ordinal of a synthesized variable. If it could it would need to be assigned a different kind or associated with a different declarator node.\r\n            ":"\r\n            如果单个节点是同一合成类型的多个变量的声明器（仅对于合成变量才能发生）\r\n            我们计算此类变量的其他数字“序数”。我们将序数分配给综合变量\r\n            并在降低的绑定树中出现时的语法抵消了它们的顺序。重要的是，有效的ENC编辑无法更改\r\n            合成变量的序数。如果可以，则需要分配其他类型或与其他声明器节点相关联。\r\n            \r\n","Format or null for the default.":"默认值的格式或null。\r\n","Flag indicating whether analysis can be performed concurrently on multiple threads.":"标志指示是否可以在多个线程上同时执行分析。\r\n","The command to track's arguments":"跟踪参数的命令\r\n","\r\n            The IEEE floating-point spec doesn't specify which bit pattern an implementation\r\n            is required to use when producing NaN values.  Indeed, the spec does recommend\r\n            \"diagnostic\" information \"left to the implementer’s discretion\" be placed in the\r\n            undefined bits. It is therefore likely that NaNs produced on different platforms\r\n            will differ even for the same arithmetic such as 0.0 / 0.0.  To ensure that the\r\n            compiler behaves in a deterministic way, we force NaN values to use the\r\n            IEEE \"canonical\" form with the diagnostic bits set to zero and the sign bit set\r\n            to one.  Conversion of this value to float produces the corresponding\r\n            canonical NaN of the float type (IEEE Std 754-2008 section 6.2.3).\r\n            ":"\r\n            IEEE浮点数规格未指定实现哪种位模式\r\n            在产生NAN值时需要使用。确实，规格确实建议\r\n            将“诊断”信息放在实施者的自由裁量权上”\r\n            未定义的位。因此，NAN可能在不同平台上生产\r\n            即使对于相同的算术，例如0.0 / 0.0也会有所不同。确保\r\n            编译器的行为以确定性的方式，我们迫使NAN值使用\r\n            IEEE“典型”形式，设置为零，标志位设置\r\n            一个。将该值转换为浮子会产生相应的\r\n            浮点类型的典型NAN（IEEE STD 754-2008第6.2.3节）。\r\n            \r\n"," version of this method returns \"[undefined]\".\r\n            ":" 此方法的版本返回“ [未定义]”。\r\n            \r\n","\r\n            This setting is obsolete and only supported on Microsoft Windows platform.\r\n            Use ":"\r\n            此设置已过时，仅在Microsoft Windows平台上支持。\r\n            利用\r\n","var":"var\r\n","The token to insert after; a descendant of the root node and an element of a list member.":"插入的令牌；根节点的后代和列表成员的元素。\r\n","\r\n            Context for an additional file action.\r\n            An additional file action can use an ":"\r\n            其他文件操作的上下文。\r\n            附加的文件操作可以使用\r\n"," parameter.\r\n            It assumes that an instance of ":" 范围。\r\n            它假设一个实例\r\n","\r\n            Calling convention of the signature.\r\n            ":"\r\n            召集签名惯例。\r\n            \r\n","\r\n            Is this imported from COM type library\r\n            ":"\r\n            这是从com类型库导入的\r\n            \r\n"," contains values that are not greater than or equal to zero and less than or equal to ushort.MaxValue.":" 包含不大于或等于零，小于或等于ushort.maxvalue的值。\r\n","\r\n            True if interop types defined in the referenced metadata should be embedded into the compilation referencing the metadata.\r\n            ":"\r\n            是的，如果引用元数据中定义的互化类型应嵌入到引用元数据的汇编中。\r\n            \r\n"," if found, null otherwise.":" 如果发现，则否则为无效。\r\n","\r\n            Creates a new compilation with the specified references.\r\n            ":"\r\n            使用指定的引用创建新的汇编。\r\n            \r\n","Additional languages to which the generator applies. See ":"发电机适用的其他语言。看\r\n","\r\n            Specifies what symbols to import from metadata.\r\n            ":"\r\n            指定从元数据导入的符号。\r\n            \r\n","\r\n            If the cast fails, this function throws an exception.\r\n            ":"\r\n            如果演员表失败，则此功能会引发异常。\r\n            \r\n","\r\n            Returns true if the given basic block is the last block of a region of the given regionKind.\r\n            ":"\r\n            如果给定的基本块是给定区域的区域的最后一个区块，则返回true。\r\n            \r\n"," if the node has no child nodes.\r\n            ":" 如果节点没有子节点。\r\n            \r\n","\r\n            are to be marshaled as\r\n            ":"\r\n            被称为\r\n            \r\n","A punctuation character (e.g. \"(\", \".\", \",\") other than an ":"标点符号（例如”（“，”，“，”，“除了\r\n","Format of ":"格式\r\n","\r\n            Returns the list of custom modifiers associated with the type reference. Evaluate this property only if IsModified is true.\r\n            ":"\r\n            返回与类型参考关联的自定义修饰符列表。仅当ISModified为真时，才能评估此属性。\r\n            \r\n","The metadata definition (assembly or module) that declares assembly reference ":"声明汇编参考的元数据定义（装配或模块）\r\n","\r\n            An overridden method named DisposeCoreAsync that takes a single Boolean parameter and returns Task, as\r\n            is used when implementing the standard DisposeAsync pattern.\r\n            ":"一个名为disposecoreasync的覆盖方法，该方法采用单个布尔参数并返回任务，作为\r\n            在实现标准disposeasync模式时使用。\r\n            \r\n","The type of the third parameter of the bound action.":"绑定动作的第三参数的类型。\r\n","\r\n            Returns true if the diagnostic location (or any additional location) is within the given tree and intersects with the filterSpanWithinTree, if non-null.\r\n            ":"\r\n            如果诊断位置（或任何其他位置）在给定的树内，并且与filterspanwithintree相交，则返回true。\r\n            \r\n","\r\n            Note that the V8 runtime does not monitor stack usage while a host call is in progress.\r\n            Monitoring is resumed when control returns to the runtime.\r\n            ":"\r\n            请注意，当主机调用正在进行时，V8运行时不会监视堆栈使用情况。\r\n            当控件返回运行时，恢复监视。\r\n            \r\n","\r\n            Represents the VB '^' exponentiation operator.\r\n            ":"\r\n            代表VB'^'指示操作员。\r\n            \r\n","Returns true on success, false otherwise.":"返回成功，否则为否。\r\n","typed arrays":"打字阵列\r\n","\r\n            The type that declares the type parameter, or null.\r\n            ":"\r\n            声明类型参数或null的类型。\r\n            \r\n","\r\n            The path to a Win32 manifest file to embed\r\n            into the output portable executable (PE) file.\r\n            ":"\r\n            Win32清单文件嵌入的路径\r\n            进入输出便携式可执行文件（PE）文件。\r\n            \r\n"," that is being emitted into. This value should _never_ be \r\n            disposed. It is either returned from the ":"那是被散发到的。这个值应该_never_是\r\n            处置。它要么从\r\n"," of strings containing the words contained in ":" 包含包含单词的字符串\r\n","\r\n            Returns null if an assembly of an equivalent identity has not been added previously, otherwise returns the reference that added it.\r\n            Two identities are considered equivalent if\r\n            - both assembly names are strong (have keys) and are either equal or FX unified \r\n            - both assembly names are weak (no keys) and have the same simple name.\r\n            ":"\r\n            返回null如果先前尚未添加等效身份的组件，则返回添加它的引用。\r\n            如果认为两个身份是等效的\r\n             - 两个组件名称都很强（具有键），并且是相等的或FX Unified\r\n             - 两个组件名称都是弱（无键），并且具有相同的简单名称。\r\n            \r\n","\r\n            Argument value is explicitly supplied.\r\n            ":"\r\n            参数值明确提供。\r\n            \r\n","\r\n            Returns whether this diagnostic is informational, warning, or error by default, based on the error code.\r\n            To get diagnostic's effective severity, use ":"\r\n            返回此诊断是根据错误代码的信息，警告还是错误。\r\n            要获得诊断的有效严重性，请使用\r\n","\r\n            Supported descriptors for diagnostic analyzer.\r\n            ":"\r\n            诊断分析仪的支持描述符。\r\n            \r\n"," to clear entries when appropriate.\r\n            For example, ":" 在适当的情况下清除条目。\r\n            例如，\r\n",",\r\n            meaning that some trailing dimensions don't have the size specified.\r\n            The most common case is none of the dimensions have the size specified - an empty array is returned.\r\n            ":"，，，，\r\n            这意味着某些尾随尺寸没有指定的大小。\r\n            最常见的情况是，尺寸没有指定的大小 - 返回一个空数组。\r\n            \r\n","\r\n            Represents the stack ":"\r\n            代表堆栈\r\n","\r\n            True if the given enumerable is null or contains no elements\r\n            ":"\r\n            如果给定的枚举为null或不包含任何元素，则为true\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified name, resource constraints, and options.\r\n            ":"\r\n            初始化具有指定名称，资源约束和选项的新的V8脚本引擎实例。\r\n            \r\n"," is called.  This transition will not happen synchronously.\r\n            \r\n            This Task will not complete until it has completed all existing values returned\r\n            from ":" 叫做。这种过渡不会同步发生。\r\n            \r\n            此任务直到完成所有现有值返回的值之前才完成\r\n            从\r\n","\r\n            Flag indicating if any methods on this type can throw exceptions from public entrypoints.\r\n            ":"\r\n            标志指示此类型上的任何方法是否可以从公共入口点引发异常。\r\n            \r\n","The source file who's output is to be discarded":"要丢弃输出的源文件\r\n","\r\n            Called once at session start to register actions in the analysis context.\r\n            ":"\r\n            在会话中调用一次，开始在分析上下文中注册操作。\r\n            \r\n","\r\n            Analyzer configuration options from an .editorconfig file that are parsed into general\r\n            and specific configuration options.\r\n            \r\n            .editorconfig format:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.OptionName = OptionValue\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.RuleId.OptionName = OptionValue\"\r\n                (b) \"dotnet_code_quality.RuleCategory.OptionName = OptionValue\"\r\n               \r\n            .editorconfig examples to configure API surface analyzed by analyzers:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.api_surface = all\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.CA1040.api_surface = public, internal\"\r\n                (b) \"dotnet_code_quality.Naming.api_surface = public\"\r\n             See ":"\r\n            来自.editorConfig文件的分析仪配置选项，这些文件已被解析为一般\r\n            和特定的配置选项。\r\n            \r\n            .EditorConfig格式：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.optionname = optionValue”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ruleid.optionname = optionValue”\r\n                （b）“ dotnet_code_quality.rulecategory.optionname = optionValue”\r\n               \r\n            .eDitorConfig示例以配置分析仪分析的API表面：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.api_surface = all”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ca1040.api_surface = public，内部”\r\n                （b）“ dotnet_code_quality.naming.api_surface = public”\r\n             看\r\n","\r\n            The PE file is an assembly.\r\n            ":"\r\n            PE文件是一个组件。\r\n            \r\n","\r\n            Method is an operator.\r\n            ":"\r\n            方法是操作员。\r\n            \r\n","The dynamic host object that contains the property to get.":"包含要获得的属性的动态主机对象。\r\n"," can be used as a type argument. Because type\r\n            arguments are always host types, this method ignores its type argument and always\r\n            returns ":" 可以用作类型参数。因为类型\r\n            参数始终是主机类型，此方法忽略了其类型参数，并且总是\r\n            返回\r\n","\r\n            Returns true if this local is a ref local or a ref readonly local.\r\n            Use ":"\r\n            如果此本地是REF本地或Ref Readonly Local，则返回true。\r\n            利用\r\n","\r\n            Current usage:\r\n             (1) C# interpolated string expression.\r\n             (2) VB interpolated string expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃插值字符串表达式。\r\n             （2）VB插值字符串表达式。\r\n            \r\n","\r\n            Returns true if this field was declared as \"volatile\". \r\n            ":"\r\n            如果该领域被宣布为“挥发性”，则返回真实。\r\n            \r\n"," and be embedded in a PDB.":" 并嵌入PDB中。\r\n","\r\n            A queue whose enqueue and dequeue operations can be performed in parallel.\r\n            ":"\r\n            可以并行执行其临界和脱水操作的队列。\r\n            \r\n"," derives from, or implements\r\n            any generic construction of, the type defined by ":" 源自或工具\r\n            任何通用结构，该类型由\r\n","Path to the module file.":"通往模块文件的路径。\r\n","\r\n            If this is a speculative semantic model, then returns its parent semantic model.\r\n            Otherwise, returns null.\r\n            ":"\r\n            如果这是一个投机性语义模型，则返回其父语义模型。\r\n            否则，返回null。\r\n            \r\n","\r\n            Use to create a document when checksum is suggested via external checksum pragma/directive\r\n            ":"\r\n            当通过外部校验和指令提出校验和时，用于创建文档\r\n            \r\n"," and related actions maps for the analyzer driver.\r\n            It kicks off the ":" 以及分析仪驱动程序的相关操作地图。\r\n            它开始\r\n","\r\n            The method creates a reference to a single-module assembly. To create a reference to a multi-module assembly or a stand-alone module use \r\n            ":"\r\n            该方法创建对单模型组件的引用。创建对多模块组件或独立模块使用的引用\r\n            \r\n","\r\n            Binds the node in the context of the specified location and get semantic information\r\n            such as type, symbols and diagnostics. This method is used to get semantic information\r\n            about an expression that did not actually appear in the source code.\r\n            ":"\r\n            在指定位置的上下文中绑定节点并获取语义信息\r\n            例如类型，符号和诊断。此方法用于获取语义信息\r\n            关于实际上并未出现在源代码中的表达式。\r\n            \r\n","Can't create a reference to a module.":"无法创建对模块的引用。\r\n"," \r\n            contains a value that is not the size of a public key token, 8 bytes.":" \r\n            包含一个不像公共密钥令牌的大小为8个字节的值。\r\n","\r\n            Return the number of significant bits set. \r\n            ":"\r\n            返回大量位置的数量。\r\n            \r\n","\r\n            False if the conversion will fail with a ":"\r\n            错误，如果转换会失败\r\n","\r\n            Tries to execute the semantic model actions on the given semantic model.\r\n            ":"\r\n            试图在给定语义模型上执行语义模型动作。\r\n            \r\n","\r\n            Represents a trivia in the syntax tree. This is the language agnostic equivalent of ":"\r\n            代表语法树中的琐事。这是语言不可知论的\r\n"," with an extension based upon ":" 基于扩展\r\n","\r\n            The settings that determine how parameters (of methods, properties/indexers, and delegates) are displayed.\r\n            ":"\r\n            确定如何显示参数（方法，属性/索引和委托）的设置。\r\n            \r\n"," for finer-grained settings.\r\n            ":" 用于精细粒度的设置。\r\n            \r\n"," from a byte array.\r\n            ":" 从字节阵列。\r\n            \r\n","The number of elements to ensure exists.":"确保存在的元素数量。\r\n","\r\n            Will not correspond to the name that appears in metadata.\r\n            ":"\r\n            不会与元数据中出现的名称相对应。\r\n            \r\n",". \r\n            Fills in unallocated slots preceding the ":"。\r\n            填充之前的未分配插槽\r\n","\r\n            Represents the C# ":"\r\n            代表C＃\r\n","The value if ":"值如果\r\n","True if should bother to proceed with copying.":"是的，如果应该打扰继续复制。\r\n","Syntax tree actions to be executed.":"语法树的操作要执行。\r\n","\r\n            Represents a .NET assembly, consisting of one or more modules.\r\n            ":"\r\n            代表一个.NET组件，由一个或多个模块组成。\r\n            \r\n","\r\n            Creates a reference to a single-module assembly or a standalone module stored in memory.\r\n            ":"\r\n            创建对存储在内存中的单模型组件或独立模块的引用。\r\n            \r\n","\r\n            The UInt32 value 2\r\n            ":"\r\n            UINT32值2\r\n            \r\n","\r\n            Returns true if the conversion is an implicit (C#) or widening (VB) conversion.\r\n            ":"\r\n            如果转换是隐式（C＃）或延伸（VB）转换，则返回true。\r\n            \r\n","\r\n            The span of text before the edit which is being changed\r\n            ":"\r\n            正在更改的编辑之前的文本跨度\r\n            \r\n","\r\n            Read a UInt64 value from the stream. This value must have been written using ":"\r\n            从流中读取UINT64值。该值必须使用\r\n","\r\n            Similarly, if ":"\r\n            同样，如果\r\n","Exception.GetType()":"exception.getType（）\r\n","\r\n            Measures the structural complexity of the code.\r\n            It is created by calculating the number of different code paths in the flow of the program.\r\n            A program that has complex control flow requires more tests to achieve good code coverage and is less maintainable.\r\n            ":"\r\n            衡量代码的结构复杂性。\r\n            它是通过计算程序流中不同代码路径的数量来创建的。\r\n            具有复杂控制流的程序需要更多的测试来实现良好的代码覆盖范围，并且较低的可维护。\r\n            \r\n"," for this reference's ":" 对于此参考\r\n","\r\n            Once this is non-zero the state of the manager is fully initialized and immutable.\r\n            ":"\r\n            一旦这不是零，经理的状态将完全初始化和不变。\r\n            \r\n","\r\n            Gets the default script access setting for type members.\r\n            ":"\r\n            获取类型成员的默认脚本访问设置。\r\n            \r\n"," specifies otherwise the module name\r\n             written to metadata is ":" 指定否则模块名称\r\n             写信给元数据是\r\n","\r\n            The absolute span of this trivia in characters. If this trivia is a structured trivia then the returned span\r\n            will not include spans of any leading or trailing trivia present on the child non-terminal node of this\r\n            trivia.\r\n            ":"\r\n            这个琐事的绝对跨度。如果这个琐事是一个结构化的琐事，则返回的跨度\r\n            将不包括该儿童非末端节点上存在的任何领先或拖延琐事的跨度\r\n            琐事。\r\n            \r\n","\r\n            The simple name of the assembly.\r\n            ":"\r\n            组件的简单名称。\r\n            \r\n","A script function to invoke if ":"如果\r\n","\r\n            True if this property has a compile time constant associated with that serves as a default value for the property. (Who uses this and why?)\r\n            ":"\r\n            正确，如果此属性具有与该属性相关联的编译时间常数，则用作该属性的默认值。 （谁使用这个，为什么？）\r\n            \r\n"," associated with a class name.\r\n            ":" 与类名称相关联。\r\n            \r\n","The list is empty.":"列表为空。\r\n","\r\n            Syntax of the attribute to decode.\r\n            ":"\r\n            属性的语法解码。\r\n            \r\n","), or neither.\r\n            ":"），或两项。\r\n            \r\n","\r\n                var x = flag ? new Disposable() : null;\r\n                if (x == null)\r\n                {\r\n                    // Disposable allocation above cannot exist on this code path.\r\n                }\r\n            ":"\r\n                var x =标志？新的销售（）：null;\r\n                如果（x == null）\r\n                {\r\n                    //上面的一次性分配在此代码路径上不存在。\r\n                }\r\n            \r\n","Filtered diagnostic severities in the compilation, i.e. diagnostics with effective severity from this set should not be reported.":"汇编中过滤的诊断严重程度，即不应报告有效严重程度的诊断。\r\n","Assembly must have at least one module.":"组装必须至少具有一个模块。\r\n","\r\n            This creates a block that can be used for temporary, internal applications that require a block composed of\r\n            statements from another block. Blocks created by this API violate IOperation tree constraints and should\r\n            never be exposed from a public API.\r\n            ":"\r\n            这会创建一个可用于临时的内部应用程序的块，需要由\r\n            来自另一个块的语句。由此API创建的块违反了Ioperation树的约束，应\r\n            切勿暴露于公共API。\r\n            \r\n","\r\n            The following code imports ":"\r\n            以下代码导入\r\n","\r\n            Alias that represents a global declaration space.\r\n            ":"\r\n            代表全球声明空间的别名。\r\n            \r\n"," is non null.\r\n            ":" 是非零的。\r\n            \r\n","\r\n            True if the type is ref-like, meaning it follows rules similar to CLR by-ref variables. False if the type\r\n            is not ref-like or if the language has no concept of ref-like types.\r\n            ":"\r\n            如果类型为Ref，则是正确的，这意味着它遵循类似于CLR BY-REF变量的规则。错误如果类型\r\n            不像参考，或者语言没有类型的概念。\r\n            \r\n","\r\n            Signals the event queue, if any, that we are done compiling.\r\n            There should not be more compiling actions after this step.\r\n            NOTE: once we signal about completion to analyzers they will cancel and thus in some cases we\r\n                  may be effectively cutting off some diagnostics.\r\n                  It is not clear if behavior is desirable.\r\n                  See: https://github.com/dotnet/roslyn/issues/11470\r\n            ":"\r\n            向事件队列（如果有的话）发出信号，我们完成了编译。\r\n            在此步骤之后，不应有更多的编译动作。\r\n            注意：一旦我们向分析仪发出了信号，他们将取消，因此在某些情况下我们会取消\r\n                  可能有效地切断了一些诊断。\r\n                  目前尚不清楚行为是否可取。\r\n                  请参阅：https：//github.com/dotnet/roslyn/issues/11470\r\n            \r\n",".\r\n            3) Diagnostic suppression through applied ":"。\r\n            3）通过应用的诊断抑制\r\n","\r\n            Gets the first SyntaxNodeOrToken structure from this list if present, else default(SyntaxNodeOrToken).\r\n            ":"\r\n            如果存在，则从此列表中获取第一个语法诺迪多语结构，否则默认（SyntaxNodeOrtoken）。\r\n            \r\n"," directive that followed an unknown span\r\n            ":" 遵循未知跨度的指令\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# \"{ ... }\" block statement.\r\n             (2) VB implicit block statement for method bodies and other block scoped statements.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃“ {...}”块语句。\r\n             （2）方法实体和其他块范围范围语句的VB隐式块语句。\r\n            \r\n"," call.\r\n            ":" 称呼。\r\n            \r\n","\r\n            Performs garbage collection.\r\n            ":"\r\n            执行垃圾收集。\r\n            \r\n","\r\n            Resolves references to metadata specified in the source (#r directives).\r\n            ":"\r\n            解决对源中指定的元数据的引用（#R指令）。\r\n            \r\n","The new separator token.":"新的分离器令牌。\r\n","Additional file to analyze.":"其他文件要分析。\r\n","\r\n            Call after getting ":"\r\n            获得后打电话\r\n","\r\n            Defines a local constant.\r\n            ":"\r\n            定义局部常数。\r\n            \r\n"," that belongs to the given ":" 属于给定的\r\n","\r\n            The 1-based index of the parameter definition.\r\n            The index is into the full metadata.\r\n            ":"\r\n            参数定义的1基索引。\r\n            该索引进入了完整的元数据。\r\n            \r\n","\r\n             Maps indices of implicitly resolved references to the corresponding indices of resolved assemblies in ":"\r\n             隐式解析引用的地图索引指标对已解决的组件的相应索引\r\n","\r\n            Method body and/or expressions subject to analysis.\r\n            ":"\r\n            方法主体和/或表达式进行分析。\r\n            \r\n","\r\n            True if the type may not be subtyped.\r\n            ":"\r\n            如果类型可能不符合，则为true。\r\n            \r\n","\r\n            EnC metadata for methods added or updated since the initial generation, indexed by method row id.\r\n            ":"\r\n            自初始生成以来添加或更新的方法的ENC元数据，由方法行ID索引。\r\n            \r\n","\r\n              #r \"dir1\\a.dll\"\r\n              #r \"dir2\\b.dll\"\r\n            ":"\r\n              #r“ dir1 \\ a.dll”\r\n              #r“ dir2 \\ b.dll”\r\n            \r\n"," if this is a 'lifted' range operation.  When there is an \r\n            operator that is defined to work on a value type, 'lifted' operators are \r\n            created to work on the ":" 如果这是“抬高”范围操作。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n"," will both return false.\r\n            ":" 都将返回false。\r\n            \r\n","The normalized path":"归一化路径\r\n"," that has a set of ":" 有一组\r\n"," doesn't support reading or seeking.\r\n            ":" 不支持阅读或寻求。\r\n            \r\n","\r\n            Builds symbol definition to location map used for emitting token -> location info\r\n            into PDB to be consumed by WinMdExp.exe tool (only applicable for /t:winmdobj)\r\n            ":"\r\n            构建用于发射令牌的位置图的符号定义 - >位置信息\r\n            进入PDB，由winmdexp.exe工具消费（仅适用于 /t：winmdobj）\r\n            \r\n","Full path of the analyzer assembly.":"分析仪组件的完整路径。\r\n","The type of edit.":"编辑的类型。\r\n","\r\n            Method is an event remove.\r\n            ":"\r\n            方法是删除事件。\r\n            \r\n","\r\n            Analysis result from execution of ":"\r\n            分析结果\r\n","The character to hash":"哈希的角色\r\n","\r\n            Type that defines error codes. For testing purposes only.\r\n            ":"\r\n            键入定义错误代码的输入。仅用于测试目的。\r\n            \r\n","The character position of the trivia relative to the beginning of the file.":"琐事相对于文件开始的角色位置。\r\n"," for the specified host type. This version is invoked\r\n            if the specified object cannot be used as a type argument.\r\n            ":" 对于指定的主机类型。此版本被调用\r\n            如果指定的对象不能用作类型参数。\r\n            \r\n","One or more indices that identify the element to get.":"一个或多个识别要获得的元素的索引。\r\n","\r\n            A V8 runtime can collect multiple CPU profiles simultaneously.\r\n            ":"\r\n            V8运行时可以同时收集多个CPU配置文件。\r\n            \r\n","\r\n            Is this a zero-based one-dimensional array, i.e. SZArray in CLR terms.\r\n            SZArray is an array type encoded in metadata with ELEMENT_TYPE_SZARRAY (always single-dim array with 0 lower bound).\r\n            Non-SZArray type is encoded in metadata with ELEMENT_TYPE_ARRAY and with optional sizes and lower bounds. Even though \r\n            non-SZArray can also be a single-dim array with 0 lower bound, the encoding of these types in metadata is distinct.\r\n            ":"这是一个基于零的一维数组，即用CLR术语进行szarray。\r\n            szarray是一种数组类型，用element_type_szarray在元数据中编码（始终具有单个dim数组，带有0下限）。\r\n            非szarray类型用element_type_array编码在元数据中，并具有可选的大小和下限。虽然\r\n            非szarray也可以是具有0下限的单DIM阵列，元数据中这些类型的编码是不同的。\r\n            \r\n","\r\n            Specifies that long integers with values greater than\r\n            ":"\r\n            指定长整数大于\r\n            \r\n"," at the specified index. \r\n            ":" 在指定的索引上。\r\n            \r\n","The node to insert before; a descendant of the root node an element of a list member.":"之前插入的节点；根节点的后代列表成员的元素。\r\n","\r\n            Determines whether this node or any sub node, token or trivia has annotations.\r\n            ":"\r\n            确定该节点或任何子节点，令牌或琐事是否具有注释。\r\n            \r\n","Compilation options must not have errors.":"编译选项不得有错误。\r\n","\r\n            Searches %PATH% for the location of Tracker.exe, and returns the first \r\n            path that matches. \r\n            ":"\r\n            搜索％路径％tracker.exe的位置，并返回第一个\r\n            匹配的路径。\r\n            \r\n","Edit and Continue is disabled.":"编辑和继续被禁用。\r\n","Array of definition identities to match against.":"定义身份的数组要匹配。\r\n","\r\n            An object corresponding to a metadata entity such as a type or a field.\r\n            ":"\r\n            对应于元数据实体（例如类型或字段）的对象。\r\n            \r\n","\r\n            Specifies the C# or VB source code kind.\r\n            ":"\r\n            指定C＃或VB源代码类型。\r\n            \r\n","\r\n            Dictionary holding per symbol kind the wildcard entry with its suffix.\r\n            The implementation only supports the following SymbolKind: Namespace, Type, Event, Field, Method, Property and ErrorType (as a way to hold the non-fully qualified types).\r\n            ":"\r\n            词典保存每个符号类型的通配符条目带有后缀。\r\n            该实现仅支持以下符号金：名称空间，类型，事件，字段，方法，属性和错误类型（作为保持非合格类型的一种方式）。\r\n            \r\n","\r\n            A wrapper for either a syntax node (":"\r\n            语法节点的包装器（\r\n"," in VB). \r\n            ":"在VB中）。\r\n            \r\n","\r\n              Looks up a localized string similar to Return type can't be a value type, pointer, by-ref or open generic type.\r\n            ":"\r\n              查找类似于返回类型的本地化字符串不能是值类型，指针，by-ref或Open Generic类型。\r\n            \r\n","COM-visible":"可见\r\n","\r\n            Returns a value indicating whether ":"\r\n            返回一个值，指示是否\r\n","Standalone signature token encoding the static type of the constant.":"独立签名令牌编码常数的静态类型。\r\n"," \r\n            since the latter might be unspecified, in which case actual output path can't be determined for C# command line\r\n            without creating a compilation and finding an entry point. VB does not allow ":" \r\n            由于后者可能未指定，在这种情况下，无法确定C＃命令行的实际输出路径\r\n            不创建汇编并找到入口点。 VB不允许\r\n",", which should be thrown by the caller.":"，应该由呼叫者扔。\r\n",", or nullable\r\n            numeric types.\r\n            ":"或无效\r\n            数字类型。\r\n            \r\n","\r\n            True if the type is an interface.\r\n            ":"\r\n            如果类型是接口，则为true。\r\n            \r\n","\r\n            Combine a string with an existing FNV-1a hash code\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            将字符串与现有的FNV-1A哈希代码相结合\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n"," when you are finished using the compiled script. ":" 当您使用编译脚本完成后。\r\n","The position to check.":"检查的位置。\r\n","\r\n            Describes the kind of the namespace extent.\r\n            ":"\r\n            描述了名称空间范围的种类。\r\n            \r\n","\r\n            Switch case labels\r\n            ":"\r\n            开关案例标签\r\n            \r\n",", checking to see if there is a parent initializer\r\n            if the single variable initializer is null.\r\n            ":"，检查是否有父母初始化器\r\n            如果单个变量初始器为空。\r\n            \r\n","\r\n            Predicate might evaluate to true or false.\r\n            ":"\r\n            谓词可能会评估对或错。\r\n            \r\n","\r\n            Count of executable lines of code, i.e. basically IOperations parented by IBlockOperation.\r\n            ":"\r\n            可执行的代码线计数，即基本上是由Iblockoperation归属的ioperations。\r\n            \r\n","\r\n            An Int8 value encoded as 1 byte.\r\n            ":"\r\n            INT8值编码为1个字节。\r\n            \r\n"," if there is no entry.\r\n            This can be used to put diagnostic specific information you want to pass around. for example, to corresponding fixer.\r\n            ":" 如果没有条目。\r\n            这可以用来放置您要传递的诊断特定信息。例如，到对应的修复程序。\r\n            \r\n","\r\n            Attempts to dequeue an existing item and return whether or not it was available.\r\n            ":"\r\n            试图取消现有物品并返回是否可用。\r\n            \r\n","\r\n            Indexed by EncodingKind.\r\n            ":"\r\n            由EncodingKind索引。\r\n            \r\n","One or more nodes that are descendants of the root node.":"一个或多个是根节点后代的节点。\r\n","Reported analyzer/compiler diagnostics that can be suppressed.":"报告了可以抑制的分析仪/编译器诊断。\r\n","\r\n            Returns a list of method symbols from a given list of the method symbols, which has its parameter type as\r\n            expectedParameterType as its last parameter in addition to matching all the other parameter types of the \r\n            selectedOverload method symbol\r\n            ":"\r\n            从给定的方法符号列表中返回方法符号列表，该符号的参数类型为\r\n            除了匹配所有其他参数类型之外\r\n            SelectedOverload方法符号\r\n            \r\n","completion of semantic analysis of a syntax node.":"语法节点的语义分析完成。\r\n","\r\n            The location of this syntax reference.\r\n            ":"\r\n            此语法参考的位置。\r\n            \r\n"," read-only, ":" 只读，\r\n","\r\n            Type is a pointer.\r\n            ":"\r\n            类型是指针。\r\n            \r\n","\r\n            Creates a delegate that invokes a script function and returns its result value.\r\n            ":"\r\n            创建一个调用脚本函数并返回其结果值的委托。\r\n            \r\n","\r\n            Associates custom debug information blob with the current method.\r\n            ":"\r\n            与当前方法相关的自定义调试信息斑点。\r\n            \r\n","\r\n            Should not be null.\r\n            ":"\r\n            不应该为无效。\r\n            \r\n"," representing partial analysis state for the given symbol for the given analyzer.\r\n            ":" 代表给定分析仪给定符号的部分分析状态。\r\n            \r\n"," and\r\n                2. A non-null ":" 和\r\n                2.非效果\r\n"," to perform exhaustive garbage collection, ":" 要执行详尽的垃圾收集，\r\n","\r\n            True if the call sites that references the method with this object supply extra arguments.\r\n            ":"\r\n            如果可以用此对象供应额外的参数，则为thum。\r\n            \r\n"," of the suppressed diagnostic.\r\n            ":" 被抑制的诊断。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# conditional access instance expression.\r\n             (2) VB conditional access instance expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃条件访问实例表达式。\r\n             （2）VB条件访问实例表达式。\r\n            \r\n","The delegate's return value.":"代表的回报值。\r\n","\r\n            Enumeration of the possible \"degrees of managed\" for a type.\r\n            ":"\r\n            一种类型的“托管程度”的列举。\r\n            \r\n","\r\n            The 1-based index of the first method of the type.\r\n            ":"\r\n            该类型的第一个方法的1个基索引。\r\n            \r\n","\r\n            The set of statements inside a region that jump to locations outside\r\n            the region.\r\n            ":"\r\n            在一个跳到外部位置的区域内的一组语句\r\n            该区域。\r\n            \r\n","\r\n            If set, the module contains instructions or assumptions that are specific to the AMD 64 bit instruction set. \r\n            ":"\r\n            如果设置，则该模块包含特定于AMD 64位指令集的指令或假设。\r\n            \r\n","The decoded text.":"解码文本。\r\n","\r\n            Does this list have any items.\r\n            ":"\r\n            此列表有任何项目吗？\r\n            \r\n","\r\n            Creates a new compilation without the specified metadata references.\r\n            ":"\r\n            在没有指定的元数据参考的情况下创建新的汇编。\r\n            \r\n","\r\n            Wrapper over the core ":"\r\n            核心包装器\r\n","\r\n            Base of all array methods. They have a lot in common.\r\n            ":"\r\n            所有数组方法的基础。他们有很多共同点。\r\n            \r\n","\r\n            Returns true if this property returns by reference.\r\n            ":"如果此属性通过参考返回，则返回true。\r\n            \r\n","\r\n            The Int32 value 2\r\n            ":"\r\n            INT32值2\r\n            \r\n","\r\n            Enqueue the interfaces implemented and the type extended by a given TypeDef.\r\n            ":"\r\n            加入实现的接口和通过给定的Typedef扩展的类型。\r\n            \r\n","\r\n            Appears when there are extern aliases and edit-and-continue is disabled.\r\n            Exposed for ":"\r\n            当存在外部别名时出现，并且禁用了编辑和计算。\r\n            暴露于\r\n","The length of names is limited to not exceed metadata restrictions.":"名称的长度仅限于不超过元数据限制。\r\n","A new host object of the specified type.":"指定类型的新主机对象。\r\n","The host type collection with which to merge types from the specified assemblies.":"从指定的组件合并类型的主机类型集合。\r\n","\r\n            Frees a local slot.\r\n            ":"\r\n            释放一个本地插槽。\r\n            \r\n"," for which the value is queried.":" 为此值查询。\r\n","\r\n            True if the local variable is of type Dynamic.\r\n            ":"\r\n            如果局部变量是类型动态的，则为true。\r\n            \r\n","\r\n            Value to be switched upon.\r\n            ":"\r\n            要打开的价值。\r\n            \r\n","\r\n            The method always gets a new slot in the virtual method table. \r\n            This means the method will hide (not override) a base type method with the same name and signature.\r\n            ":"\r\n            该方法始终在虚拟方法表中获得一个新插槽。\r\n            这意味着该方法将隐藏（不覆盖）具有相同名称和签名的基本类型方法。\r\n            \r\n"," should descent into.":" 应该下降。\r\n","A short title describing the diagnostic. For example, for CA1001: \"Types that own disposable fields should be disposable\".":"描述诊断的简短标题。例如，对于CA1001：“拥有一次性字段的类型应该是一次性的”。\r\n","\r\n            The name assigned to the Subtraction operator.\r\n            ":"\r\n            分配给减法操作员的名称。\r\n            \r\n"," is true, should be reported.\r\n            ":" 是真的，应报告。\r\n            \r\n","\r\n            Gets a list of all the diagnostics associated with the token and any related trivia.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取与令牌和任何相关琐事相关的所有诊断列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            Get the type parameters on this method. If the method has not generic,\r\n            returns an empty list.\r\n            ":"\r\n            在此方法上获取类型参数。如果该方法没有通用，\r\n            返回一个空列表。\r\n            \r\n","Returned As":"返回\r\n","\r\n            Return true if this is a partial method definition without a body. If there\r\n            is an implementing body, it can be retrieved with ":"\r\n            如果这是没有身体的部分方法定义，则返回true。如果有\r\n            是一个实施机构，可以通过\r\n","\r\n            The span of the node referenced.\r\n            ":"\r\n            引用节点的跨度。\r\n            \r\n",".\r\n            This option does not affect field, property, or method return values declared as\r\n            ":"。\r\n            此选项不会影响字段，属性或方法返回值声明为\r\n            \r\n","\r\n            The name assigned to the LessThanOrEqual operator.\r\n            ":"\r\n            分配给Lessthanorequal运算符的名称。\r\n            \r\n"," to the users compilation \r\n            ":" 给用户汇编\r\n            \r\n","\r\n            Gets the type within the compilation's assembly and all referenced assemblies (other than\r\n            those that can only be referenced via an extern alias) using its canonical CLR metadata name.\r\n            ":"\r\n            获取汇编程序集中的类型和所有引用的组件（除了\r\n            使用其规范CLR元数据名称只能通过外部别名引用的。\r\n            \r\n","\r\n            Create a new Token List\r\n            ":"\r\n            创建一个新的令牌列表\r\n            \r\n","\r\n            Property initializers.\r\n            ":"\r\n            属性初始化器。\r\n            \r\n","Any subset of the nodes that includes all nodes with no predecessors":"节点的任何子集都包含所有没有前身的节点\r\n","\r\n                One or more of the ":"\r\n                一个或多个\r\n","This property can only be accessed on a sealed bag.":"只能在密封的袋子上访问此属性。\r\n","\r\n            Implements compressed signed integer encoding as defined by ECMA-335-II chapter 23.2: Blobs and signatures.\r\n            ":"\r\n            通过ECMA-335-II第23.2章定义的压缩签名整数编码：斑点和签名。\r\n            \r\n","\r\n            Kinds of arguments.\r\n            ":"\r\n            种类的论点。\r\n            \r\n","\r\n            The set of statements inside the region what are the\r\n            destination of branches outside the region.\r\n            ":"\r\n            区域内的一组语句是什么\r\n            该地区以外的分支机构的目的地。\r\n            \r\n","\r\n            Represents an operation with one operand.\r\n            ":"\r\n            代表一个操作数的操作。\r\n            \r\n","\r\n            Creates a new node or token identical to this one with the specified annotations.\r\n            ":"\r\n            使用指定的注释创建一个与该节点相同的新节点或代币。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.UInt64\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toUInt64(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.uint64”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.touint64（42））;\r\n            \r\n"," but optimized for\r\n            command consoles. The specified command must be limited to a single expression or\r\n            statement. Script engines can override this method to customize command execution as\r\n            well as the process of converting the result to a string for console output.\r\n            ":" 但优化\r\n            命令控制台。指定的命令必须仅限于单个表达式或\r\n            陈述。脚本引擎可以覆盖此方法以自定义命令执行为\r\n            以及将结果转换为控制台输出的字符串的过程。\r\n            \r\n"," which occurs without ":" 发生的情况\r\n","\r\n            Get binary operation kind independent of data type.\r\n            ":"\r\n            获取独立于数据类型的二进制操作类型。\r\n            \r\n","\r\n            The generative factor used in the FNV-1a algorithm\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            FNV-1A算法中使用的生成因子\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n"," that corresponds to the assembly symbol.\r\n            ":" 这对应于汇编符号。\r\n            \r\n","\r\n            Assembly is /l-ed by compilation that is using it as a reference.\r\n            ":"\r\n            组件是通过使用它作为参考的编译 /L-ED。\r\n            \r\n"," from its constituent parts.\r\n            ":" 从其组成部分。\r\n            \r\n"," was created with, in case they are eagerly allocated.\r\n            ":" 如果他们热切地分配，则是由创建的。\r\n            \r\n","\r\n            Map from active tasks computing tree diagnostics to their token number.\r\n            ":"\r\n            从主动任务计算树诊断到其令牌编号的地图。\r\n            \r\n","\r\n            True if the type represents a native integer. In C#, the types represented\r\n            by language keywords 'nint' and 'nuint'.\r\n            ":"\r\n            如果类型代表本机整数，则为true。在C＃中，类型表示\r\n            通过语言关键字“ nint”和“ nuint”。\r\n            \r\n","\r\n            Read a compressed 30-bit integer value from the stream. This value must have been written using ":"\r\n            从流中读取压缩的30位整数值。该值必须使用\r\n","\r\n            Multiple calls with the same path should return the same \r\n            ":"\r\n            具有相同路径的多个呼叫应返回相同\r\n            \r\n","\r\n            The element type of the array.\r\n            ":"\r\n            数组的元素类型。\r\n            \r\n","Method that is invoked.":"调用的方法。\r\n","True if all members of 'files' exist, false otherwise":"如果存在“文件”的所有成员，则为false，否则\r\n","\r\n            Returns true if the location is in metadata.\r\n            ":"\r\n            如果位置在元数据中，则返回true。\r\n            \r\n","\r\n            Represents a C# recursive pattern.\r\n            ":"\r\n            表示C＃递归模式。\r\n            \r\n","\r\n            Struct that represents an entry in the warning state map. Sorts by position in the associated syntax tree.\r\n            ":"\r\n            在警告状态图中代表条目的结构。按位置在关联的语法树中进行分类。\r\n            \r\n","The type has virtual method":"该类型具有虚拟方法\r\n","\r\n            Something that is an issue, as determined by some authority,\r\n            but is not surfaced through normal means.\r\n            There may be different mechanisms that act on these issues.\r\n            ":"\r\n            这是一个问题，由某些权威确定，\r\n            但没有通过正常手段浮出水面。\r\n            在这些问题上可能有不同的机制。\r\n            \r\n","The kind of cache data to be consumed.":"要消耗的缓存数据。\r\n","\r\n            An index of the target constructor signature in\r\n            signatures array, -1 if\r\n            this is not the target attribute.\r\n            ":"\r\n            目标构造函数签名的索引\r\n            签名阵列，-1如果\r\n            这不是目标属性。\r\n            \r\n"," to catch the exception if the non-fatal error was reported; otherwise,\r\n            ":" 如果报告了非致命误差，请捕获例外；否则，\r\n            \r\n","\r\n            Implements a readonly collection over a set of existing collections. This can be used to\r\n            prevent having to copy items from one collection over to another (thus bloating space).\r\n            \r\n            Note: this is a *collection*, not a *set*.  There is no removal of duplicated elements. This\r\n            allows us to be able to efficiently do operations like CopyTo, Count, etc. in O(c) time\r\n            instead of O(n) (where 'c' is the number of collections and 'n' is the number of elements).\r\n            If you have a few collections with many elements in them, then this is an appropriate\r\n            collection for you.\r\n            ":"\r\n            在一组现有收藏集上实现一个可读的集合。这可以用来\r\n            防止必须将项目从一个集合中复制到另一个集合（从而膨胀空间）。\r\n            \r\n            注意：这是一个 *集合 *，而不是 *集 *。没有删除重复的元素。这个\r\n            允许我们能够有效地进行诸如Copyto，Count等的操作。在O（c）时间\r\n            而不是o（n）（其中'c'是集合的数量，而'n'是元素的数量）。\r\n            如果您有几个收藏品，其中包含许多元素，那么这是合适的\r\n            为您收集。\r\n            \r\n","default(GeneratorState)":"默认（GeneratorState）\r\n","\r\n            Invalid state for an unreachable path from predicate analysis.\r\n            ":"\r\n            无效的谓词分析路径的状态。\r\n            \r\n","UpToDateCheckType to use":"使用uptodatechecktype\r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n            specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n            accessible. \r\n            \r\n            Essentially the same as filtering instance members out of the results of an analogous ":"\r\n            “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n            指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n            无障碍。\r\n            \r\n            基本与从类似的结果中过滤实例成员相同\r\n","\r\n            Set by the host to a fail fast trigger, \r\n            if the host desires to crash the process on a fatal exception.\r\n            ":"\r\n            主机设置为失败的快速触发器，\r\n            如果主机希望在致命的例外情况下崩溃。\r\n            \r\n"," is true, and C if false.\r\n            ":" 是真的，如果是错误的。\r\n            \r\n","\r\n            An enumeration declaring the kinds of variance supported for generic type parameters.\r\n            ":"\r\n            列出的枚举，该枚举为通用类型参数支持的方差种类。\r\n            \r\n","Action to be executed.":"要执行的操作。\r\n","\r\n            Value of the \"file\" attribute of an <include> documentation comment element.\r\n            ":"\r\n            <include>文档注释元素的“文件”属性的值。\r\n            \r\n"," is\r\n            evaluated and stored, the value is used if a PDB is created for this compilation.\r\n            ":" 是\r\n            经过评估和存储，如果为此汇编创建了PDB，则使用该值。\r\n            \r\n","\r\n            Option names to configure analyzer execution through an .editorconfig file.\r\n            ":"\r\n            选项名称通过.editorConfig文件配置分析仪执行。\r\n            \r\n","\r\n            A unique identifier for this analyzer reference.\r\n            ":"\r\n            该分析仪参考的唯一标识符。\r\n            \r\n","Name of the constant.":"常数的名称。\r\n","A task that represents the promise's asynchronous operation.":"代表承诺异步操作的任务。\r\n","DataView":"Dataview\r\n","Root constructor body operation, which must have a null parent.":"根构造函数的身体操作，必须具有无效的父。\r\n","\r\n            Determines which kind keywords should be included when displaying symbols.\r\n            ":"\r\n            确定显示符号时应包含哪些类似关键字。\r\n            \r\n","\r\n            A set of keys that are reserved for special interpretation for the editorconfig specification.\r\n            All values corresponding to reserved keys in a (key,value) property pair are always lowercased\r\n            during parsing.\r\n            ":"\r\n            保留的一组键，用于特殊解释，用于EditorConfig规范。\r\n            （密钥，值）属性对中的保留密钥对应的所有值始终较低。\r\n            在解析过程中。\r\n            \r\n","An interface to the module scope in which the referenced type is defined.":"定义引用类型的模块范围的接口。\r\n","The character position of the trivia relative to the beginning of\r\n            the file.":"琐事相对于起点的性格位置\r\n            文件。\r\n","\r\n            Determines whether this trivia is a structured trivia.\r\n            ":"\r\n            确定这个琐事是否是结构化的琐事。\r\n            \r\n","\r\n             Emit the IL for the compiled source code into the specified stream.\r\n             ":"\r\n             将编译源代码的IL发射到指定的流中。\r\n             \r\n","\r\n            Given a method symbol, return the MethodDef token, if it is defined in\r\n            this module, or a nil token, otherwise.\r\n            ":"\r\n            给定方法符号，如果将其定义为\r\n            否则，此模块或零令牌。\r\n            \r\n","\r\n            Invokes a script object method.\r\n            ":"\r\n            调用脚本对象方法。\r\n            \r\n","\r\n            Equivalent of ":"\r\n            等效\r\n","\r\n            A double value encoded as 8 bytes.\r\n            ":"\r\n            双重值编码为8个字节。\r\n            \r\n","\r\n            The name of the entity depends on other metadata (tokens, signatures) originated from\r\n            PeWriter.\r\n            ":"\r\n            实体的名称取决于其他元数据（令牌，签名）起源于\r\n            Pewriter。\r\n            \r\n","The span of the line.":"线的跨度。\r\n","Assembly file not found":"找不到汇编文件\r\n","\r\n            Optional source for exception. This could be any of the following operation:\r\n            1. Declaration for the local catch variable bound to the caught exception (C# and VB) OR\r\n            2. Null, indicating no declaration or expression (C# and VB)\r\n            3. Reference to an existing local or parameter (VB) OR\r\n            4. Other expression for error scenarios (VB)\r\n            ":"\r\n            异常的可选来源。这可能是以下任何操作：\r\n            1.绑定到捕获的异常（C＃和VB）的本地捕获变量声明或\r\n            2.空，表示没有声明或表达（C＃和VB）\r\n            3.引用现有本地或参数（VB）或\r\n            4.错误方案的其他表达式（VB）\r\n            \r\n","\r\n            An Int16 value encoded as 2 bytes.\r\n            ":"\r\n            INT16值编码为2个字节。\r\n            \r\n","Name contains invalid characters.":"名称包含无效字符。\r\n"," for enhanced behavior and performance in a scripting environment.\r\n            ":" 在脚本环境中增强行为和表现。\r\n            \r\n","Compilation or path is null.":"汇编或路径为无效。\r\n"," when called on ":" 当被调用时\r\n","\r\n            Operations contained within the block.\r\n            ":"\r\n            块中包含的操作。\r\n            \r\n","\r\n            Boolean option to enable heuristically detecting of additional string formatting methods for CA2241 (https://docs.microsoft.com/visualstudio/code-quality/ca2241).\r\n            A method is considered a string formatting method if it has a '":"\r\n            布尔值选项可以启用启发式检测CA2241的其他字符串格式方法（https://docs.microsoft.com/visualstudio/code-quepaly/ca2241）。\r\n            如果该方法具有'\r\n",".\r\n            but not both. If both are specified ":"。\r\n            但不是两者。如果两者都指定\r\n","\r\n            Scope for setting up analyzers for a code block, automatically associating actions with analyzers.\r\n            ":"\r\n            用于为代码块设置分析仪的范围，将操作与分析仪自动关联。\r\n            \r\n","\r\n            Width of the span after the edit.  A 0 here would represent a delete\r\n            ":"\r\n            编辑后的跨度宽度。一个0代表删除\r\n            \r\n","\r\n            The variance annotation, if any, of the type parameter declaration. Type parameters may be \r\n            declared as covariant (":"\r\n            类型参数声明的方差注释（如果有）。类型参数可能是\r\n            称为协变（\r\n","\r\n            Visitor to force translation of all symbols that will be referred to\r\n            in metadata. Allows us to build the set of types that must be embedded\r\n            as local types (for NoPia).\r\n            ":"\r\n            访客强迫所有符号的翻译\r\n            在元数据中。允许我们构建必须嵌入的类型集\r\n            作为本地类型（对于NOPIA）。\r\n            \r\n","\r\n            Type of exception to be handled.\r\n            ":"\r\n            要处理的例外类型。\r\n            \r\n","If we neglect to do this, then in the case where the user ships the compiler or its\r\n             dependencies in the analyzer's bin directory, we could end up loading a separate\r\n             instance of those assemblies in the process of loading the analyzer, which will surface\r\n             as a failure to load the analyzer.":"如果我们忽略了这样做，那么在用户寄出编译器或其它的情况下\r\n             分析仪的bin目录中的依赖项，我们最终可能会加载一个单独的\r\n             在加载分析仪的过程中，这些组件的实例，将浮出水面\r\n             作为未能加载分析仪。\r\n"," is null, or\r\n            if no such conversion exists.\r\n            ":" 是无效的，或\r\n            如果没有这种转换。\r\n            \r\n","\r\n            Gets node at given node index. \r\n            This WILL force node creation if node has not yet been created.\r\n            Can still return null for invalid slot numbers\r\n            ":"\r\n            在给定的节点索引处获取节点。\r\n            如果尚未创建节点，这将迫使节点创建。\r\n            对于无效的插槽号，仍然可以返回null\r\n            \r\n"," tuple of a ":" 元组\r\n","A rule set object with data from the given XML node":"带有来自给定XML节点的数据的规则集对象\r\n","\r\n            Gets the available named symbols in the context of the specified location and optional container. Only\r\n            symbols that are accessible and visible from the given location are returned.\r\n            ":"\r\n            在指定位置和可选容器的上下文中获取可用的命名符号。仅有的\r\n            从给定位置可访问和可见的符号将返回。\r\n            \r\n","\r\n            views.\r\n            ":"\r\n            视图。\r\n            \r\n"," for all the declarations whose span overlaps with the given ":" 对于所有声明与给定重叠的声明\r\n"," option is specified\r\n            the directory specified by MICROSOFT_DIASYMREADER_NATIVE_ALT_LOAD_PATH environment variable is also searched.\r\n            If the Microsoft.DiaSymReader.Native.{platform}.dll library can't be found and ":" 指定选项\r\n            还搜索了Microsoft_diasymreader_native_alt_load_path环境变量的目录。\r\n            如果microsoft.diasymreader.native。{platform} .dll库找不到，\r\n","The zero-based index of the token to get.":"代币基于零的索引。\r\n","\r\n            An expression that results in a System.Type instance.\r\n            ":"\r\n            导致system.type实例的表达式。\r\n            \r\n","\r\n            Indicates disposable locations that are disposed.\r\n            ":"\r\n            指示处置的一次性位置。\r\n            \r\n","RemovePropertyNoCheck":"删除propertynocheck\r\n","\r\n            Get all of the declaration errors within the syntax tree associated with this\r\n            object. Does not get errors involving incorrect syntax, compiling method bodies or initializers.\r\n            ":"\r\n            在与此关联的语法树中获取所有声明错误\r\n            目的。没有获得涉及错误语法，编译方法物体或初始化器的错误。\r\n            \r\n","\r\n            VB containing namespace (not an import).\r\n            ":"\r\n            VB包含名称空间（不是导入）。\r\n            \r\n","\r\n            Determines whether this node has any annotations with the specific annotation kind.\r\n            ":"\r\n            确定该节点是否具有特定注释类型的任何注释。\r\n            \r\n","\r\n            Returns an extension of the specified path string.\r\n            ":"\r\n            返回指定路径字符串的扩展名。\r\n            \r\n","\r\n            Determines whether an assembly reference is considered an assembly file path or an assembly name.\r\n            used, for example, on values of /r and #r.\r\n            ":"\r\n            确定程序集引用是被视为程序集文件路径还是程序集名称。\r\n            例如，在/r和#r的值上使用。\r\n            \r\n","\r\n            Initializes a new JScript engine instance with the specified options.\r\n            ":"\r\n            用指定选项初始化新的JScript引擎实例。\r\n            \r\n"," should descend into.":" 应该下降。\r\n","A string representing additional reference paths.":"表示其他参考路径的字符串。\r\n","\r\n            An optional delegate to be invoked when an analyzer throws an exception as an exception filter.\r\n            ":"\r\n            当分析仪将异常作为异常滤波器抛出时，要调用的可选委托。\r\n            \r\n","The FNV-1a hash of ":"FNV-1A哈希\r\n","The trivia to be replaced; a descendant of the root node.":"要替换的琐事；根节点的后代。\r\n","\r\n            Underlying ":"\r\n            潜在的\r\n","\r\n            Try to merge with the nextBucket.\r\n            If merge results in a better bucket than two original ones, merge and return true.\r\n            Else don't merge and return false.\r\n            ":"\r\n            尝试与NextBucket合并。\r\n            如果合并结果比两个原始的桶更好，请合并并返回true。\r\n            否则不要合并并返回false。\r\n            \r\n","\r\n            Number of debug documents in the module. \r\n            Used to determine capacities of lists and indices when emitting debug info.\r\n            ":"\r\n            模块中的调试文档数量。\r\n            发出调试信息时，用于确定列表和索引的能力。\r\n            \r\n","type must be a subclass of SyntaxAnnotation.":"类型必须是语法的子类。\r\n","\r\n            The number of entries in the symbol table. This data can be used to locate the string table, \r\n            which immediately follows the symbol table. This value should be zero for a PE image.\r\n            ":"\r\n            符号表中的条目数。该数据可用于找到字符串表，\r\n            立即遵循符号表。对于PE图像，此值应为零。\r\n            \r\n","\r\n            Frees memory and handles allocated for the module.\r\n            ":"\r\n            释放记忆并处理为模块分配的。\r\n            \r\n","\r\n            Kind of increment.\r\n            ":"\r\n            有点增量。\r\n            \r\n","An optional host type collection with which to merge the imported enumerations.":"可选的主机类型集合，可以合并导入的枚举。\r\n","Symbol to enqueue.":"符号的符号。\r\n","\r\n            The parameter definitions to be emitted, in row order. These\r\n            are just the parameter definitions from the current generation.\r\n            ":"\r\n            要排序的参数定义要发射。这些\r\n            只是当前一代的参数定义。\r\n            \r\n","\r\n            Gets the default nullable context state in this compilation.\r\n            ":"\r\n            在此汇编中获取默认的无效上下文状态。\r\n            \r\n","\r\n            Currently being processed.\r\n            ":"\r\n            目前正在处理。\r\n            \r\n","\r\n            The time for the newest file we have seen\r\n            ":"\r\n            我们看到的最新文件的时间\r\n            \r\n","If the file at ":"如果文件在\r\n"," if you don't want them to be considered equal.\r\n            ":" 如果您不希望它们被视为平等。\r\n            \r\n","The script call stack formatted as a string.":"脚本调用堆栈格式为字符串。\r\n","\r\n            Enable some experimental language features for testing.\r\n            ":"\r\n            启用一些实验语言特征进行测试。\r\n            \r\n","\r\n            Used to compares assembly identities. \r\n            May implement unification and portability policies specific to the target platform.\r\n            ":"\r\n            用于比较组装身份。\r\n            可以实施针对目标平台的统一和可移植性策略。\r\n            \r\n","\r\n            Returns a new PointerTypeSymbol representing a pointer type tied to a type in this\r\n            Compilation.\r\n            ":"\r\n            返回一个新的pointertypesymbol，代表与此类型相关的指针类型\r\n            汇编。\r\n            \r\n","\r\n            The type that is explicitly implementing or overriding the base class virtual method or explicitly implementing an interface method.\r\n            ":"\r\n            明确实现或覆盖基类虚拟方法或明确实现接口方法的类型。\r\n            \r\n","\r\n            constraint, this returns ":"\r\n            约束，这是返回的\r\n","\r\n            Gets the owning semantic model for this operation node.\r\n            Note that this may be different than ":"\r\n            获取此操作节点的所有语义模型。\r\n            请注意，这可能与\r\n","\r\n            PERF: Note that the parameter ":"\r\n            perf：请注意参数\r\n","\r\n            This method constructs the correct Tracker.exe response file arguments from its parameters\r\n            ":"\r\n            此方法从其参数构造正确的tracker.exe响应文件参数\r\n            \r\n","\r\n            Gets a local slot.\r\n            ":"\r\n            获取本地插槽。\r\n            \r\n","\r\n            Specifies the index of the parameter that contains the value of the Interface Identifier (IID) of the marshalled object.\r\n            -1 if it should be omitted from the marshal blob.\r\n            ":"\r\n            指定包含编组对象的接口标识符（IID）值的参数的索引。\r\n            -1如果应该从元帅斑点中省略它。\r\n            \r\n","\r\n            Returns the default value of the parameter. \r\n            ":"\r\n            返回参数的默认值。\r\n            \r\n","\r\n            Closes a method previously open using ":"\r\n            关闭以前使用的方法\r\n","\r\n                0.Mantissa * 10^Exponent\r\n             ":"\r\n                0.Mantissa * 10^指数\r\n             \r\n","\r\n            True if the line mapping marks hidden code.\r\n            ":"\r\n            如果行映射标记隐藏的代码，则为true。\r\n            \r\n","\r\n            Additional top-level types injected by the Expression Evaluators.\r\n            ":"\r\n            表达式评估者注入的其他顶级类型。\r\n            \r\n","\r\n            Represents a switch operation with a value to be switched upon and switch cases.\r\n            ":"\r\n            代表一个开关操作，其值要打开并开关案例。\r\n            \r\n","\r\n            Read a Decimal value from the stream. This value must have been written using ":"\r\n            从流中读取十进制值。该值必须使用\r\n","\r\n            Represents a C# constant pattern.\r\n            ":"\r\n            表示C＃常数模式。\r\n            \r\n","\r\n              Looks up a localized string similar to Embedded texts are only supported when emitting a PDB..\r\n            ":"\r\n              查找与嵌入式文本类似的本地化字符串仅在排放PDB时受到支持。\r\n            \r\n","Cannot deserialize type '{0}'.":"无法挑选类型'{0}'。\r\n","\r\n            Tries to get configured severity for the given ":"\r\n            试图为给定的严重程度配置\r\n","\r\n            Total count of attributes to decode.\r\n            ":"\r\n            解码属性的总数。\r\n            \r\n","\r\n            Contains information about the source of a programmatic diagnostic suppression produced by an ":"\r\n            包含有关由一个程序诊断抑制的来源的信息\r\n","\r\n            Return tokens for all updated debuggable methods.\r\n            ":"\r\n            所有更新的可辩论方法返回令牌。\r\n            \r\n","\r\n            Indicates that this symbol uses metadata that cannot be supported by the language.\r\n            \r\n            ":"\r\n            表示此符号使用该语言无法支持的元数据。\r\n            \r\n            \r\n","\r\n            Executes the semantic model actions on the given semantic model.\r\n            ":"\r\n            在给定语义模型上执行语义模型动作。\r\n            \r\n","\r\n            An abstract domain implementation for analyses that store dictionary typed data.\r\n            ":"用于存储字典键入数据的分析的抽象域实现。\r\n            \r\n","Value of the key, which will either be the existing value, or new value if the key was not in the dictionary.":"密钥的值，即将是现有值，或者如果键不在字典中，则将是新值。\r\n","\r\n            Create a deterministic PDB writer.\r\n            ":"\r\n            创建确定性的PDB作者。\r\n            \r\n","\r\n            The size of a single entry in the \"Debug Directory (Image Only)\"\r\n            ":"\r\n            “调试目录（仅图像）”中的单个条目的大小\r\n            \r\n","Count":"数数\r\n","\r\n            Copies bytes from the specified byte array into the view.\r\n            ":"\r\n            从指定字节数组中的副本字节到视图中。\r\n            \r\n","\r\n            to get a semantic model. Otherwise, it creates a new semantic model using ":"\r\n            获取语​​义模型。否则，它将创建一个新的语义模型\r\n","major subsystem version":"主要子系统版本\r\n","\r\n            Represents an immutable snapshot of module CLI metadata.\r\n            ":"\r\n            代表模块CLI元数据的不变快照。\r\n            \r\n","\r\n            Argument to the name of operation.\r\n            ":"\r\n            论证操作名称。\r\n            \r\n","\r\n            Gets the value which specifies if the assembly is retargetable. \r\n            ":"\r\n            获取指定组件是否可以重新定位的值。\r\n            \r\n","True if the two arrays are equal":"如果两个阵列相等，则为thu\r\n","A unique identifier for the suppression. For example, suppression ID \"SP1001\".":"抑制的唯一标识符。例如，抑制ID“ SP1001”。\r\n"," instance\r\n            when possible. \r\n            ":" 实例\r\n            若有可能。\r\n            \r\n","\r\n            The following code creates an empty host object and adds several properties to it.\r\n            It assumes that an instance of ":"\r\n            以下代码创建一个空的主机对象，并在其中添加了几个属性。\r\n            它假设一个实例\r\n","\r\n            For each AssemblyRef of this AssemblyDef specifies which AssemblyDef matches the reference.\r\n            ":"对于此汇编的每个汇编程序，defef指定汇编与参考匹配。\r\n            \r\n","fall through label for the jump table":"通过标签跌入跳台\r\n","\r\n            If the field reference is also where the field was declared.\r\n            ":"\r\n            如果字段引用也是宣布字段的位置。\r\n            \r\n","\r\n            Creates a new node or token identical to this one without annotations of the specified kind.\r\n            ":"\r\n            在没有指定类型的注释的情况下，创建一个与该节点相同的新节点或代币。\r\n            \r\n","\r\n            Dataflow analysis to track locations pointed to by ":"\r\n            数据流分析以跟踪指向的位置\r\n","\r\n            Returns the type arguments that have been substituted for the type parameters. \r\n            If nothing has been substituted for a given type parameter,\r\n            then the type parameter itself is consider the type argument.\r\n            ":"\r\n            返回已替换为类型参数的类型参数。\r\n            如果没有什么可以代替给定类型参数，\r\n            然后，类型参数本身为类型参数。\r\n            \r\n","\r\n            Compilation events corresponding to the compilation (compilation start and completed events), that are not completely processed for all analyzers.\r\n            ":"\r\n            与所有分析仪并非完全处理的汇编事件（汇编开始和完成事件）相对应的汇编事件。\r\n            \r\n","\r\n            Shows the name of the symbol the names of all containing types and namespaces.\r\n            ":"\r\n            显示符号的名称，其中包含所有类型和名称空间的名称。\r\n            \r\n","\r\n            Adds a system document with the specified category and context callback to the configuration.\r\n            ":"\r\n            将带有指定类别的系统文档和上下文回调添加到配置。\r\n            \r\n","\r\n            Gets the handle of an owner window for displaying dialogs on behalf of script code.\r\n            ":"\r\n            获取代表脚本代码显示对话框的所有者窗口的句柄。\r\n            \r\n","A sequence of trivia.":"一系列琐事。\r\n","The token at the specified index.":"指定索引处的令牌。\r\n","\r\n            Returns true if this compilation contains the specified tree. False otherwise.\r\n            ":"\r\n            如果此汇编包含指定的树，则返回true。否则为错误。\r\n            \r\n","The separator token to be replaced.":"分离器令牌要替换。\r\n",".\r\n            An instance of ":"。\r\n            一个实例\r\n","\r\n            Incrementally identical nodes can also appear within the same syntax tree, or syntax trees that did not arise\r\n            from ":"\r\n            增量相同的节点也可以出现在同一语法树中，也可以出现不出现的语法树\r\n            从\r\n","\r\n            Gets the name of a symbol as it appears in metadata. Most of the time, this\r\n            is the same as the Name property, with the following exceptions:\r\n            1) The metadata name of generic types includes the \"`1\", \"`2\" etc. suffix that\r\n            indicates the number of type parameters (it does not include, however, names of\r\n            containing types or namespaces).\r\n            2) The metadata name of explicit interface names have spaces removed, compared to\r\n            the name property.\r\n            3) The length of names is limited to not exceed metadata restrictions.\r\n            ":"\r\n            获取出现在元数据中的符号的名称。大多数时候，这个\r\n            与名称属性相同，但有以下例外：\r\n            1）通用类型的元数据名称包括“ 1”，'2“等。后缀\r\n            指示类型参数的数量（不包括\r\n            包含类型或名称空间）。\r\n            2）与之相比\r\n            名称属性。\r\n            3）名称的长度仅限于不超过元数据限制。\r\n            \r\n","\r\n            Current usage:\r\n             (1) VB range case clause of the form \"Case x To y\".\r\n            ":"\r\n            当前用法：\r\n             （1）形式“ case x至y”的VB范围案例条款。\r\n            \r\n","\r\n            The state of the visibility of a line.\r\n            ":"\r\n            线路可见性的状态。\r\n            \r\n",",\r\n            returns the property that this method is the getter or setter for.\r\n            If this method has ":"，，，，\r\n            返回此方法是Getter或setter的属性。\r\n            如果此方法具有\r\n","\r\n            A struct with the same size and layout as the native VARIANT type:\r\n              2 bytes for a discriminator (i.e. which type of variant it is).\r\n              6 bytes of padding\r\n              8 or 16 bytes of data\r\n            ":"\r\n            与本机变体类型相同的大小和布局的结构：\r\n              2个歧视器的字节（即哪种类型的变体）。\r\n              6个字节\r\n              8或16个字节数据\r\n            \r\n","\r\n            CorLibrary assembly referenced by this module.\r\n            ":"\r\n            该模块引用的Corlibrary组件。\r\n            \r\n","\r\n            Gets the struct that this enumerator instance is currently pointing to.\r\n            ":"\r\n            获取该枚举实例当前指向的结构。\r\n            \r\n","\r\n            For error reporting only, can't be used to reference an analyzer assembly.\r\n            ":"\r\n            仅对于错误报告，不能用于引用分析仪组件。\r\n            \r\n"," if the property was found, ":" 如果发现该财产，\r\n","\r\n            Unless set (private) members that don't affect the language semantics of the resulting assembly will be excluded\r\n            when emitting metadata-only assemblies as primary output (with ":"\r\n            除非设置不影响所得组件语言语义的（私人）成员将被排除在外\r\n            当将仅元数据组件排放为主要输出时（有\r\n","Prefix of path that represents a directory. ":"表示目录的路径前缀。 \r\n","\r\n            Guard expression associated with the pattern case clause.\r\n            ":"\r\n            与模式案例子句相关的后卫表达式。\r\n            \r\n","\r\n            Represents the corresponding state of each item in ":"\r\n            表示每个项目的相应状态\r\n"," \r\n            method.\r\n            ":" \r\n            方法。\r\n            \r\n","\r\n            Full case-insensitive path.\r\n            ":"\r\n            完整的不敏感路径。\r\n            \r\n"," is \r\n            created that contains the user written code. \r\n            \r\n            A generator can use the ":" 是\r\n            创建包含用户书面代码的创建。\r\n            \r\n            发电机可以使用\r\n"," is not a full path.":" 不是一条完整的道路。\r\n","\r\n            Sorts strings such that a string is followed immediately by all strings\r\n            that are a suffix of it.  \r\n            ":"\r\n            类似的字符串使弦紧随其后，所有字符串\r\n            那是它的后缀。\r\n            \r\n","\r\n            Checks for the given ":"\r\n            检查给定\r\n"," corresponding to this token.\r\n            ":" 对应于这个令牌。\r\n            \r\n",") the checksum is not calculated.\r\n            ":"）校验和未计算。\r\n            \r\n","The source code to add to the compilation":"添加到汇编的源代码\r\n","\r\n            Public types defined in other modules making up this assembly and to which other assemblies may refer to via this assembly\r\n            followed by types forwarded to another assembly.\r\n            ":"\r\n            其他模块中定义的公共类型组成了此组件，其他组件可以通过此组件引用的公共类型\r\n            然后是转发到另一个组件的类型。\r\n            \r\n","\r\n            default(":"\r\n            默认（\r\n","\r\n                Any other file gets a default level of 0\r\n                ":"\r\n                任何其他文件获得0的默认级别0\r\n                \r\n","\r\n            String option to configure names of symbols (separated by '|') that are excluded for analysis.\r\n            Configurable rules: CA1303 (https://docs.microsoft.com/visualstudio/code-quality/ca1303).\r\n            Allowed method name formats:\r\n              1. Symbol name only (includes all symbols with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format.\r\n                 Note that each symbol name requires a symbol kind prefix, such as \"M:\" prefix for methods, \"T:\" prefix for types, \"N:\" prefix for namespaces, etc.\r\n              3. \".ctor\" for constructors and \".cctor\" for static constructors\r\n            ":"\r\n            字符串选项以配置符号名称（被“ |'分隔），这些名称被排除在外。\r\n            可配置规则：CA1303（https://docs.microsoft.com/visualstudio/code-quality/ca1303）。\r\n            允许的方法名称格式：\r\n              1.仅符号名称（包括所有具有名称的符号，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format。\r\n                 请注意，每个符号名称都需要一个符号类型前缀，例如方法的“ m：”前缀，t：“类型的前缀”，“ n：”名称空间的前缀，等。\r\n              3.构造函数和“ .ctor”的“ .ctor”用于静态构造函数\r\n            \r\n","\r\n            Returns a StringComparer that compares strings according to Unicode rules for case-insensitive\r\n            identifier comparison (lower-case mapping).\r\n            ":"\r\n            返回一个字符串comparer，该字符串根据unicode规则的情况不敏感\r\n            标识符比较（下盘映射）。\r\n            \r\n","\r\n            The absolute span of the list elements in characters, including the leading and trailing trivia of the first and last elements.\r\n            ":"\r\n            字符中列表元素的绝对跨度，包括第一个和最后一个元素的领先和尾随琐事。\r\n            \r\n","\r\n            Resolves specified XML reference with respect to base file path.\r\n            ":"\r\n            针对基本文件路径解决指定的XML引用。\r\n            \r\n"," instance associated with this symbol.\r\n            This API and ":" 与此符号关联的实例。\r\n            这个API和\r\n"," with the result.\r\n            The AssemblySymbols must correspond \r\n            to the AssemblyNames returned by AssemblyData.AssemblyReferences property. If reference is not \r\n            resolved, null reference should be returned in the corresponding item. \r\n            ":" 结果。\r\n            组合符号必须对应\r\n            汇给汇编归还的汇编名称。如果参考不是\r\n            已解决的无效参考应在相应的项目中返回。\r\n            \r\n","\r\n            Operation method used by the operation, null if the operation does not use an operator method.\r\n            ":"\r\n            操作方法由操作使用，如果操作不使用操作员方法，则为空。\r\n            \r\n","\r\n            This indicates that friend access should not be granted because the other assembly grants\r\n            friend access to a strong-named assembly, and either this assembly is weak-named, or\r\n            it is strong-named and the names don't match.\r\n            ":"\r\n            这表明不应授予朋友访问，因为其他组装赠款\r\n            朋友可以访问一个名称的大会，要么这个议会较弱，要么\r\n            它是坚强的，名称不匹配。\r\n            \r\n","\r\n            If the method is not external and not abstract it has to provide an IL body.\r\n            ":"\r\n            如果该方法不是外部的，也不是抽象的，则必须提供IL主体。\r\n            \r\n"," directive that precedes it and that \r\n            either specifies an explicit file path or is ":" 先于它之前的指示\r\n            要么指定明确的文件路径或\r\n","\r\n            Locals declared by the ":"\r\n            当地人由\r\n","\r\n            Use to create a document when checksum is computed based on actual source stream.\r\n            ":"\r\n            根据实际源流计算校验和计算校验的文档。\r\n            \r\n","\r\n            List of operations to execute at the bottom of the loop. For C#, this comes from the third clause of the for statement.\r\n            ":"\r\n            在循环底部执行的操作列表。对于C＃，这来自for语句的第三条。\r\n            \r\n"," nodes.\r\n            ":" 节点。\r\n            \r\n","\r\n            Opcodes that represents a branch to a label.\r\n            ":"\r\n            代表标签的分支的opcodes。\r\n            \r\n","\r\n            The exception that is thrown when script execution is interrupted by the host.\r\n            ":"\r\n            当脚本执行被主机中断时，抛出的例外。\r\n            \r\n","\r\n            Debugging information associated with a MoveNext method of a state machine.\r\n            ":"\r\n            调试与状态机的MoveNext方法相关的信息。\r\n            \r\n","Bytes successfully written from the ":"字节成功地从\r\n","\r\n            The original span of the changed text. \r\n            ":"\r\n            更改文本的原始跨度。\r\n            \r\n","\r\n            Returns true if the parameter is the hidden 'this' ('Me' in Visual Basic) parameter.\r\n            ":"\r\n            如果参数是隐藏的“ this”（在Visual Basic中）参数，则返回true。\r\n            \r\n","\r\n            Full width of the leading trivia of this token.\r\n            ":"\r\n            这个代币的主要琐事的全宽度。\r\n            \r\n","\r\n            Gets the root node of the profile's call tree.\r\n            ":"\r\n            获取配置文件调用树的根节点。\r\n            \r\n","\r\n            An analysis location can be created for one of the following cases:\r\n                1. An allocation or an object creation operation (":"\r\n            可以为以下情况之一创建分析位置：\r\n                1.分配或对象创建操作（\r\n","\r\n            An Int32 value encoded as 2 bytes.\r\n            ":"\r\n            INT32值编码为2个字节。\r\n            \r\n","\r\n            Whether or not to include type suffix for applicable integral literals.\r\n            ":"\r\n            是否包括适用的积分文字的类型后缀。\r\n            \r\n","\r\n            Symbol is a type parameter.\r\n            ":"\r\n            符号是类型参数。\r\n            \r\n"," occurs within ":" 发生在内部\r\n","\r\n            Resume tracking file accesses in the current tracking context. \r\n            ":"\r\n            恢复跟踪文件访问当前跟踪上下文中。\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified name and resource constraints.\r\n            ":"\r\n            初始化具有指定名称和资源约束的新的V8脚本引擎实例。\r\n            \r\n","\r\n            Low 8 bytes of SHA1 hash of the public key, or empty.\r\n            ":"\r\n            低8个字节的sha1哈希，公钥或空的。\r\n            \r\n","\r\n            The set of local variables that are written outside a region.\r\n            ":"\r\n            在区域以外写的一组本地变量。\r\n            \r\n","\r\n            Determines if the specified node is a descendant of this node.\r\n            Returns true for current node.\r\n            ":"\r\n            确定指定节点是否是该节点的后代。\r\n            当前节点返回true。\r\n            \r\n","\r\n            Specifies the options for how properties are displayed in symbol descriptions.\r\n            ":"\r\n            指定在符号描述中显示属性的选项。\r\n            \r\n","The decoder was unable to decode the stream with the given encoding.":"解码器无法用给定的编码解码流。\r\n","The result of the operation, which is usually the value assigned to the specified property.":"操作的结果，通常是分配给指定属性的值。\r\n","The exception that caused the current exception to be thrown.":"导致当前例外的例外。\r\n","\r\n            Get the global level of this config, used to resolve conflicting keys\r\n            ":"\r\n            获取该配置的全局级别，用于解决冲突密钥\r\n            \r\n","\r\n            The offset bias value used in the FNV-1a algorithm\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            FNV-1A算法中使用的偏移偏置值\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","\r\n            Returns named attribute argument with the given ":"\r\n            带有给定的返回命名属性参数\r\n","\r\n            Signals the event queue, if any, that we are done compiling.\r\n            There should not be more compiling actions after this step.\r\n            NOTE: once we signal about completion to analyzers they will cancel and thus in some cases we \r\n                  may be effectively cutting off some diagnostics.\r\n                  It is not clear if behavior is desirable.\r\n                  See: https://github.com/dotnet/roslyn/issues/11470\r\n            ":"\r\n            向事件队列（如果有的话）发出信号，我们完成了编译。\r\n            在此步骤之后，不应有更多的编译动作。\r\n            注意：一旦我们向分析仪发出了信号，他们将取消，因此在某些情况下我们会取消\r\n                  可能有效地切断了一些诊断。\r\n                  目前尚不清楚行为是否可取。\r\n                  请参阅：https：//github.com/dotnet/roslyn/issues/11470\r\n            \r\n","\r\n            Returns the value of the token. For example, if the token represents an integer literal, then this property\r\n            would return the actual integer.\r\n            ":"\r\n            返回令牌的值。例如，如果令牌代表整数文字，则该属性\r\n            将返回实际整数。\r\n            \r\n","\r\n              Looks up a localized string similar to Unsupported hash algorithm..\r\n            ":"\r\n              查找类似于不受支持的哈希算法的局部字符串。\r\n            \r\n","\r\n            Cached assembly symbols.\r\n            ":"\r\n            缓存的装配符号。\r\n            \r\n","\r\n            Given a set of compiler or ":"\r\n            给定一组编译器或\r\n","\r\n            Denotes the kind of reference.\r\n            ":"\r\n            表示参考。\r\n            \r\n","The symbol that we are checking to see if it accessible.":"我们正在检查的符号以查看是否可以访问。\r\n","\r\n            Indicates that the diagnostic is related to some unnecessary source code.\r\n            ":"\r\n            表明诊断与一些不必要的源代码有关。\r\n            \r\n","\r\n            Gets a list of all the diagnostics in the sub tree that has the specified node as its root.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取具有指定节点作为词根的子树中所有诊断的列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            Gets the name of the special type as it would appear in metadata.\r\n            ":"\r\n            获取特殊类型的名称，因为它将出现在元数据中。\r\n            \r\n","\r\n            Defines options for exposing type members to script code.\r\n            ":"定义将类型成员公开为脚本代码的选项。\r\n            \r\n","\r\n            Append '!' to non-nullable reference types.\r\n            ":"\r\n            附加'！'到不可用的参考类型。\r\n            \r\n"," number of items starting at ":" 从开始的项目数\r\n","The end line position.":"终点位置。\r\n","\r\n            Current usage:\r\n             (1) C# 'while', 'for', 'foreach' and 'do' loop statements\r\n             (2) VB 'While', 'ForTo', 'ForEach', 'Do While' and 'Do Until' loop statements\r\n            ":"\r\n            当前用法：\r\n             （1）c＃'while'，'for'，'foreach'和do'循环语句\r\n             （2）vb'while'，'forto'，'foreach'，'do while'和do do do do\r\n            \r\n","\r\n            Copies all live references from ":"\r\n            复制所有现场参考\r\n"," is wrapping a node.\r\n            ":" 正在包装节点。\r\n            \r\n","\r\n            True if the type is a record.\r\n            ":"\r\n            如果类型是记录，则为正确。\r\n            \r\n","\r\n            Marks the given symbol as fully analyzed for the unprocessed analyzers in the given analysisScope.\r\n            ":"\r\n            标记给定的分析仪中未加工分析仪的给定符号为完全分析。\r\n            \r\n"," branch.\r\n            ":" 分支。\r\n            \r\n"," in VB.\r\n            ":" 在VB中。\r\n            \r\n","\r\n            Appears when are iterator methods.\r\n            Exposed for ":"\r\n            出现何时是迭代方法。\r\n            暴露于\r\n","\r\n            When specified, the obsolete diagnostic's ":"\r\n            指定时，已过时的诊断\r\n","Stream from which the compilation's Win32 resources will be read (in RES format).\r\n             Null to indicate that there are none. The RES format begins with a null resource entry.\r\n             Note that the caller is responsible for disposing this stream, if provided.":"汇编的WIN32资源将被读取（以RES格式）。\r\n             null表示没有。 RES格式从零资源条目开始。\r\n             请注意，呼叫者负责处理此流（如果提供）。\r\n","\r\n            Represents a non-terminal node in the syntax tree. This is the language agnostic equivalent of ":"\r\n            代表语法树中的非末端节点。这是语言不可知论的\r\n"," of given ":" 给定\r\n","\r\n            Gets a value indicating whether the symbol is virtual.\r\n            ":"获取一个指示符号是否虚拟的值。\r\n            \r\n","Default value for the named argument.":"命名参数的默认值。\r\n","\r\n            Defines document access options.\r\n            ":"\r\n            定义文档访问选项。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified name, options, and debug port.\r\n            ":"\r\n            用指定名称，选项和调试端口初始化新的V8运行时实例。\r\n            \r\n","The name of a struct (structure in Visual Basic).":"结构的名称（在Visual Basic中的结构）。\r\n","If the compilation is a VisualBasic compilation.":"如果汇编为视觉汇编。\r\n","The type of value this step operates on":"该步骤的价值类型在\r\n","\r\n            Information decoded from ":"\r\n            信息解码\r\n","\r\n            Represents a parameter of a method or property.\r\n            ":"\r\n            表示方法或属性的参数。\r\n            \r\n","The full string representation of this node including its leading and trailing trivia.":"该节点的完整字符串表示，包括其领先和尾随的琐事。\r\n","MyBase":"mybase\r\n","\r\n            Optional aliases that can be used to refer to the compilation root namespace via extern alias directive.\r\n            ":"\r\n            可选的别名可用于通过外部别名指令来指代汇编根名称空间。\r\n            \r\n","\r\n            Gets or sets the V8 runtime's document settings.\r\n            ":"\r\n            获取或设置V8运行时的文档设置。\r\n            \r\n","\r\n            Sequence of absolute paths used to search for key files.\r\n            ":"\r\n            绝对路径的顺序用于搜索密钥文件。\r\n            \r\n","\r\n            Some managed languages may represent special information about the pointer type\r\n            as a custom modifier on either the pointer type or the element type, or\r\n            both.\r\n            ":"\r\n            一些托管语言可能代表有关指针类型的特殊信息\r\n            作为指针类型或元素类型的自定义修饰符，或\r\n            两个都。\r\n            \r\n","\r\n            Operation to be executed if the ":"\r\n            如果操作将执行\r\n","\r\n            This parameter has associated marshalling information.\r\n            ":"该参数具有关联的编组信息。\r\n            \r\n","\r\n            Represents the \"value\" parameter of the Set pseudo-method.\r\n            \r\n            NOTE: unlike index parameters, type of the value parameter must match \r\n            the actual element type.\r\n            ":"\r\n            表示集伪方法的“值”参数。\r\n            \r\n            注意：与索引参数不同，值参数的类型必须匹配\r\n            实际元素类型。\r\n            \r\n","\r\n            Abstract value domain for a ":"\r\n            抽象值域\r\n","\r\n            Current usage:\r\n             (1) C# object or collection initializer expression.\r\n             (2) VB object or collection initializer expression.\r\n            For example, object initializer \"{ X = x }\" within object creation \"new Class() { X = x }\" and\r\n            collection initializer \"{ x, y, 3 }\" within collection creation \"new MyList() { x, y, 3 }\".\r\n            ":"\r\n            当前用法：\r\n             （1）C＃对象或集合初始化器表达式。\r\n             （2）VB对象或收集初始化器表达式。\r\n            例如，对象初始化器“ {x = x}”在对象创建中“ new Class（）{x = x}”和\r\n            集合初始化器“ {x，y，3}”集合创建“新mylist（）{x，y，3}”。\r\n            \r\n"," information from TypeDef flags.\r\n            Returns 0 if the value is invalid.\r\n            ":" 来自Typedef标志的信息。\r\n            如果值无效，则返回0。\r\n            \r\n","\r\n            Operation visitor to flow the copy values across a given statement in a basic block.\r\n            ":"\r\n            操作访问者将复制值跨在基本块中的给定语句中。\r\n            \r\n"," is null, it will first try UTF8 and, if that fails, it will\r\n               try CodePage 1252. If CodePage 1252 is not available on the system, then it will try Latin1.\r\n            ":" 是无效的，它将首先尝试UTF8，如果失败，它将\r\n               尝试CodePage 1252.如果系统上没有CodePage 1252，则将尝试Latin1。\r\n            \r\n","A compilation that represents the original compilation with any additional, generated texts added to it.":"代表原始汇编的汇编，并添加了任何其他生成的文本。\r\n","\r\n            Given a ":"\r\n            给定\r\n","\r\n            If this method is a reduced extension method, returns the definition of extension\r\n            method from which this was reduced. Otherwise, returns null.\r\n            ":"\r\n            如果此方法是减少的扩展方法，请返回扩展的定义\r\n            从中减少的方法。否则，返回null。\r\n            \r\n","\r\n            Returns a path for particular location in source that is presented to the user. \r\n            ":"\r\n            返回向用户呈现的源中特定位置的路径。\r\n            \r\n","\r\n            Determines if current instance of ":"\r\n            确定当前实例是否\r\n","\r\n            Stores the results of implicit reference resolutions.\r\n            If ":"\r\n            存储隐式参考分辨率的结果。\r\n            如果\r\n","\r\n            An object specifying additional parameters for how miscellaneous symbols will be formatted.\r\n            ":"\r\n            指定其他参数的对象，以方式将如何格式格式化。\r\n            \r\n","\r\n            Gets or sets a soft limit for the size of the V8 runtime's heap.\r\n            ":"\r\n            获取或设置V8运行时堆大小的软限制。\r\n            \r\n","\r\n            Value evaluated if the Condition is false.\r\n            ":"\r\n            值评估条件是否为错误。\r\n            \r\n","\r\n            Represents a provider of a single value that can be transformed as part of constructing an execution pipeline\r\n            ":"\r\n            代表单个值的提供商，可以作为构建执行管道的一部分进行转换\r\n            \r\n","\r\n            Number of worker tasks processing compilation events and executing analyzer actions.\r\n            ":"\r\n            处理编译事件和执行分析仪操作的工人任务数量。\r\n            \r\n","\r\n            Expression.\r\n            ":"\r\n            表达。\r\n            \r\n","\r\n              Looks up a localized string similar to module.\r\n            ":"\r\n              查找类似于模块的本地化字符串。\r\n            \r\n","\r\n            Custom tags for the diagnostic.\r\n            ":"\r\n            诊断的自定义标签。\r\n            \r\n"," with a meaningful value.\r\n            ":" 具有有意义的价值。\r\n            \r\n","\r\n            Formats a symbol description as in a Visual Basic compiler short error message.\r\n            ":"\r\n            格式化一个符号描述，如视觉基本编译器中的简短错误消息。\r\n            \r\n","\r\n            Checks if the given method has the signature \"override Task DisposeCoreAsync(bool)\".\r\n            ":"\r\n            检查给定的方法是否具有签名“覆盖任务disposecoreasync（bool）”。\r\n            \r\n","\r\n            If the text was created from a stream or byte[] and canBeEmbedded argument was true, \r\n            this provides the embedded text blob that was precomputed using the original stream\r\n            or byte[]. The precomputation was required in that case so that the bytes written to\r\n            the PDB match the original bytes exactly (and match the checksum of the original \r\n            bytes). \r\n            ":"\r\n            如果文本是由流或字节[]创建的，并且canbeembedded的参数为真，则\r\n            这提供了使用原始流进行预先计算的嵌入式文本斑点\r\n            或字节[]。在这种情况下，需要预先计算，以便将字节写给\r\n            PDB与原始字节完全匹配（并匹配原始字节\r\n            字节）。\r\n            \r\n","\r\n            The number of unconsumed elements in the queue.\r\n            ":"\r\n            队列中无需元素的数量。\r\n            \r\n","contravariance":"逆向\r\n","\r\n            All metadata references -- references passed to the compilation\r\n            constructor as well as references specified via #r directives.\r\n            ":"\r\n            所有元数据参考 - 参考文献传递给了汇编\r\n            构造函数以及通过#R指令指定的参考。\r\n            \r\n","\r\n            Flag indicating if this is a dynamic invocation.\r\n            ":"\r\n            标志表示这是否是动态调用。\r\n            \r\n","\r\n            Imports the host type for the specified ":"\r\n            导入指定的主机类型\r\n",",\r\n            meaning that some trailing dimensions don't have the lower bound specified.\r\n            The most common case is all dimensions are zero bound - a default (Nothing in VB) array is returned in this case.\r\n            ":"，，，，\r\n            这意味着某些尾随尺寸没有指定的下限。\r\n            最常见的情况是所有维度为零 - 在这种情况下返回默认值（VB中的任何内容）数组。\r\n            \r\n"," will be produced\r\n            by formatting this string using the ":" 将产生\r\n            通过使用\r\n","\r\n            Absolute path of the documentation comment XML file or null if not specified.\r\n            ":"\r\n            文档注释的绝对路径XML文件或null如果未指定。\r\n            \r\n","\r\n            Returns the generic type of which this type is an instance.\r\n            Equivalent to Symbol.OriginalDefinition\r\n            ":"\r\n            返回此类型为实例的通用类型。\r\n            等效于符号。原始定义\r\n            \r\n"," when you are finished using the V8 runtime. ":" 使用V8运行时完成后。\r\n","\r\n            Returns the string representation of this token, not including its leading and trailing trivia.\r\n            ":"\r\n            返回这个令牌的字符串表示形式，不包括其领先和尾随的琐事。\r\n            \r\n","\r\n              Looks up a localized string similar to The rule set file has duplicate rules for '{0}' with differing actions '{1}' and '{2}'..\r\n            ":"\r\n              查找类似于规则集文件的本地化字符串具有“ {0}”的重复规则，其中有不同的操作'{1}'和'{2}'..\r\n            \r\n","\r\n            If:\r\n             * ":"\r\n            如果：\r\n             *\r\n"," for locals that should \r\n            definitely not bind in the debugger and ":" 对于当地人\r\n            绝对不会在调试器中绑定\r\n","A non-empty set of ranges for the change.":"变更的非空置范围。\r\n","\r\n            Type layout information.\r\n            ":"\r\n            键入布局信息。\r\n            \r\n","\r\n            Specified lower bounds for dimensions, by position. The length can be less than ":"\r\n            按位置指定的尺寸的下限。长度可能小于\r\n"," is null, returns null. \r\n            If path does not end with an extension, the new extension is appended to the path.\r\n            If extension is null, equivalent to ":" 为null，返回null。\r\n            如果路径不以扩展为结束，则将新扩展程序附加到路径上。\r\n            如果扩展为无效，则相当于\r\n","\r\n            Type is a module.\r\n            ":"\r\n            类型是一个模块。\r\n            \r\n","New C() From {1, 2, 3}":"{1，2，3}的新C（）\r\n","\r\n            Indicates whether a region completes normally. Return true if and only if the end of the\r\n            last statement in a region is reachable or the region contains no statements.\r\n            ":"\r\n            指示区域是否正常完成。及时返回true\r\n            区域中的最后一句话是可以到达的，或者该区域不包含任何陈述。\r\n            \r\n"," to minimize space usage (at the possible expense of time later).\r\n            The principal effect of this is to free cached information on events that have a ":" 为了最大程度地减少空间使用率（以稍后的时间为代价）。\r\n            这样做的主要效果是免费有关具有的事件的缓存信息\r\n","\r\n            Represents a deconstruction assignment expression.\r\n            ":"\r\n            代表解构分配表达式。\r\n            \r\n","True if the function successfully returns the type and signature.":"如果功能成功返回类型和签名，则为true。\r\n",", the V8 runtime may format script code before\r\n            executing or compiling it. This is intended to facilitate interactive debugging. The\r\n            formatting operation currently includes stripping leading and trailing blank lines and\r\n            removing global indentation.\r\n            ":"，V8运行时可能会格式化脚本代码\r\n            执行或编译。这旨在促进交互式调试。这\r\n            格式化操作当前包括剥离领先和尾随的空白线和\r\n            消除全球凹痕。\r\n            \r\n","Variable declaration":"可变声明\r\n","\r\n            This is done after serializing method debug info to ensure that we embed all requested\r\n            text even if there are no corresponding sequence points.\r\n            ":"\r\n            这是在序列化方法调试信息之后完成的，以确保我们嵌入所有请求\r\n            文本即使没有相应的序列点。\r\n            \r\n"," about a ":" 关于\r\n",".\r\n            Depending on analyzers' behavior, returned diagnostics can have locations outside the tree,\r\n            and some diagnostics that would be reported for the tree by an analysis of the complete compilation\r\n            can be absent.\r\n            ":"。\r\n            根据分析仪的行为，返回的诊断可以在树外面有位置，\r\n            以及通过对完整汇编的分析将树报告的一些诊断\r\n            可能不存在。\r\n            \r\n"," which contains all elements of ":" 其中包含所有元素\r\n","\r\n            This function is part of the fast track for integer floating point strings.  \r\n            It takes an integer stored as an array of bytes (lsb first) and converts the value into its FloatingType  \r\n            representation, storing the bits into \"result\".  If the value is not  \r\n            representable, +/-infinity is stored and overflow is reported (since this  \r\n            function only deals with integers, underflow is impossible).  \r\n            ":"\r\n            此功能是整数浮点字符串快速轨道的一部分。\r\n            它需要一个整数存储为一个字节数组（LSB首先），并将值转换为浮动类型\r\n            表示，将位存储到“结果”中。如果值不是\r\n            可代表的，+/-无限的存储并报告了溢出（因为这是\r\n            功能仅处理整数，下流是不可能的）。\r\n            \r\n","The nodes to remove.":"节点要删除。\r\n","\r\n            Computes value / 2^shift, then rounds the result according to the current  \r\n            rounding mode.  By the time we call this function, we will already have  \r\n            discarded most digits.  The caller must pass true for has_zero_tail if  \r\n            all discarded bits were zeroes.  \r\n            ":"\r\n            计算值 / 2^移位，然后根据当前\r\n            舍入模式。当我们调用此功能时，我们已经拥有\r\n            丢弃了大多数数字。呼叫者必须通过true for has_zero_tail如果\r\n            所有丢弃的位均为零。\r\n            \r\n","\r\n            Writes a SByte value to the stream.\r\n            ":"\r\n            将SBYTE值写入流。\r\n            \r\n","\r\n            Resolves references to XML files specified in the source.\r\n            ":"\r\n            解决对源中指定的XML文件的引用。\r\n            \r\n","\r\n             This indicates that friend access should be granted for the purposes of error recovery,\r\n             but the program is wrong.\r\n            \r\n             That's because this indicates that a strong-named assembly has referred to a weak-named assembly \r\n             which has extended friend access to the strong-named assembly. This will ultimately \r\n             result in an error because strong-named assemblies may not refer to weak-named assemblies. \r\n             In Roslyn we give a new error, CS7029, before emit time. In the dev10 compiler we error at \r\n             emit time.\r\n             ":"\r\n             这表明应出于错误恢复的目的授予朋友访问\r\n             但是程序是错误的。\r\n            \r\n             这是因为这表明一个强名的组装已提及一个弱势组装\r\n             它扩大了朋友的访问权限。最终将\r\n             导致错误，因为强名的组件可能不会指弱名的组件。\r\n             在罗斯林（Roslyn）中，我们在发射时间之前给出了新的错误CS7029。在Dev10编译器中，我们错误\r\n             发出时间。\r\n             \r\n","\r\n            A single bit.\r\n            ":"\r\n            一位。\r\n            \r\n","\r\n            Invokes the script object.\r\n            ":"\r\n            调用脚本对象。\r\n            \r\n","\r\n            treating two consecutive separators as if they were a single non-separating character.\r\n            E.g. \"a,,b,c\" split on ',' yields [\"a,b\", \"c\"].\r\n            ":"\r\n            将两个连续的分离器视为单一的非分离特征。\r\n            例如。 “ a ,, b，c”在'，''中分开[a，b“，” c”]。\r\n            \r\n","\r\n            The base class for representing command line arguments to a\r\n            ":"\r\n            用于代表命令行参数到一个的基类\r\n            \r\n",". This receiver will have its ":"。该接收器将有其\r\n"," are considered.\r\n            ":" 被考虑。\r\n            \r\n","\r\n            Should return the synthesized dynamic attributes of the local definition if any. Else null.\r\n            ":"\r\n            如果有的话，应返回本地定义的合成动态属性。其他空。\r\n            \r\n","The original span of the changed text.":"更改文本的原始跨度。\r\n","\r\n            Additional conditional supplied for loop in error cases, which is ignored by the compiler.\r\n            For example, for VB 'Do While' or 'Do Until' loop with syntax errors where both the top and bottom conditions are provided.\r\n            The top condition is preferred and exposed as ":"\r\n            在错误情况下为循环提供了其他条件，该循环被编译器忽略了。\r\n            例如，对于VB“执行”或“执行”或“执行”，直到'循环使用语法错误，其中都提供了顶部和底部条件。\r\n            最佳条件是优选的，并且暴露为\r\n","nameof the resource that needs to be localized.":"名称需要本地化的资源。\r\n","\r\n            Returns a full path to the include file. Relative paths are expanded relative to the current rule set file.\r\n            ":"\r\n            返回到包含文件的完整路径。相对路径相对于当前规则集文件扩展。\r\n            \r\n","This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n            change it in the future.":"该界面保留用于通过其关联的API实现。我们保留权利\r\n            将来更改它。\r\n","The type of value that this source provides access to":"此源可访问的价值类型\r\n","\r\n            Checks if a given symbol implements an interface member implicitly\r\n            ":"\r\n            检查给定符号是否暗中实现接口成员\r\n            \r\n"," are considered\r\n            ":" 被考虑\r\n            \r\n","\r\n            This function is similar to C#'s\r\n            ":"\r\n            此功能类似于C＃的S\r\n            \r\n","\r\n            The INamedTypeSymbol for the .NET System.Object type, which could have a TypeKind of\r\n            Error if there was no COR Library in this Compilation.\r\n            ":"\r\n            .NET System.Object类型的InamedTypeSymbol\r\n            错误，如果此汇编中没有COR库。\r\n            \r\n","\r\n            This call represents the main generation step. It is called after a ":"\r\n            此呼叫代表主要一代步骤。它被称为\r\n","\r\n            While resolving the name, consider only types with this arity.\r\n            (-1) means allow any arity.\r\n            If forcedArity >= 0 and useCLSCompliantNameArityEncoding, lookup may\r\n            fail because forcedArity doesn't match the one encoded in the name.\r\n            ":"\r\n            在解决名称的同时，仅考虑使用此差异的类型。\r\n            （-1）意味着允许任何Arity。\r\n            如果自由度> = 0和useclscompliantnamearityCoding，则查找可能\r\n            失败是因为Aduccearity与名称中编码的一个不匹配。\r\n            \r\n","\r\n            This method must be called only when some decoded data will be stored into it subsequently.\r\n            ":"\r\n            仅当某些解码数据随后将其存储到其中时，才必须调用此方法。\r\n            \r\n","\r\n              Looks up a localized string similar to Name cannot start with whitespace..\r\n            ":"\r\n              查找类似于名称的本地化字符串不能从空格开始。\r\n            \r\n"," implementation of this method always returns ":" 该方法的实现总是返回\r\n","\r\n             Compares descriptors by the values that we write to the log and nothing else.\r\n            \r\n             We cannot just use ":"\r\n             通过我们写入日志的值比较描述符，而没有其他内容。\r\n            \r\n             我们不能只使用\r\n"," instances across metadata references will result in better performance.\r\n             \r\n             The calling ":" 跨元数据参考的实例将带来更好的性能。\r\n             \r\n             呼唤\r\n","\r\n            Itanium compiles the assembly to be run by the 64-bit common language runtime on a computer with an Itanium processor.\r\n            ":"\r\n            ITANIUM编译由ITANIUM处理器的计算机上的64位通用语言运行时运行的组件。\r\n            \r\n","\r\n            An .exe that can run in an app container.\r\n            ":"\r\n            可以在应用程序容器中运行的.exe。\r\n            \r\n","\r\n            This method may be called more than once for a given host object. The object may be\r\n            exposed in multiple script engines or many times in one script engine. Implementers\r\n            should avoid expensive operations within this method, or cache the results of such\r\n            operations for efficient retrieval during subsequent invocations.\r\n            ":"\r\n            对于给定的主机对象，此方法可能不止一次调用。该对象可能是\r\n            在多个脚本引擎中暴露在一个脚本引擎中多次暴露。实施者\r\n            应避免在此方法中昂贵的操作，或缓存此类结果\r\n            在随后的调用期间有效检索的操作。\r\n            \r\n","\r\n            must be null. If ":"\r\n            必须为空。如果\r\n","\r\n            Gets the dependency table.\r\n            ":"\r\n            获取依赖项表。\r\n            \r\n","\r\n            Returns the overridden property, or null.\r\n            ":"\r\n            返回被覆盖的属性或空属性。\r\n            \r\n","default(Enumerator)":"默认（枚举器）\r\n","The array of read tlogs":"读取tlogs的数组\r\n","\r\n            Returns true if this local is a ref-local.\r\n            ":"\r\n            如果此局部是ref-legain，则返回true。\r\n            \r\n","\r\n            Marks the given symbol end actions as fully executed for the given analyzer.\r\n            ":"\r\n            标记给定的符号最终操作是给定分析仪的完全执行的。\r\n            \r\n","The value to look up.":"查找的价值。\r\n","The category of the diagnostic. For diagnostics generated by the compiler, the category will be \"Compiler\".":"诊断类别。对于编译器生成的诊断，该类别将是“编译器”。\r\n","\r\n            Although this path is absolute it may not be normalized. That is, it may contain \"..\" and \".\" in the middle. \r\n            ":"\r\n            尽管此路径是绝对的，但可能无法归一化。也就是说，它可能包含“ ..”和“”。在中间。\r\n            \r\n","\r\n            Read a SByte value from the stream. This value must have been written using ":"\r\n            从流中读取SBYTE值。该值必须使用\r\n","The result of combining ":"结合的结果\r\n","\r\n            Represents a document access configuration.\r\n            ":"\r\n            表示文档访问配置。\r\n            \r\n","\r\n            Provider to retrieve options for particular syntax trees.\r\n            ":"\r\n            提供者可以检索特定语法树的选项。\r\n            \r\n"," to get a reference to it.\r\n            to get a reference to it.\r\n            ":" 获取参考。\r\n            获取参考。\r\n            \r\n","\r\n            Determines whether this token has any trailing trivia.\r\n            ":"\r\n            确定这个令牌是否有任何拖延琐事。\r\n            \r\n","\r\n            Local variables that store upper bound of multi-dimensional array, for each dimension (C#, VB?).\r\n            ":"\r\n            对于每个维度（C＃，VB？），存储多维数组上的上限的本地变量。\r\n            \r\n","\r\n            Current usage:\r\n             (1) VB raise event statement.\r\n            ":"\r\n            当前用法：\r\n             （1）VB提高活动声明。\r\n            \r\n","\r\n            Returns the list of custom modifiers, if any, associated with the returned value. \r\n            ":"\r\n            返回与返回值关联的自定义修饰符列表。\r\n            \r\n","The FullWidth property returns the same value as FullSpan.Length, but is\r\n            somewhat more efficient.":"FullWidth属性返回与FullSpan.length相同的值，但\r\n            效率更高。\r\n","\r\n            Gets the raw data blobs that comprise the written PDB content so far.\r\n            ":"\r\n            获取到目前为止包含书面PDB内容的原始数据斑点。\r\n            \r\n"," overlaps this span. Two spans are considered to overlap \r\n            if they have positions in common and neither is empty. Empty spans do not overlap with any \r\n            other span.\r\n            ":" 重叠这个跨度。两个跨度被认为是重叠的\r\n            如果他们有共同的位置，并且都不是空的。空跨跨不与任何重叠\r\n            其他跨度。\r\n            \r\n","\r\n            The highest version of the interface available in Microsoft.DiaSymReader.Native.\r\n            ":"\r\n            Microsoft.diasymreader.native中可用的最高版本。\r\n            \r\n","\r\n              Looks up a localized string similar to The compilation references multiple assemblies whose versions only differ in auto-generated build and/or revision numbers..\r\n            ":"查找类似于汇编引用的局部字符串，其版本仅在自动生成的构建和/或修订号上有所不同。\r\n            \r\n","File name pattern. May contain wildcards '*' (matches zero or more characters) and '?' (matches any character).":"文件名模式。可能包含通配符'*'（匹配零或更多字符）和'？' （匹配任何字符）。\r\n","\r\n            Returns an array of AssemblySymbol objects corresponding to assemblies referenced \r\n            by this module. Items at the same position from ReferencedAssemblies and \r\n            from ReferencedAssemblySymbols correspond to each other.\r\n            ":"\r\n            返回与引用的汇编相对应的汇编符号对象\r\n            通过此模块。参考杂志和相同位置的项目\r\n            从引用Assemblysymbols相互对应。\r\n            \r\n","A set of ranges for the change.":"一组更改的范围。\r\n","\r\n            The calling convention enum of the method symbol.\r\n            ":"\r\n            方法符号的调用惯例。\r\n            \r\n","\r\n            Determine if the given namespace and type names combine to produce the given fully qualified name.\r\n            ":"\r\n            确定给定的名称空间和类型名称是否合并以产生给定的完全合格的名称。\r\n            \r\n","\r\n            Returns the full string representation of the tokens in this list including \r\n            the first token's leading trivia and the last token's trailing trivia.\r\n            ":"\r\n            返回此列表中令牌的完整字符串表示形式，包括\r\n            第一个代币的主要琐事和最后一个令牌的拖尾琐事。\r\n            \r\n","\r\n            Represents a C# this or base expression, or a VB Me, MyClass, or MyBase expression.\r\n            ":"\r\n            代表c＃this或base表达式，或者是vb me，myclass或mybase表达式。\r\n            \r\n","\r\n            Body of the with.\r\n            ":"\r\n            带有的身体。\r\n            \r\n"," to the compilation that will be available during subsequent phases\r\n            ":" 在随后的阶段中可用的汇编\r\n            \r\n","\r\n            Gets a location for the specified text span.\r\n            ":"\r\n            获取指定文本跨度的位置。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# NoPia interface instance creation expression.\r\n             (2) VB NoPia interface instance creation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃NOPIA接口实例创建表达式。\r\n             （2）VB NOPIA接口实例创建表达式。\r\n            \r\n","s of sections. Specified by editorconfig to\r\n            be a case-sensitive comparison.\r\n            ":"部分。由EditorConfig指定为\r\n            对病例敏感的比较。\r\n            \r\n","\r\n            Lookup member declaration in well known type used by this Compilation.\r\n            ":"\r\n            查找成员声明以本汇编使用的众所周知的类型。\r\n            \r\n","\r\n            Type for which to test.\r\n            ":"\r\n            要测试的类型。\r\n            \r\n","\r\n            Represents a for to loop with loop control variable and initial, limit and step values for the control variable.\r\n            ":"\r\n            表示控制变量的循环控制变量和初始，限制和步骤值的循环。\r\n            \r\n","\r\n            Returns an existing open stream or null if no stream has been open.\r\n            ":"\r\n            如果未打开流，则返回现有的开放流或空。\r\n            \r\n","\r\n            Do a pass to eliminate blocks without statements that can be merged with predecessor(s).\r\n            Returns true if any blocks were eliminated\r\n            ":"\r\n            进行通过以消除块，而无需与前身合并的语句。\r\n            如果取消任何块，则返回真实\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# member reference expression.\r\n             (2) VB member reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃成员参考表达式。\r\n             （2）VB成员参考表达式。\r\n            \r\n","\r\n            Once tracked operations have been completed then we need to compact / finalize the Tlogs based\r\n            on the success of the tracked execution. If it fails, then we clean out the TLogs. If it succeeds\r\n            then we clean temporary files from the TLogs and re-write them.\r\n            ":"\r\n            一旦完成了跟踪操作，我们就需要紧凑 /最终确定基于TLOGS\r\n            关于跟踪执行的成功。如果失败，我们将清理Tlogs。如果成功\r\n            然后，我们从Tlogs清理临时文件，然后重新编写它们。\r\n            \r\n","\r\n            The line is located before any #line directive and there is at least one #line directive present in this syntax tree.\r\n            This enum value is used for C# only to enable the consumer to define how to interpret the lines before the first\r\n            line directive. \r\n            ":"\r\n            该行位于任何#line指令之前，此语法树中至少有一个#line指令。\r\n            此枚举值用于C＃仅使消费者定义如何在第一个之前解释行\r\n            线指令。\r\n            \r\n","The new value to insert if the slot is unoccupied.":"如果插槽未占用，则插入插槽的新值。\r\n","A name for the new global script item that will represent the type.":"将代表类型的新全局脚本项目的名称。\r\n","BeginInvoke":"开始\r\n","\r\n            True if the reference type constraint (":"\r\n            如果参考类型约束（\r\n","\r\n            To sign the output supply either one of ":"要签署输出电源之一\r\n","\r\n            Returns true if writing full metadata, false if writing delta.\r\n            ":"\r\n            如果编写完整的元数据，则返回为true，如果编写delta，则返回false。\r\n            \r\n"," is upper case, then this returns its Unicode lower case equivalent. Otherwise, ":" 是上案例，然后返回其Unicode较低的情况。否则，\r\n"," class with the specified text and options.\r\n            ":" 包括指定文本和选项的课程。\r\n            \r\n","\r\n            Method used to compare ConstantValues for switch statement case labels\r\n            ":"\r\n            用于比较开关语句标签的constantValues的方法\r\n            \r\n","\r\n            Gets the view's offset within the underlying ":"\r\n            在基础内获取视图的偏移\r\n","\r\n            True if the compilation successfully produced an executable.\r\n            If false then the diagnostics should include at least one error diagnostic\r\n            indicating the cause of the failure.\r\n            ":"\r\n            如果汇编成功产生了可执行文件，则为正确。\r\n            如果false，则诊断应至少包括一个错误诊断\r\n            指示失败的原因。\r\n            \r\n"," may be called any number of times\r\n             until the returned ":" 可以被称为任何次\r\n             直到返回\r\n","A new V8 script engine instance.":"一个新的V8脚本引擎实例。\r\n","\r\n            Removes a property without checking whether the ":"\r\n            删除财产，而无需检查是否是否\r\n","\r\n            Returns true if this method is an async method\r\n            ":"\r\n            如果此方法是异步方法，则返回true\r\n            \r\n","\r\n                    This includes all .NET types not mentioned above, including value types (enums,\r\n                    structs, etc.), and instances of all other classes. Script code can only create\r\n                    these objects by invoking a host method or constructor. They are returned to\r\n                    the host in their native .NET form.\r\n                    ":"\r\n                    这包括上面未提及的所有.NET类型，包括价值类型（枚举，，\r\n                    结构等）以及所有其他类别的实例。脚本代码只能创建\r\n                    这些对象通过调用主机方法或构造函数。他们回到\r\n                    主机以其本地.NET形式。\r\n                    \r\n","\r\n            CONSIDER: custom modifiers are part of the public API, so we might want to move this to SymbolDisplayMemberOptions.\r\n            ":"\r\n            考虑：自定义修饰符是公共API的一部分，因此我们可能希望将其移至SymboldisPlayMemberOptions。\r\n            \r\n"," positions as opposed to a position and length.\r\n            \r\n            The returned TextSpan contains the range with ":" 位置而非位置和长度。\r\n            \r\n            返回的textspan包含范围\r\n","Invalid size of public key token.":"公共钥匙令牌的大小无效。\r\n",", and can compute the effective analyzer options for a given source file. This is used to\r\n            collect all the ":"，并且可以计算给定源文件的有效分析仪选项。这是习惯的\r\n            收集所有\r\n"," if the encoding is unspecified.\r\n            ":" 如果未指定编码。\r\n            \r\n","\r\n            Creates a compiled script with an associated document name.\r\n            ":"\r\n            创建一个具有关联文档名称的编译脚本。\r\n            \r\n","\r\n            Returns \"foo\" for path \"foo.\".\r\n            Returns \"foo..\" for path \"foo...\".\r\n            ":"\r\n            返回“ foo”路径“ foo”。\r\n            返回“ foo ..” for路径“ foo ...”。\r\n            \r\n","\r\n            The list of custom modifiers, if any, associated with the ref modifier. \r\n            ":"\r\n            与REF修饰符关联的自定义修饰符列表（如果有）。\r\n            \r\n",". Note that such a value will always\r\n            fail equality comparison with JavaScript's\r\n            ":"。请注意，这样的值将永远\r\n            与JavaScript的平等比较失败\r\n            \r\n","\r\n            An event for each declaration in the program (namespace, type, method, field, parameter, etc).\r\n            Note that some symbols may have multiple declarations (namespaces, partial types) and may therefore\r\n            have multiple events.\r\n            ":"\r\n            程序中每个声明的事件（名称空间，类型，方法，字段，参数等）。\r\n            请注意，某些符号可能具有多个声明（名称空间，部分类型），因此可以\r\n            有多个事件。\r\n            \r\n",".\r\n            Allowed option values: Fields from ":"。\r\n            允许的选项值：来自\r\n","True if the list contains any tokens.":"如果列表包含任何令牌，则为正确。\r\n"," can be accessed from this bag.\r\n            ":" 可以从这个袋子访问。\r\n            \r\n","\r\n            The field does not have to be serialized when its containing instance is serialized.\r\n            ":"\r\n            当字段包含实例被序列化时，该字段不必序列化。\r\n            \r\n","Indicates an explicit MyClass expression.":"指示明确的myclass表达式。\r\n","\r\n                    This represents JavaScript's\r\n                    ":"\r\n                    这代表JavaScript的\r\n                    \r\n","\r\n            Flag indicating whether analyzer diagnostics with ":"\r\n            指示分析仪诊断的标志是否具有\r\n","A cancellation token that can be used to cancel the\r\n            process of obtaining the diagnostics.":"取消令牌，可用于取消\r\n            获得诊断的过程。\r\n"," is nullable, then conversion is applied to an\r\n            unwrapped ":" 无效，然后将转换应用于\r\n            解开\r\n","delegate":"代表\r\n","\r\n            Attempts to get the syntax node to report diagnostic for this abstract location \r\n            Returns null if the location is owned by another method invoked through interprocedural analysis.\r\n            ":"\r\n            尝试获取语法节点以报告此抽象位置的诊断\r\n            返回零，如果该位置是通过概要分析所调用的另一种方法所有的位置。\r\n            \r\n","\r\n            Properties imported from metadata can explicitly implement more than one event.\r\n            ":"\r\n            从元数据中导入的属性可以明确实施多个事件。\r\n            \r\n"," classes.\r\n            The SarifV2ErrorLogger produces the standardized SARIF v2.1.0. The SarifV1ErrorLogger produces\r\n            the non-standardized SARIF v1.0.0. It is retained (and in fact, is retained as the default)\r\n            for compatibility with previous versions of the compiler. Customers who want to integrate\r\n            with standardized SARIF tooling should specify /errorlog:logFilePath;version=2 on the command\r\n            line to produce SARIF v2.1.0.\r\n            ":" 课程。\r\n            SARIFV2ERRLOGGER生产标准化的SARIF v2.1.0。 Sarifv1errlogger生产\r\n            非标准化的Sarif v1.0.0。保留它（实际上，保留为默认值）\r\n            与以前版本的编译器兼容。想要集成的客户\r\n            使用标准化的SARIF工具应指定 /errorlog：logFilePath; propers = 2命令上\r\n            生产SARIF v2.1.0的行。\r\n            \r\n"," that have no explicit ancestor in\r\n            the operation tree rooted at ":" 没有明确的祖先\r\n            操作树扎根\r\n","Type of the expected literal value.":"预期字面价值的类型。\r\n","\r\n            Cache with a fixed size that evicts the least recently used members.\r\n            Thread-safe.\r\n            ":"\r\n            固定尺寸的缓存驱逐最近使用的成员。\r\n            线程安全。\r\n            \r\n","\r\n            Tool version identifier used for error logging.\r\n            ":"\r\n            工具版本标识符用于错误记录。\r\n            \r\n",", while ":"， 尽管\r\n","\r\n            Indicates case x in C# or Case x in VB.\r\n            ":"\r\n            指示C＃中的情况X或VB中的Case X。\r\n            \r\n","\r\n            Subsystem version: Windows XP \r\n            ":"\r\n            子系统版本：Windows XP\r\n            \r\n","\r\n            A set of utilities for converting from a decimal floating-point literal string to its IEEE float\r\n            or double representation, which considers all digits significant and correctly rounds according to\r\n            the IEEE round-to-nearest-ties-to-even mode. This code does not support a leading sign character,\r\n            as that is not part of the C# or VB floating-point literal lexical syntax.\r\n            \r\n            If you change this code, please run the set of long-running random tests in the solution\r\n            RandomRealParserTests.sln. That solution is not included in Roslyn.sln as it is Windows-specific.\r\n            ":"\r\n            一组用于从小数浮点字面字符串转换为其IEEE float的实用程序\r\n            或双重表示，它考虑了所有数字的重要数字，并且根据\r\n            IEEE往返最连接模式。此代码不支持主符号字符，\r\n            因为那不是C＃或VB浮点字面词法语法的一部分。\r\n            \r\n            如果更改此代码，请在解决方案中运行一组长期运行的随机测试\r\n            RandomRealParsertests.sln。该解决方案不包含在Roslyn.sln中，因为它特定于Windows。\r\n            \r\n","\r\n            Local variable that stores value of an expression consumed by a subsequent conditional branch instruction that might jump across PDB sequence points.\r\n            The value needs to be preserved when remapping the IL offset from old method body to new method body during EnC.\r\n            A hidden sequence point also needs to be inserted at the offset where this variable is loaded to be consumed by the branch instruction.\r\n            (VB, C#).\r\n            ":"\r\n            局部变量存储通过随后的条件分支指令所消耗的表达式的值，该分支指令可能会跳过PDB序列点。\r\n            在ENC期间，将IL偏移从旧方法主体到新方法主体时，需要保留该值。\r\n            还需要在偏移量上插入一个隐藏的序列点，在该偏移量中，该变量被加载以被分支指令消耗。\r\n            （VB，C＃）。\r\n            \r\n","\r\n            Represents cloning of an object instance.\r\n            ":"\r\n            表示对象实例的克隆。\r\n            \r\n","The tokens to insert.":"令牌要插入。\r\n","\r\n            Get options for a given ":"\r\n            获取给定的选项\r\n","The name of the symbol to find. If null is specified then symbols\r\n             with any names are returned.":"要查找的符号的名称。如果指定了空，则符号\r\n             任何名称都将返回。\r\n","A new compilation.":"新的汇编。\r\n","\r\n            The property that has been specialized to obtain this property. When the containing type is an instance of type which is itself a specialized member (i.e. it is a nested\r\n            type of a generic type instance), then the unspecialized member refers to a member from the unspecialized containing type. (I.e. the unspecialized member always\r\n            corresponds to a definition that is not obtained via specialization.)\r\n            ":"\r\n            专门用于获得此属性的财产。当包含类型是类型的实例时，它本身就是一个专业成员（即它是嵌套的\r\n            类型的通用类型实例），然后，无专业成员是指未涉及类型的成员。 （即始终不专业成员\r\n            对应于未通过专业获得的定义。）\r\n            \r\n","\r\n            Enables or disables automatic host variable tunneling for by-reference arguments to script functions and delegates.\r\n            ":"\r\n            启用或禁用自动主机变量隧穿，以将脚本函数和委托的征用参数。\r\n            \r\n","\r\n            Does name include arity mangling suffix.\r\n            ":"\r\n            名称包括Arity Mangling后缀。\r\n            \r\n","Optional delegate to add categorized non-local analyzer diagnostics.":"可选的代表以添加分类的非本地分析仪诊断。\r\n","A name for the new global script item that will represent the object.":"将代表对象的新全局脚本项目的名称。\r\n",", or\r\n            - dependencies as a ":"， 或者\r\n             - 依赖关系\r\n","whether there are nonzero digits after the decimal":"小数后是否有非零数字\r\n","\r\n            Scopes of state machine hoisted local variables.\r\n            ":"\r\n            状态机的范围吊起本地变量。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid culture name: '{0}'.\r\n            ":"\r\n              查找类似于无效文化名称的本地化字符串：'{0}'。\r\n            \r\n","\r\n            Condition of the if statement. For C# there is naturally one clause per if, but for VB If statements with multiple clauses are rewritten to have only one.\r\n            ":"\r\n            if语句的条件。对于C＃，自然有一个条款，但是对于VB，如果有多个子句的语句仅重写一个条款。\r\n            \r\n","\r\n            Get file name from path.\r\n            ":"\r\n            从路径获取文件名。\r\n            \r\n","\r\n            Indicates that the type is ":"表示类型是\r\n","\r\n            True if the input has been redirected from the standard input stream.\r\n            ":"\r\n            如果输入已从标准输入流进行了重定向，则为true。\r\n            \r\n","\r\n            Provides an abstract representation of a document.\r\n            ":"\r\n            提供文档的抽象表示。\r\n            \r\n","The fully qualified name of the host type to import.":"主机类型的完全合格名称要导入。\r\n"," if the property was successfully found and removed, ":" 如果该物业成功找到并删除，\r\n","\r\n            C# and VB. Encodes EnC lambda map.\r\n            See https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#EditAndContinueLambdaAndClosureMap.\r\n            ":"\r\n            C＃和VB。编码ENC LAMBDA地图。\r\n            请参阅https://github.com/dotnet/corefx/blob/master/src/system.reflection.metadata/specs/portablepdb-metadata.md#editandandandcontinandcontinelambdaandclosuremap。\r\n            \r\n","\r\n            Returns a flag indicating whether this symbol has at least one applied/inherited conditional attribute.\r\n            ":"\r\n            返回一个标志，指示此符号是否至少具有一个应用/继承的条件属性。\r\n            \r\n","\r\n             The chunk size to be used by the underlying BlobBuilder.\r\n             ":"\r\n             底层Blobbuilder要使用的块大小。\r\n             \r\n"," in C#.\r\n            ":" 在C＃中。\r\n            \r\n","\r\n            Get unary operand kind.\r\n            ":"\r\n            获得一元操作数。\r\n            \r\n","The comparer to determine if the two arrays are equal.":"比较确定两个阵列是否相等。\r\n"," and ending after ":" 并在之后结束\r\n"," local variable. This region will only be executed\r\n            the first time a function is called.\r\n            ":" 本地变量。该区域仅执行\r\n            第一次调用函数。\r\n            \r\n","\r\n            objects. This conversion is bidirectional and lossy. A ":"\r\n            对象。这种转换是双向的和有损的。一个\r\n","\r\n            Get the text prefix (e.g., \"CS\" for C#) used on error messages.\r\n            ":"\r\n            获取错误消息上使用的文本前缀（例如，用于C＃的“ CS”）。\r\n            \r\n","\r\n            Get maximum char count needed to decode the entire stream.\r\n            ":"\r\n            获取解码整个流所需的最大字符计数。\r\n            \r\n","\r\n              Looks up a localized string similar to Windows PDB writer doesn't support SourceLink feature: '{0}'.\r\n            ":"\r\n              查找类似于Windows PDB Writer的本地化字符串不支持Sourcelink功能：'{0}'。\r\n            \r\n"," from text in a string.\r\n            ":" 从字符串中的文字。\r\n            \r\n","\r\n            Name of the type without namespace prefix and without generic arity mangling.\r\n            ":"\r\n            没有名称空间前缀的类型名称，并且没有通用的Arity Mangling。\r\n            \r\n","\r\n            \".\\file\"\r\n            ":"\r\n            \".\\文件\"\r\n            \r\n","\r\n            The name assigned to the UnsignedLeftShift operator.\r\n            ":"\r\n            分配给unsedledleftshift运算符的名称。\r\n            \r\n","When an invalid module name is encountered.":"当遇到无效的模块名称时。\r\n","\r\n            Walks down consequtive conversion operations until an operand is reached that isn't a conversion operation.\r\n            ":"\r\n            沿着连接转换操作向下走，直到达到操作数而不是转换操作为止。\r\n            \r\n","\r\n            Indicates the coupling to unique named types through parameters, local variables, return types, method calls,\r\n            generic or template instantiations, base classes, interface implementations, fields defined on external types, and attribute decoration.\r\n            Good software design dictates that types and methods should have high cohesion and low coupling.\r\n            High coupling indicates a design that is difficult to reuse and maintain because of its many interdependencies on other types.\r\n            ":"\r\n            通过参数，本地变量，返回类型，方法调用，指示与唯一命名类型的耦合\r\n            通用或模板实例，基类，接口实现，外部类型定义的字段以及属性装饰。\r\n            良好的软件设计决定类型和方法应具有较高的内聚和低耦合。\r\n            高耦合表示由于其在其他类型上的许多相互依赖性而难以再利用和维护的设计。\r\n            \r\n","\r\n            True if the assembly identity has a strong name, ie. either a full public key or a token.\r\n            ":"\r\n            如果汇编身份有一个很强的名称，则是真的。完整的公钥或令牌。\r\n            \r\n","\r\n            Provides optional script-callable utility functions. This extended version allows script\r\n            code to import host types.\r\n            ":"\r\n            提供可选的脚本可爱的实用程序功能。这个扩展版本允许脚本\r\n            导入主机类型的代码。\r\n            \r\n","\r\n            The node that contains this node in its ":"\r\n            包含此节点的节点\r\n","\r\n            Array to be indexed.\r\n            ":"\r\n            数组要索引。\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified name and options.\r\n            ":"\r\n            初始化具有指定名称和选项的新的V8脚本引擎实例。\r\n            \r\n",".\r\n            \r\n            Otherwise, this returns ":"。\r\n            \r\n            否则，这将返回\r\n","\r\n            \".ctor\" instead of \"Goo\"\r\n            ":"\r\n            “ .ctor”，而不是“粘”\r\n            \r\n","\r\n            The Int32 value 8\r\n            ":"\r\n            INT32值8\r\n            \r\n","will":"将要\r\n","\r\n            This method will be called once during Emit at the time the Compilation needs \r\n            to create a stream for writing. It will not be called in the case of\r\n            user errors in code. Shall not be called when ":"\r\n            在汇编需求时发射期间将调用此方法一次\r\n            创建用于写作的流。在\r\n            代码中的用户错误。不得在\r\n","The specified syntax tree.":"指定的语法树。\r\n","\r\n            The symbol that was referred to by the identifier, if any. \r\n            ":"\r\n            标识符（如果有）所指的符号。\r\n            \r\n","\r\n              Looks up a localized string similar to {0}.GetMetadata() must return an instance of {1}..\r\n            ":"\r\n              查找类似于{0} .getMetadata（）的本地化字符串必须返回{1} ..的实例。\r\n            \r\n","\r\n               Looks up a localized string similar to Analyzer driver threw the following exception:\r\n            '{0}'..\r\n             ":"\r\n               查找类似于Analyzer驱动程序的局部字符串，抛出了以下例外：\r\n            '{0}'..\r\n             \r\n","\r\n            Non-empty tables stored in an external metadata table stream that might be referenced from the metadata table stream being emitted.\r\n            ":"\r\n            存储在外部元数据表流中的非空表可以从发射的元数据表流中引用。\r\n            \r\n","\r\n            Indicates that the diagnostic is related to an exception thrown by a ":"\r\n            表明诊断与一个例外有关\r\n","\r\n            The set of local variables that are read inside a region.\r\n            ":"\r\n            在区域内读取的局部变量集。\r\n            \r\n","\r\n            This method is similar to ":"\r\n            此方法类似于\r\n","\r\n              Looks up a localized string similar to Can't create a metadata reference to an assembly without location..\r\n            ":"\r\n              查找类似于类似位置的元数据的本地化字符串，无法创建元数据引用。\r\n            \r\n","\r\n             given any ":"\r\n             给出任何\r\n","\r\n            The language name that this trivia is syntax of.\r\n            ":"\r\n            这个琐事是语法的语言名称。\r\n            \r\n","\r\n            Represents the C# '^' operator and VB 'Xor' operator.\r\n            ":"\r\n            代表C＃'^'运算符和VB'XOR'操作员。\r\n            \r\n","\r\n            Represents the check during initialization of a VB static local that is initialized on the first call of the function, and never again.\r\n            If the semaphore operation returns true, the static local has not yet been initialized, and the initializer will be run. If it returns\r\n            false, then the local has already been initialized, and the static local initializer region will be skipped.\r\n            This node is produced only as part of a ":"\r\n            表示在函数的第一个调用中初始化的VB静态本地的初始化期间的检查，而不再是。\r\n            如果信号量操作返回true，则静态本地尚未初始化，并且将运行初始化器。如果返回\r\n            false，然后已经初始化了本地，并且将跳过静态局部初始化器区域。\r\n            该节点仅作为一个\r\n","Delegate to identify if diagnostic reported while analyzing generated code should be suppressed.":"委托确定在分析生成代码时是否报告诊断的诊断。\r\n","\r\n            Unified assemblies referenced directly by the source module of the compilation.\r\n            ":"\r\n            统一的组件直接由编译的源模块引用。\r\n            \r\n","\r\n            Creates a COM/ActiveX object and exposes it to script code. The registered class is\r\n            specified by programmatic identifier (ProgID).\r\n            ":"\r\n            创建一个com/activex对象并将其暴露于脚本代码。注册课是\r\n            由程序化标识符（PROGID）指定。\r\n            \r\n","\r\n            Specifies the kind of location (source vs. metadata).\r\n            ":"\r\n            指定位置的种类（来源与元数据）。\r\n            \r\n"," that describe how the text changed\r\n            between this text and an older version. This may be multiple detailed changes \r\n            or a single change encompassing the entire text.\r\n            ":" 描述文本如何改变\r\n            在此文本和旧版本之间。这可能是多个详细的更改\r\n            或单个更改包含整个文本。\r\n            \r\n","\r\n            The signature blob handles to be emitted, in row order. These\r\n            are just the signature indices from the current generation.\r\n            ":"\r\n            签名斑点手柄以排顺序排放。这些\r\n            只是当前一代的签名指数。\r\n            \r\n","\r\n            Location for reporting diagnostics about the local.\r\n            ":"\r\n            报告有关本地的诊断的位置。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.UInt32\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toUInt32(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.uint32”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.touint32（42））;\r\n            \r\n","default(HashAlgorithmName)":"默认（hashalgorithmname）\r\n","True if the full public key should be included in the name. Otherwise public key token is used.":"如果应包含完整的公共密钥，则是正确的。否则使用公钥令牌。\r\n","The value to use if the target is currently uninitialized.":"如果目标当前非初始化，则使用的值。\r\n","The other symbol to compare against":"与之相比的另一个符号\r\n","\r\n            Return true and the 1-based index of the type reference\r\n            if the reference is available in the current generation.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回true和类型参考的基于1的索引\r\n            如果该引用在当前一代中可用。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","\r\n            A separate V8 runtime is created for the new script engine instance.\r\n            ":"\r\n            为新的脚本引擎实例创建了单独的V8运行时。\r\n            \r\n","The span does not represent a text line.":"跨度不代表文本行。\r\n","The position to get the context for.":"获得上下文的位置。\r\n"," that will be visited\r\n            when visiting this node. This is the basic recursion that ensures that the operations are visited at the correct time.\r\n            ":" 那将被访问\r\n            访问此节点时。这是确保在正确时间访问操作的基本递归。\r\n            \r\n","The expected encoding of the stream. The actual encoding used may be different if byte order marks are detected.":"流的预期编码。如果检测到字节订单标记，使用的实际编码可能会有所不同。\r\n","\r\n            Assumes that ":"\r\n            假设\r\n","\r\n            Keys and values for this section. All keys are lower-cased according to the\r\n            EditorConfig specification and keys are compared case-insensitively. Values are\r\n            lower-cased if the value appears in ":"\r\n            本节的键和值。所有键根据\r\n            比较cost-nosemensitations的编辑器规范和键。值是\r\n            较低率如果值出现在\r\n","\r\n            Constructs and caches already created pseudo-methods.\r\n            Every compiled module is supposed to have one of this, created lazily \r\n            (multidimensional arrays are not common).\r\n            ":"\r\n            构造和缓存已经创建了伪用途。\r\n            每个编译的模块都应该拥有其中之一，懒惰地创建了\r\n            （多维阵列并不常见）。\r\n            \r\n","\r\n            The UInt32 value 5\r\n            ":"\r\n            UINT32值5\r\n            \r\n","The statement to be analyzed.":"要分析的声明。\r\n"," keyword for ref-returning methods and properties/indexers.\r\n            ":" 用于参考方法和属性/索引器的关键字。\r\n            \r\n","\r\n            Checks if the given method has the signature \"void Dispose()\".\r\n            ":"\r\n            检查给定方法是否具有签名“ void dispose（）”。\r\n            \r\n","\r\n            The settings that determine how local variables are displayed.\r\n            ":"\r\n            确定如何显示本地变量的设置。\r\n            \r\n","Writes are not allowed to the underlying stream.":"不允许写入基础流。\r\n","A node in the list is not of the expected type.":"列表中的节点不是预期类型。\r\n","\r\n            Whether or not to quote character and string literals.\r\n            ":"\r\n            是否引用字符和字符串文字。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# ternary expression \"a ? b : c\" and if statement.\r\n             (2) VB ternary expression \"If(a, b, c)\" and If Else statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃三元表达“ A？b：c”和if语句。\r\n             （2）VB三元表达“ if（a，b，c）”和其他语句。\r\n            \r\n","\r\n            Simple struct type with explicit size and no members.\r\n            ":"\r\n            简单的结构类型具有显式大小，没有成员。\r\n            \r\n","\r\n            Per-analyzer analysis state map.\r\n            The integer value points to the index within the ":"\r\n            每个分析仪分析状态图。\r\n            整数值指向索引\r\n","\r\n            The text encoding of the source document.\r\n            ":"\r\n            源文档的文本编码。\r\n            \r\n","\r\n            The Int32 value 5\r\n            ":"INT32值5\r\n            \r\n","\r\n            Represents a method that specifies to a script engine whether script execution should continue.\r\n            ":"\r\n            代表一种指定脚本引擎脚本执行是否应继续的方法。\r\n            \r\n","\r\n            The null value\r\n            ":"\r\n            零值\r\n            \r\n","\r\n            Body of the exception handler.\r\n            ":"\r\n            异常处理程序的主体。\r\n            \r\n","\r\n            Begins collecting a new CPU profile with the specified options.\r\n            ":"\r\n            开始使用指定选项收集新的CPU配置文件。\r\n            \r\n","Deconstruct":"解构\r\n","\r\n            Gets or sets the script engine's document settings.\r\n            ":"\r\n            获取或设置脚本引擎的文档设置。\r\n            \r\n","The computed outputs for this source key":"此源密钥的计算输出\r\n","\r\n            Compilation name or null if not specified.\r\n            ":"\r\n            汇编名称或null（如果未指定）。\r\n            \r\n","\r\n            Determines whether the underlying node or token has any trailing trivia.\r\n            ":"确定基础节点或令牌是否具有任何拖延琐事。\r\n            \r\n","\r\n            Some script languages support one or more special non-":"\r\n            一些脚本语言支持一种或多种特殊的非 - \r\n"," was invoked\r\n            to create this node.\r\n            ":" 被调用\r\n            创建此节点。\r\n            \r\n","\r\n            Gets or sets document access options.\r\n            ":"\r\n            获取或设置文档访问选项。\r\n            \r\n","\r\n            Find the MemberNotNull attribute(s) and extract the list of referenced member names\r\n            ":"\r\n            查找成员notnull属性并提取引用的成员名称列表\r\n            \r\n","\r\n            The nullable flow state of the expression represented by the syntax node. This represents\r\n            the compiler's understanding of whether this expression can currently contain null, if\r\n            this expression can be used as an rvalue.\r\n            ":"\r\n            语法节点表示的表达式的无效流状态。这代表\r\n            编译器对此表达式目前是否可以包含null的理解，如果\r\n            该表达式可以用作rvalue。\r\n            \r\n"," in the\r\n             appropriate locations in ":" 在里面\r\n             适当的位置\r\n","\r\n            Represents a simple assignment expression.\r\n            ":"\r\n            代表一个简单的作业表达式。\r\n            \r\n","\r\n            Creates a reference to the module metadata.\r\n            ":"\r\n            创建对模块元数据的引用。\r\n            \r\n"," is not as visible as ":" 不像可见\r\n","\r\n            Returns true iff analysis was successful.  Analysis can fail if the region does not properly span a single expression,\r\n            a single statement, or a contiguous series of statements within the enclosing block.\r\n            ":"\r\n            返回真实的IFF分析成功。如果区域无法正确跨越单个表达式，则分析可能会失败\r\n            一个语句，或封闭块中的一系列连续语句。\r\n            \r\n"," for the containing type. Returns null if the\r\n            symbol is not contained within a type.\r\n            ":" 对于包含类型。如果是\r\n            符号不包含在类型中。\r\n            \r\n","\r\n            Constructor initializer, if any\r\n            ":"\r\n            构造函数初始化器，如果有的话\r\n            \r\n","\r\n            Parses a given .editorconfig source text into ":"\r\n            将给定的.editorConfig源文本解析为\r\n","\r\n              Looks up a localized string similar to References to XML documents are not supported..\r\n            ":"\r\n              查找类似于XML文档的引用类似的本地化字符串。\r\n            \r\n","The metadata name of explicit interface names have spaces removed, compared to\r\n            the name property.":"与\r\n            名称属性。\r\n","\r\n            Get all the annotations of the specified annotation kinds.\r\n            ":"\r\n            获取指定注释类型的所有注释。\r\n            \r\n","\r\n            Label instruction corresponding to the start of try block\r\n            ":"\r\n            标签指令对应于尝试块的开始\r\n            \r\n","\r\n               Looks up a localized string similar to Analyzer '{0}' threw the following exception:\r\n            '{1}'..\r\n             ":"\r\n               查找类似于分析仪'{0}'的本地化字符串，抛出了以下异常：\r\n            '{1}'..\r\n             \r\n","\r\n            Marks the given symbol end actions as fully executed for the given analyzers.\r\n            ":"\r\n            标记给定的符号最终操作是为给定的分析仪完全执行的。\r\n            \r\n","\r\n            Represents an expression that creates a pointer value by taking the address of a reference.\r\n            ":"\r\n            代表通过获取参考地址来创建指针值的表达式。\r\n            \r\n","\r\n            The convention for calling an instance method that explicitly declares its first parameter to correspond to the this instance.\r\n            ":"\r\n            调用一个实例方法的约定，该实例方法明确声明其第一个参数与本实例相对应。\r\n            \r\n","\r\n            Checks that the specified name is a valid metadata String and a file name.\r\n            The specification isn't entirely consistent and complete but it mentions:\r\n            \r\n            22.19.2: \"Name shall index a non-empty string in the String heap. It shall be in the format {filename}.{extension} (e.g., 'foo.dll', but not 'c:\\utils\\foo.dll').\"\r\n            22.30.2: \"The format of Name is {file name}.{file extension} with no path or drive letter; on POSIX-compliant systems Name contains no colon, no forward-slash, no backslash.\"\r\n                     As Microsoft specific constraint.\r\n            \r\n            A reasonable restriction seems to be a valid UTF8 non-empty string that doesn't contain '\\0', '\\', '/', ':' characters.\r\n            ":"\r\n            检查指定名称是有效的元数据字符串和文件名。\r\n            该规范不是完全一致和完整的，但它提到了：\r\n            \r\n            22.19.2：“名称应在字符串堆中索引一个非空字符串。它应为格式{filename}。{extension}（例如，'foo.dll'，但不是'c：\\ utils \\ foo。 dll'）。”\r\n            22.30.2：“名称的格式为{文件名}。\r\n                     作为Microsoft特定约束。\r\n            \r\n            合理的限制似乎是一个有效的UTF8非空字符串，不包含'\\ 0'，'\\'，'/'，'：'字符。\r\n            \r\n","\r\n            This is the set of generators that will run on next generation.\r\n            If there are any states present in ":"\r\n            这是将在下一代运行的一组发电机。\r\n            如果有任何州\r\n","\r\n            Default options.\r\n            ":"\r\n            默认选项。\r\n            \r\n","minor subsystem version":"次要子系统版本\r\n","Name cannot be empty.":"名称不能为空。\r\n","String to parse":"弦到解析\r\n","\r\n            Indicates that the diagnostic is an obsolete diagnostic with a custom ID\r\n            specified by the 'DiagnosticId' property on 'ObsoleteAttribute'.\r\n            ":"\r\n            表示诊断是具有自定义ID的过时诊断\r\n            由“ OmpoleTeatTribute”上的“诊断”属性指定。\r\n            \r\n","Number.MIN_SAFE_INTEGER":"number.min_safe_integer\r\n","\r\n            Read a DateTime value from the stream. This value must have been written using the ":"\r\n            从流中读取DateTime值。该值必须是使用\r\n","\r\n             Represents a distinct set of ":"\r\n             代表一组独特的集合\r\n","The array of write tlogs":"写tlogs的数组\r\n","ITypedArray<uint>":"ItypedArray <uint>\r\n","\r\n            Flag indicating if this is an \"is not\" type expression.\r\n            True for VB \"TypeOf ... IsNot ...\" expression.\r\n            False, otherwise.\r\n            ":"\r\n            标志表示这是否是“不是”类型表达式。\r\n            对于vb“ typeof ... iSnot ...”表达式为true。\r\n            错误，否则。\r\n            \r\n","The default constructor for a class or struct that is created if one is not provided.":"如果不提供一个类或结构的类或结构的默认构造函数。\r\n","\r\n            Represents an in-memory Portable-Executable image.\r\n            ":"\r\n            代表内存内置可移植的映像。\r\n            \r\n","\r\n            Gets the text of the source document.\r\n            ":"\r\n            获取源文档的文字。\r\n            \r\n","Elemental type of the array.":"数组的元素类型。\r\n","\r\n            Determines whether the underlying node or token has any leading trivia.\r\n            ":"\r\n            确定基础节点或令牌是否具有任何领先的琐事。\r\n            \r\n","A string specifying the document to be loaded.":"指定要加载文档的字符串。\r\n","The unbound function delegate.":"未结合函数委托。\r\n","Compilation event.":"汇编事件。\r\n","\r\n            Helper for DisposeAnalysis.\r\n            ":"\r\n            用于进行分解的助手。\r\n            \r\n","\r\n            Used when emitting a new version of a method during EnC for variables that are no longer used.\r\n            ":"\r\n            在ENC期间发射新版本的方法时，用于不再使用的变量。\r\n            \r\n"," isn't specified. \r\n            Must be absolute path.\r\n            Null if not available.\r\n            ":" 没有指定。 \r\n            必须是绝对路径。\r\n            如果不可用，则为Null。\r\n            \r\n","\r\n            Get all the members of this symbol that are types.\r\n            ":"\r\n            获取此符号的所有成员是类型。\r\n            \r\n","'s built-in implementation\r\n             of ":"内置实施\r\n             的\r\n","\r\n            TypeDefs define a type within a scope. TypeRefs refer to type-defs in other scopes\r\n            and allow you to import a type from another scope. This function attempts to determine\r\n            which type-def a type-ref points to.\r\n            \r\n            This resolve (type-ref, this cope) --> (type-def=*ptd, other scope=*ppIScope)\r\n            \r\n            However, this resolution requires knowing what modules have been loaded, which is not decided\r\n            until runtime via loader / fusion policy. Thus this interface can't possibly be correct since\r\n            it doesn't have that knowledge. Furthermore, when inspecting metadata from another process\r\n            (such as a debugger inspecting the debuggee's metadata), this API can be truly misleading.\r\n            \r\n            This API usage should be avoided.\r\n            ":"\r\n            Typedefs定义范围内的类型。 Typerefs参考其他范围中的类型defs\r\n            并允许您从另一个范围导入类型。此功能试图确定\r\n            哪种类型的ref指向。\r\n            \r\n            此解析（type-ref，此Cope） - >（type-def =*ptd，其他范围=*ppiscope）\r\n            \r\n            但是，该分辨率需要知道已加载哪些模块，但尚未确定\r\n            直到通过加载程序 /融合策略运行时间为止。因此，此界面不可能是正确的\r\n            它没有那种知识。此外，从另一个过程检查元数据时\r\n            （例如检查调试器的元数据的调试器），此API确实具有误导性。\r\n            \r\n            应避免使用此API。\r\n            \r\n","\r\n            NOTE!!! adding duplicates will result in exceptions. \r\n            Being concurrent only allows accessing the dictionary without taking locks.\r\n            Duplicate keys are still not allowed in the hashtable.\r\n            If unsure about adding unique items use APIs such as TryAdd, GetOrAdd, etc...\r\n            ":"\r\n            笔记！！！添加重复项会导致例外。\r\n            同时仅允许无需锁定字典即可访问字典。\r\n            在标签中仍然不允许重复键。\r\n            如果不确定添加唯一的物品使用API​​，例如Tryadd，Getoradd等...\r\n            \r\n","true if the enumerator was successfully advanced to the next element; false if the enumerator\r\n            has passed the end of the collection.":"如果枚举者成功地推进下一个元素，则是的；假设枚举者\r\n            已经通过了集合的结尾。\r\n","\r\n            Returns true if the diagnostic has a source suppression, i.e. an attribute or a pragma suppression.\r\n            ":"\r\n            如果诊断有源抑制，即属性或巴格马抑制，则返回为true。\r\n            \r\n","JIT optimizations are disabled via assembly level attribute (":"JIT优化通过汇编级别属性禁用（\r\n","\r\n            Compares reference assembly identity with definition identity and returns their relationship.\r\n            ":"\r\n            将参考装配身份与定义身份进行比较，并返回其关系。\r\n            \r\n","\r\n            Control flow graph representation for a given executable code block ":"\r\n            给定可执行代码块的控制流程图表示\r\n","\r\n            This value is unique within the profile.\r\n            ":"\r\n            此值在配置文件中是唯一的。\r\n            \r\n"," object containing memory usage information.":" 包含内存使用信息的对象。\r\n","\r\n            Modules comprising the assembly. The first module is the manifest module of the assembly.":"\r\n            包含组件的模块。第一个模块是组件的清单模块。\r\n","\r\n            called by CommonCompiler with diagnostics and message provider\r\n            ":"\r\n            由CommonCompiler与诊断和消息提供者拨打\r\n            \r\n"," with an appropriate Kind.\r\n            A symbol action reports ":" 有一种适当的方式。\r\n            符号动作报告\r\n","\r\n            Represents the initialization of an array instance.\r\n            ":"\r\n            表示数组实例的初始化。\r\n            \r\n","\r\n            Handler supplied for the event.\r\n            ":"\r\n            为活动提供的处理程序。\r\n            \r\n","\r\n            Returns an import scope the method is declared within, or null if there is none \r\n            (e.g. the method doesn't contain user code).\r\n            ":"\r\n            返回导入范围该方法在其中声明，或者如果没有\r\n            （例如，该方法不包含用户代码）。\r\n            \r\n","\r\n            Indicates Case x To Y in VB.\r\n            ":"\r\n            在VB中指示x至y的情况。\r\n            \r\n","The fully qualified name of the type to add.":"要添加的类型的完全合格的名称。\r\n","\r\n            // import types\r\n            var ConsoleT = host.type(\"System.Console\");\r\n            var WebClientT = host.type(\"System.Net.WebClient\", \"System\");\r\n            // create a Web client\r\n            var webClient = host.newObj(WebClientT);\r\n            host.tryCatch(\r\n                function () {\r\n                    // download Web document\r\n                    ConsoleT.WriteLine(webClient.DownloadString(\"http://cnn.com\"));\r\n                },\r\n                function (exception) {\r\n                    // dump exception\r\n                    ConsoleT.WriteLine(\"*** ERROR: \" + exception.GetBaseException().ToString());\r\n                    return true;\r\n                },\r\n                function () {\r\n                    // clean up\r\n                    ConsoleT.WriteLine(\"*** CLEANING UP ***\");\r\n                    webClient.Dispose();\r\n                }\r\n            );\r\n            ":"\r\n            //导入类型\r\n            var consolet = host.type（“ system.console”）;\r\n            var webclientt = host.type（“ system.net.webclient”，“ system”）;\r\n            //创建Web客户端\r\n            var webclient = host.newobj（webclientt）;\r\n            host.trycatch（\r\n                功能 （） {\r\n                    //下载网络文档\r\n                    consolet.writeline（webclient.downloadstring（“ http://cnn.com”））;\r\n                }，，\r\n                函数（异常）{\r\n                    //转储异常\r\n                    consolet.Writeline（“ ***错误：” + exception.getBaseexception（）。toString（））;\r\n                    返回true;\r\n                }，，\r\n                功能 （） {\r\n                    // 清理\r\n                    consolet.Writeline（“ ***清理***”）;\r\n                    webclient.dispose（）;\r\n                }\r\n            ）；\r\n            \r\n","\r\n            Method body corresponding to BaseMethodDeclarationSyntax.Body or AccessorDeclarationSyntax.Body\r\n            ":"\r\n            与basemethoddeclarationsyntax.body或accessOdeDeclarationsyntax.body相对应的方法主体\r\n            \r\n","\r\n                 nodes with do1, do2, and do3 as their arguments, respectively.\r\n            ":"\r\n                 DO1，DO2和DO3的节点分别为他们的论点。\r\n            \r\n","\r\n            Gets the total physical memory size in bytes.\r\n            ":"\r\n            在字节中获取总物理内存大小。\r\n            \r\n","\r\n            Emit the differences between the compilation and the previous generation\r\n            for Edit and Continue. The differences are expressed as added and changed\r\n            symbols, and are emitted as metadata, IL, and PDB deltas. A representation\r\n            of the current compilation is returned as an EmitBaseline for use in a\r\n            subsequent Edit and Continue.\r\n            ":"\r\n            发出汇编与上一代之间的差异\r\n            进行编辑并继续。差异表示为添加和更改\r\n            符号，并以元数据，伊利诺伊州和PDB三角洲的形式排放。代表\r\n            当前的汇编作为发射基线返回\r\n            随后进行编辑并继续。\r\n            \r\n","\r\n            Initialized member reference ":"\r\n            初始化会员参考\r\n","\r\n            Represents a reference to a local variable synthesized by language analysis.\r\n            ":"\r\n            代表对通过语言分析合成的局部变量的引用。\r\n            \r\n","Resolved reference or null if the identity can't be resolved.":"如果无法解决身份，则已解决的参考或null。\r\n","Can't embed interop types from module.":"无法从模块嵌入Interop类型。\r\n","\r\n            A decimal value encoded as 12 bytes.\r\n            ":"\r\n            十进制值编码为12个字节。\r\n            \r\n","\r\n            Reads bytes from specified ":"\r\n            从指定的读取字节\r\n","The compilation symbol for ":"汇编符号\r\n","An optional function that determines if the search descends into the argument node's children.":"确定搜索是否下降到参数节点的孩子的可选函数。\r\n","#ExternalSource":"＃外部源\r\n","\r\n            The location represents a position in a source file.\r\n            ":"\r\n            该位置表示源文件中的位置。\r\n            \r\n","\r\n            Context passed to an ":"\r\n            上下文传递给\r\n","\r\n            Gets the token at the specified index.\r\n            ":"\r\n            在指定的索引处获取令牌。\r\n            \r\n","\r\n            Used in C# and VB for spans that are inside of ":"\r\n            在C＃和VB中用于内部的跨度\r\n","namespace":"名称空间\r\n","\r\n            Represents an instance of the JScript engine in a desktop environment.\r\n            ":"\r\n            代表桌面环境中JScript引擎的实例。\r\n            \r\n","\r\n            Gets or sets the maximum amount by which the stack is permitted to grow during script execution.\r\n            ":"\r\n            获取或设置允许在脚本执行期间允许堆栈生长的最大金额。\r\n            \r\n","\r\n            Determines whether a mantissa should be rounded up in the  \r\n            round-to-nearest-ties-to-even mode given [1] the value of the least  \r\n            significant bit of the mantissa, [2] the value of the next bit after  \r\n            the least significant bit (the \"round\" bit) and [3] whether any  \r\n            trailing bits after the round bit are set.  \r\n             \r\n            The mantissa is treated as an unsigned integer magnitude.  \r\n             \r\n            For this function, \"round up\" is defined as \"increase the magnitude\" of the  \r\n            mantissa.\r\n            ":"\r\n            确定是否应在\r\n            给定最少的值\r\n            大量的mantissa，[2]下一位之后的价值\r\n            最小的钻头（“圆”位）和[3]是否有\r\n            设置圆钻后的落后位。\r\n             \r\n            mantissa被视为未签名的整数幅度。\r\n             \r\n            对于此功能，“圆形”定义为“增加的幅度”\r\n            尾数。\r\n            \r\n","\r\n            Register an action to be executed at compilation end.\r\n            A compilation end action reports ":"\r\n            注册一个要在汇编结束时执行的操作。\r\n            汇编最终动作报告\r\n","The first symbol to compare":"比较的第一个符号\r\n","\r\n            The block contains only the final branch or nothing at all\r\n            ":"\r\n            该块仅包含最终分支或根本没有\r\n            \r\n","\r\n              Looks up a localized string similar to If tuple element names are specified, the number of element names must match the cardinality of the tuple..\r\n            ":"\r\n              查找类似于指定元组元素名称的本地化字符串，元素名称的数量必须匹配元组的基数。\r\n            \r\n","\r\n            An abstraction of source text.\r\n            ":"\r\n            源文本的抽象。\r\n            \r\n","\r\n            Gets the document's URI.\r\n            ":"\r\n            获取文档的URI。\r\n            \r\n","\r\n            Filtered diagnostic severities in the compilation, i.e. diagnostics with effective severity from this set should not be reported.\r\n            PERF: If all supported diagnostics for an analyzer are from this set, we completely skip executing the analyzer.\r\n            ":"\r\n            汇编中过滤的诊断严重程度，即不应报告有效严重程度的诊断。\r\n            PERS：如果该集合的所有支持的分析仪诊断，我们将完全跳过执行分析仪。\r\n            \r\n","\r\n            Gets or sets a value indicating whether locks are allowed.\r\n            ":"\r\n            获取或设置一个指示是否允许锁的值。\r\n            \r\n","\r\n            All assemblies this assembly references.\r\n            ":"\r\n            所有组件此组件参考。\r\n            \r\n","\r\n            Gets or sets the engine's undefined import value.\r\n            ":"\r\n            获取或设置引擎的未定义导入值。\r\n            \r\n","\r\n            Test to see if the specified file is under the specified path\r\n            ":"\r\n            测试以查看指定文件是否在指定路径下\r\n            \r\n","\r\n            Constructs the module serialization properties out of the compilation options of this compilation.\r\n            ":"\r\n            从本汇编的汇编选项中构造模块序列化属性。\r\n            \r\n","\r\n            A post-initialization output, which will be visible to later phases, registered via ":"在以后的阶段可见的初始化输出，通过\r\n","\r\n            Converts a type to a host type for use with script code currently running on the\r\n            calling thread.\r\n            ":"\r\n            将类型转换为主机类型，用于与当前在该脚本代码上运行的脚本代码\r\n            调用线程。\r\n            \r\n","\r\n              Looks up a localized string similar to Given operation has a null semantic model..\r\n            ":"\r\n              查找类似于给定操作的本地化字符串具有空语上模型。\r\n            \r\n","\r\n            Returns false if the symbol end actions have already been executed for the analyzer OR are currently being executed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已经为分析仪执行符号结束操作或目前正在另一任务执行符号结束操作，则返回false。\r\n            如果是真的，那么它将返回一个非编号\r\n",",\r\n                    VBScript's\r\n                    ":"，，，，\r\n                    vbscript\r\n                    \r\n"," If the expected parameter should appear at the trailing position of the parameter list of the method overload":" 如果预期参数应出现在方法超载的参数列表的尾随位置\r\n",". Default is false in which case\r\n            a warning is thrown.\r\n            ":"。默认是错误的\r\n            发出警告。\r\n            \r\n","The TypeRef metadata token to return the referenced type information for.":"typeref元数据令牌以返回引用类型的信息。\r\n","\r\n            Stop tracking file accesses and get rid of the current tracking contexts. \r\n            ":"\r\n            停止跟踪文件访问并摆脱当前的跟踪上下文。\r\n            \r\n","Yields resolved ":"收益率解决了\r\n"," if the document contains binary data or if its\r\n            character encoding is unknown.\r\n            ":" 如果文档包含二进制数据或是否\r\n            字符编码未知。\r\n            \r\n","\r\n            An object specifying additional parameters on how symbols belonging to locals should be formatted.\r\n            ":"\r\n            应向当地符号的格式格式的对象指定其他参数。\r\n            \r\n","\r\n            Remove one set of leading and trailing double quote characters, if both are present.\r\n            ":"\r\n            如果两者都存在，请删除一组引用和尾随的双引号字符。\r\n            \r\n","The metadata reader.":"元数据读者。\r\n","\r\n            Gets the first node of type TNode that matches the predicate.\r\n            ":"\r\n            获取与谓词匹配的类型tnode的第一个节点。\r\n            \r\n","The index within the typed array of the first element to copy.":"要复制的第一个元素的键入数组中的索引。\r\n","\r\n            Read a UInt32 value from the stream. This value must have been written using ":"\r\n            从流中读取UINT32值。该值必须使用\r\n","\r\n            Aliases ":"\r\n            别名\r\n","Action to invoke if an analyzer throws an exception as an exception filter.":"如果分析仪将异常作为异常滤波器抛出。\r\n","\r\n            An expression that represents a (name, value) pair and that is typically used in method calls, custom attributes and object initializers.\r\n            ":"\r\n            表示（名称，值）对的表达式，通常用于方法调用，自定义属性和对象初始化器中。\r\n            \r\n","d.\r\n            ":"d。\r\n            \r\n","\r\n            Root type for ":"\r\n            根类型\r\n"," \r\n            option is specified checks if the PDB reader is available from a globally registered COM object. This COM object is provided \r\n            by .NET Framework and has limited functionality (features like determinism and source link are not supported).\r\n            ":" \r\n            指定选项检查是否可以从全球注册的COM对象获得PDB读取器。提供此com对象\r\n            由.NET框架且功能有限（不支持确定性和源链接之类的功能）。\r\n            \r\n","\r\n            True if the stream's bytes could easily be read, false otherwise.\r\n            ":"\r\n            是的，如果可以轻松读取流的字节，则否则为false。\r\n            \r\n","\r\n            All of the kinds of operations, including statements and expressions.\r\n            ":"\r\n            所有类型的操作，包括陈述和表达式。\r\n            \r\n","\r\n            A list of named byte sequences persisted with the module and used during execution, typically via the Win32 API.\r\n            A module will define Win32 resources rather than \"managed\" resources mainly to present metadata to legacy tools\r\n            and not typically use the data in its own code. \r\n            ":"\r\n            指定字节序列的列表持续使用该模块，并在执行过程中使用，通常是通过Win32 API。\r\n            一个模块将定义Win32资源，而不是“管理”资源，主要是向传统工具呈现元数据\r\n            并且通常不使用其自己的代码中的数据。\r\n            \r\n","\r\n            Determines whether this trivia or any of its structure has annotations.\r\n            ":"\r\n            确定该琐事或其任何结构是否具有注释。\r\n            \r\n","Absolute root path.":"绝对根路径。\r\n","\r\n            Method is a conversion.\r\n            ":"\r\n            方法是转换。\r\n            \r\n","Analyzer manager to fetch supported diagnostics.":"分析仪经理以获取支持的诊断。\r\n","true if there are any (less significant) bits set following roundBit":"如果有任何（不太重要的）位置之后，则是正确的\r\n","\r\n            This option has no effect in Visual Basic.\r\n            ":"\r\n            此选项对视觉基本没有影响。\r\n            \r\n","\r\n            Represents an expression that tests if a value is of a specific type.\r\n            ":"\r\n            表示一个表达式测试是否为特定类型的值。\r\n            \r\n"," of the attribute class to search.":" 要搜索的属性类。\r\n","\r\n            The field definitions to be emitted, in row order. These\r\n            are just the field definitions from the current generation.\r\n            ":"\r\n            字段定义要以行顺序排列。这些\r\n            只是当前一代的字段定义。\r\n            \r\n","\r\n            Determines if this node or token has the specific annotation.\r\n            ":"\r\n            确定此节点或令牌是否具有特定的注释。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# switch statement.\r\n             (2) VB Select Case statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃开关语句。\r\n             （2）VB选择案例语句。\r\n            \r\n","\r\n            Optional conditional branch out of the basic block.\r\n            If non-null, this branch may be taken at the end of the basic block based\r\n            on the ":"\r\n            可选的条件分支从基本块中脱出。\r\n            如果非编号，则可以在基本块的末尾进行此分支\r\n            在\r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledAction(arg => arg.self.DoSomething(arg.x), (self: this, x), out Action action);\r\n             RunWithActionCallback(action);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooleDAction（arg => arg.self.dosomething（arg.x），（self：this，x），out action action）;\r\n             runwithactionCallback（action）;\r\n             \r\n","\r\n            True if this type is parameterized (this.GenericParameters is a non empty collection).\r\n            ":"\r\n            如果此类型已被参数化（this.genericparameters是一个非空集合），则为true。\r\n            \r\n","\r\n            Bound attribute to decode.\r\n            ":"\r\n            绑定属性解码。\r\n            \r\n","\r\n            Gets a list of the descendant nodes and tokens in prefix document order.\r\n            ":"\r\n            获取前缀文档顺序中的后代节点和令牌的列表。\r\n            \r\n","\r\n            Gets a collection of the literals that could possibly make up the contents of this abstract value.\r\n            ":"\r\n            获取可能构成此抽象值内容的文字集合。\r\n            \r\n"," may be called any\r\n             number of times until the returned ":"可以称为任何\r\n             返回的次数\r\n",".\r\n            \r\n             Source locations can also be provided through ":"。\r\n            \r\n             源位置也可以通过\r\n","The array offset to start writing to.":"阵列偏移开始写入。\r\n","\r\n            Returns SyntaxTree that owns the node or null if node does not belong to a\r\n            SyntaxTree\r\n            ":"\r\n            返回拥有节点或null的语法，如果节点不属于一个\r\n            语法\r\n            \r\n","\r\n            Subtype for all dataflow analyses on a control flow graph.\r\n            It performs a worklist based approach to flow abstract data values for ":"\r\n            用于控制流程图上所有数据流分析的亚型。\r\n            它执行基于工作清单的方法来流动抽象数据值\r\n","\r\n            Gets the first symbol that matches the reference id string, order undefined.\r\n            ":"\r\n            获取与参考ID字符串，顺序未定义的第一个符号。\r\n            \r\n","\r\n            Creates a new node from this node without leading or trailing trivia.\r\n            ":"\r\n            从此节点创建一个新节点，而无需引导或拖延琐事。\r\n            \r\n"," nodes, each of which will be a call to the corresponding Add method\r\n                 with either 1, 2, 3 as the argument.\r\n             (3) VB method invocation expression.\r\n             (4) VB collection element initializer.\r\n                 Similar to the C# example, ":" 节点，每个节点都会呼叫相应的添加方法\r\n                 以1、2、3为论点。\r\n             （3）VB方法调用表达式。\r\n             （4）VB集合元素初始化器。\r\n                 类似于C＃示例，\r\n"," kind.\r\n            ":" 种类。\r\n            \r\n","\r\n            Assembly identities of all assemblies directly referenced by this compilation.\r\n            ":"\r\n            本汇编直接引用的所有组件的组装身份。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid content type.\r\n            ":"\r\n              查找类似于无效内容类型的本地化字符串。\r\n            \r\n","\r\n            The offset of the first operation outside of the scope, or the method body length.\r\n            ":"\r\n            示波器之外的第一个操作的偏移或方法的身体长度。\r\n            \r\n","\r\n            Error message.\r\n            ":"\r\n            错误信息。\r\n            \r\n","\r\n            Specifies whether to parse as regular code files, script files or interactive code.\r\n            ":"\r\n            指定是作为常规代码文件，脚本文件还是交互式代码解析。\r\n            \r\n",", and will null reference in these cases.\r\n            ":"，在这些情况下将无效。\r\n            \r\n","\r\n            Nullable annotations are enabled and will be shown when APIs defined at\r\n            this location are used in other contexts.\r\n            ":"\r\n            启用了无效的注释，并在API定义时显示\r\n            此位置在其他情况下使用。\r\n            \r\n","The length of the returned string is always the same as FullSpan.Length":"返回的字符串的长度始终与fullspan.length\r\n","\r\n            Enumerates the script object's property names.\r\n            ":"\r\n            列举脚本对象的属性名称。\r\n            \r\n"," in which case it will be disposed from there.\r\n            ":" 在这种情况下，它将从那里处置。\r\n            \r\n","\r\n            If HandlerKind == HandlerKind.Catch, this is the type of exception to catch. If HandlerKind == HandlerKind.Filter, this is System.Object.\r\n            Otherwise this is a Dummy.TypeReference.\r\n            ":"\r\n            如果handlerkind == handlerkind.catch，这是要捕获的例外类型。如果handlerkind == handlerkind.filter，这是system.Object。\r\n            否则，这是一个虚拟级别。\r\n            \r\n","The token to insert.":"代币插入。\r\n","The programmatic identifier (ProgID) of the registered class to import.":"注册类的程序化标识符（ProgID）将导入。\r\n","A function that computes a replacement token for\r\n            the argument tokens. The first argument is the original token. The second argument is\r\n            the same token potentially rewritten with replaced trivia.":"计算替换令牌的函数\r\n            论点令牌。第一个论点是原始令牌。第二个论点是\r\n            同样的令牌可能会被替换的琐事改写。\r\n","\r\n            An object with member values encoded as variants\r\n            ":"\r\n            具有编码为变体的成员值的对象\r\n            \r\n","\r\n            The character position in the line.\r\n            ":"\r\n            字符中的角色位置。\r\n            \r\n","\r\n            Gets the constant value of this field\r\n            ":"\r\n            获取该字段的恒定值\r\n            \r\n","\r\n            Default attribute usage for attribute types:\r\n            (a) Valid targets: AttributeTargets.All\r\n            (b) AllowMultiple: false\r\n            (c) Inherited: true\r\n            ":"\r\n            属性类型的默认属性用法：\r\n            （a）有效目标：attributetargets.all\r\n            （b）允许的变性：false\r\n            （c）继承：真实\r\n            \r\n","\r\n            Used to compare assembly identities. May implement unification and portability policies specific to the target platform.\r\n            ":"用于比较组装身份。可以实施针对目标平台的统一和可移植性策略。\r\n            \r\n","\r\n            Full metadata name of a type, includes namespace name for top level types.\r\n            ":"\r\n            类型的完整元数据名称，包括顶级类型的名称名称。\r\n            \r\n","\r\n            Set by the host to a fail fast trigger, \r\n            if the host desires to NOT crash the process on a non fatal exception.\r\n            ":"\r\n            主机设置为失败的快速触发器，\r\n            如果主机不希望在非致命例外情况下崩溃该过程。\r\n            \r\n","Optional arguments for property retrieval.":"财产检索的可选论点。\r\n","A function that performs the transform, when ":"执行转换的功能，当\r\n","Default abstract value to return.":"默认的抽象值要返回。\r\n","A IncludeAll object with data from the given XML node":"带有来自给定XML节点的数据的包含对象\r\n","When position is negative or \r\n            greater than ":"当职位为负或\r\n            比...更棒\r\n","\r\n            Holds entries, which contain the actual values.\r\n            ":"\r\n            保留条目，其中包含实际值。\r\n            \r\n","\r\n            Caches the return values for ":"\r\n            缓存的返回值\r\n","Indicates if the text can be embedded in the PDB.":"指示文本是否可以嵌入PDB中。\r\n","\r\n            The 1-based index of the event definition.\r\n            The index is into the full metadata.\r\n            ":"\r\n            事件定义的基于1的索引。\r\n            该索引进入了完整的元数据。\r\n            \r\n"," to which it is attached. It should only be used when converting\r\n            an RValue flow state to an RValue annotation for returning via the public API. For general use, please\r\n            use Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState.ToTypeWithAnnotations.\r\n            ":" 附着在它上。仅在转换时使用它\r\n            通过公共API返回的RVALUE流量为RVALUE注释。供一般用途\r\n            使用Microsoft.codeanalysis.csharp.symbols.typewithstate.totypewithannotations。\r\n            \r\n"," is an error.\r\n            ":" 是一个错误。\r\n            \r\n","\r\n            The member is visible only within the intersection of its family (its own type and any subtypes) and assembly. \r\n            ":"\r\n            该成员仅在其家族（其自身类型和任何子类型）和组装的交集中可见。\r\n            \r\n","\r\n            Creates a compilation with the specified assembly name.\r\n            ":"\r\n            使用指定的汇编名称创建汇编。\r\n            \r\n","\r\n            Represents the end of the source file. This ":"\r\n            表示源文件的末尾。这个\r\n","s, with an entry block, zero\r\n            or more intermediate basic blocks and an exit block.\r\n            Each basic block contains zero or more ":"S，带有一个入口块，零\r\n            或更多中间基本块和一个出口块。\r\n            每个基本块包含零或更多\r\n","\r\n            The method takes ":"\r\n            该方法采用\r\n"," \r\n            IL offset of catch handler or -1 \r\n            ":" \r\n            IL偏移捕获处理程序或-1\r\n            \r\n","\r\n            Does pretty much the same thing as MetadataDecoder.DecodeType only instead of \r\n            producing a type symbol it compares encoded type to the target.\r\n            \r\n            Signature should be in format described in MemberDescriptor.\r\n            ":"\r\n            只能与MetadataDeCoder.decodeType做几乎相同的事情\r\n            产生类型符号，它将编码类型与目标进行比较。\r\n            \r\n            签名应以成员描述符中描述的格式。\r\n            \r\n","\r\n            Indicates that this method is the iterator state machine for the method named in the record.\r\n            ":"\r\n            指示此方法是记录中指定的方法的迭代态状态计算机。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# interpolated string text.\r\n             (2) VB interpolated string text.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃插值字符串文本。\r\n             （2）VB插值字符串文本。\r\n            \r\n","\r\n             Gets a ":"\r\n             得到一个\r\n","\r\n            Creates a compiled script with the specified document meta-information, consuming previously generated cache data.\r\n            ":"\r\n            使用指定的文档元信息创建一个编译的脚本，消耗先前生成的缓存数据。\r\n            \r\n","A syntax node that is a declaration. This can be any type\r\n            derived from MemberDeclarationSyntax, TypeDeclarationSyntax, EnumDeclarationSyntax,\r\n            NamespaceDeclarationSyntax, ParameterSyntax, TypeParameterSyntax, or the alias part of a\r\n            UsingDirectiveSyntax":"语法节点是声明。这可以是任何类型\r\n            源自会员删除元素，键入元素，枚举inumdeclarationsyntax，\r\n            namespacedeclarationsyntax，parametersyntax，typeparametersyntax或A的别名部分\r\n            使用DirectectiveSyntax\r\n"," statement, calling ":" 声明，打电话\r\n"," arguments and\r\n            returns no value. The type of all parameters is ":" 争论和\r\n            返回没有价值。所有参数的类型是\r\n","A DiagnosticDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space.":"DiagnosticDescriptor必须具有一个既不是空的，一个空字符串也不包含空白的字符串的ID。\r\n","\r\n            Gets the text after the change.\r\n            ":"\r\n            更改后获取文字。\r\n            \r\n","\r\n            Represents the nullability of values that can be assigned\r\n            to an expression used as an lvalue.\r\n            ":"\r\n            表示可以分配的值的无效性\r\n            作为用作LVALUE的表达式。\r\n            \r\n","Literal value, or its default if not a single non-null literal value.":"字面价值，或其默认值（如果不是单个非无效的文字值）。\r\n","\r\n            If the current environment uses the '\\' directory separator, replaces all uses of '\\'\r\n            in the given string with '/'. Otherwise, returns the string.\r\n            ":"\r\n            如果当前环境使用“ \\'目录分隔符，则取代“ \\'的所有用途”\r\n            在给定的字符串中，带有'/'。否则，返回字符串。\r\n            \r\n","\r\n            Collapse a set of ":"\r\n            崩溃\r\n","\r\n            Report a diagnostic as an info.\r\n            ":"\r\n            将诊断作为信息报告。\r\n            \r\n","Int8Array":"int8array\r\n"," contains null elements.":" 包含空元素。\r\n","\r\n            Given a MemberRef token, return the TypeSymbol for its Class field.\r\n            ":"\r\n            给定一个会员令牌，请返回其类字段的Typesymbol。\r\n            \r\n","Empty or invalid file name":"空或无效的文件名\r\n","\r\n            Indicates a \"ref readonly\" return type.\r\n            ":"\r\n            指示“ ref Readonly”返回类型。\r\n            \r\n",", which is only evaluated once.\r\n            ":"，仅评估一次。\r\n            \r\n","Actions to be executed.":"要执行的操作。\r\n","\r\n            Represents the possible compilation stages for which it is possible to get diagnostics\r\n            (errors).\r\n            ":"\r\n            代表可能获得诊断的可能的汇编阶段\r\n            （错误）。\r\n            \r\n","\r\n            Represents an abstract analysis location.\r\n            This is may be used to represent a location where an ":"\r\n            代表抽象分析位置。\r\n            这可以用来表示一个位置\r\n","Original invocation operation, which may be a delegate invocation.":"原始调用操作，这可能是委托调用。\r\n","The System.Object to compare with the current ":"系统。对象与当前\r\n","\r\n            Finds a descendant trivia of this node whose span includes the supplied position.\r\n            ":"\r\n            找到该节点的后代琐事，其跨度包括提供的位置。\r\n            \r\n","\r\n            Gets all nodes and tokens with the specified annotation.\r\n            ":"\r\n            用指定的注释获取所有节点和令牌。\r\n            \r\n",".\r\n            2. Options from an .editorconfig file passed in as an additional file (back compat).\r\n            \r\n            These options are parsed into general and specific configuration options.\r\n            \r\n            .editorconfig format:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.OptionName = OptionValue\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.RuleId.OptionName = OptionValue\"\r\n                (b) \"dotnet_code_quality.RuleCategory.OptionName = OptionValue\"\r\n               \r\n            .editorconfig examples to configure API surface analyzed by analyzers:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.api_surface = all\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.CA1040.api_surface = public, internal\"\r\n                (b) \"dotnet_code_quality.Naming.api_surface = public\"\r\n             See ":"。\r\n            2.从.editorConfig文件作为附加文件（Back compat）传递的选项。\r\n            \r\n            这些选项分解为一般和特定的配置选项。\r\n            \r\n            .EditorConfig格式：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.optionname = optionValue”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ruleid.optionname = optionValue”\r\n                （b）“ dotnet_code_quality.rulecategory.optionname = optionValue”\r\n               \r\n            .eDitorConfig示例以配置分析仪分析的API表面：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.api_surface = all”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ca1040.api_surface = public，内部”\r\n                （b）“ dotnet_code_quality.naming.api_surface = public”\r\n             看\r\n","True if found in the compilation, false otherwise.":"如果在汇编中找到，则为true，否则为错误。\r\n"," if the encoding is unspecified.\r\n            If the encoding is not specified the ":" 如果未指定编码。\r\n            如果未指定编码\r\n"," exposed as the result.\r\n            ":" 暴露于结果。\r\n            \r\n","The rule set node from which to create a rule set object":"规则集节点从哪些节点创建一个规则集对象\r\n","\r\n            Gets the separator at the given index in this list.\r\n            ":"\r\n            在此列表中的给定索引中获取分离器。\r\n            \r\n","\r\n            Implements equality comparison of the content of two different instances of ":"\r\n            实施两个不同实例的内容的平等比较\r\n"," is required to be an ":" 被要求成为\r\n",".\r\n            If not null used as a base path of ":"。\r\n            如果不是零作为基本路径\r\n","\r\n            Handles storage of items referenced via tokens in metadata. When items are stored \r\n            they are uniquely \"associated\" with fake tokens, which are basically sequential numbers.\r\n            IL gen will use these fake tokens during codegen and later, when actual values \r\n            are known, the method bodies will be patched.\r\n            To support these two scenarios we need two maps - Item-->uint, and uint-->Item. (The second is really just a list).\r\n            ":"\r\n            处理通过元数据中令牌引用的项目的存储。存储物品时\r\n            它们与假令牌是独特的“关联”，这些令牌基本上是顺序的数字。\r\n            IL Gen将在Codegen期间和以后的实际值时使用这些假令牌\r\n            众所周知，方法将修补。\r\n            为了支持这两种情况，我们需要两个地图 - 项目 - > uint和uint-> item。 （第二个实际上只是列表）。\r\n            \r\n","\r\n            Stores the partial analysis state for code block actions or operation block actions executed on the declaration.\r\n            ":"存储在声明上执行的代码块操作或操作块操作的部分分析状态。\r\n            \r\n"," for a source file. This computes which ":" 对于源文件。这计算哪个\r\n","Specified values not valid for this reference.":"指定值无效。\r\n","Symbol for which we want to enqueue supertypes.":"我们想要构成超级型的符号。\r\n"," is a definition,\r\n            not a constructed type.\r\n            ":" 是一个定义\r\n            不是构造类型。\r\n            \r\n","\r\n            If true, the assembly is marked as signed, but is only signed with the public key.\r\n            ":"\r\n            如果为true，则将大会标记为签名，但仅与公共密钥签名。\r\n            \r\n","\r\n            Releases any resources associated with this instance.\r\n            ":"\r\n            释放与此实例相关的任何资源。\r\n            \r\n",", then this\r\n            method will return ":"，然后\r\n            方法将返回\r\n","host variables":"主机变量\r\n"," invokes\r\n            ":" 调用\r\n            \r\n","\r\n            Reserves a contiguous block of bytes.\r\n            ":"\r\n            保留一个连续的字节块。\r\n            \r\n","\r\n            True if the character is the platform directory separator character or the alternate directory separator.\r\n            ":"\r\n            true如果字符是平台目录分离器字符或备用目录分离器。\r\n            \r\n","\r\n            An event is a member that enables an object or class to provide notifications. Clients can attach executable code for events by supplying event handlers.\r\n            This interface models the metadata representation of an event.\r\n            ":"\r\n            事件是使对象或类提供通知的成员。客户可以通过提供事件处理程序来连接事件的可执行代码。\r\n            该接口对事件的元数据表示建模。\r\n            \r\n"," was read from or is going to be saved to.\r\n            ":" 已从或将保存到或将被保存到。\r\n            \r\n"," implementation for a text document.\r\n            ":" 文本文档的实现。\r\n            \r\n","\r\n            Path, or null if the span represents an invalid value.\r\n            ":"\r\n            路径，如果跨度表示无效的值，则路径。\r\n            \r\n","\r\n            Parent import scope, or null.\r\n            ":"\r\n            父导入范围或null。\r\n            \r\n","\r\n            Returns true if this field was declared as \"readonly\". \r\n            ":"如果该字段被宣布为“ ReadOnly”，则返回为真。\r\n            \r\n"," for the given analyzer.\r\n            ":"对于给定的分析仪。\r\n            \r\n","The name of the server from which to import the type.":"导入类型的服务器的名称。\r\n","\r\n              Looks up a localized string similar to Invalid severity in analyzer config file..\r\n            ":"\r\n              在Analyzer配置文件中查找类似于无效严重性的本地化字符串。\r\n            \r\n","\r\n              Looks up a localized string similar to Could not locate the rule set file '{0}'..\r\n            ":"\r\n              查找类似于类似的本地化字符串无法找到规则集文件'{0}'..\r\n            \r\n","\r\n            Kinds of loop operations.\r\n            ":"\r\n            循环操作。\r\n            \r\n","HRESULT":"Hresult\r\n","\r\n            Represents a for loop.\r\n            ":"\r\n            代表循环。\r\n            \r\n","\r\n            Represents an base type of assignment expression.\r\n            ":"\r\n            代表分配表达式的基本类型。\r\n            \r\n"," must be part of ":" 必须是\r\n"," to initialize the ":" 初始化\r\n","\r\n            Current usage:\r\n             (1) C# catch clause.\r\n             (2) VB Catch clause.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃捕获子句。\r\n             （2）VB捕获子句。\r\n            \r\n","completion of semantic analysis of a code document,":"完成代码文档的语义分析，\r\n","\r\n            Represents a negated pattern.\r\n            ":"\r\n            代表否定模式。\r\n            \r\n","\r\n              Looks up a localized string similar to Stream must be readable..\r\n            ":"\r\n              查找类似于流的本地化字符串必须可读。\r\n            \r\n","\r\n            Flags that can only be set within the compiler.\r\n            ":"\r\n            只能在编译器内设置的标志。\r\n            \r\n","\r\n             True if the assembly being compiled is indirectly referenced through some of its own references.\r\n             ":"\r\n             如果要编译的集会通过其一些自身的参考文献间接引用。\r\n             \r\n"," decoded from the stream.":" 从流解码。\r\n","\r\n            function isComparable(value)\r\n            {\r\n                var IComparableT = host.type(\"System.IComparable\");\r\n                return host.isType(IComparableT, value);\r\n            }\r\n            ":"\r\n            函数匹配（值）\r\n            {\r\n                var icomparablet = host.type（“ system.icomparable”）;\r\n                返回host.istype（icomparablet，value）;\r\n            }\r\n            \r\n","\r\n            Determines how delegates are displayed (e.g. name vs full signature).\r\n            ":"\r\n            确定如何显示代表（例如名称与完整签名）。\r\n            \r\n","\r\n            Gets the locations where the symbol was originally defined, either in source or\r\n            metadata. Some symbols (for example, partial classes) may be defined in more than one\r\n            location.\r\n            ":"\r\n            获取最初定义符号的位置，无论是在源或\r\n            元数据。某些符号（例如，部分类）可以在多个以上定义\r\n            地点。\r\n            \r\n"," on a control flow graph.\r\n            ":" 在控制流程图上。\r\n            \r\n","\r\n            A mask that can be used to mask out flag bits when the latter are stored in the same memory word as this enumeration.\r\n            ":"\r\n            当将后者存储在与此枚举的同一内存词中时，可用于掩盖标志位的掩码。\r\n            \r\n","\r\n            If true, prepend the command line header logo during \r\n            ":"\r\n            如果为true，请在命令行预告片中徽标\r\n            \r\n","\r\n            True if the compilation can be signed using these keys.\r\n            ":"\r\n            如果可以使用这些键签署汇编，则为正确。\r\n            \r\n","\r\n            Compute the hashcode of a sub string using FNV-1a\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            使用FNV-1A计算子字符串的哈希码\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","One or more integers representing the array dimension lengths.":"一个或多个代表数组尺寸长度的整数。\r\n","\r\n            Gets the document meta-information for the compiled script.\r\n            ":"\r\n            获取编译脚本的文档元信息。\r\n            \r\n"," if the type is not special.\r\n            ":" 如果类型不特别。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified old trivia replaced with new trivia.\r\n            ":"\r\n            创建一棵新的节点树，指定的旧琐事被新的琐事取代。\r\n            \r\n","\r\n            Value to be returned.\r\n            ":"\r\n            值要返回。\r\n            \r\n","\r\n            No change.\r\n            ":"\r\n            没变。\r\n            \r\n","\r\n            Raised when the current text instance changes.\r\n            ":"\r\n            当当前文本实例更改时升高。\r\n            \r\n","\r\n            and also handles resetting the argument value for ref/out parmater.\r\n            ":"\r\n            还可以处理重置参考/退出Parmater的参数值。\r\n            \r\n","\r\n             Internal since this is an implementation detail. The only public\r\n             contract is that you can pass EmbeddedText instances to Emit.\r\n             It just so happened that doing this up-front was most practical\r\n             and efficient, but we don't want to be tied to it.\r\n             \r\n             For efficiency, the format of this blob is exactly as it is written\r\n             to the PDB,which prevents extra copies being made during emit.\r\n            \r\n             The first 4 bytes (little endian int32) indicate the format:\r\n            \r\n                        0: data that follows is uncompressed\r\n                 Positive: data that follows is deflate compressed and value is original, uncompressed size\r\n                 Negative: invalid at this time, but reserved to mark a different format in the future.\r\n             ":"\r\n             内部因为这是一个实现细节。唯一的公众\r\n             合同是您可以通过嵌入式文本实例发出。\r\n             碰巧的是，这样做是最实用的\r\n             高效，但我们不想与之息息相关。\r\n             \r\n             为了效率，此斑点的格式与书面形式完全一样\r\n             到PDB，可以防止在发射期间制作额外的副本。\r\n            \r\n             前4个字节（Little Endian INT32）表示格式：\r\n            \r\n                        0：随后的数据未压缩\r\n                 阳性：随后的数据被压缩，值是原始的，未压缩的大小\r\n                 负面：目前无效，但保留以标记未来的另一种格式。\r\n             \r\n","\r\n            Defines extension methods for use with JavaScript engines.\r\n            ":"\r\n            定义用于与JavaScript引擎一起使用的扩展方法。\r\n            \r\n","\r\n            Returns whether nullable annotations are enabled for this context.\r\n            ":"\r\n            返回是否在此上下文中启用了无效的注释。\r\n            \r\n","\r\n            Specifies how parameters are displayed in the description of a (member, property/indexer, or delegate) symbol.\r\n            ":"\r\n            指定参数在描述（成员，属性/索引或委托）符号的描述中。\r\n            \r\n","\r\n            The warning level used for hidden and info diagnostics. Because these diagnostics interact with other editor features, we want them to always be produced unless /warn:0 is set.\r\n            ":"\r\n            警告级别用于隐藏和信息诊断。由于这些诊断与其他编辑器功能相互作用，因此我们希望它们始终生成，除非设置 /警告：0。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# this or base expression.\r\n             (2) VB Me, MyClass, or MyBase expression.\r\n             (3) C# object or collection or 'with' expression initializers.\r\n             (4) VB With statements, object or collection initializers.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃或基本表达式。\r\n             （2）VB我，myclass或mybase表达。\r\n             （3）c＃对象或收集或'带有'表达式初始化器。\r\n             （4）带有语句，对象或收集初始化器的VB。\r\n            \r\n","\r\n            Start the process; tracking the command.\r\n            ":"\r\n            开始过程；跟踪命令。\r\n            \r\n","\r\n            Omits the global namespace if it is being displayed as a containing symbol (i.e. not on its own).\r\n            ":"\r\n            如果将其显示为包含符号（即不是单独），则省略全局名称空间。\r\n            \r\n"," is evaluated at start of each loop iteration.\r\n            False if it is evaluated at the end of each loop iteration.\r\n            ":"在每个循环迭代的开始时进行评估。\r\n            错误，如果在每个循环迭代的末尾对其进行评估。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# 'for' loop statement\r\n            ":"\r\n            当前用法：\r\n             （1）c＃for'循环语句\r\n            \r\n","\r\n            Action counts per-analyzer.\r\n            ":"\r\n            动作计数仪。\r\n            \r\n","\r\n              Looks up a localized string similar to Cannot serialize type '{0}'..\r\n            ":"\r\n              查找类似于不能序列化类型的局部字符串'{0}'..\r\n            \r\n","new C() { do1, do2, do3 }":"new C（）{do1，do2，do3}\r\n","\r\n            Custom modifiers associated with the parameter, or an empty array if there are none.\r\n            ":"\r\n            与参数关联的自定义修饰符，如果没有参数，则为空数组。\r\n            \r\n","\r\n            Provides custom values associated with ":"\r\n            提供与\r\n","\r\n            Local variables that store the current index, for each dimension (C#, VB?).\r\n            ":"\r\n            为每个维度（C＃，VB？）存储当前索引的本地变量。\r\n            \r\n","\r\n            An array with 2 elements\r\n            ":"\r\n            一个具有2个元素的数组\r\n            \r\n","\r\n            This can be null in error scenarios, or when the method is an extern method.\r\n            ":"\r\n            在错误方案中，或该方法是外部方法时，这可能是无效的。\r\n            \r\n","\r\n            Result from execution of a ":"\r\n            由执行\r\n","The number of dimensions for the host array type to import.":"主机数组类型的导入尺寸数量。\r\n","\r\n            The size of the virtual memory to reserve for the initial process heap.\r\n            Must fit into 32 bits if the target platform is 32 bit.\r\n            ":"\r\n            虚拟内存的大小，以保留初始过程堆。\r\n            如果目标平台为32位，则必须适合32位。\r\n            \r\n","Allow the parsing of version elements where invalid characters exist. e.g. 1.2.2a.1":"允许对存在无效字符的版本元素进行解析。例如1.2.2a.1\r\n","\r\n            Add document entries for any embedded text document that does not yet have an entry.\r\n            ":"\r\n            为任何尚未有条目的嵌入式文本文档添加文档条目。\r\n            \r\n","A single space character.":"一个空间字符。\r\n","A structure containing meta-information for the script document.":"一个包含脚本文档的元信息的结构。\r\n","\r\n              2. Write the unsigned PE to disk and use CLR COM APIs to sign.\r\n            The preferred method is #1 as it's more efficient and more resilient (no reliance on %TEMP%). But \r\n            we must continue to support #2 as it's the only way to do the following:\r\n              - Access private keys stored in a key container\r\n              - Do proper counter signature verification for AssemblySignatureKey attributes\r\n            ":"\r\n              2.将无符号的PE写入磁盘，并使用CLR COM API签名。\r\n            首选方法是＃1，因为它更有效，更有弹性（不依赖％temp％）。但\r\n            我们必须继续支持＃2，因为这是执行以下操作的唯一方法：\r\n               - 访问存储在密钥容器中的私钥\r\n               - 进行适当的计数器签名验证汇编签名\r\n            \r\n","Output kind":"输出类型\r\n","\r\n            Creates a new list with the element removed.\r\n            ":"\r\n            使用删除元素创建一个新列表。\r\n            \r\n","\r\n            Gets the 1-based line number.\r\n            ":"\r\n            获取基于1的行号。\r\n            \r\n","The zero-based index of the child to get.":"孩子的基于零的索引。\r\n"," in editor config options and\r\n                 given symbol has all the required modifiers.\r\n              2. Otherwise, if user has not configured modifiers.\r\n            ":" 在编辑器配置选项中，\r\n                 给定的符号具有所有必需的修饰符。\r\n              2.否则，如果用户尚未配置修饰符。\r\n            \r\n","\r\n            Get a collection of all the keys.\r\n            ":"\r\n            获取所有钥匙的集合。\r\n            \r\n"," with the specified error message and nested exception.\r\n            ":" 带有指定的错误消息和嵌套异常。\r\n            \r\n","\r\n            A valid ":"\r\n            一个有效的\r\n","\r\n            Marks the given event as fully analyzed for the given analyzer.\r\n            ":"\r\n            将给定的事件标记为给定分析仪的全面分析。\r\n            \r\n","0,10":"0,10\r\n","s about the code within a ":"关于代码\r\n","Root parameter initializer operation, which must have a null parent.":"根参数初始化器操作，该操作必须具有无效父母。\r\n","Scope of analysis.":"分析范围。\r\n"," to slot ":" 要插槽\r\n","s about operation blocks. \r\n            ":"S关于操作块。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Char\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toChar(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.char”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.tochar（42））;\r\n            \r\n","'s contents.\r\n            ":"的内容。\r\n            \r\n","s available to source generators during a run\r\n            ":"运行期间可用于源发电机\r\n            \r\n",", a new host type collection otherwise.":"，否则，新的主机类型集合。\r\n","\r\n            Returns the full string representation of the nodes in this list including \r\n            the first node's leading trivia and the last node's trailing trivia.\r\n            ":"\r\n            返回此列表中节点的完整字符串表示形式，包括\r\n            第一个节点的领先琐事和最后一个节点的尾随琐事。\r\n            \r\n","\r\n            Like ConcurrentDictionary, but single threaded valueFactory execution in GetOrAdd.\r\n            ":"\r\n            就像contrentDictionary一样，但在getoradd中进行了单线螺纹值执行。\r\n            \r\n"," if the profile was created successfully, ":" 如果个人资料是成功创建的，\r\n","\r\n            Copy a range of characters from this SourceText to a destination array.\r\n            ":"\r\n            将一系列字符从此SourceText复制到目标数组。\r\n            \r\n","\r\n            An optional set of additional locations related to the diagnostic.\r\n            Typically, these are locations of other items referenced in the message.\r\n            If null, ":"\r\n            一组与诊断有关的其他位置。\r\n            通常，这些是消息中引用的其他项目的位置。\r\n            如果无效，\r\n"," on a control flow graph.\r\n            It stores:\r\n             (1) Analysis values for all operations in the graph and\r\n             (2) ":" 在控制流程图上。\r\n            它存储：\r\n             （1）图中所有操作的分析值和\r\n             （2）\r\n","The nearest double value, if conversion succeeds":"最近的双重值，如果转换成功\r\n","\r\n            Diposes the writer.\r\n            ":"\r\n            饰演作家。\r\n            \r\n","\r\n            Gets the execution time for the given analyzer.\r\n            ":"\r\n            获取给定分析仪的执行时间。\r\n            \r\n","\r\n            Count of code block start actions.\r\n            ":"\r\n            代码块启动操作的计数。\r\n            \r\n","\r\n            When overridden in a derived class, allows substituting an assembly path after we've\r\n            identified the context to load an assembly in, but before the assembly is actually\r\n            loaded from disk.\r\n            ":"\r\n            当在派生类中覆盖时，我们允许在我们之后替换一个汇编路径\r\n            确定了加载装配体的上下文，但是在组件实际上是\r\n            从磁盘上加载。\r\n            \r\n","\r\n            This list was retrieved from https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties\r\n            at 2018-04-21 19:37:05Z. New keys may be added to this list in newer versions, but old ones will\r\n            not be removed.\r\n            ":"\r\n            此列表从https://github.com/editorconfig/editorconfig/wiki/editorconfig-properties检索\r\n            在2018-04-21 19：37：05Z。新键可能会以较新的版本添加到此列表中，但旧键将\r\n            不被删除。\r\n            \r\n","\r\n            A metadata (IL) level representation of the body of a method or of a property/event accessor.\r\n            ":"\r\n            方法或属性/事件访问者的主体的元数据（IL）级表示。\r\n            \r\n","\r\n            Displays the extension method as a static method. \r\n            For example, Enumerable.ElementAt<TSource>(this IEnumerable<TSource> source, int index).\r\n            ":"\r\n            将扩展方法显示为静态方法。\r\n            例如，枚举。elementat <tsource>（此IEnumerable <tsource> source，int index）。\r\n            \r\n","\r\n            Information decoded from early well-known custom attributes applied on a field.\r\n            ":"\r\n            信息从应用于字段上应用的早期众所周知的自定义属性解码。\r\n            \r\n","s that got tracked during points to analysis\r\n            ":"在分析点期间被跟踪的S\r\n            \r\n"," and ending at the end of the string.":" 并在字符串的末尾结束。\r\n","The target reference.":"目标参考。\r\n","The fixed string value of the part.":"零件的固定字符串值。\r\n","\r\n            Represents an identity of an assembly as defined by CLI metadata specification.\r\n            ":"\r\n            表示由CLI元数据规范定义的组件的身份。\r\n            \r\n","\r\n            If parsing succeeded, the parsed version. Otherwise a version instance with all parts set to zero.\r\n            If ":"如果解析成功，则解析版本。否则，所有零件设置为零的版本实例。\r\n            如果\r\n","\r\n            Tries to parse a UInt64 from string in either decimal, octal or hex format.\r\n            ":"\r\n            试图以小数，八分或十六进制格式从字符串中解析uint64。\r\n            \r\n","\r\n            The expression is not annotated (does not have a ?).\r\n            ":"\r\n            该表达式没有注释（没有？）。\r\n            \r\n","The nodes to be replaced.":"节点要替换。\r\n","\r\n            Returns names of referenced modules.\r\n            ":"\r\n            返回引用模块的名称。\r\n            \r\n","\r\n            Represents an instance of the VBScript engine.\r\n            ":"\r\n            代表VBScript引擎的实例。\r\n            \r\n","\r\n            Determines if a ":"\r\n            确定是否a\r\n",". The compiler assigns slots to named local variables (including named temporary variables)\r\n            it the order in which they appear in the source code. This property allows the compiler to reconstruct the local variable mapping \r\n            for the initial generation. A subsequent generation may add a new variable in between two variables of the previous generation. \r\n            Since the slots of the previous generation variables need to be preserved the only option is to add these new variables to the end.\r\n            The slot ordering thus no longer matches the syntax ordering. It is therefore necessary to pass ":"。编译器将插槽分配给命名的本地变量（包括命名的临时变量）\r\n            它是它们在源代码中出现的顺序。此属性允许编译器重建本地变量映射\r\n            对于初始一代。随后的一代可以在上一代的两个变量之间添加一个新变量。\r\n            由于需要保留上一代变量的插槽，因此唯一的选择是将这些新变量添加到最后。\r\n            因此，插槽排序不再与语法排序匹配。因此有必要通过\r\n","\r\n            Method is a constructor.\r\n            ":"\r\n            方法是构造函数。\r\n            \r\n","\r\n            Cached semantic model for the compilation trees.\r\n            PERF: This cache enables us to re-use semantic model's bound node cache across analyzer execution and diagnostic queries.\r\n            ":"\r\n            编译树的缓存语义模型。\r\n            perf：此缓存使我们能够在分析仪执行和诊断查询中重新使用语义模型的界点缓存。\r\n            \r\n","The visibility to compare against.":"比较的可见性。\r\n","\r\n            Represents a method or method-like symbol (including constructor,\r\n            destructor, operator, or property/event accessor).\r\n            ":"\r\n            表示一个方法或方法式符号（包括构造函数，\r\n            驱动器，操作员或属性/事件访问者）。\r\n            \r\n","\r\n            Returns the arity of this type, or the number of type parameters it takes.\r\n            A non-generic type has zero arity.\r\n            ":"\r\n            返回此类型的ARITY或它采用的类型参数数量。\r\n            非传播类型的Arity为零。\r\n            \r\n","The first node to be included within the analysis.":"分析中包含的第一个节点。\r\n","\r\n            Returns interface methods explicitly implemented by this method.\r\n            ":"\r\n            返回该方法明确实现的接口方法。\r\n            \r\n","\r\n            Check if provided AssemblySymbol is created for assembly described by this instance. \r\n            This method is expected to return true for every AssemblySymbol returned by \r\n            AvailableSymbols property.\r\n            ":"\r\n            检查是否为本例中描述的汇编创建提供的汇编符号。\r\n            预计此方法将返回的每个汇回的汇编符号\r\n            availablesymbols属性。\r\n            \r\n","\r\n            Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.\r\n            Note: If things are not up to date, then the TLogs are compacted to remove all entries in preparation to\r\n            re-track execution of work.\r\n            ":"\r\n            检查以查看跟踪数据是否指示所有内容是根据uptodatechecktype的最新信息。\r\n            注意：如果事情不是最新的，则将tlogs压实以删除所有条目，以准备\r\n            重新跟踪工作执行。\r\n            \r\n","User-defined locals might be optimized away. They might not be available while debugging.":"用户定义的当地人可能会被优化。调试时可能无法使用。\r\n","readonly":"只读\r\n"," if overflow checking is performed for the arithmetic operation.\r\n            ":"如果对算术操作进行溢出检查。\r\n            \r\n","Default severity of the diagnostic.":"诊断的默认严重程度。\r\n","\r\n            Referenced member.\r\n            ":"\r\n            引用成员。\r\n            \r\n","Optional delegate to add non-categorized analyzer diagnostics.":"可选的代表以添加非分类分析仪诊断。\r\n","\r\n            Task to compute HostSymbolStartAnalysisScope for per-symbol analyzer actions, i.e. AnalyzerActions registered by analyzer's SymbolStartActions.\r\n            ":"\r\n            计算每符号分析仪动作的hostsymbolstarysisscope，即分析仪的符号符号的分析操作。\r\n            \r\n","\r\n            This contains the original ":"\r\n            这包含原始\r\n","\r\n            Conversion applied to the argument value after the invocation. Applicable only to VB Reference arguments.\r\n            ":"\r\n            转换在调用后应用于参数值。仅适用于VB参考参数。\r\n            \r\n","\r\n            C# and VB. Encodes EnC local variable slot map.\r\n            See https://github.com/dotnet/corefx/blob/main/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#EditAndContinueLocalSlotMap.\r\n            ":"\r\n            C＃和VB。编码ENC局部变量插槽图。\r\n            请参阅https://github.com/dotnet/corefx/blob/main/src/system.reflection.metadata/specs/portablepdb-metadata.md#editandandandandcontinelocalslotmap。\r\n            \r\n","\r\n            Returns true if the span represents a valid location.\r\n            ":"\r\n            如果跨度表示有效位置，则返回true。\r\n            \r\n"," on a basic block.\r\n            It store dispose values for each ":" 在基本块上。\r\n            它存储每个\r\n","\r\n            Get the both instance and static constructors for this type.\r\n            ":"\r\n            获取此类型的实例和静态构造函数。\r\n            \r\n","The byte array containing encoded text.":"包含编码文本的字节阵列。\r\n","\r\n            The symbol whose body lowering produced this synthesized symbol, \r\n            or null if the symbol is synthesized based on declaration.\r\n            ":"\r\n            降低身体的符号产生了这个合成的符号，\r\n            或null如果根据声明合成符号。\r\n            \r\n","\r\n            Use COM registry to locate an implementation of the writer.\r\n            ":"\r\n            使用COM注册表查找作者的实现。\r\n            \r\n","\r\n            The member is visible only within its own type.\r\n            ":"\r\n            该成员仅在其自己的类型中可见。\r\n            \r\n","\r\n            The nullable warning state is inherited from the project default.\r\n            ":"\r\n            无效的警告状态是从项目默认值继承的。\r\n            \r\n","\r\n            Gets all the diagnostic analyzers defined in this assembly reference for the given ":"\r\n            获取在此组装中定义的所有诊断分析仪的给定参考\r\n","\r\n             The current single use case for this type is embedded sources in PDBs.\r\n            \r\n             32 KB is:\r\n            \r\n             * Large enough to handle 99.6% all VB and C# files in Roslyn and CoreFX \r\n               without allocating additional chunks.\r\n            \r\n             * Small enough to avoid the large object heap.\r\n            \r\n             * Large enough to handle the files in the 0.4% case without allocating tons\r\n               of small chunks. Very large source files are often generated in build\r\n               (e.g. Syntax.xml.Generated.vb is 390KB compressed!) and those are actually\r\n               attractive candidates for embedding, so we don't want to discount the large\r\n               case too heavily.)\r\n            \r\n             * We pool the outer BlobBuildingStream but only retain the first allocated chunk.\r\n             ":"\r\n             当前此类型的单个用例是PDB中嵌入的源。\r\n            \r\n             32 kb是：\r\n            \r\n             *足够大，可以处理Roslyn和CoreFX中所有VB和C＃文件的99.6％\r\n               不分配其他块。\r\n            \r\n             *足够小以避免大物体堆。\r\n            \r\n             *足够大，可以在0.4％的情况下处理文件，而无需分配吨\r\n               小块。构建中通常会生成非常大的源文件\r\n               （例如，语法xml.generated.vb是390kb压缩！）实际上是\r\n               有吸引力的嵌入候选人，因此我们不想打折大型\r\n               箱子太重了。）\r\n            \r\n             *我们将外部BlobbuildingStream汇总，但仅保留第一个分配的块。\r\n             \r\n","\r\n             Kind of instance reference.\r\n             ":"\r\n             类型的实例参考。\r\n             \r\n","\r\n            The event definitions to be emitted, in row order. These\r\n            are just the event definitions from the current generation.\r\n            ":"\r\n            事件定义要以行顺序排列。这些\r\n            只是当前一代的事件定义。\r\n            \r\n"," the BeginInvoke/Invoke/EndInvoke methods for a delegate, ":" 委托人的开头/调用/endinvoke方法，\r\n","\r\n            Gets all nodes and tokens with an annotation of the specified annotation kinds.\r\n            ":"\r\n            通过指定注释类型的注释获取所有节点和令牌。\r\n            \r\n"," if binary (non-text) data is detected.":" 如果检测到二进制（非文本）数据。\r\n","\r\n            This mode should always guarantee that analyzer action callbacks are enabled for generated code, i.e. ":"\r\n            此模式应始终保证为生成的代码启用了分析仪操作回调，即\r\n","Reading from a file path is not supported by the platform.":"平台不支持从文件路径读取。\r\n"," is within the span of ":" 在\r\n","\r\n            This compilation contains only the user supplied code; other generated code is not\r\n            available. As user code can depend on the results of generation, it is possible that\r\n            this compilation will contain errors.\r\n            ":"\r\n            此汇编仅包含用户提供的代码；其他生成的代码不是\r\n            可用的。由于用户代码可以取决于生成结果，因此\r\n            此汇编将包含错误。\r\n            \r\n","\r\n            Fills in stringIndexMap with data from stringIndex and write to stringWriter.\r\n            Releases stringIndex as the stringTable is sealed after this point.\r\n            ":"\r\n            使用StringIndex的数据填充StringIndexMap，然后写入StringWriter。\r\n            在此点之后，将StringIndex释放为弦乐词。\r\n            \r\n"," object\r\n            constructed from a JavaScript ":" 目的\r\n            由JavaScript构建\r\n"," should be reported.\r\n            ":" 应该报告。\r\n            \r\n","The type of value returned from a task.":"从任务返回的值类型。\r\n"," to store intermediate dataflow results while executing data flow analysis\r\n            and also to compute the final ":" 在执行数据流分析时存储中间数据流结果\r\n            并计算决赛\r\n"," that will be invoked after initialization.":"初始化后将调用。\r\n","Handle of the TypeDef for which we want to enqueue supertypes.":"我们想为之制定超级型的Typedef的手柄。\r\n","\r\n            Predicate kind for ":"\r\n            谓词类型\r\n"," and\r\n            selected at runtime if ":" 和\r\n            在运行时选择\r\n","\r\n            Defines options for initializing a new V8 runtime instance.\r\n            ":"\r\n            定义用于初始化新V8运行时实例的选项。\r\n            \r\n","\r\n            Gets the RuleSet associated with this ruleset include\r\n            ":"\r\n            获取与此规则集关联的规则集包括\r\n            \r\n","\r\n            The Int32 value 9\r\n            ":"\r\n            INT32值9\r\n            \r\n","\r\n            Create the stream which should be used for Emit. This should only be called one time.\r\n            ":"\r\n            创建应用于发射的流。这应该只称为一次。\r\n            \r\n","\r\n            The width of the token in characters, not including its leading and trailing trivia.\r\n            ":"令牌宽度的宽度，不包括其领先和尾随的琐事。\r\n            \r\n"," list and likely contains duplicate nodes for\r\n            nodes exposed by ":" 列表并可能包含重复的节点\r\n            暴露的节点\r\n","\r\n            Contains telemetry info for a specific analyzer, such as count of registered actions, the total execution time, etc.\r\n            ":"\r\n            包含特定分析仪的遥测信息，例如注册操作计数，总执行时间等。\r\n            \r\n","\r\n            The name assigned to the Addition operator.\r\n            ":"\r\n            分配给加法运营商的名称。\r\n            \r\n","\r\n            Defines a method to be called when a host object is exposed to script code.\r\n            ":"\r\n            定义一种将主机对象暴露于脚本代码时要调用的方法。\r\n            \r\n"," the source sequence contains more than ":" 源序列包含的更多\r\n","\r\n            Regions nested within this region.\r\n            ":"\r\n            区域嵌套在该区域内。\r\n            \r\n","\r\n            If this variable is in an ":"\r\n            如果此变量在\r\n","\r\n            Executes compilation actions or compilation end actions.\r\n            ":"\r\n            执行汇编操作或汇编最终操作。\r\n            \r\n","s and provides unique string keys \r\n             to distinguish them.\r\n            \r\n             The first ":"S并提供唯一的字符串键\r\n             区分他们。\r\n            \r\n             首先\r\n","The type of the third parameter of the bound function.":"绑定函数的第三参数的类型。\r\n","\r\n            The number of generic parameters. Zero if the type is not generic.\r\n            ":"\r\n            通用参数的数量。如果类型不通用，则零。\r\n            \r\n","\r\n            Imports a COM/ActiveX type from the specified server and exposes it to script code. The\r\n            registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            从指定的服务器导入COM/ActiveX类型，并将其公开为脚本代码。这\r\n            注册类由程序化标识符（ProgID）指定。\r\n            \r\n","Resource name.":"资源名称。\r\n","\r\n            Return the symbol that contains this symbol as far\r\n            as changes are concerned. For instance, an auto property\r\n            is considered the containing symbol for the backing\r\n            field and the accessor methods. By default, the containing\r\n            symbol is simply Symbol.ContainingSymbol.\r\n            ":"\r\n            返回包含此符号的符号\r\n            由于变化。例如，自动属性\r\n            被认为是背衬的包含符号\r\n            字段和访问者方法。默认情况下，包含\r\n            符号只是符号。\r\n            \r\n","\r\n            Generally, this should only be called by the creator (modulo pooling) of the bag (i.e. don't use bags to communicate -\r\n            if you need more info, pass more info).\r\n            ":"\r\n            通常，这只能由袋子的创建者（Modulo Pooling）调用（即不要使用袋子进行交流 - \r\n            如果您需要更多信息，请传递更多信息）。\r\n            \r\n","\r\n            Gets the type of the storage location that an instance of the pointer type points to.\r\n            ":"获取指针类型实例指向的存储位置的类型。\r\n            \r\n","\r\n            Set of diagnostics that have already been processed for application of programmatic suppressions. \r\n            ":"\r\n            已经处理了用于应用程序抑制的一组诊断。\r\n            \r\n","\r\n            The member is visible everywhere its declaring type is visible.\r\n            ":"\r\n            该成员在任何地方都可以看到，其声明类型是可见的。\r\n            \r\n","\r\n            Shows the constant value of the local, if there is one, in addition to its name.\r\n            For example \"x = 1\".\r\n            ":"\r\n            除了其名称外，还显示本地的恒定值。\r\n            例如“ x = 1”。\r\n            \r\n","\r\n            Returns an array of distinct elements, preserving the order in the original array.\r\n            If the array has no duplicates, the original array is returned. The original array must not be null.\r\n            ":"\r\n            返回一系列不同的元素，并保留原始数组中的顺序。\r\n            如果数组没有重复项，则返回原始数组。原始数组不得无效。\r\n            \r\n","\r\n            Gets all trivia with an annotation of the specified annotation kinds.\r\n            ":"\r\n            用指定注释种类的注释获得所有琐事。\r\n            \r\n","\r\n            Describes a group of modifiers for symbol declaration.\r\n            ":"\r\n            描述一组用于符号声明的修饰符。\r\n            \r\n"," for two reasons:\r\n            \r\n             1. ":" 有两个原因：\r\n            \r\n             1。\r\n","\r\n            Directory used to resolve relative paths stored in the arguments.\r\n            ":"\r\n            目录用于解决参数中存储的相对路径。\r\n            \r\n","\r\n            Convert given symbol to string representation.\r\n            ":"\r\n            将给定的符号转换为字符串表示。\r\n            \r\n","\r\n            Instance used to refer to the event being bound.\r\n            ":"\r\n            实例用于指代事件被绑定。\r\n            \r\n","The root node of the tree of nodes.":"节点树的根节点。\r\n"," against the published contract.\r\n            ":" 违反已发表的合同。\r\n            \r\n","\r\n            Returns Guid of previous delta, or default(Guid)\r\n            if full metadata or generation 1 delta.\r\n            ":"\r\n            返回以前的三角洲的GUID或默认值（GUID）\r\n            如果完全元数据或第1代三角洲。\r\n            \r\n","using System.Linq":"使用System.linq\r\n","\r\n            Current Usage: C# discard pattern\r\n            ":"\r\n            当前用法：C＃丢弃模式\r\n            \r\n","\r\n            The syntax node(s) that declared the symbol. If the symbol was declared in metadata\r\n            or was implicitly declared, returns an empty read-only array.\r\n            ":"\r\n            声明为符号的语法节点。如果在元数据中宣布该符号\r\n            或被隐式声明，返回一个空的只读数组。\r\n            \r\n",") by this\r\n            compilation. ":"） 这样\r\n            汇编。\r\n","\r\n            String option to configure names of additional methods (separated by '|') for CA1806 (https://docs.microsoft.com/visualstudio/code-quality/ca1806).\r\n            Allowed method name formats:\r\n              1. Method name only (includes all methods with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format\r\n                 with an optional \"M:\" prefix.\r\n            ":"\r\n            为CA1806（https://docs.microsoft.com/visualstudio/code-quality/ca1806）配置其他方法的名称（由'|'隔开）的字符串选项。\r\n            允许的方法名称格式：\r\n              1.仅方法名称（包括所有具有名称的方法，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format\r\n                 带有可选的“ M：”前缀。\r\n            \r\n","Indicates if source events (symbol declared, compilation unit completed event) should be included.":"指示是否应包括源事件（符号声明，汇编单元完成的事件）。\r\n","\r\n            Get full metadata handle of the property definition.\r\n            ":"\r\n            获取属性定义的完整元数据手柄。\r\n            \r\n"," method used in a pattern-based Range indexer.\r\n            ":" 在基于模式的范围索引器中使用的方法。\r\n            \r\n","\r\n            Gets property bag for the diagnostic. it will return ":"\r\n            获取诊断的财产袋。它将返回\r\n"," but doesn't throw an exception\r\n            if there are invalid characters in the path.\r\n            ":" 但没有抛出异常\r\n            如果路径中有无效的字符。\r\n            \r\n","A transform function to apply to each element that is not filtered out by ":"适用于未经过滤的每个元素的转换功能\r\n","\r\n            The path to the file to embed.\r\n            ":"\r\n            嵌入文件的路径。\r\n            \r\n","\r\n            Gets type information about a syntax node.\r\n            ":"\r\n            获取有关语法节点的类型信息。\r\n            \r\n","Name of the least recently modified file.":"最近修改的文件的名称。\r\n",".\r\n            Associated ":"。\r\n            联系\r\n","\r\n            This is distinguished from, for example, references to metadata symbols defined in assemblies that weren't referenced.\r\n            Symbols where this returns true can never be used successfully, and thus should never appear in any IDE feature.\r\n            ":"\r\n            这与例如未引用的组件中定义的元数据符号的引用相比，有所区别。\r\n            返回true的符号永远无法成功使用，因此绝不应该出现在任何IDE功能中。\r\n            \r\n","\r\n            Returns the full string representation of this node or token including its leading and trailing trivia.\r\n            ":"\r\n            返回该节点或令牌的完整字符串表示形式，包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Enumeration to express the type of executable being wrapped by Tracker.exe\r\n            ":"\r\n            枚举以表达tracker.exe包裹的可执行文件类型\r\n            \r\n","An optional short localizable title describing the diagnostic.":"可选的简短本地化标题，描述了诊断。\r\n","The name of the attribute to read":"读取的属性名称\r\n","), script code\r\n            will be able to access the properties stored in the collection as if they were members of\r\n            the object itself, using the script language's native syntax for member access. No\r\n            other members of the object will be accessible. This interface also allows objects to\r\n            implement dynamic properties for script languages that support them.\r\n            ":"），脚本代码\r\n            将能够访问集合中存储的属性，就好像它们是\r\n            对象本身，使用脚本语言的本地语法进行成员访问。不\r\n            该对象的其他成员将可以访问。该界面还允许对象\r\n            为支持它们的脚本语言实施动态属性。\r\n            \r\n","\r\n            Write string as UTF8 with null terminator.\r\n            ":"\r\n            用null终结器将字符串作为UTF8写。\r\n            \r\n"," if you want them to be considered equal.\r\n            ":" 如果您希望它们被视为平等。\r\n            \r\n",",\r\n            returns the event that this method is the adder or remover for.\r\n            Note, the set of possible associated symbols might be expanded in the future to \r\n            reflect changes in the languages.\r\n            ":"，，，，\r\n            返回此方法是加法器或去除剂的事件。\r\n            注意，将来可能会扩展一组可能的相关符号\r\n            反映语言的变化。\r\n            \r\n","\r\n            Creates a new tree of nodes with new nodes inserted after the specified node.\r\n            ":"\r\n            创建一个新的节点树，并在指定节点后插入新节点。\r\n            \r\n","\r\n            Gets the corresponding compilation namespace for the specified module or assembly namespace.\r\n            ":"\r\n            获取指定模块或汇编名称空间的相应汇编名称空间。\r\n            \r\n","\r\n            The member is visible only within its own assembly.\r\n            ":"\r\n            该成员仅在其自己的大会中可见。\r\n            \r\n",". Note that\r\n            such values will always fail equality comparison with JavaScript's\r\n            ":"。注意\r\n            这样的值将始终与JavaScript的平等比较失败\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified name and options.\r\n            ":"\r\n            用指定名称和选项初始化新的V8运行时实例。\r\n            \r\n","\r\n            Returns true if the given symbol has required visibility based on options in context of the given containing symbol:\r\n              1. If user has explicitly configured candidate ":"\r\n            如果给定符号在包含符号的上下文中需要根据选项，返回为true：\r\n              1.如果用户已明确配置了候选人\r\n","\r\n            The type of value stored at the target memory location.\r\n            ":"\r\n            存储在目标内存位置的值类型。\r\n            \r\n","\r\n            Get the text of the message in the given language.\r\n            ":"\r\n            用给定的语言获取消息文字。\r\n            \r\n","The zero-based index of the node to get or set.":"基于零的节点索引获取或设置。\r\n","\r\n            Returns true if this syntax tree has a root with SyntaxKind \"CompilationUnit\".\r\n            ":"\r\n            如果此语法树具有带有语法“ compilationunit”的根，则返回true。\r\n            \r\n","\r\n            Removes extension from path.\r\n            ":"\r\n            从路径上删除延伸。\r\n            \r\n","\r\n            Converts the symbol to a string representation.\r\n            ":"\r\n            将符号转换为字符串表示。\r\n            \r\n","MethodDef handle of the implementing method.":"实现方法的方法DEF句柄。\r\n","\r\n            This interface models the metadata representation of a pointer to a location in unmanaged memory.\r\n            ":"\r\n            该接口建模了指向非托管内存中位置的指针的元数据表示。\r\n            \r\n","\r\n            This field is special in some way, as specified by the name.\r\n            ":"\r\n            该字段在某种程度上是特殊的，如名称所指定。\r\n            \r\n","\r\n              Looks up a localized string similar to If tuple element nullable annotations are specified, the number of annotations must match the cardinality of the tuple..\r\n            ":"\r\n              查找类似于指定元组元素无效注释的本地化字符串，注释的数量必须匹配元组的基数。\r\n            \r\n","\r\n            Options that customize diagnostic severity as reported by the compiler.\r\n            ":"根据编译器报告的定制诊断严重程度的选项。\r\n            \r\n","\r\n            field.\r\n            ":"\r\n            场地。\r\n            \r\n"," if this is a 'lifted' binary operator.  When there is an \r\n            operator that is defined to work on a value type, 'lifted' operators are \r\n            created to work on the ":" 如果这是一个“提起”的二进制操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            Gets or sets the value of a named script object property.\r\n            ":"\r\n            获取或设置命名脚本对象属性的值。\r\n            \r\n","\r\n            True if the switch expressions arms cover every possible input value.\r\n            ":"\r\n            如果开关表达式手臂覆盖所有可能的输入值，则为正确。\r\n            \r\n","\r\n            All reference directives used in this compilation.\r\n            ":"\r\n            本汇编中使用的所有参考指令。\r\n            \r\n","\r\n            Id that associates an emitted user-defined or long-lived synthesized local variable \r\n            with a syntax node that defined it. If a syntax node defines multiple variables it \r\n            provides information necessary to identify which one of these variables is it.\r\n            ":"\r\n            ID与发射的用户定义或长寿命合成的本地变量相关联\r\n            使用定义它的语法节点。如果语法节点定义了多个变量\r\n            提供必要的信息来确定这些变量中的哪一个。\r\n            \r\n"," with all types replaced by types returned by specified translator.\r\n            Returns this instance if it doesn't hold on any types.\r\n            ":" 所有类型都被指定翻译器返回的类型所取代。\r\n            返回此实例，如果它不在任何类型上。\r\n            \r\n","\r\n            Returns whether nullable warnings are enabled for this context.\r\n            ":"\r\n            返回是否在此上下文中启用了无效警告。\r\n            \r\n","\r\n            Returns the fallback encoding for parsing source files, if used, or null\r\n            if not used\r\n            ":"\r\n            返回解析源文件的后备编码，如果使用或NULL\r\n            如果不使用\r\n            \r\n","\r\n            The name assigned to the RightShift operator.\r\n            ":"\r\n            分配给右置操作员的名称。\r\n            \r\n","\r\n            Returns true if signature matches signature of the field.\r\n            Signature should be in format described in MemberDescriptor.\r\n            ":"如果签名与该字段的签名匹配，则返回true。\r\n            签名应以成员描述符中描述的格式。\r\n            \r\n","If used without a ":"如果没有\r\n","\r\n            Produce a topological sort of a given directed acyclic graph, given a set of nodes which include all nodes\r\n            that have no predecessors. Any nodes not in the given set, but reachable through successors, will be added\r\n            to the result. This is an iterative rather than recursive implementation, so it is unlikely to cause a stack\r\n            overflow.\r\n            ":"\r\n            给定的一组节点包含所有节点\r\n            没有前辈。任何没有给定集中的节点，而是通过继任者到达的任何节点，将被添加\r\n            结果。这是一种迭代而不是递归实施，因此不太可能引起堆栈\r\n            溢出。\r\n            \r\n","op_Explicit":"op_explicit\r\n","The root path for FileTracker.dll.  Overrides the toolType if specified.":"FileTracker.dll的根路径。如果指定，则覆盖工具类型。\r\n"," methods for parsing words from text.\r\n            ":" 从文本中解析单词的方法。\r\n            \r\n",". There cannot\r\n            be initializers in both locations except in invalid code scenarios.\r\n            In C#, this node will never have an initializer.\r\n            This corresponds to the VariableDeclarationSyntax in C#, and the VariableDeclaratorSyntax in Visual Basic.\r\n            ":"。不能\r\n            在两个位置的初始化器除外，在无效的代码方案中。\r\n            在C＃中，此节点永远不会具有初始化器。\r\n            这对应于C＃中的variabledeclarationsyntax，以及Visual Basic中的variabledeclaratorsyntax。\r\n            \r\n","\r\n            Get parameters which type is the given type\r\n            ":"\r\n            获取参数哪种类型是给定类型\r\n            \r\n"," across the basic blocks until a fix point is reached.\r\n            ":" 在基本块上，直到达到固定点。\r\n            \r\n","Type to search for method.":"输入搜索方法。\r\n","\r\n            Given a namespace symbol, returns the corresponding module specific namespace symbol\r\n            ":"\r\n            给定的名称空间符号，返回相应的模块特定名称空间符号\r\n            \r\n","\r\n            Returns a list which contains all children of ":"\r\n            返回包含所有子女的清单\r\n"," are available in global declaration space.\r\n            ":" 在全球声明领域可用。\r\n            \r\n"," for compatibility.":" 兼容。\r\n"," with effective severity based on option or null if suppressed.":" 根据选项的有效严重程度，如果被抑制为无效。\r\n","The full path to the assembly on disk.":"磁盘上组装的完整路径。\r\n",".\r\n            If the exception handler itself throws an exception, that exception is ignored.\r\n            ":"。\r\n            如果异常处理程序本身会引发异常，则该异常将被忽略。\r\n            \r\n","\r\n              Looks up a localized string similar to If tuple element locations are specified, the number of locations must match the cardinality of the tuple..\r\n            ":"\r\n              查找类似于指定元组元素位置的本地化字符串，位置的数量必须匹配元组的基数。\r\n            \r\n","\r\n            Missing files have been detected in the TLog\r\n            ":"\r\n            TLOG中已检测到缺少文件\r\n            \r\n","\r\n            Writes a heap snapshot to the given stream.\r\n            ":"\r\n            将堆快照写在给定的流中。\r\n            \r\n","\r\n            This method determines the outputs for a source root (as in the contents of a rooting marker)\r\n            ":"\r\n            此方法确定源根的输出（如在生根标记的内容中）\r\n            \r\n","\r\n            The absolute span of this node in characters, including its leading and trailing trivia.\r\n            ":"\r\n            该节点在字符中的绝对跨度，包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Returns true if the full image of the module is available.\r\n            ":"如果可用的模块的完整图像，则返回true。\r\n            \r\n","Flag indicating whether analyzer diagnostics with ":"指示分析仪诊断的标志是否具有\r\n"," is a mapped path.\r\n            ":" 是映射的路径。\r\n            \r\n",".\r\n            Allowed option values: One or more fields of ":"。\r\n            允许的选项值：一个或多个字段\r\n",").\r\n                3. Location created for certain symbols which do not have a declaration in executable code, i.e. no ":"）。\r\n                3.为某些符号创建的位置，这些符号没有可执行代码中没有声明的位置，即否\r\n","An index in the array pointing to the position where ":"阵列中指向位置的索引\r\n"," when it is not null/Nothing.\r\n            Identity if result type of the operation is the same as type of ":" 当它不是零/什么都没有的时候。\r\n            身份如果结果类型的操作类型与类型相同\r\n","\r\n            FixedLocalizableString representing an empty string.\r\n            ":"\r\n            firceLocalizableString表示一个空字符串。\r\n            \r\n","\r\n            Method must be called before calling INamedEntity.Name.\r\n            ":"\r\n            在调用inamameNtity.name之前，必须调用方法。\r\n            \r\n"," elements; otherwise, ":" 元素；否则，\r\n","\r\n            Given a set of TLog names, formats a rooting marker from them, that additionally replaces \r\n            all PIDs and TIDs with \"[ID]\" so the cache doesn't get overloaded with entries \r\n            that should be basically the same but have different PIDs or TIDs in the name. \r\n            ":"\r\n            给定一组TLOG名称，将其格式从它们的加根标记，此外还取代了\r\n            所有带有“ [id]”的PID和TIDS，因此缓存不会超过条目\r\n            这基本上应该是相同的，但名称中具有不同的pid或tids。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified nodes being tracked.\r\n            \r\n            Use GetCurrentNode on the subtree resulting from this operation, or any transformation of it,\r\n            to get the current node corresponding to the original tracked node.\r\n            ":"\r\n            创建一个新的节点树，并跟踪指定的节点。\r\n            \r\n            使用该操作产生的子树上的getCurrentNode或任何转换，\r\n            要获取与原始跟踪节点相对应的当前节点。\r\n            \r\n","\r\n              Looks up a localized string similar to The version of Windows PDB writer is older than required: '{0}'.\r\n            ":"\r\n              查找类似于Windows PDB Writer版本的本地化字符串，比“ {0}”'。\r\n            \r\n","\r\n            This function is provided for script languages that do not support dynamic properties.\r\n            ":"\r\n            此功能是为不支持动态属性的脚本语言提供的。\r\n            \r\n","The name of the assembly that contains the host type to import.":"包含要导入的主机类型的组件名称。\r\n","\r\n            If no annotations are copied, just returns ":"\r\n            如果没有复制注释，只需返回\r\n"," only if the current value\r\n            is ":" 仅当当前值\r\n            是\r\n","Compilation to which analyzers are to be added.":"要添加分析仪的汇编。\r\n","\r\n            Returns the required language version found in a ":"\r\n            返回在\r\n","\r\n            Returns true if the given source symbol has required visibility based on options:\r\n              1. If user has explicitly configured candidate ":"\r\n            如果给定的源符号需要根据选项的可见性，则返回true：\r\n              1.如果用户已明确配置了候选人\r\n","\r\n            The return value has associated marshalling information.\r\n            ":"\r\n            返回值具有关联的编组信息。\r\n            \r\n","\r\n            True if the named argument provides the value of a field.\r\n            ":"\r\n            如果命名参数提供字段的值，则为正确。\r\n            \r\n","\r\n            Represents a reference to a declared local variable.\r\n            ":"\r\n            代表对已声明的本地变量的引用。\r\n            \r\n","\r\n            IOperation that has this operation as a child. Null for the root.\r\n            ":"\r\n            小时候有这种操作的同意。无效根。\r\n            \r\n","\r\n            Local variable used to store the value of Select Case during the execution of Case statements.\r\n            ":"\r\n            局部变量用于在执行案例语句期间存储选定案例的值。\r\n            \r\n","\r\n            Includes identities of references passed in the compilation constructor \r\n            as well as those specified via directives in source code. \r\n            ":"\r\n            包括在编译构造器中通过的参考的身份\r\n            以及通过源代码中指令指定的那些。\r\n            \r\n","\r\n            Represents a regular ":"\r\n            代表常规\r\n","\r\n            Returns diagnostics produced by compilation actions of all ":"\r\n            所有人的汇编行动产生的回报诊断\r\n","\r\n            Creates a compiled script with an associated document name, generating cache data for accelerated recompilation.\r\n            ":"\r\n            创建一个带有关联文档名称的编译脚本，生成用于加速重新编译的缓存数据。\r\n            \r\n","\r\n            The handle of the first field of the type.\r\n            ":"\r\n            类型的第一个字段的手柄。\r\n            \r\n","\r\n            The method eagerly reads the entire content of ":"\r\n            该方法急切地读取的全部内容\r\n","\r\n            The list of all interfaces of which this type is a declared subtype, excluding this type\r\n            itself. This includes all declared base interfaces, all declared base interfaces of base\r\n            types, and all declared base interfaces of those results (recursively). This also is the effective\r\n            interface set of a type parameter. Each result\r\n            appears exactly once in the list. This list is topologically sorted by the inheritance\r\n            relationship: if interface type A extends interface type B, then A precedes B in the\r\n            list. This is not quite the same as \"all interfaces of which this type is a proper\r\n            subtype\" because it does not take into account variance: AllInterfaces for\r\n            IEnumerable<string> will not include IEnumerable<object>.\r\n            ":"\r\n            此类型的所有接口的列表是声明的亚型，不包括此类型\r\n            本身。这包括所有声明的基本接口，所有声明为基础的基本接口\r\n            类型，所有这些结果的基本接口（递归）。这也是有效的\r\n            类型参数的接口集。每个结果\r\n            完全出现在列表中。此列表在拓扑上被继承分类\r\n            关系：如果接口类型A扩展了接口类型B，则A在BE中的B之前\r\n            列表。这与“这种类型的所有接口”不完全相同\r\n            子类型“因为它不考虑差异：\r\n            iEnumerable <string>将不包括iEnumerable <object>。\r\n            \r\n","\r\n            Determines if the symbol is accessible from the specified location. \r\n            ":"\r\n            确定是否可以从指定位置访问符号。\r\n            \r\n","\r\n            Represents a mutable bag of diagnostics. You can add diagnostics to the bag,\r\n            and also get all the diagnostics out of the bag (the bag implements\r\n            IEnumerable<Diagnostics>. Once added, diagnostics cannot be removed, and no ordering\r\n            is guaranteed.\r\n            \r\n            It is ok to Add diagnostics to the same bag concurrently on multiple threads.\r\n            It is NOT ok to Add concurrently with Clear or Free operations.\r\n            ":"\r\n            代表一袋可变的诊断袋。您可以将诊断添加到包中，\r\n            还可以从包包中获取所有诊断（袋子的工具）\r\n            ienumerable <Dimainostics>。一旦添加，就无法删除诊断，也不会订购\r\n            保证。\r\n            \r\n            可以在多个线程上同时将诊断添加到同一包中。\r\n            与清晰或免费操作同时添加不可能。\r\n            \r\n","\r\n            C# and VB. Encodes EnC local variable slot map.\r\n            See https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#EditAndContinueLocalSlotMap.\r\n            ":"\r\n            C＃和VB。编码ENC局部变量插槽图。\r\n            请参阅https://github.com/dotnet/corefx/blob/master/src/system.reflection.metadata/specs/portablepdb-metadata.md#editandandandandcontinelocalslotmap。\r\n            \r\n","\r\n            Represents the root node of a structured trivia tree (for example, a preprocessor directive\r\n            or a documentation comment). From this root node you can traverse back up to the containing\r\n            trivia in the outer tree that contains it.\r\n            ":"\r\n            表示结构化琐事树的根节点（例如，预处理器指令\r\n            或文档评论）。从这个根节点，您可以遍历包含\r\n            包含它的外树中的琐事。\r\n            \r\n","\r\n            The 1-based index of the method definition.\r\n            The index is into the full metadata.\r\n            ":"\r\n            方法定义的1个基索引。\r\n            该索引进入了完整的元数据。\r\n            \r\n","\r\n            Supported suppression descriptors for diagnostic suppressor, if any.\r\n            ":"\r\n            支持抑制描述符，用于诊断抑制器（如果有）。\r\n            \r\n","\r\n            Read a UInt16 value from the stream. This value must have been written using ":"\r\n            从流中读取UINT16值。该值必须使用\r\n","\r\n            Note that for namespace symbol, the declaring syntax might be declaring a nested namespace.\r\n            For example, the declaring syntax node for N1 in \"namespace N1.N2 {...}\" is the entire\r\n            NamespaceDeclarationSyntax for N1.N2. For the global namespace, the declaring syntax will\r\n            be the CompilationUnitSyntax.\r\n            ":"\r\n            请注意，对于名称空间符号，声明的语法可能会声明一个嵌套的名称空间。\r\n            例如，“命名空间n1.n2 {...}”中N1的声明语法节点是整个\r\n            n1.n2的namespacedeclarationsyntax。对于全局名称空间，声明的语法将\r\n            成为汇编单数。\r\n            \r\n","\r\n            Represents the '+' operator.\r\n            ":"\r\n            代表“+”运算符。\r\n            \r\n","\r\n            \"List`1\" instead of \"List<T>\" (\"List(of T)\" in VB). Overrides GenericsOptions on\r\n            types.\r\n            ":"\r\n            “ list '1”而不是“ list <t>”（“ t）中的“ list（of t）”。覆盖仿制药\r\n            类型。\r\n            \r\n","ITypedArray<int>":"ItypedArray <int>\r\n"," should split compound words.\r\n            ":" 应该拆分复合单词。\r\n            \r\n"," on a basic block.\r\n            It stores the PointsTo value for each ":" 在基本块上。\r\n            它存储每个值\r\n","\r\n            Represents a type parameter in a generic type or generic method.\r\n            ":"\r\n            代表通用类型或通用方法中的类型参数。\r\n            \r\n","\r\n            An unique identifier for the diagnostic.\r\n            ":"\r\n            诊断的唯一标识符。\r\n            \r\n","\r\n            Represents a conditionally accessed operation. Note that ":"\r\n            表示有条件访问的操作。注意\r\n","\r\n              Looks up a localized string similar to Cannot deserialize type '{0}'..\r\n            ":"\r\n              查找类似于不能绝对序列化类型的局部字符串'{0}'..\r\n            \r\n","A sequence of nodes to use in the tree in place of the old node.":"在树上使用的一系列节点代替旧节点。\r\n","\r\n            Gets the element in the collection at the current position of the enumerator.\r\n            ":"\r\n            在枚举器的当前位置获取集合中的元素。\r\n            \r\n",". The resulting ":"。所结果的\r\n","\r\n            Analyze control-flow within a part of a method body. \r\n            ":"\r\n            在方法主体的一部分内分析控制流。\r\n            \r\n","\r\n            Visitor to force translation of all symbols that will be referred to\r\n            in metadata. Allows us to build the set of types that must be embedded\r\n            as local types.\r\n            ":"\r\n            访客强迫所有符号的翻译\r\n            在元数据中。允许我们构建必须嵌入的类型集\r\n            作为本地类型。\r\n            \r\n","\r\n            An Entry itself serves a lock object, and contains the real value.\r\n            ":"\r\n            条目本身提供锁定对象，并包含实际值。\r\n            \r\n","\r\n            Get the warning level for warnings (e.g., 1 or greater for C#). VB does not have warning\r\n            levels and always uses 1. Errors should return 0.\r\n            ":"\r\n            获取警告级别的警告级别（例如，C＃1或更高）。 VB没有警告\r\n            级别并始终使用1.错误应返回0。\r\n            \r\n","\r\n            Creates a multi-module assembly.\r\n            ":"\r\n            创建一个多模块组件。\r\n            \r\n",".\r\n            If specified, the callback is invoked the first time a module attempts to retrieve its\r\n            context information. The properties it returns are made available to the module\r\n            implementation. This mechanism can be used to expose host resources selectively,\r\n            securely, and without polluting the script engine's global namespace.\r\n            ":"。\r\n            如果指定，则首次调用回调，模块试图检索其\r\n            上下文信息。它返回的属性可用于模块\r\n            执行。该机制可用于选择性地公开主机资源，\r\n            安全，并且没有污染脚本引擎的全局名称空间。\r\n            \r\n","\r\n            Get all the sequence points, possibly mapping them using #line/ExternalSource directives, and mapping\r\n            file names to debug documents with the given mapping function.\r\n            ":"\r\n            获取所有序列点，可能使用＃行/externalsource指令映射它们，并映射\r\n            使用给定的映射功能调试文档的文件名。\r\n            \r\n","The dictionary to add outputs to":"词典将输出添加到\r\n","\r\n            This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n            change it in the future.\r\n            https://github.com/dotnet/roslyn/issues/27600: Figure out how to make this API public. See BoundAggregateClause node in VB compiler.\r\n            ":"\r\n            该界面保留用于通过其关联的API实现。我们保留权利\r\n            将来更改它。\r\n            https://github.com/dotnet/roslyn/issues/27600：弄清楚如何公开此API。请参阅VB编译器中的boundaggregatecla节点。\r\n            \r\n","The resolution scope token":"分辨率范围令牌\r\n","\r\n            Contains memory usage information for a V8 runtime.\r\n            ":"\r\n            包含V8运行时的内存使用信息。\r\n            \r\n","\r\n            Lazily populated dictionary indicating whether a source file has any hidden regions - we populate it lazily to avoid realizing all syntax trees in the compilation upfront.\r\n            ":"\r\n            懒惰的词典指示源文件是否具有任何隐藏区域 - 我们懒洋洋地填充了它，以避免预先实现汇编中的所有语法树。\r\n            \r\n","\r\n            The unmanaged type to which the managed type will be marshalled. This can be UnmanagedType.CustomMarshaler, in which case the unmanaged type\r\n            is decided at runtime.\r\n            ":"\r\n            托管类型的非托管类型将被编组。这可以是UnmanagedType.custommarshaler，在这种情况下是非管理类型\r\n            在运行时决定。\r\n            \r\n","\r\n            Gets or sets an optional context callback for the document.\r\n            ":"\r\n            获取或设置文档的可选上下文回调。\r\n            \r\n","\r\n            Represents an analyzer assembly reference that contains diagnostic analyzers.\r\n            ":"\r\n            代表包含诊断分析仪的分析仪组装参考。\r\n            \r\n","\r\n            Determines how the global namespace is displayed.\r\n            ":"\r\n            确定如何显示全局名称空间。\r\n            \r\n","An optional object to track analysis state.":"跟踪分析状态的可选对象。\r\n","\r\n            In C#, replace non-printable (e.g. control) characters with dedicated (e.g. \\t) or unicode (\\u0001) escape sequences.\r\n            In Visual Basic, replace non-printable characters with calls to ChrW and vb* constants.\r\n            ":"\r\n            在C＃中，用专用（例如\\ t）或Unicode（\\ u0001）逃生序列替换不打印（例如控制）字符。\r\n            在Visual Basic中，用呼叫CHRW和VB*常数替换不可打印的字符。\r\n            \r\n","\r\n            When an extension method is in it's non-reduced form it will be will be marked as MethodName.\r\n            ":"\r\n            当扩展方法以其非还原形式为单位时，它将被标记为方法名称。\r\n            \r\n","\r\n            Context passed to a source generator when ":"\r\n            上下文传递给源生成器时\r\n","An indicator of the kind of result":"结果的指标\r\n","\r\n            Copies all SyntaxAnnotations, if any, from this SyntaxToken instance and attaches them to a new instance based on ":"\r\n            从此语法中复制所有语法（如果有），并将它们附加到基于新实例上\r\n","Analyzer whose actions are to be executed.":"分析仪将执行其行动。\r\n","\r\n            Primary method that flows analysis data through the given flow edge/branch.\r\n            Returns false if the branch is conditional and the branch value always evaluates to false.\r\n            ":"\r\n            通过给定流量边缘/分支流动分析数据的主要方法。\r\n            如果分支为条件并且分支值始终评估为false，则返回false。\r\n            \r\n","\r\n              Looks up a localized string similar to A SuppressionDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space..\r\n            ":"\r\n              查找类似于suppressionDeScriptor的本地化字符串必须具有一个既不是null也不是空字符串的ID，也必须仅包含空白的字符串。\r\n            \r\n","\r\n            Returns marshalling data or null of MarshalAs attribute isn't applied on the return value.\r\n            ":"\r\n            返回编组数据或MARSHALAS属性的零件不会在返回值上应用。\r\n            \r\n","A cancellation token for the search.":"取消令牌供搜索。\r\n","\r\n            Assembly symbol referenced by a AssemblyRef for which we couldn't find a matching \r\n            compilation reference but we found one that differs in version. \r\n            Created only for assemblies that require runtime binding redirection policy,\r\n            i.e. not for Framework assemblies.\r\n            ":"\r\n            汇编符号由我们找不到匹配的汇编符号\r\n            汇编引用，但我们发现版本有所不同。\r\n            仅针对需要运行时绑定重定向策略的组件创建，\r\n            即，不是用于框架组件。\r\n            \r\n","Optional invocation arguments.":"可选的调用参数。\r\n","\r\n            Represents an initialization of a field.\r\n            ":"\r\n            表示字段的初始化。\r\n            \r\n"," of operations that are executed with implicit reference to the ":"执行的操作，并隐式参考\r\n","\r\n            Returns a new INamedTypeSymbol representing a native integer.\r\n            ":"\r\n            返回代表本地整数的新的InamedTypeSymbol。\r\n            \r\n","\r\n            Tries to execute operation block actions for the given analyzer for the given declaration.\r\n            ":"\r\n            试图为给定的声明执行给定分析仪的操作块操作。\r\n            \r\n","Optional delegate to add categorized local analyzer diagnostics.":"可选的代表以添加分类本地分析仪诊断。\r\n","The float floating-point constant's string":"浮点浮点常数的字符串\r\n","\r\n            Creates a new node identical to this node with the specified annotations attached.\r\n            ":"创建一个与此节点相同的新节点，并随附指定的注释。\r\n            \r\n","The name of a field.":"字段的名称。\r\n","Array.GetValue":"array.getValue\r\n","\r\n            A list of objects representing persisted instances of types that extend System.Attribute. Provides an extensible way to associate metadata\r\n            with this assembly.\r\n            ":"代表持续的类型实例的对象列表。提供了一种可扩展的方式来关联元数据\r\n            与这个组装。\r\n            \r\n","If items is null (default)":"如果项目为null（默认）\r\n","\r\n            Initialized member.\r\n            ":"\r\n            初始化成员。\r\n            \r\n","\r\n            Cached value for empty ":"\r\n            空虚的缓存价值\r\n","\r\n            Determines whether this node has any leading trivia.\r\n            ":"\r\n            确定该节点是否具有任何领先的琐事。\r\n            \r\n","\r\n            Acquires an element getter method for a given array type\r\n            ":"\r\n            获取给定数组类型的元素Getter方法\r\n            \r\n"," are treated as warning\r\n            level 1. In other words, these diagnostics which typically interact with editor features are enabled unless\r\n            the special ":" 被视为警告\r\n            换句话说，换句话说，除非\r\n            特别的\r\n","\r\n            A symbol representing the script globals type.\r\n            ":"\r\n            代表脚本全球类型的符号。\r\n            \r\n","A string literal.":"字符串文字。\r\n",", \r\n            indicating whether or not that value is meaningful.\r\n            ":"，，，，\r\n            指示该值是否有意义。\r\n            \r\n","\r\n            Returns a reference to the unit that defines the given referenced type. If the referenced type is a structural type, such as a pointer or a generic type instance,\r\n            then the result is null.\r\n            ":"\r\n            返回对定义给定引用类型的单元的引用。如果引用类型是结构性类型，例如指针或通用类型实例，则\r\n            然后结果为null。\r\n            \r\n","Completed member symbol.":"完成的会员符号。\r\n","Path to use for any temporary file generation.":"用于任何临时文件生成的途径。\r\n","The character position for determining the enclosing declaration scope and\r\n             accessibility.":"确定封闭声明范围的字符位置和\r\n             可访问性。\r\n","\r\n            Returns the type parameters that this type has. If this is a non-generic type,\r\n            returns an empty ImmutableArray.  \r\n            ":"\r\n            返回此类型具有的类型参数。如果这是一种非传播类型，\r\n            返回一个空的Immutablearray。\r\n            \r\n","\r\n            TypeDefs defined in modules linked to the assembly being emitted are listed in the ExportedTypes table.\r\n            ":"\r\n            在ExportedTypes表中列出了链接到要排放的组件的模块中定义的类型FEFS。\r\n            \r\n","CStr":"CSTR\r\n","\r\n            C# and VB. The name of the state machine type. Emitted for async and iterator kick-off methods.\r\n            ":"\r\n            C＃和VB。状态计算机类型的名称。用于异步和迭代启动方法的发射。\r\n            \r\n","\r\n            Dictionary from interprocedural method symbols invoked to their corresponding ":"\r\n            概要解释方法符号的词典调用其相应的词典\r\n","\r\n            Region with the only purpose to represent the life-time of locals, intermediate results, and nested methods (local functions, lambdas).\r\n            The lifetime of a local variable is the portion of program execution during which storage is guaranteed to be reserved for it.\r\n            The lifetime of a nested method is the portion of program execution within which the method can be referenced.\r\n            The lifetime of an intermediate result (capture) is the portion of program execution within which the result can be referenced.\r\n            ":"\r\n            具有代表当地人寿命，中间结果和嵌套方法（本地功能，lambdas）的唯一目的的区域。\r\n            局部变量的寿命是程序执行的一部分，在此期间保证为其保留存储。\r\n            嵌套方法的寿命是程序执行的一部分，可以在其中引用该方法。\r\n            中间结果（捕获）的寿命是程序执行的一部分，可以在其中引用结果。\r\n            \r\n","If the file should actually be written to the TLog (true) or not (false)":"如果文件实际上应写入tlog（true）或不写（false）\r\n","\r\n            The name of the state machine generated for the method, \r\n            or null if the method isn't the kickoff method of a state machine.\r\n            ":"\r\n            为该方法生成的状态机的名称，\r\n            或null如果该方法不是状态机的开球方法。\r\n            \r\n"," which will have\r\n             ":" 会有\r\n             \r\n"," values that represent\r\n            nonexistent, missing, unknown, or undefined data. The ClearScript library maps such values\r\n            to instances of this class.\r\n            ":" 代表的值\r\n            不存在，缺失，未知或未定义的数据。 clearscript库地图此类值\r\n            为此班级的实例。\r\n            \r\n","\r\n            Represents subsystem version, see /subsystemversion command line \r\n            option for details and valid values.\r\n            \r\n            The following table lists common subsystem versions of Windows.\r\n            \r\n            Windows version             Subsystem version\r\n              - Windows 2000                5.00\r\n              - Windows XP                  5.01\r\n              - Windows Vista               6.00\r\n              - Windows 7                   6.01\r\n              - Windows 8 Release Preview   6.02\r\n            ":"\r\n            代表子系统版本，请参见 /子系统命令行\r\n            详细信息和有效值的选项。\r\n            \r\n            下表列出了Windows的常见子系统版本。\r\n            \r\n            Windows版本子系统版本\r\n              -Windows 2000 5.00\r\n               -  Windows XP 5.01\r\n               -  Windows Vista 6.00\r\n               -  Windows 7 6.01\r\n               -  Windows 8版本预览6.02\r\n            \r\n","\r\n            Report additional information related to analyzers, such as analyzer execution time.\r\n            ":"\r\n            报告与分析仪有关的其他信息，例如分析仪执行时间。\r\n            \r\n","\r\n            Returns true if the action1 is stricter than action2.\r\n            ":"\r\n            如果动作1比Action2更严格，则返回真实。\r\n            \r\n","\r\n            Method is an event raise.\r\n            ":"\r\n            方法是事件加薪。\r\n            \r\n","Unique metadata references resolved from #r directives.":"独特的元数据参考文献从#R指令中得出。\r\n","\r\n                    and\r\n                    ":"\r\n                    和\r\n                    \r\n","\r\n            A Span-compatible version of ":"\r\n            与跨兼容的版本的\r\n","\r\n            Information decoded from well-known custom attributes applied on a type.\r\n            ":"\r\n            从类型上应用的众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            Modify this bit vector by bitwise AND-ing each element with the other bit vector.\r\n            For the purposes of the intersection, any bits beyond the current length will be treated as zeroes.\r\n            Return true if any changes were made to the bits of this bit vector.\r\n            ":"\r\n            通过与另一个位向量的每个元素通过位和每个元素修改此位向量。\r\n            出于交叉路口的目的，当前长度以外的任何位都将被视为零。\r\n            如果对此位向量的位进行了任何更改，则返回true。\r\n            \r\n",". This is further differentiated by ":"。这进一步通过\r\n","\r\n            True if the symbol is externally visible outside this assembly.\r\n            ":"\r\n            如果该符号在此组件外面可见，则为thus。\r\n            \r\n"," for entity PointsTo values and\r\n            the predicated values based on true/false runtime values of predicated entities.\r\n            ":"对于实体点端值和\r\n            基于预测实体的真/错误运行时值的预测值。\r\n            \r\n","\r\n            Gets a list of all the diagnostics in the sub tree that has this node as its root.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取具有该节点作为根部的子树中所有诊断的列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            Imports a COM/ActiveX type from the specified server and exposes it to script code. The\r\n            registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            从指定的服务器导入COM/ActiveX类型，并将其公开为脚本代码。这\r\n            注册类由类标识符（CLSID）指定。\r\n            \r\n"," containing a mix of regular and unmerged partial global configs":" 包含常规和未合并的部分全局配置的混合\r\n","WindowsRuntime identity can't be retargetable":"Windowsruntime身份不能重新定位\r\n","Root field initializer operation, which must have a null parent.":"根字段初始化器操作，必须具有无效的父。\r\n","\r\n            Represents a reference to an event.\r\n            ":"\r\n            代表对事件的引用。\r\n            \r\n","\r\n            Parses a version string of the form \"major [ '.' minor [ '.' ( '*' | ( build [ '.' ( '*' | revision ) ] ) ) ] ]\"\r\n            as accepted by System.Reflection.AssemblyVersionAttribute.\r\n            ":"\r\n            解析“ major ['。''的形式的版本字符串。次要的 [ '。' （'*'|（构建['。'（'*'| revision）]）]]”\r\n            如System.Reflection.semblyVersionAttribute所接受的。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified nodes removed.\r\n            ":"\r\n            使用已删除指定的节点创建一个新的节点树。\r\n            \r\n","\r\n            Evaluates a compiled script.\r\n            ":"\r\n            评估编译脚本。\r\n            \r\n","\r\n            Adapts an ISourceGenerator to an incremental generator that\r\n            by providing an execution environment that matches the old one\r\n            ":"\r\n            将ISOURCEGENERATOR调整为增量发生器\r\n            通过提供与旧的执行环境相匹配的执行环境\r\n            \r\n","\r\n            This is how VB Anonymous Types combine hash values for fields.\r\n            ":"\r\n            这就是VB匿名类型结合字段的哈希值的方式。\r\n            \r\n",". In\r\n            VBScript these objects are the native array type. JScript code can use the\r\n            ":"。在\r\n            vbScript这些对象是本机数组类型。 JScript代码可以使用\r\n            \r\n","Semantic model to analyze.":"要分析的语义模型。\r\n","\r\n            Individual clauses of the ReDim operation.\r\n            ":"\r\n            Redim操作的各个子句。\r\n            \r\n","\r\n            The line is following a #line default directive or a #line directive with at least a line number.\r\n            If there is no line directive at all, Visible is returned for all lines.\r\n            ":"\r\n            该行遵循#line默认指令或具有至少线号的#line指令。\r\n            如果根本没有行指令，则所有行都可以返回可见的。\r\n            \r\n","\r\n            The method definition at the 0-based index into the full set. Deltas\r\n            are only required to support indexing into current generation.\r\n            ":"\r\n            基于0的索引的方法定义为完整集。三角洲\r\n            仅需要支持索引到当前一代。\r\n            \r\n","\r\n            Returns the generic method of which this method is an instance.\r\n            ":"\r\n            返回该方法为实例的通用方法。\r\n            \r\n","\r\n            The Int32 value 10\r\n            ":"\r\n            INT32值10\r\n            \r\n","True if the accessor signature is appropriate for the containing property.":"如果登录器签名适合包含的属性，则为正确。\r\n"," wrapping for field, property, and method return values.\r\n            ":" 字段，属性和方法返回值包装。\r\n            \r\n","\r\n            Fully populate the underlying dictionary. Once this returns, the dictionary is guaranteed \r\n            to have every key in it.\r\n            ":"\r\n            完全填充了基础词典。一旦返回，就可以保证字典\r\n            拥有所有钥匙。\r\n            \r\n","\r\n            This is a tuple for optimization purposes. In valid cases, we need to store\r\n            only one assembly index per type. However, if we found more than one, we\r\n            keep a second one as well to use it for error reporting.\r\n            We use -1 in case there was no forward.\r\n            ":"\r\n            这是用于优化目的的元组。在有效情况下，我们需要存储\r\n            每种类型只有一个组件索引。但是，如果我们发现多个，我们\r\n            还要保留第二个以用于错误报告。\r\n            如果没有前向，我们使用-1。\r\n            \r\n","\r\n            The set of local variables that are written inside a region.\r\n            ":"\r\n            在区域内写的一组本地变量。\r\n            \r\n","read-write":"读写\r\n","\r\n            to get a reference to it.\r\n            ":"\r\n            获取参考。\r\n            \r\n","\r\n            Zero or more nested types defined by this type.\r\n            ":"\r\n            零或多个由此类型定义的嵌套类型。\r\n            \r\n","\r\n            The format of the signature will be determined by the other flags passed.\r\n            ":"\r\n            签名格式将由通过的其他标志确定。\r\n            \r\n","\r\n            Gets or sets a semicolon-delimited list of directory URLs or paths to search for documents.\r\n            ":"\r\n            获取或设置目录URL或搜索文档的路径的半脱落列表。\r\n            \r\n","\r\n            Stores a dynamic analysis instrumentation payload array. The value is initialized in\r\n            synthesized mehtod prologue code and referred to throughout the method body.\r\n            ":"\r\n            存储动态分析仪器有效载荷阵列。该值初​​始化\r\n            合成MEHTOD序言代码，并在整个方法主体中提及。\r\n            \r\n","\r\n            Represents an undefined value.\r\n            ":"\r\n            代表一个不确定的值。\r\n            \r\n"," shall be used as a default.\r\n            ":" 应用作默认值。\r\n            \r\n","\r\n            No change to symbol or members.\r\n            ":"\r\n            没有更改符号或成员。\r\n            \r\n"," region with ":" 区域\r\n","\r\n            Creates a new list with the specified element replaced by the new node.\r\n            ":"\r\n            创建一个由新节点代替的指定元素的新列表。\r\n            \r\n","\r\n            Includes the name of corresponding interface on members that explicitly implement\r\n            interface members.\r\n            For example, \"IFoo.Bar { get; }\".\r\n            ":"\r\n            包括明确实现的成员上对应接口的名称\r\n            接口成员。\r\n            例如，“ ifoo.bar {get;}”。\r\n            \r\n","\r\n            Initialize the immutable array referenced by ":"\r\n            初始化由不变的阵列引用的\r\n","\r\n            Can be either a PUBLICKEYBLOB or PRIVATEKEYBLOB. The BLOB must be unencrypted.\r\n            ":"\r\n            可以是publicKeyblob或privateKeyblob。斑点必须没有加密。\r\n            \r\n","\r\n            Information that describes how a method from the underlying Platform is to be invoked.\r\n            ":"\r\n            描述如何调用来自基础平台的方法的信息。\r\n            \r\n","Empty file paths are disallowed, as the debugger finds source by looking up files by their name (and then verifying their signature)":"空白文件路径是不允许的，因为调试器通过以其名称查找文件来找到源（然后验证其签名）\r\n","\r\n            Converts the set to a list of (key, descriptor) pairs sorted by key.\r\n            ":"\r\n            将集合转换为（键，描述符）对的列表，该列表由键排序。\r\n            \r\n","Manifest module PE image stream.":"清单模块PE图像流。\r\n","The nearest float value, if conversion succeeds":"最近的浮点值，如果转换成功\r\n",".\r\n            If there is more than one named argument with this name, it returns the last one.\r\n            If no named argument is found then the ":"。\r\n            如果此名称有多个命名参数，则返回最后一个。\r\n            如果找不到命名参数，那么\r\n","\r\n            Opens a method.\r\n            ":"\r\n            打开一种方法。\r\n            \r\n","\r\n            Layout of the type.\r\n            ":"\r\n            类型的布局。\r\n            \r\n","\r\n            Original key file path, or null if the key is provided by the ":"\r\n            原始密钥文件路径或null如果键提供\r\n"," for symbols.\r\n            ":" 对于符号。\r\n            \r\n","\r\n            A type used as a tag that indicates which type of modification applies.\r\n            ":"\r\n            用作标签的类型，指示应用哪种类型的修改。\r\n            \r\n","\r\n            Determines whether this trivia has the specific annotation.\r\n            ":"\r\n            确定该琐事是否具有特定的注释。\r\n            \r\n"," operator and VB 'Or' operator.\r\n            ":"操作员和VB'或'操作员。\r\n            \r\n","\r\n            Decodes attribute parameter type from method signature.\r\n            ":"\r\n            解码从方法签名中的属性参数类型。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.UInt16\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toUInt16(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.uint16”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.touint16（42））;\r\n            \r\n","\r\n            Returns an index the reference is bound.\r\n            ":"\r\n            返回索引引用是绑定的。\r\n            \r\n","The node to insert after; a descendant of the root node an element of a list member.":"插入的节点；根节点的后代列表成员的元素。\r\n","\r\n            The number of elements in the array.\r\n            ":"\r\n            数组中的元素数。\r\n            \r\n","\r\n            When generation fails due to an ":"\r\n            当一代人失败时\r\n","\r\n            Parse a string representing a C# using (or extern alias) directive.\r\n            ":"\r\n            解析代表C＃的字符串使用（或外部别名）指令。\r\n            \r\n","A function that computes replacement trivia for\r\n            the specified arguments. The first argument is the original trivia. The second argument is\r\n            the same trivia with potentially rewritten sub structure.":"计算替换琐事的功能\r\n            指定的参数。第一个论点是原始琐事。第二个论点是\r\n            具有潜在重写子结构的同一琐事。\r\n","\r\n            Signature of the field or method, similar to metadata signature, \r\n            but with the following exceptions:\r\n               1) Truncated on the left, for methods starts at [ParamCount], for fields at [Type]\r\n               2) Type tokens are not compressed\r\n               3) BOOLEAN | CHAR | I1 | U1 | I2 | U2 | I4 | U4 | I8 | U8 | R4 | R8 | I | U | Void types are encoded by \r\n                  using VALUETYPE+typeId notation.\r\n               4) array bounds are not included.\r\n               5) modifiers are not included.\r\n               6) (CLASS | VALUETYPE) are omitted after GENERICINST\r\n            ":"\r\n            字段或方法的签名，类似于元数据签名，\r\n            但是以下例外：\r\n               1）在左侧被截断，对于[Paramcount]的方法，对于[类型]\r\n               2）类型令牌不被压缩\r\n               3）布尔| char | I1 | U1 | i2 | U2 | i4 | U4 | i8 | U8 | R4 | R8 |我| u |空隙类型由\r\n                  使用ValueType+TypeID表示法。\r\n               4）不包括阵列范围。\r\n               5）不包括修饰符。\r\n               6）（class | valueType）在genericinst之后被省略\r\n            \r\n","\r\n            Initializes a new script engine instance with the specified list of supported file name extensions.\r\n            ":"\r\n            初始化一个新的脚本引擎实例，其中指定的文件名称扩展名列表。\r\n            \r\n",".\r\n            2. Any of the following name heuristics are met:\r\n                a. Method's name is from one of the well-known add method names from ":"。\r\n            2.满足以下任何启发式方法：\r\n                一个。方法的名称来自众所周知的添加方法名称之一\r\n","\r\n            Operand whose storage space needs to be re-allocated.\r\n            ":"操作数需要重新分配其存储空间。\r\n            \r\n","An optional object to track partial analysis state.":"跟踪部分分析状态的可选对象。\r\n","\r\n            Returns true if the conversion is a reference conversion.\r\n            ":"\r\n            如果转换是参考转换，则返回true。\r\n            \r\n","\r\n            The string representation of this node or token, not including its leading and trailing trivia.\r\n            ":"\r\n            该节点或令牌的字符串表示形式，不包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# conversion expression.\r\n             (2) VB conversion expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃转换表达式。\r\n             （2）VB转换表达式。\r\n            \r\n","\r\n            The type of target machine.\r\n            ":"\r\n            目标机的类型。\r\n            \r\n"," with an explicit thrown exception.\r\n            The destination basic block is null for this branch.\r\n            ":" 有明确的抛出例外。\r\n            目的地基本块对于此分支为null。\r\n            \r\n","The sources to find outputs for":"寻找输出的来源\r\n","\r\n            Use environment variable MICROSOFT_DIASYMREADER_NATIVE_ALT_LOAD_PATH to locate Microsoft.DiaSymReader.Native.{platform}.dll.\r\n            ":"\r\n            使用环境变量microsoft_diasymreader_native_alt_load_path以找到microsoft.diasymreader.native。{platform} .dll。\r\n            \r\n","\r\n              Looks up a localized string similar to A node in the list is not of the expected type..\r\n            ":"\r\n              查找类似于列表中的节点的本地化字符串不是预期的类型。\r\n            \r\n","\r\n            A set of paths to EditorConfig-compatible analyzer config files.\r\n            ":"\r\n            一组通往EditorConfig兼容分析仪配置文件的路径。\r\n            \r\n","\r\n            Metadata references passed to the compilation constructor.\r\n            ":"\r\n            元数据引用传递给了汇编构造器。\r\n            \r\n","\r\n            Initializes a new VBScript engine instance.\r\n            ":"初始化一个新的VBScript引擎实例。\r\n            \r\n","\r\n            Specifies that no cache data is to be generated or consumed during V8 script\r\n            compilation. This option results in the most efficient script compilation when no cache\r\n            data is available.\r\n            ":"\r\n            指定在V8脚本期间不会生成或消耗缓存数据\r\n            汇编。当没有缓存时，此选项会导致最有效的脚本编译\r\n            数据可用。\r\n            \r\n","\r\n            Enables or disables type restriction for field, property, and method return values.\r\n            ":"\r\n            启用或禁用字段，属性和方法返回值的类型限制。\r\n            \r\n","\r\n            If \"nameSyntax\" resolves to an alias name, return the IAliasSymbol corresponding\r\n            to A. Otherwise return null.\r\n            ":"\r\n            如果“ nameyntax”解析为别名名称，请返回ialiassymbol对应\r\n            向A.否则返回null。\r\n            \r\n","\r\n            Sizes of the dimensions of the created array instance.\r\n            ":"\r\n            创建数组实例的尺寸的大小。\r\n            \r\n","\r\n            Represents a C# or VB object or collection initializer expression.\r\n            ":"\r\n            表示C＃或VB对象或收集初始化器表达式。\r\n            \r\n","\r\n            Determines if this token is equivalent to the specified token.\r\n            ":"\r\n            确定该令牌是否等于指定的令牌。\r\n            \r\n","\r\n            Formats the value of the current instance using the optionally specified format.\r\n            Provides the implementation of ToString. ToString will provide a default value\r\n            if this method throws an exception.\r\n            ":"\r\n            使用选项指定格式格式化当前实例的值。\r\n            提供了tostring的实施。 ToString将提供默认值\r\n            如果此方法引发异常。\r\n            \r\n","\r\n            Sequence of operations in the basic block.\r\n            ":"\r\n            基本块中的操作顺序。\r\n            \r\n","\r\n            Writes a UInt64 value to the stream.\r\n            ":"\r\n            将UINT64值写入流。\r\n            \r\n","\r\n            Clone method to be invoked on the value. This can be null in error scenarios.\r\n            ":"克隆方法要在值上调用。在错误方案中，这可能是无效的。\r\n            \r\n"," if not in a syntax tree.\r\n            ":" 如果不在语法树中。\r\n            \r\n","\r\n            constructor for property access.\r\n            ":"\r\n            用于属性访问的构造函数。\r\n            \r\n","Non-negative integer if this is a submission and it or a previous submission contains code, negative integer otherwise.":"非阴性整数如果这是提交的，并且IT或先前的提交包含代码，则否则为负整数。\r\n","\r\n            Individual rule ids and their associated actions.\r\n            ":"\r\n            单个规则ID及其相关行为。\r\n            \r\n","\r\n            Return the lexically first of two locations.\r\n            ":"\r\n            两个位置中的词汇第一。\r\n            \r\n","\r\n            A string encoded as UTF8 (using BinaryWriter.Write(string))\r\n            ":"\r\n            一个编码为utf8的字符串（使用binarywriter.write（string））\r\n            \r\n","\r\n            Represents an indexer access that is dynamically bound.\r\n            ":"\r\n            表示动态绑定的索引访问。\r\n            \r\n","\r\n            An approximate number of method definitions that can\r\n            provide a basis for approximating the capacities of\r\n            various databases used during Emit.\r\n            ":"\r\n            大约可以数量的方法定义可以\r\n            提供了近似能力的基础\r\n            发射过程中使用的各种数据库。\r\n            \r\n","\r\n            The list of custom modifiers, if any, associated with the parameter. Evaluate this property only if IsModified is true.\r\n            ":"\r\n            与参数关联的自定义修饰符列表（如果有）。仅当ISModified为真时，才能评估此属性。\r\n            \r\n","\r\n            An alternate form the Win32 resources may take. These represent the rsrc$01 and rsrc$02 section data and relocs\r\n            from a COFF object file.\r\n            ":"\r\n            Win32资源可能采取的替代表格。这些代表RSRC $ 01和RSRC $ 02节数据和rococs\r\n            从Coff对象文件。\r\n            \r\n","\r\n            Abstract value domain for ":"\r\n            抽象价值域\r\n","), unless the\r\n             operation has been cancelled at the request of ":"），除非\r\n             按要求取消了操作\r\n","\r\n            Represents a C# declaration pattern.\r\n            ":"\r\n            表示C＃声明模式。\r\n            \r\n"," produced by the given ":" 由给定生产\r\n","The stream doesn't support read and seek operations.":"该流不支持阅读和寻求操作。\r\n","\r\n            Calls the visitor.Visit(T) method where T is the most derived object model node interface type implemented by the concrete type\r\n            of the object implementing IStatement. The dispatch method does not invoke Dispatch on any child objects. If child traversal\r\n            is desired, the implementations of the Visit methods should do the subsequent dispatching.\r\n            ":"\r\n            调用visitor.visit（t）方法，其中t是由混凝土类型实现的最派生的对象模型节点接口类型\r\n            实现对象调度方法不会在任何子对象上调用调度。如果儿童遍历\r\n            需要，访问方法的实现应进行后续派遣。\r\n            \r\n"," should ignore the mnemonic indicator characters (&) embedded within words.\r\n            ":" 应忽略单词中嵌入的助记符指标字符（＆）。\r\n            \r\n","\r\n            An expression that creates an array instance in metadata. Only for use in custom attributes.\r\n            ":"\r\n            在元数据中创建数组实例的表达式。仅用于自定义属性。\r\n            \r\n"," has not been called.\r\n            ":" 没有被称为。\r\n            \r\n","Stream must be writable.":"流必须是可写的。\r\n"," the source sequence contains, exactly, ":" 源序列完全包含\r\n","\r\n            Represents an assignment expression that includes a binary operation.\r\n            ":"\r\n            表示包含二进制操作的分配表达式。\r\n            \r\n","Invoke":"调用\r\n","If the sequence is null, this will return the default (null) array.":"如果序列为null，则将返回默认（null）数组。\r\n","Specifies a function that determines per trivia node, whether to\r\n            descend into structured trivia of that node.":"指定一个确定每个琐事节点的函数，是否\r\n            下降到该节点的结构化琐事中。\r\n","\r\n              Looks up a localized string similar to NOTE: Elapsed time may be less than analyzer execution time because analyzers can run concurrently..\r\n            ":"\r\n              查找类似于注意的本地化字符串：经过的时间可能小于分析仪执行时间，因为分析仪可以同时运行。\r\n            \r\n","\r\n            Supplements the namespace-to-RowIDs map with the namespaces of forwarded types.\r\n            These types will not have associated row IDs (represented as null, for efficiency).\r\n            These namespaces are important because we want lookups of missing forwarded types\r\n            to succeed far enough that we can actually find the type forwarder and provide\r\n            information about the target assembly.\r\n            \r\n            For example, consider the following forwarded type:\r\n            \r\n            .class extern forwarder Namespace.Type {}\r\n            \r\n            If this type is referenced in source as \"Namespace.Type\", then dev10 reports\r\n            \r\n            error CS1070: The type name 'Namespace.Name' could not be found. This type has been \r\n            forwarded to assembly 'pe2, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'. \r\n            Consider adding a reference to that assembly.\r\n            \r\n            If we did not include \"Namespace\" as a child of the global namespace of this module\r\n            (the forwarding module), then Roslyn would report that the type \"Namespace\" was not\r\n            found and say nothing about \"Name\" (because of the diagnostic already attached to \r\n            the qualifier).\r\n            ":"\r\n            用转发类型的命名空间补充了名称空间到划线的映射。\r\n            这些类型将没有关联的行ID（以效率表示为null）。\r\n            这些名称空间很重要，因为我们希望查找缺失的转发类型\r\n            要成功足够远，我们实际上可以找到类型的转发器并提供\r\n            有关目标组件的信息。\r\n            \r\n            例如，考虑以下转发类型：\r\n            \r\n            。\r\n            \r\n            如果此类型在源中引用为“ namespace.type”，则DEV10报告\r\n            \r\n            错误CS1070：找不到类型名称'namespace.name'。这种类型已经\r\n            转发到汇编'PE2，版本= 0.0.0.0，文化=中性，publicKeyToken = null'。\r\n            考虑添加对该组件的引用。\r\n            \r\n            如果我们不包括“名称空间”作为该模块的全局名称空间的孩子\r\n            （转发模块），然后罗斯林将报告“名称空间”不是\r\n            发现并没有说“名称”（因为已经随附的诊断\r\n            预选赛）。\r\n            \r\n"," must be the absolute\r\n            path to key file.\r\n            ":" 必须是绝对的\r\n            键文件的路径。\r\n            \r\n","\r\n            Returns an instance of the reference with specified properties.\r\n            ":"\r\n            返回带有指定属性的参考实例。\r\n            \r\n","The object to convert to a host object for use with script code.":"转换为主机对象以用于脚本代码的对象。\r\n","\r\n            A class that reads both primitive values and non-cyclical object graphs from a stream that was constructed using \r\n            the ObjectWriter class.\r\n            ":"\r\n            从使用的流中读取原始值和非周期性对象图的类\r\n            Objectwriter类。\r\n            \r\n","\r\n              Looks up a localized string similar to The attribute {0} has an invalid value of {1}..\r\n            ":"\r\n              查找类似于属性{0}的本地化字符串，其无效值为{1} ..\r\n            \r\n","\r\n            This event is special in some way, as specified by the name.\r\n            ":"\r\n            该事件在某种程度上是特殊的，如名称所指定。\r\n            \r\n","\r\n            Represents a type with a single value. This type is often used to denote the successful completion of a void-returning method (C#) or a Sub procedure (Visual Basic).\r\n            ":"\r\n            表示具有单个值的类型。这种类型通常用于表示成功完成void返回方法（C＃）或子过程（Visual Basic）。\r\n            \r\n"," for suppressed diagnostics, i.e. ":" 对于被抑制的诊断，即\r\n","Load an assembly from a file path":"从文件路径加载装配\r\n","\r\n            Operation for the step value of the loop control variable. This comes from the expression after the 'Step' keyword,\r\n            or inferred by the compiler if 'Step' clause is omitted.\r\n            ":"\r\n            循环控制变量的步骤值的操作。这来自“步骤”关键字之后的表达式，\r\n            如果省略了“步骤”条款，则由编译器推断。\r\n            \r\n"," for the assembly.\r\n             May throw.\r\n            ":" 对于集会。\r\n             可能会扔。\r\n            \r\n","\r\n            Implements the operator !=.\r\n            ":"\r\n            实现操作员！=。\r\n            \r\n"," spaces\r\n            at the end. That should be sufficient for ":"空间\r\n            在最后。这应该足够\r\n","\r\n            Represents an empty object reference.\r\n            ":"\r\n            表示一个空对象引用。\r\n            \r\n",") and catch\r\n            the exception, unless the operation was cancelled.\r\n            ":"）并捕捉\r\n            除非取消操作，否则例外。\r\n            \r\n","where sequence points should be deposited":"应该存放序列点的地方\r\n","\r\n            Describes a symbol edit between two compilations. \r\n            For example, an addition of a method, an update of a method, removal of a type, etc.\r\n            ":"\r\n            描述两个汇编之间的符号编辑。\r\n            例如，添加方法，方法的更新，删除类型，等等。\r\n            \r\n","The index in the list to insert the trivia at.":"列表中的索引插入琐事。\r\n","\r\n             Interface implemented by any node that is the root 'CompilationUnit' of a ":"\r\n             由任何节点实现的接口\r\n","\r\n            Specifies that script code is to have no access to the type member. Note that this\r\n            setting has no effect on the method binding algorithm. If a script-based call is bound\r\n            to a method that is blocked by this setting, it will be rejected even if an overload\r\n            exists that could receive the call.\r\n            ":"\r\n            指定脚本代码无法访问类型成员。请注意\r\n            设置对方法结合算法没有影响。如果基于脚本的呼叫是绑定的\r\n            对于这种设置阻止的方法，即使过载也将被拒绝\r\n            存在可以接收电话的。\r\n            \r\n","The underlying generator type":"基础发电机类型\r\n","\r\n            Properties imported from metadata can explicitly implement more than one property.\r\n            ":"\r\n            从元数据中导入的属性可以明确实施多个属性。\r\n            \r\n","\r\n            Points to unknown set of locations, which may or may not be null.\r\n            ":"\r\n            指向未知的位置集，这些位置可能为也可能是无效的。\r\n            \r\n","Local kind.":"当地人。\r\n","\r\n            Create a DiagnosticDescriptor, which provides description about a ":"\r\n            创建一个诊断描述者，该诊断提供了有关\r\n","\r\n            This type contains the light up scenarios for various platform and runtimes.  Any function\r\n            in this type can, and is expected to, fail on various platforms.  These are light up scenarios\r\n            only.\r\n            ":"\r\n            这种类型包含各种平台和运行时间的灯光场景。任何功能\r\n            在这种类型中，可以并且有望在各种平台上失败。这些是点亮场景\r\n            只要。\r\n            \r\n"," that can be queried to obtain information about ":" 可以查询以获取有关的信息\r\n"," in the symbol.\r\n            ":" 在符号中。\r\n            \r\n","\r\n            Use in an exception filter to report a non fatal error. \r\n            Unless the exception is ":"\r\n            在例外过滤器中使用无致命错误。\r\n            除非例外是\r\n","\r\n            Represents the unary '+' operator.\r\n            ":"\r\n            代表单一的“+”操作员。\r\n            \r\n"," stack is null.\r\n            ":" 堆栈为空。\r\n            \r\n","\r\n            Gets all nodes and tokens with an annotation of the specified annotation kind.\r\n            ":"\r\n            通过指定注释类型的注释获取所有节点和令牌。\r\n            \r\n","\r\n            Creates a copy of the SymbolDisplayFormat without the specified ":"\r\n            创建一个没有指定的symboldisplayformat的副本\r\n","\r\n            Gets a list of method or indexed property symbols for a syntax node.\r\n            ":"\r\n            获取语​​法节点的方法或索引属性符号的列表。\r\n            \r\n","Queue of TypeDefs to search.":"typedef的队列要搜索。\r\n","\r\n            Specifies assembly binding model for the assembly definition or reference;\r\n            that is how assembly references are matched to assembly definitions.\r\n            ":"\r\n            指定组件定义或参考的组件绑定模型；\r\n            这就是将组件参考与汇编定义匹配的方式。\r\n            \r\n","Stream. The stream must be seekable.":"溪流。该流必须是可寻求的。\r\n"," will call to ":" 会打电话\r\n","\r\n            This method constructs the correct Tracker.exe command arguments from its parameters\r\n            ":"\r\n            此方法从其参数构造正确的tracker.exe命令参数\r\n            \r\n","\r\n            Compiles your assembly to run on a computer that has an Advanced RISC Machine (ARM) processor.\r\n            ":"\r\n            编译您的组件以在具有高级RISC机器（ARM）处理器的计算机上运行。\r\n            \r\n","ITypedArray<sbyte>":"ItypedArray <sbyte>\r\n","\r\n            Current usage:\r\n             (1) C# nested member initializer expression.\r\n              For example, given an object creation with initializer \"new Class() { X = x, Y = { x, y, 3 }, Z = { X = z } }\",\r\n              member initializers for Y and Z, i.e. \"Y = { x, y, 3 }\", and \"Z = { X = z }\" are nested member initializers represented by this operation.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃嵌套成员初始化器表达式。\r\n              例如，给定一个使用initializer的对象创建“ new class（）{x = x，y = {x，y，3}，z = {x = z}}}”，\r\n              Y和Z的成员初始化器，即“ Y = {X，Y，3}”和“ Z = {X = Z}”是由此操作表示的嵌套成员初始化器。\r\n            \r\n","\r\n            Unless the value of TypeCode is PrimitiveTypeCode.NotPrimitive, the type corresponds to a \"primitive\" CLR type (such as System.Int32) and\r\n            the type code identifies which of the primitive types it corresponds to.\r\n            ":"\r\n            除非TypeCode的值为Primitivetypecode.notprimitive，否则该类型对应于“原始” CLR类型（例如System.Int.int32）和\r\n            类型代码标识其对应的原始类型。\r\n            \r\n","\r\n            Holds the current object being initialized if we're visiting an object initializer.\r\n            Or the current anonymous type object being initialized if we're visiting an anonymous type object initializer.\r\n            Or the target of a VB With statement.\r\n            ":"\r\n            如果我们访问对象初始化器，则将当前对象持有初始化。\r\n            或如果我们访问匿名类型对象初始化器，则将开始初始化的当前匿名类型对象。\r\n            或带有语句的VB的目标。\r\n            \r\n","the kind of real number to build":"要建造的真实数字\r\n","\r\n            A list of all the diagnostics associated with compilations. This include parse errors, declaration errors,\r\n            compilation errors, and emitting errors.\r\n            ":"\r\n            与汇编相关的所有诊断列表。这包括解析错误，声明错误，\r\n            汇编错误和发出错误。\r\n            \r\n","\r\n            Specifies the member names known to the compiler (such as ":"\r\n            指定编译器已知的成员名称（例如\r\n",",\r\n            otherwise it's ":"，，，，\r\n            否则是\r\n","A sequence of whitespace characters that defines a single level of indentation.":"一系列白色空格字符定义单个凹痕层。\r\n","\r\n            The entity is based on one or more of the following:\r\n                1. An ":"\r\n            该实体基于以下一个或多个：\r\n                1.\r\n","A function that takes a key, and returns an IEnumerable of values that\r\n            correspond to that key. If no values correspond, the function may either return null or an empty\r\n            IEnumerable.":"键入钥匙的功能，并返回一个值的值\r\n            对应于该键。如果没有值对应，则该函数可以返回null或空的\r\n            ienumerable。\r\n"," object this ":" 对此\r\n","\r\n             If the expression did not successfully resolve to a symbol, but there were one or more\r\n             symbols that may have been considered but discarded, this property describes why those\r\n             symbol or symbols were not considered suitable.\r\n             ":"\r\n             如果该表达没有成功地解决符号，但是有一个或多个\r\n             可能被考虑但被丢弃的符号，该属性描述了为什么\r\n             符号或符号不合适。\r\n             \r\n","\r\n            Represents a range operation.\r\n            ":"\r\n            代表范围操作。\r\n            \r\n","True to only return method symbols, null if the token resolves to a field.":"真正仅返回方法符号，如果令牌解析为字段，则无效。\r\n","\r\n            Hash algorithms supported by the debugger used for source file checksums stored in the PDB.\r\n            ":"\r\n            由用于PDB中存储的源文件校验和的调试器支持的哈希算法。\r\n            \r\n","The Log to log to.":"日志登录。\r\n","\r\n            Provides the implementation of GetHashCode. GetHashCode will provide a default value\r\n            if this method throws an exception.\r\n            ":"\r\n            提供GethashCode的实现。 gethashcode将提供默认值\r\n            如果此方法引发异常。\r\n            \r\n","The mapping delegate":"映射委托\r\n","\r\n            The initial values of the array elements. May be empty.\r\n            ":"\r\n            数组元素的初始值。可能是空的。\r\n            \r\n","\r\n            for use with script code running in the specified script engine.\r\n            ":"\r\n            用于在指定的脚本引擎中运行的脚本代码。\r\n            \r\n","\r\n            If true, the persisted type name is mangled by appending \"`n\" where n is the number of type parameters, if the number of type parameters is greater than 0.\r\n            ":"\r\n            如果为true，则持续的类型名称是通过附加“ n”加入n是类型参数数的数量来处理的，如果类型参数的数量大于0。\r\n            \r\n","\r\n            This overload is only intended to be directly called by tests that want to pass ":"\r\n            此过载仅旨在通过想要通过的测试直接调用\r\n"," is null and the edit isn't a ":" 是空的，编辑不是\r\n","\r\n            Creates a reference to an assembly or standalone module stored in a file.\r\n            Reads the content of the file into memory.\r\n            ":"\r\n            创建对存储在文件中的汇编或独立模块的引用。\r\n            将文件的内容读取到内存中。\r\n            \r\n","\r\n            Represents an in-memory analyzer reference image.\r\n            ":"\r\n            代表内存分析仪参考图像。\r\n            \r\n","\r\n            The following code adds an element of type ":"\r\n            以下代码添加了类型元素\r\n","A keyword-like part for anonymous types (not actually a keyword).":"匿名类型的关键字式零件（实际上不是关键字）。\r\n","\r\n            Delegate to emit string compare call\r\n            ":"\r\n            委派发出字符串比较呼叫\r\n            \r\n"," comparison.\r\n            ":" 比较。\r\n            \r\n","\r\n            Determines if the given map is fully populated.\r\n            ":"\r\n            确定给定的地图是否完全填充。\r\n            \r\n","\r\n              Looks up a localized string similar to A language name cannot be specified for this option..\r\n            ":"\r\n              查找类似于语言名称的本地化字符串，无法为此选项指定。\r\n            \r\n",") or XML document that contains the ":"）或XML文档包含\r\n","\r\n            Signature of the property containing the accessor, or the getter (type, then parameters).\r\n            ":"\r\n            包含登录器或Getter的属性的签名（键入参数）。\r\n            \r\n"," COM APIs. This form of signing\r\n            requires the unsigned PE to be written to disk before it can be signed (typically by writing it\r\n            out to the %TEMP% folder). This signing is used when the key in a key container, the signing \r\n            requires a counter signature or customers opted in via the UseLegacyStrongNameProvider feature \r\n            flag.\r\n            ":" com apis。这种签名形式\r\n            需要在签名之前将未签名的PE写入磁盘（通常是通过编写）\r\n            到％temp％文件夹）。当键容器中的键，签名时，使用此签名\r\n            需要通过USElegacyStrongnameProvider功能选择反签名或客户\r\n            旗帜。\r\n            \r\n","\r\n            var DictT = host.comType('Scripting.Dictionary');\r\n            var dict = host.newObj(DictT);\r\n            dict.Add('foo', 123);\r\n            dict.Add('bar', 456.789);\r\n            dict.Add('baz', 'abc');\r\n            ":"\r\n            var dettt = host.comType（'scripting.dictionary'）;\r\n            var dict = host.newobj（distt）;\r\n            dict.add（'foo'，123）;\r\n            dict.add（'Bar'，456.789）;\r\n            dict.add（'Baz'，'abc'）;\r\n            \r\n","\r\n            All descendant nodes for syntax node actions.\r\n            ":"\r\n            语法节点动作的所有后代节点。\r\n            \r\n","\r\n            Use in an exception filter to report a fatal error without catching the exception.\r\n            The error is reported by calling ":"\r\n            在异常过滤器中使用，以报告致命错误而不会捕获异常。\r\n            通过打电话报告错误\r\n","\r\n            Use in an exception filter to report a fatal error (by calling ":"在例外过滤器中使用致命错误（通过调用\r\n","Indicates whether the assembly is retargetable.":"指示组件是否可以重新定位。\r\n","\r\n            Search the members of a TypeSymbol to find the one that matches a given FieldDef token.\r\n            ":"\r\n            搜索Typesymbol的成员，以找到与给定的FieldDef令牌匹配的成员。\r\n            \r\n","\r\n              Looks up a localized string similar to PDB stream should not be given when emitting metadata only..\r\n            ":"\r\n              查找与PDB流相似的本地化字符串，仅在发射元数据时不应给出。\r\n            \r\n"," from the provided stream. This version differs\r\n            from ":" 从提供的流。这个版本有所不同\r\n            从\r\n","\r\n            This function throws an exception if the script engine's\r\n            ":"\r\n            如果脚本引擎的\r\n            \r\n",", 0 if they are equal.":"，如果它们相等0。\r\n","\r\n            Gets the diagnostic identifier. For diagnostics generated by the compiler, this will be a numeric code with a prefix such as \"CS1001\".\r\n            ":"\r\n            获取诊断标识符。对于编译器生成的诊断，这将是具有前缀“ CS1001”的前缀的数字代码。\r\n            \r\n","The new value for ":"新价值\r\n","The size of the pool.":"游泳池的大小。\r\n","\r\n            Used to distinguish which style to pick while writing native PDB information.\r\n            ":"\r\n            用于区分在编写本机PDB信息时选择哪种样式。\r\n            \r\n","s into a single encompassing range.  If\r\n            the set of ranges provided is empty, an empty range is returned.\r\n            ":"s进入单个包含范围。如果\r\n            提供的范围是空的，返回空范围。\r\n            \r\n","Handle of the custom attribute.":"自定义属性的句柄。\r\n"," exists and specifies an explicit path.\r\n            ":" 存在并指定明确的路径。\r\n            \r\n","\r\n            Enumeration for possible kinds of type symbols.\r\n            ":"\r\n            可能的类型符号的枚举。\r\n            \r\n","\r\n            Create metadata module from a sequence of bytes.\r\n            ":"\r\n            从一个字节序列创建元数据模块。\r\n            \r\n"," instances return \"js\" for this property.\r\n            ":" 实例返回此属性的“ JS”。\r\n            \r\n","Uint8Array":"uint8array\r\n"," was created for an allocation in the ":" 是为分配而创建的\r\n","Timestamp of the most recently modified file.":"最近修改的文件的时间戳。\r\n","\r\n            Gets the last SyntaxNodeOrToken structure from this list if present, else default(SyntaxNodeOrToken).\r\n            ":"如果存在，则从此列表中获取最后一个语法诺迪多语结构，否则默认（SyntaxNodeOrtoken）。\r\n            \r\n"," object always represents a Coordinated\r\n            Universal Timestamp (UTC) and has its ":" 对象总是代表协调\r\n            通用时间戳（UTC），并具有\r\n"," that represents the assembly being created.\r\n            ":" 这代表正在创建的组装。\r\n            \r\n","\r\n            The name of the module that implements the underlying PDB writer (e.g. diasymreader.dll), or null if not available.\r\n            ":"\r\n            实现基础PDB作者（例如diasymreader.dll）的模块的名称，如果不可用，则null的名称。\r\n            \r\n","\r\n            Options to configure analyzer execution.\r\n            ":"\r\n            配置分析仪执行的选项。\r\n            \r\n","\r\n            Track and report missing dispose violations on all paths (non-exception and exception paths).\r\n            Additionally, also flag use of non-recommended dispose patterns that may cause\r\n            potential dispose leaks.\r\n            ":"\r\n            跟踪和报告缺少所有路径上的处置违规行为（非检查和异常路径）。\r\n            此外，还标记了可能导致的非登记处置模式的使用\r\n            潜在处理泄漏。\r\n            \r\n","\r\n            Represents an operation that tests if a value is of a specific type.\r\n            ":"\r\n            代表一个操作，该操作测试是否为特定类型。\r\n            \r\n"," method used to register a resumption delegate\r\n            (see C# Specification, §7.7.7.1 Awaitable expressions).\r\n            ":" 用于注册恢复委托的方法\r\n            （请参阅C＃规范，第7.7.7.1节等待表达式）。\r\n            \r\n","Compilation actions to be executed.":"汇编操作要执行。\r\n","\r\n            Instance of an exception being thrown.\r\n            ":"\r\n            引发例外的实例。\r\n            \r\n"," for the containing module. Returns null if the\r\n            symbol is shared across multiple modules.\r\n            ":" 对于包含的模块。如果是\r\n            符号在多个模块上共享。\r\n            \r\n","} acts as the key.\r\n            Reusing the same ":"}充当关键。\r\n            重复使用\r\n","\r\n            Represents an instance of the JScript engine.\r\n            ":"\r\n            代表JScript引擎的实例。\r\n            \r\n","\r\n            String option to configure names of symbols (separated by '|') that are disallowed in analysis.\r\n            Configurable rules: CA1031 (https://docs.microsoft.com/visualstudio/code-quality/ca1031).\r\n            Allowed method name formats:\r\n              1. Symbol name only (includes all symbols with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format.\r\n                 Note that each symbol name requires a symbol kind prefix, such as \"M:\" prefix for methods, \"T:\" prefix for types, \"N:\" prefix for namespaces, etc.\r\n              3. \".ctor\" for constructors and \".cctor\" for static constructors\r\n            ":"\r\n            字符串选项以配置分析中不允许的符号名称（被'|'隔开）。\r\n            可配置规则：CA1031（https://docs.microsoft.com/visualstudio/code-quality/ca1031）。\r\n            允许的方法名称格式：\r\n              1.仅符号名称（包括所有具有名称的符号，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format。\r\n                 请注意，每个符号名称都需要一个符号类型前缀，例如方法的“ m：”前缀，t：“类型的前缀”，“ n：”名称空间的前缀，等。\r\n              3.构造函数和“ .ctor”的“ .ctor”用于静态构造函数\r\n            \r\n"," and all subsequent statements\r\n            ":" 和所有后续语句\r\n            \r\n",".\r\n            Otherwise, returns null.\r\n            ":"。\r\n            否则，返回null。\r\n            \r\n","start of semantic analysis of a method body or an expression appearing outside a method body,":"开始对方法主体或表达式出现在方法主体外的语义分析的开始，\r\n","\r\n            Objects that implement this interface know how to write their contents to an ":"\r\n            实现此接口的对象知道如何将其内容写入\r\n"," doesn’t have a value.\r\n            The node is produced as part of a flow graph during rewrite of ":" 没有价值。\r\n            在重写期间，该节点作为流程图的一部分产生\r\n","Local holding the hash value of the key for emitting\r\n            hash table switch. Hash value has already been computed and loaded into keyHash.\r\n            This parameter is null if emitting non hash table switch.\r\n            ":"本地持有发射密钥的哈希价值\r\n            哈希表开关。哈希值已经被计算并加载到Keyhash中。\r\n            如果发射非哈希表开关，则此参数为null。\r\n            \r\n","\r\n            Track and report missing dispose violations only on non-exception program paths.\r\n            Additionally, also flag use of non-recommended dispose patterns that may cause\r\n            potential dispose leaks.\r\n            ":"\r\n            跟踪和报告仅在非检查程序路径上缺少处置违规行为。\r\n            此外，还标记了可能导致的非登记处置模式的使用\r\n            潜在处理泄漏。\r\n            \r\n","Delegate to identify if the given trivia is a comment.":"委托确定给定的琐事是否是评论。\r\n","\r\n            The default warning level, which is also used for non-error diagnostics.\r\n            ":"\r\n            默认警告级别，也用于非错误诊断。\r\n            \r\n","\r\n            start >= value <= end\r\n            ":"\r\n            开始> = value <=结束\r\n            \r\n"," will\r\n            be returned.\r\n            ":" 将要\r\n            被返回。\r\n            \r\n","\r\n            The path to a .ico icon file.\r\n            ":"\r\n            .ICO图标文件的路径。\r\n            \r\n","default(Enumerable)":"默认（枚举）\r\n","The sequence of bytes that are likely to be ASCII text.":"可能是ASCII文本的字节序列。\r\n"," \r\n            if there is no entry. This can be used to put diagnostic specific information you want \r\n            to pass around. for example, to corresponding fixer.\r\n            ":" \r\n            如果没有条目。这可以用来放置您想要的诊断特定信息\r\n            传递。例如，到对应的修复程序。\r\n            \r\n","\r\n            Unique metadata references specified via #r directive in the source code of this compilation.\r\n            ":"\r\n            本编译的源代码中通过#R指令指定的唯一元数据参考。\r\n            \r\n","\r\n            Represents a discard pattern.\r\n            ":"\r\n            代表丢弃模式。\r\n            \r\n"," describing the diagnostic":" 描述诊断\r\n","\r\n            Expression may be null.\r\n            ":"\r\n            表达可能为无效。\r\n            \r\n","\r\n            Get the symbol for the predefined type member from the COR Library referenced by this compilation.\r\n            ":"\r\n            从本汇编引用的COR库中获取预定义类型成员的符号。\r\n            \r\n","\r\n            Returns true if the given basic block is the last block of a finally region.\r\n            ":"\r\n            如果给定的基本块是最后一个区域的最后一个块，则返回true。\r\n            \r\n","The path to the root marker response file.":"根标记响应文件的路径。\r\n","\r\n            Compares if the abstract dataflow values in ":"\r\n            比较是否在\r\n","\r\n            Lazily populated dictionary from tree to declared symbols with GeneratedCodeAttribute.\r\n            ":"\r\n            从树到懒洋洋的词典，从树上宣布的符号，并具有生成的库存。\r\n            \r\n","\r\n            The value is not used by Windows loader, but the OS appcompat infrastructure uses it to identify apps.\r\n            It is useful for us to have a mechanism to identify the compiler that produced the binary.\r\n            This is the appropriate value to use for that. That is what it was invented for.\r\n            We don't want to have the high bit set for this in case some users perform a signed comparison to\r\n            determine if the value is less than some version. The C++ linker is at 0x0B.\r\n            We'll start our numbering at 0x30 for C#, 0x50 for VB.\r\n            ":"\r\n            Windows Loader不使用该值，但是OS AppCompat基础结构使用它来识别应用程序。\r\n            对于我们来说，有一种机制来识别产生二进制的编译器的机制。\r\n            这是适当的值。这就是它的发明。\r\n            如果某些用户对此进行签名比较，我们不想为此设置高位\r\n            确定该值是否小于某些版本。 C ++链接器为0x0b。\r\n            对于C＃，VB 0x50，我们将以0x30的速度启动我们的编号。\r\n            \r\n","\r\n            Represents unknown or error operator kind.\r\n            ":"\r\n            代表未知或错误操作员类型。\r\n            \r\n","\r\n            Gets a value indicating whether the documentation comments are parsed.\r\n            ":"\r\n            获取一个指示文档注释是否解析的值。\r\n            \r\n","The trivia to insert.":"插入的琐事。\r\n","A sequence of tokens to use in the tree in place of the specified token.":"在树上使用的一系列令牌代替指定的令牌。\r\n"," \r\n            API when creating multiple references to the same file.\r\n            Reusing ":" \r\n            创建对同一文件的多个引用时的API。\r\n            重复使用\r\n","\r\n            Current usage:\r\n              None. This API has been obsoleted in favor of ":"\r\n            当前用法：\r\n              没有任何。该API已被淘汰，以\r\n","\r\n              Looks up a localized string similar to Expected non-empty public key.\r\n            ":"\r\n              查找类似于预期的非空键的本地化字符串。\r\n            \r\n"," whose symbol start actions are to be executed.":" 其符号起始操作将被执行。\r\n","\r\n            Gets the kind of this display part.\r\n            ":"\r\n            获取此显示部分。\r\n            \r\n","\r\n            Checks if the given method overrides a method from System.Object\r\n            ":"\r\n            检查给定的方法是否覆盖了系统。\r\n            \r\n","\r\n            Represents the VB '\\' integer divide operator.\r\n            ":"\r\n            表示VB'\\'整数分隔操作员。\r\n            \r\n"," with another.\r\n            ":" 和另外一个。\r\n            \r\n"," are same.\r\n            ":" 是一样的。\r\n            \r\n","\r\n            Gets the syntax trees (parsed from source code) that this compilation was created with.\r\n            ":"获取使用此汇编创建的语法树（从源代码中解析）。\r\n            \r\n"," that can be invoked to create an instance of ":" 可以调用以创建一个实例\r\n"," to a position.\r\n            ":" 位置。\r\n            \r\n"," was accepted, ":" 被接受，\r\n","The name of an enum.":"枚举的名称。\r\n","\r\n            An object specifying additional parameters with which symbols belonging to kind keywords should be formatted.\r\n            ":"\r\n            指定其他参数的对象应格式化属于属性关键字的符号。\r\n            \r\n","\r\n            Specifies that remote script debugging is to be enabled. This option is ignored if\r\n            ":"\r\n            指定要启用远程脚本调试。如果此选项被忽略\r\n            \r\n","\r\n            Lookup a type within the assembly using the canonical CLR metadata name of the type.\r\n            ":"\r\n            使用该类型的规范CLR元数据名称查找组件中的类型。\r\n            \r\n","Invalid culture name: '{0}'":"无效的文化名称：'{0}'\r\n"," operator.\r\n            ":" 操作员。\r\n            \r\n","\r\n            The following code creates a 5x3 host array of strings.\r\n            It assumes that an instance of ":"\r\n            以下代码创建一个5x3主机字符串。\r\n            它假设一个实例\r\n","\r\n            Declared locals.\r\n            ":"\r\n            宣布的当地人。\r\n            \r\n","\r\n            Includes the accessibility modifiers of the member.\r\n            For example, \"public\" in C# or \"Public\" in Visual Basic.\r\n            ":"\r\n            包括会员的可访问性修饰符。\r\n            例如，在Visual Basic中的C＃或“ public”中的“公共”。\r\n            \r\n","Int16Array":"INT16Array\r\n","\r\n            Gets the profile's sample collection.\r\n            ":"\r\n            获取个人资料的样本集。\r\n            \r\n",".\r\n            If neither public key nor token is specified the identity is considered weak.\r\n            ":"。\r\n            如果未指定公共密钥和令牌，则身份被认为是弱的。\r\n            \r\n","Options to configure analyzer execution.":"配置分析仪执行的选项。\r\n","\r\n            Returns the overridden event, or null.\r\n            ":"\r\n            返回覆盖事件或null。\r\n            \r\n","\r\n            Gets an .editorconfig representation for a ruleset file at the given ":"\r\n            在给定的\r\n","Formatting rules - null implies\r\n            SymbolDisplayFormat.MinimallyQualifiedFormat.":"格式规则 - 无效\r\n            symboldisplayformat.minimallyqualifyformat。\r\n","IO error reading the metadata.":"io错误阅读元数据。\r\n","\r\n            Ensures a trailing directory separator character\r\n            ":"\r\n            确保尾随目录分离器字符\r\n            \r\n","\r\n            Gets the end position of the line not including the line break.\r\n            ":"\r\n            获取行的终点位置不包括线路断路。\r\n            \r\n","\r\n            return a bit array with all bits set from index 0 through bitCount-1\r\n            ":"\r\n            通过从索引0到BitCount-1设置的所有位返回一些数组\r\n            \r\n",".\r\n            The map is used for storing a list of methods and their associated IL.\r\n            ":"。\r\n            该地图用于存储方法及其相关的IL列表。\r\n            \r\n","Type of the event containing the accessor.":"包含登录器的事件类型。\r\n","The new reference.":"新参考。\r\n","\r\n             The 4.5 portable API surface area does not contain many of the APIs Roslyn needs to function.  In \r\n             particular it lacks APIs to access the file system.  The Roslyn project though is constrained \r\n             from moving to the 4.6 framework until post VS 2015.\r\n             \r\n             This puts us in a difficult position.  These APIs are necessary for us to have our public API set\r\n             in the DLLS we prefer (non Desktop variants) but we can't use them directly when targeting \r\n             the 4.5 framework.  Putting the APIs into the Desktop variants would create instant legacy for \r\n             the Roslyn project that we'd have to maintain forever (even if it was just as assemblies with\r\n             only type forward entries).  This is not a place we'd like to be in.  \r\n             \r\n             As a compromise we've decided to grab these APIs via reflection for the time being.  This is a \r\n             *very* unfortunate path to be on but it's a short term solution that sets us up for long term\r\n             success.  \r\n             \r\n             This is an unfortunate situation but it will all be removed fairly quickly after RTM and converted\r\n             to the proper 4.6 portable contracts.  \r\n            \r\n             Note: Only portable APIs should be present here.\r\n             ":"\r\n             4.5可移植API表面区域不包含Roslyn需要运行的许多Api。  在 \r\n             特别是它缺少访问文件系统的Api。  罗斯林项目虽然受到限制 \r\n             从移动到4.6框架，直到post VS2015。\r\n             \r\n             这使我们处于困难的境地。  这些Api是我们设置公共API所必需的\r\n             在DLL中，我们更喜欢（非桌面变体），但我们不能在定位时直接使用它们 \r\n             4.5框架。  将Api放入桌面变体将为 \r\n             我们必须永远维护的Roslyn项目（即使它和程序集一样）\r\n             仅键入转发条目）。  这不是我们想去的地方。  \r\n             \r\n             作为妥协，我们决定暂时通过反射获取这些Api。  这是一个 \r\n             *非常*不幸的道路上，但它是一个短期的解决方案，设置我们为长期\r\n             成功。  \r\n             \r\n             这是一个不幸的情况，但它将在RTM和转换后相当快地被删除\r\n             到适当的4.6便携式合同。  \r\n            \r\n             注意：此处应仅提供可移植Api。\r\n             \r\n","\r\n            In-place convert string in StringBuilder to lower case per Unicode rules\r\n            ":"\r\n            每个Unicode规则的主地将字符串转换为较低的情况\r\n            \r\n",".\r\n            See https://github.com/dotnet/roslyn/issues/21279#issuecomment-323153041 for more details.\r\n            ":"。\r\n            有关更多详细信息，请参见https://github.com/dotnet/roslyn/issues/21279#issuecomment-323153041。\r\n            \r\n","\r\n            Releases the unmanaged resources used by the script engine and optionally releases the managed resources.\r\n            ":"\r\n            释放脚本引擎使用的非管理资源，并选择释放托管资源。\r\n            \r\n","\r\n            Imports a COM/ActiveX type and exposes it to script code with the specified options.\r\n            The registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            导入com/activex类型，并将其公开为脚本代码，并带有指定的选项。\r\n            注册类由类标识符（CLSID）指定。\r\n            \r\n","\r\n              Looks up a localized string similar to Resource stream ended at {0} bytes, expected {1} bytes..\r\n            ":"\r\n              查找类似于{0}字节的资源流类似的本地化字符串，预期{1}字节..\r\n            \r\n","\r\n            The encoding used to parse source files that do not have a Byte Order Mark. If specified,\r\n            is stored in the emitted PDB in order to allow recreating the original compilation.\r\n            ":"\r\n            用于解析没有字节订单标记的源文件的编码。如果指定，\r\n            存储在发射的PDB中，以允许重新创建原始汇编。\r\n            \r\n",".\r\n            This includes the following:\r\n            1. Caller's tracked analysis data at the call site, which is the initial analysis data for callee.\r\n            2. Information about the invocation instance on which the method is invoked.\r\n            3. Information about arguments for the invocation.\r\n            4. Captured variables (for lambda/local function invocations).\r\n            5. Information about ref/out parameter entities that share address with callee's parameters.\r\n            6. Operation call stack for the current interprocedural analysis.\r\n            7. Set of analysis contexts currently being analyzed.\r\n            ":"。\r\n            这包括以下内容：\r\n            1.呼叫站点上的呼叫者的跟踪分析数据，这是Callee的初始分析数据。\r\n            2.有关调用该方法的调用实例的信息。\r\n            3.有关调用参数的信息。\r\n            4.捕获的变量（用于lambda/局部函数调用）。\r\n            5.有关与Callee参数共享地址的参数参数实体的信息。\r\n            6.操作呼叫堆栈进行当前的概要分析。\r\n            7.当前正在分析的一组分析环境。\r\n            \r\n","\r\n            The constructor on the attribute class.\r\n            ":"\r\n            属性类上的构造函数。\r\n            \r\n","\r\n            Returns true if the PDB is generated to a PDB file, as opposed to embedded to the output binary and not generated at all.\r\n            ":"\r\n            如果将PDB生成到PDB文件，则返回为true，而不是嵌入到输出二进制文件中，而根本没有生成。\r\n            \r\n","Unsupported hash algorithm.":"不支持的哈希算法。\r\n","The start index of the first character to hash":"哈希的第一个字符的开始索引\r\n","\r\n            Used in C# for spans outside of #line directives\r\n            ":"\r\n            在c＃中用于#line指令之外的跨度\r\n            \r\n","Provider of XML documentation comments for the metadata symbols contained in the module.":"模块中包含的元数据符号的XML文档注释。\r\n","The byte array into which to copy the bytes.":"复制字节的字节数组。\r\n","\r\n            Register a ":"\r\n            注册\r\n","The right SyntaxNodeOrTokenList":"正确的语法语法列表\r\n","\r\n            Label instruction corresponding to the start of handler block\r\n            ":"\r\n            标签指令对应于处理程序块的开始\r\n            \r\n","\r\n            If the node provided has a constant value an Optional value will be returned with\r\n            HasValue set to true and with Value set to the constant.  If the node does not have an\r\n            constant value, an Optional will be returned with HasValue set to false.\r\n            ":"\r\n            如果提供的节点具有恒定值，则将返回可选值\r\n            hasValue设置为true，并将值设置为常数。如果节点没有\r\n            恒定值，将返回一个可选的hasValue设置为false。\r\n            \r\n","\r\n              Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have an invalid section size..\r\n            ":"\r\n              查找类似于Win32资源的本地化字符串，假定为Coff对象格式，具有无效的部分大小。\r\n            \r\n","\r\n            The name assigned to ":"\r\n            分配给的名称\r\n","\r\n              Looks up a localized string similar to Empty or invalid resource name.\r\n            ":"\r\n              查找类似于空或无效资源名称的本地化字符串。\r\n            \r\n"," if the cast fails.\r\n            ":" 如果演员失败。\r\n            \r\n","\r\n            Returns the top of ":"\r\n            返回顶部\r\n","\r\n            The path which contains the compiler binaries and response files.\r\n            ":"\r\n            包含编译器二进制文件和响应文件的路径。\r\n            \r\n","\r\n            The name assigned to the ExclusiveOr operator.\r\n            ":"\r\n            分配给独家运营商的名称。\r\n            \r\n","\r\n            Returns true if this symbol can be referenced by its name in code.\r\n            ":"\r\n            如果可以在代码中引用此符号的名称，则返回true。\r\n            \r\n","\r\n            Represents errors that occur while parsing RuleSet files.\r\n            ":"\r\n            表示解析规则集文件时发生的错误。\r\n            \r\n","\r\n            Create a dictionary instance suitable for use as the fully populated map.\r\n            ":"\r\n            创建一个适合用作完全填充地图的字典实例。\r\n            \r\n"," \r\n            Register an action to be executed after semantic analysis of a method body or an expression appearing outside a method body. \r\n            A code block action reports ":" \r\n            注册在方法主体或方法主体外出现的表达式之后进行的操作。\r\n            代码块操作报告\r\n","\r\n            Loop exit/break label.\r\n            ":"\r\n            循环出口/断路标签。\r\n            \r\n","FieldDef handle of the field to find.":"要查找字段的fieldDef句柄。\r\n","\r\n            True if the notnull constraint (":"\r\n            如果notnull约束\r\n","\r\n            The line is following a #line hidden directive.\r\n            ":"\r\n            该行遵循#line隐藏指令。\r\n            \r\n","\r\n            Gets a collection of property values from the ":"\r\n            从\r\n","\r\n            Operation to be unconditionally evaluated.\r\n            ":"\r\n            操作将无条件评估。\r\n            \r\n"," to be suppressed, which must be from ":" 被压制，必须来自\r\n","False to avoid catching the exception.":"假避免捕获例外。\r\n","\r\n            Indicates Case Is op x in VB.\r\n            ":"\r\n            指示案例是VB中的OP X。\r\n            \r\n","\r\n            Symbol of the anonymous function.\r\n            ":"\r\n            匿名函数的象征。\r\n            \r\n","\r\n            Conversion applied to the result of the binary operation, before it is assigned back to\r\n            ":"\r\n            在将二进制操作的结果应用于二进制操作的结果之前，然后将其分配回到\r\n            \r\n","\r\n            Creates an array containing a copy of the typed array's contents.\r\n            ":"\r\n            创建一个包含键入数组内容的副本的数组。\r\n            \r\n"," generated for an ":" 生成\r\n","Operation whose descendants are to be fetched.":"将其后代的操作被提取。\r\n","\r\n            Applicable only to properties and methods, throws otherwise.\r\n            ":"\r\n            仅适用于属性和方法，否则就会投掷。\r\n            \r\n","\r\n            Returns the topmost ":"\r\n            返回最上方\r\n","\r\n            Convert a boxed primitive (generally of the backing type of an enum) into a ulong.\r\n            ":"\r\n            将盒装原始（通常是枚举的背景类型）转换为乌龙。\r\n            \r\n","\r\n            Custom modifiers associated with the pointer type, or an empty array if there are none.\r\n            ":"\r\n            与指针类型关联的自定义修饰符，如果没有指针类型，则为空数组。\r\n            \r\n","\r\n            Represents a conditional operation with:\r\n             1. ":"\r\n            代表有条件的操作：\r\n             1。\r\n","\r\n            Specifies which version of the common language runtime (CLR) can run the assembly.\r\n            ":"\r\n            指定哪个版本的通用语言运行时（CLR）可以运行汇编。\r\n            \r\n","\r\n            An abstract analysis domain implementation for ":"\r\n            一个抽象分析域实施\r\n","\r\n            Create a new instance of subsystem version with specified major and minor values.\r\n            ":"\r\n            创建具有指定的主要和次要值的子系统版本的新实例。\r\n            \r\n","\r\n            Diagnostics in additional files reported by the ":"\r\n            在其他文件中报告的诊断\r\n","\r\n              Looks up a localized string similar to Feature 'IOperation' is disabled..\r\n            ":"\r\n              查找类似于功能“ Ioperation”的本地化字符串。\r\n            \r\n","\r\n            Names[i] is the identity of assembly Symbols[i].\r\n            ":"\r\n            名称[i]是汇编符号[i]的身份。\r\n            \r\n","\r\n            Represents the C# '!' operator and VB 'Not' operator.\r\n            ":"\r\n            代表C＃'！'操作员和VB“非”操作员。\r\n            \r\n","\r\n            Gets the node's numeric identifier.\r\n            ":"\r\n            获取节点的数字标识符。\r\n            \r\n","\r\n            String option to configure names of types (separated by '|'), with their suffixes (separated by '->').\r\n            Configurable rules: CA1710 (https://docs.microsoft.com/visualstudio/code-quality/ca1710).\r\n            Allowed type name formats:\r\n              1. Type name only (includes all types with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format\r\n                 with an optional \"T:\" prefix.\r\n            ":"\r\n            字符串选项以配置类型的名称（由'|'隔开），并及其后缀（由' - >'隔开）。\r\n            可配置规则：CA1710（https://docs.microsoft.com/visualstudio/code-quality/ca1710）。\r\n            允许的类型名称格式：\r\n              1.仅键入名称（无论包含类型或名称空间如何，都包含所有具有名称的类型）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format\r\n                 带有可选的“ t：”前缀。\r\n            \r\n","\r\n            The trailing trivia associated with the node or token is kept.\r\n            ":"\r\n            保留了与节点或令牌相关的拖延琐事。\r\n            \r\n","finally":"最后\r\n","\r\n            Gets the XML (as text) for the comment associated with the symbol.\r\n            ":"\r\n            获取与符号关联的注释的XML（作为文本）。\r\n            \r\n","\r\n            Should not be null.\r\n            Note that this and ":"\r\n            不应该为无效。\r\n            请注意，这是\r\n","\r\n            The set of local variables which are assigned a value outside a region\r\n            that may be used inside the region.\r\n            ":"\r\n            在区域之外分配一个值的本地变量集\r\n            该区域内可以使用。\r\n            \r\n","\r\n            Represents a distinct set of ":"\r\n            代表一组独特的集合\r\n","The image kind - assembly or module.":"图像类型 - 组件或模块。\r\n","\r\n            VB forwarding information (i.e. another method has the imports for this one).\r\n            ":"\r\n            VB转发信息（即另一种方法具有该信息的导入）。\r\n            \r\n","The stream to read objects from.":"流从中读取对象的流。\r\n","\r\n            Current usage:\r\n             (1) C# pattern.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃模式。\r\n            \r\n","\r\n            Writes a UInt16 value to the stream.\r\n            ":"\r\n            将UINT16值写入流。\r\n            \r\n","\r\n            Includes parameter types in symbol descriptions.\r\n            ":"\r\n            在符号描述中包括参数类型。\r\n            \r\n"," structure to be compared with the current instance.":" 将结构与当前实例进行比较。\r\n","\r\n            True if the method gets special treatment from the runtime. For example, it might be a constructor.\r\n            ":"\r\n            如果该方法从运行时获得特殊治疗，则是的。例如，它可能是构造函数。\r\n            \r\n","\r\n            Boolean option to configure whether to exclude aspnet core mvc ControllerBase when considering CSRF.\r\n            ":"布尔值选项在考虑CSRF时是否要配置是否排除ASPNET Core MVC控制器。\r\n            \r\n","FlatTrackingData structure containing the outputs":"包含输出的FlatTrackingData结构\r\n","\r\n            Contains information about the source of diagnostic suppression.\r\n            ":"\r\n            包含有关诊断抑制源的信息。\r\n            \r\n","\r\n            Label instruction corresponding to the end of try block\r\n            ":"\r\n            标签指令对应于尝试块的尽头\r\n            \r\n","\r\n            It is recommended to use ":"\r\n            建议使用\r\n"," region inside its ":" 它内部的区域\r\n","\r\n            Any of these styles may be overridden by ":"这些样式中的任何一种可能都被\r\n","System.Boolean":"System.Boolean\r\n","\r\n              Looks up a localized string similar to Given operation has a non-null parent..\r\n            ":"\r\n              查找类似于给定操作的本地化字符串具有非零父母。\r\n            \r\n","\r\n            Catches exceptions thrown during disposal of the underlying stream and\r\n            writes them to the given ":"\r\n            在处置基础流和\r\n            将它们写入给定的\r\n","\r\n            Checks if the given method is ":"\r\n            检查给定方法是否是\r\n","\r\n            Specifies that Just-In-Timestamp script debugging is to be enabled. This option is ignored\r\n            if ":"\r\n            指定即将启用仅在Timestamp脚本中的调试。此选项被忽略\r\n            如果\r\n","\r\n            A composite of a sequence of ":"\r\n            序列的综合\r\n","The current token that the walker is visiting.":"沃克正在访问的当前令牌。\r\n","\r\n            The greatest index given to any method definition.\r\n            ":"\r\n            给出任何方法定义的最大索引。\r\n            \r\n"," for the declaration containing the operation.\r\n            ":" 对于包含操作的声明。\r\n            \r\n","\r\n            Checks if the given method overrides ":"\r\n            检查给定的方法是否覆盖\r\n","\r\n            Describes how to report a warning diagnostic.\r\n            ":"\r\n            描述如何报告警告诊断。\r\n            \r\n","module.meta":"模块\r\n"," must be non-null.\r\n             ":" 必须是非记器。\r\n             \r\n","s about the ":"关于\r\n","\r\n            Takes a node and returns a set of declarations that overlap the node's span.\r\n            ":"\r\n            获取一个节点并返回一组与节点跨度重叠的声明。\r\n            \r\n","The last node to be included within the analysis.":"最后一个节点包含在分析中。\r\n","\r\n            Gets all pending events for given set of analyzers.\r\n            ":"\r\n            为给定的一组分析仪获取所有未决事件。\r\n            \r\n","\r\n            Perform source generation, if the compiler supports it.\r\n            ":"\r\n            如果编译器支持它，则执行源生成。\r\n            \r\n","\r\n            Compile a globbing character class of the form [...]. Returns true if\r\n            the character class was succesfully compiled. False if there was a syntax\r\n            error. The starting character is expected to be directly after the '['.\r\n            ":"\r\n            编译形式的球形类别[...]。如果返回为true\r\n            角色类是成功编译的。错误如果有语法\r\n            错误。预计启动字符将直接在“ ['”之后。\r\n            \r\n","\r\n            Reports all unused imports/usings so far (and thus it must be called as a last step of Emit)\r\n            ":"\r\n            报告到目前为止的所有未使用的进口/用途（因此必须称其为发射的最后一步）\r\n            \r\n","\r\n            A dictionary that maps strings to all known spellings of that string. Can be used to\r\n            efficiently store the set of known type names for a module for both VB and C# while also\r\n            answering questions like \"do you have a type called Goo\" in either a case sensitive or\r\n            insensitive manner.\r\n            ":"\r\n            词典将字符串映射到该字符串的所有已知拼写。可以习惯\r\n            有效地存储VB和C＃模块的已知类型名称集\r\n            回答诸如case敏感或\r\n            不敏感的方式。\r\n            \r\n","Analyzer actions to append":"分析仪操作以附加\r\n","\r\n            Indicates disposable locations that may be disposed on some program path(s).\r\n            ":"\r\n            指示可以在某些程序路径上处置的一次性位置。\r\n            \r\n","\r\n            If the expression did not successfully resolve to a symbol, but there were one or more\r\n            symbols that may have been considered but discarded, this property returns those\r\n            symbols. The reason that the symbols did not successfully resolve to a symbol are\r\n            available in the CandidateReason property. For example, if the symbol was inaccessible,\r\n            ambiguous, or used in the wrong context.\r\n            ":"\r\n            如果该表达没有成功地解决符号，但是有一个或多个\r\n            可能被考虑但被丢弃的符号，此属性返回这些属性\r\n            符号。符号未成功解析为符号的原因是\r\n            可在候选季节物业中找到。例如，如果符号无法访问，\r\n            模棱两可，或在错误的上下文中使用。\r\n            \r\n","If Tracker should be listening on a particular event for cancellation, pass its name here":"如果跟踪器应该在特定事件中聆听取消的特定事件，请在此处传递其名称\r\n"," for a code document.\r\n            ":" 对于代码文档。\r\n            \r\n"," \r\n            or for embedding source paths in error messages.\r\n            \r\n            Unlike Dev12 we do account for #line and #ExternalSource directives when determining value for \r\n            ":" \r\n            或用于将源路径嵌入错误消息中。\r\n            \r\n            与dev12不同，我们在确定值时要考虑#line和#externalsource指令\r\n            \r\n","Delegate to compute the value associated with a given ":"委派以计算与给定的值相关的值\r\n"," option.\r\n            2) A global ":" 选项。\r\n            2）全球\r\n","\r\n            Returns true if given path is absolute and starts with a drive specification (\"C:\\\").\r\n            ":"\r\n            如果给定路径是绝对路径并以驱动器规范(\"C:\\\")开头，则返回true。\r\n            \r\n","The inner non parenthesized operation or the starting operation if it wasn't a parenthesized operation.":"内部非括号操作或起始操作（如果不是括号的操作）。\r\n","A localizable format message string, which can be passed as the first argument to ":"可本质的格式消息字符串，可以将其作为第一个参数传递给\r\n","\r\n            True, if successfully executed the actions for the given analysis scope OR no actions were required to be executed for the given analysis scope.\r\n            False, otherwise.\r\n            ":"\r\n            没错，如果成功执行给定分析范围的操作或为给定的分析范围执行不执行操作。\r\n            错误，否则。\r\n            \r\n"," \r\n            In some cases we have to get a final IL offset during emit phase, for example for\r\n            proper emitting sequence points. The problem is that before the builder is realized we \r\n            don't know the actual IL offset, but only {block/offset-in-the-block} pair. \r\n            \r\n            Thus, whenever we need to mark some IL position we allocate a new marker id, store it \r\n            in allocatedILMarkers and reference this IL marker in the entity requiring the IL offset.\r\n            \r\n            IL markers will be 'materialized' when the builder is realized; the resulting offsets\r\n            will be put into allocatedILMarkers array. Note that only markers from reachable blocks \r\n            are materialized, the rest will have offset -1.\r\n            ":" \r\n            在某些情况下，我们必须在发射阶段获得最终的IL偏移，例如\r\n            正确发射序列点。问题是，在实现建设者之前，我们\r\n            不知道实际的IL偏移，而只知道{block/offset in-the-block}对。\r\n            \r\n            因此，每当我们需要标记一些IL位置时，我们都会分配一个新标记ID，请存储它\r\n            在分配标记物中，并在需要IL偏移的实体中引用此IL标记。\r\n            \r\n            实现建筑商时，IL标记将被“物质化”；产生的偏移\r\n            将放入分配标记阵列中。请注意，仅来自可及块的标记\r\n            已实现，其余的将具有-1的偏移-1。\r\n            \r\n","Optional thread-safe delegate to add diagnostic suppressions from suppressors.":"可选的线程安全委托，以增加抑制器的诊断抑制。\r\n","\r\n            The name assigned to the IntegerDivision operator.\r\n            ":"\r\n            分配给IntegerDivision运算符的名称。\r\n            \r\n"," into the specified byte array.\r\n            ":" 进入指定的字节数组。\r\n            \r\n"," according\r\n            to this compilation's programming language.\r\n            ":" 根据\r\n            使用此汇编的编程语言。\r\n            \r\n"," with the given line and character.\r\n            ":" 具有给定的线和性格。\r\n            \r\n","\r\n            TODO: Consider moving ":"\r\n            托多：考虑搬家\r\n","\r\n            Initializes a new host type collection with types from one or more assemblies. The\r\n            assemblies are specified by name.\r\n            ":"初始化一个新的主机类型集合，其中一个或多个组件的类型。这\r\n            组件按名称指定。\r\n            \r\n","\r\n            Gets the warning level. This is 0 for diagnostics with severity ":"\r\n            获取警告级别。对于严重程度的诊断为0\r\n",".  i.e. \r\n             any node returned by ":"。 IE。\r\n             返回的任何节点\r\n","\r\n            True if the method may be overridden (or if it is an override).\r\n            ":"\r\n            如果可以覆盖该方法（或者是覆盖），则为true。\r\n            \r\n","The FileStream with encoded text.":"带有编码文本的文件流。\r\n","\r\n            Underlying string which is the source of this SourceText instance\r\n            ":"\r\n            基础字符串是此SourceText实例的来源\r\n            \r\n","If the items's length is 0, this will return an empty immutable array.":"如果项目的长度为0，则将返回一个空的不可变阵列。\r\n","s as the number of days since 1899/12/30, whereas the native VB compiler\r\n             marshalled them as the number of ticks since the Unix epoch (i.e. a much, much larger number).\r\n            ":"s作为1899/12/30以来的天数，而本地VB编译器\r\n             自Unix时代以来的滴答数（即更大的数量）以来，将它们编制为刻度。\r\n            \r\n","Required custom modifiers":"所需的自定义修饰符\r\n","\r\n            Structure that represents a local signature (as in ":"\r\n            代表局部签名的结构（如\r\n","\r\n              Looks up a localized string similar to delegate.\r\n            ":"\r\n              查找类似于委托的本地化字符串。\r\n            \r\n","The root of the subtree containing the current nodes corresponding to the original tracked nodes.":"包含与原始跟踪节点相对应的当前节点的子树的根。\r\n",", as modules can't be aliased.\r\n            ":"，因为模块不能被别名。\r\n            \r\n","\r\n            Code block that is the subject of the analysis.\r\n            ":"\r\n            代码块，这是分析的主题。\r\n            \r\n","\r\n            Abstract domain for a ":"\r\n            抽象域\r\n","\r\n            The required name for the ":"\r\n            所需的名称\r\n","The index to insert the new token.":"插入新令牌的索引。\r\n","\r\n            The highest version of the interface available on Desktop FX 4.0+.\r\n            ":"\r\n            桌面FX 4.0+上可用的最高版本。\r\n            \r\n"," representing the individual text lines.":" 代表各个文本行。\r\n","Timestamp of the least recently modified file.":"最近修改的文件的时间戳。\r\n","\r\n            Returns the string representation of the nodes in this list including separators but not including \r\n            the first node's leading trivia and the last node or token's trailing trivia.\r\n            ":"\r\n            返回此列表中节点的字符串表示形式，包括分离器，但不包括\r\n            第一个节点的领先琐事和最后一个节点或令牌的尾随琐事。\r\n            \r\n"," is true), etc.\r\n            ":" 是真的），等等。\r\n            \r\n","\r\n            Extracts ":"\r\n            提取物\r\n","\r\n            Instructions that are not branches.\r\n            ":"\r\n            不是分支的说明。\r\n            \r\n","\r\n            Actions registered by a particular analyzer.\r\n            ":"\r\n            特定分析仪注册的操作。\r\n            \r\n","A list which will be filled in with\r\n            AssemblySymbols referenced by the input AssemblySymbol. The caller is expected to clear\r\n            the list before calling this method.\r\n            Implementer may not cache the list; the caller may mutate it.":"将填写的清单\r\n            输入组件符号引用的汇编符号。预计呼叫者将清除\r\n            调用此方法之前的列表。\r\n            实施者可能不会缓存列表；调用者可以将其变异。\r\n","\r\n            The target type reference. \r\n            ":"\r\n            目标类型参考。\r\n            \r\n","\r\n            A set of possible outcomes of ":"\r\n            一组可能的结果\r\n","<in-memory module>":"<内存模块>\r\n","\r\n            Represents a declarator that declares multiple individual variables.\r\n            ":"\r\n            代表声明多个单个变量的声明器。\r\n            \r\n","\r\n            Loads and executes a document with the specified category and context callback.\r\n            ":"\r\n            加载并执行具有指定类别和上下文回调的文档。\r\n            \r\n","\r\n            The top-level nullability of the event.\r\n            ":"\r\n            事件的最高级别无效性。\r\n            \r\n","\r\n            Represents a JavaScript ":"\r\n            代表JavaScript\r\n","\r\n            Loads a document asynchronously.\r\n            ":"\r\n            异步加载文档。\r\n            \r\n","\r\n            Always prefer this over ":"\r\n            总是喜欢这个\r\n","If the encoded parameter type is invalid.":"如果编码的参数类型无效。\r\n","The full string representation of this trivia.":"这个琐事的完整字符串表示。\r\n","\r\n            The width of the node in characters, not including leading and trailing trivia.\r\n            ":"\r\n            该节点的宽度在字符中，不包括领导和尾随的琐事。\r\n            \r\n","\r\n              Looks up a localized string similar to Stream contains invalid data.\r\n            ":"\r\n              查找类似于流的本地化字符串包含无效数据。\r\n            \r\n"," object that can be used when constructing a ":" 构造时可以使用的对象\r\n","\r\n            The convention for calling managed methods with a fixed number of arguments.\r\n            ":"\r\n            带有固定数量参数的调用托管方法的约定。\r\n            \r\n","\r\n            Read the contents of a FileStream into a byte array.\r\n            ":"\r\n            将文件流的内容读取到字节阵列中。\r\n            \r\n","\r\n            Returns a string that represents the current object.\r\n            ":"\r\n            返回表示当前对象的字符串。\r\n            \r\n","\r\n            References of standalone modules referenced by the compilation (doesn't include the manifest module of the compilation).\r\n            ":"\r\n            汇编引用的独立模块的参考（不包括汇编的清单模块）。\r\n            \r\n"," exclusive.\r\n            ":" 独家的。\r\n            \r\n","Directory used when resolving relative paths.":"解决相对路径时使用的目录。\r\n",", the cache is updated so that it is at the\r\n            head of the list.\r\n            ":"，缓存已更新，以便它在\r\n            名单的头。\r\n            \r\n","\r\n            Optional source for exception. This could be any of the following operation:\r\n            1. Declaration for the local catch variable bound to the caught exception (C# and VB) OR\r\n            2. Type expression for the caught expression type (C#) OR\r\n            3. Null, indicating no expression (C#)\r\n            4. Reference to an existing local or parameter (VB) OR\r\n            5. An error expression (VB)\r\n            ":"\r\n            异常的可选来源。这可能是以下任何操作：\r\n            1.绑定到捕获的异常（C＃和VB）的本地捕获变量声明或\r\n            2.键入捕获的表达式类型（C＃）或\r\n            3. null，表示没有表达（C＃）\r\n            4.引用现有本地或参数（VB）或\r\n            5.错误表达式（VB）\r\n            \r\n","\r\n            Symbol for ":"\r\n            符号\r\n"," values that represent\r\n            nonexistent, missing, unknown, or undefined data. When such a value is marshaled to the\r\n            host, the script engine maps it to the value of this property. The default value is\r\n            ":" 代表的值\r\n            不存在，缺失，未知或未定义的数据。当这样的价值被编到\r\n            主机，脚本引擎将其映射到该属性的值。默认值是\r\n            \r\n","\r\n            Determines whether or not the span is empty.\r\n            ":"\r\n            确定跨度是否为空。\r\n            \r\n"," when the value is a symbol.\r\n            ":" 当值是符号时。\r\n            \r\n","\r\n            Includes the type parameters. \r\n            For example, \"Foo<T>\" in C# or \"Foo(Of T)\" in Visual Basic.\r\n            ":"\r\n            包括类型参数。\r\n            例如，Visual Basic中的C＃或“ foo（of t）”中的“ foo <t>”。\r\n            \r\n"," parameter's ref kind from ":" 参数的裁判类型\r\n","VBArray":"Vbarray\r\n","\r\n              Looks up a localized string similar to Embedding PDB is not allowed when emitting metadata..\r\n            ":"\r\n              在排放元数据时，不允许查找类似于嵌入PDB的局部弦。\r\n            \r\n","\r\n             If CandidateSymbols returns one or more symbols, returns the reason that those\r\n             symbols were not chosen. Otherwise, returns None.\r\n             ":"\r\n             如果contiDatesymbols返回一个或多个符号，则将返回这些符号\r\n             未选择符号。否则，无返回。\r\n             \r\n","\r\n            Determines whether this node has any trailing trivia.\r\n            ":"\r\n            确定该节点是否具有任何拖延琐事。\r\n            \r\n","\r\n            Represents a conditional operation with:\r\n            (1) ":"\r\n            代表有条件的操作：\r\n            （1）\r\n"," is true for the given ":" 对给定是正确的\r\n","\r\n            Gets the symbol associated with a declaration syntax node. Unlike ":"\r\n            获取与声明语法节点关联的符号。与众不同\r\n","\r\n            The offset of the first operation in the scope.\r\n            ":"\r\n            示波器中的第一个操作的偏移。\r\n            \r\n","The number of unique operators found.":"发现的独特操作员数量。\r\n","Path describing the location of the metadata, or null if the metadata have no location.":"描述元数据位置的路径，如果元数据没有位置，则null的位置。\r\n","The method to test.":"测试方法。\r\n","Corresponding ":"相应的\r\n","\r\n            Sort so that more specific keys precede less specific.\r\n            When mapping a path we find the first key in the array that is a prefix of the path.\r\n            If multiple keys are prefixes of the path we want to use the longest (more specific) one for the mapping.\r\n            ":"\r\n            排序以使更具体的键在较少具体的情况下进行。\r\n            映射路径时，我们在数组中找到路径前缀的第一个键。\r\n            如果多个键是路径的前缀，我们要使用最长（更具体）的映射。\r\n            \r\n","\r\n            This method returns the output dictionary for the given source key\r\n            if non exists, one is created\r\n            ":"\r\n            此方法返回给定源密钥的输出字典\r\n            如果不存在，将创建一个\r\n            \r\n","\r\n              Defines the word parsing and delimiting options for use with ":"\r\n              定义解析和划界选项\r\n","\r\n            True if the final value assigned to the parameter will be marshalled with the return values passed back from a remote callee.\r\n            ":"\r\n            正确，如果分配给参数的最终值将与从遥控器回传递的返回值编辑。\r\n            \r\n","\r\n            Conversion inference result.\r\n            ":"\r\n            转换推断结果。\r\n            \r\n","\r\n            True if this type is serializable.\r\n            ":"\r\n            如果此类型可序列化，则为true。\r\n            \r\n","The span the node's full span must intersect.":"节点的完整跨度必须相交的跨度。\r\n","\r\n            Returns information relevant to EnC on slots of local variables hoisted to state machine fields, \r\n            or null if the method isn't the kickoff method of a state machine.\r\n            ":"\r\n            返回与ENC相关的信息，以将局部变量的插槽悬挂到状态机字段，\r\n            或null如果该方法不是状态机的开球方法。\r\n            \r\n","\r\n            Represents a single EditorConfig file, see https://editorconfig.org for details about the format.\r\n            ":"\r\n            代表一个单个editorConfig文件，有关格式的详细信息，请参见https://editorconfig.org。\r\n            \r\n"," may provide only a single ":" 可能只提供一个\r\n",", rather than ":"， 而不是\r\n","\r\n            True if the edit is an update of an active method and local values should be preserved; false otherwise.\r\n            ":"\r\n            如果编辑是活动方法的更新，则应保留本地值；否则为错误。\r\n            \r\n","The tree to compare against.":"与比较的树。\r\n","\r\n            Gets or allocates a runtime submission slot index for this compilation.\r\n            ":"\r\n            获取或分配此编译的运行时提交插槽索引。\r\n            \r\n","The imported type whose parent library is to be searched for relevant enumerations.":"将要搜索相关枚举的导入类型。\r\n","\r\n            Represents an initialization of a property.\r\n            ":"\r\n            代表属性的初始化。\r\n            \r\n","\r\n            Context for a code block start action.\r\n            A code block start action can use a ":"\r\n            代码块启动操作的上下文。\r\n            代码块启动操作可以使用\r\n","\r\n            this hold onto analyzer executor context which will be used later to put context information in analyzer exception if it occurs.\r\n            ":"\r\n            这种保留在分析仪执行程序上下文上，以后将在分析仪异常中使用上下文信息。\r\n            \r\n","\r\n            The name assigned to an instance constructor.\r\n            ":"\r\n            分配给实例构造函数的名称。\r\n            \r\n"," object constructed from a\r\n            JavaScript promise always has a result type of ":" 从一个\r\n            JavaScript Promise始终具有结果类型\r\n","The first trivia in the list.":"列表中的第一个琐事。\r\n","Action will be executed only if an ":"只有在\r\n"," contains a wildcard.\r\n            If equal to default(":" 包含一个通配符。\r\n            如果等于默认值（\r\n","A sequence of trivia to insert into the tree immediately before the specified trivia.":"在指定的琐事之前，一系列琐事插入树上。\r\n"," will return an empty list.\r\n            ":" 将返回一个空列表。\r\n            \r\n","\r\n            Examples include:\r\n            ":"\r\n            示例包括：\r\n            \r\n","\r\n            If the compilation being built is the COR library we don't want to store its source assembly symbol \r\n            here since we wouldn't be able to share the state among subsequent compilations that are derived from it\r\n            (each of them has its own source assembly symbol).\r\n            ":"\r\n            如果要构建的编译是COR库，我们不想存储其源组件符号\r\n            在这里，因为我们将无法在随后的汇编中共享状态\r\n            （他们每个都有自己的源组件符号）。\r\n            \r\n","\r\n            Gets the location where the original problem is documented, likely with steps to reproduce the issue and/or\r\n            validate performance related to a change in the method.\r\n            ":"\r\n            获取记录原始问题的位置，可能采用复制问题和/或\r\n            验证与该方法更改有关的性能。\r\n            \r\n","\r\n            If an object that implements this interface is added to a script engine (see\r\n            ":"\r\n            如果将实现此接口的对象添加到脚本引擎中（请参阅\r\n            \r\n","\r\n            Adds a type to a host type collection. The type is specified by type name and assembly name.\r\n            ":"\r\n            将类型添加到主机类型集合中。该类型由类型名称和汇编名称指定。\r\n            \r\n","\r\n            Given the identity of an assembly referenced by this module, finds\r\n            the index of that assembly in the list of assemblies referenced by\r\n            the current module.\r\n            ":"\r\n            鉴于该模块引用的组件的身份，找到\r\n            该组件的索引在由\r\n            当前模块。\r\n            \r\n","\r\n            Gets the first ancestor of this operation with:\r\n             1. Specified OperationKind\r\n             2. If ":"\r\n            获得此操作的第一个祖先：\r\n             1.指定的操作量\r\n             2.如果\r\n","\r\n            Create metadata module from a raw memory pointer to a PE image or an object file.\r\n            ":"\r\n            创建从原始内存指针到PE图像或对象文件的元数据模块。\r\n            \r\n","\r\n            Analyzer and/or compiler non-error diagnostics reported for the compilation.\r\n            Each ":"\r\n            分析仪和/或编译器非错误诊断报告了该编译。\r\n            每个\r\n","\r\n            Descriptor for the suppression, which must be from ":"\r\n            抑制的描述者，必须来自\r\n","\r\n            Current usage:\r\n             (1) C# event assignment expression.\r\n             (2) VB Add/Remove handler statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃事件分配表达式。\r\n             （2）VB添加/删除处理程序语句。\r\n            \r\n","\r\n            This function throws an exception if ":"\r\n            此功能会引发异常\r\n","\r\n            Gets the attributes for the symbol. Returns an empty ":"\r\n            获取符号的属性。返回空\r\n","\r\n            Name of the module. Used in ModuleDef table.\r\n            ":"\r\n            模块的名称。用于ModuleDef表中。\r\n            \r\n","The type of the root node.":"根节点的类型。\r\n","\r\n            Defines options for exposing host resources to script code.\r\n            ":"\r\n            定义将主机资源公开脚本代码的选项。\r\n            \r\n","\r\n            Initializes a new VBScript engine instance with the specified programmatic\r\n            identifier, name, list of supported file name extensions, options, and synchronous\r\n            invoker.\r\n            ":"\r\n            用指定的程序化初始化新的VBScript引擎实例\r\n            标识符，名称，支持的文件名扩展名，选项和同步\r\n            调用。\r\n            \r\n",".\r\n            \r\n            The ":"。\r\n            \r\n            这\r\n","\r\n            The variable is not synthesized (C#, VB). Note that SynthesizedLocalKind values\r\n            greater than or equal to this are considered long-lived;\r\n            see ":"\r\n            该变量未合成（C＃，VB）。请注意，综合localkind值\r\n            大于或等于这一点被认为是长寿；\r\n            看\r\n","\r\n            Returns the file names of linked managed modules.\r\n            ":"\r\n            返回链接的托管模块的文件名。\r\n            \r\n"," is null. \r\n            For reference types this checks if the ":" 一片空白。\r\n            对于参考类型，此检查是否\r\n","\r\n            Conversion is implemented by a conversion operator method.\r\n            ":"转换是通过转换操作员方法实现的。\r\n            \r\n","The starting operation.":"起始操作。\r\n","\r\n            Creates an AnalyzerFileReference with the given ":"\r\n            创建一个给定的分析倍率\r\n","\r\n              Looks up a localized string similar to Time (s).\r\n            ":"\r\n              查找类似于时间的局部字符串。\r\n            \r\n"," edit.\r\n            ":"编辑。\r\n            \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledFunction((a, arg) => arg.self.IsSomething(a, arg.x), (self: this, x), out Func<int, bool> predicate);\r\n             RunWithPredicate(predicate);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooledFunction（（（a，arg）=> arg.self.issomething（a，arg.x），（self：self：this，x），out func <int，bool> predicate）;\r\n             runwithPredicate（谓词）;\r\n             \r\n","An ImmutableArray containing all the types that are members of this symbol with the given name.\r\n            If this symbol has no type members with this name,\r\n            returns an empty ImmutableArray. Never returns null.":"一个immutableArray包含具有给定名称的所有类型。\r\n            如果此符号没有此名称的类型成员，\r\n            返回一个空的Immutablearray。永远不会返回零。\r\n","\r\n              Looks up a localized string similar to constructor.\r\n            ":"\r\n              查找类似于构造函数的本地化字符串。\r\n            \r\n","\r\n            The symbol from the earlier compilation,\r\n            or null if the edit represents an addition.\r\n            ":"\r\n            早期汇编的符号，\r\n            或null如果编辑表示添加。\r\n            \r\n","The tokens to add.":"代币要添加。\r\n","\r\n            Diagnostic bag.\r\n            ":"\r\n            诊断袋。\r\n            \r\n",", this property does not throw an exception when\r\n            ":"，此属性在\r\n            \r\n","\r\n            The collection of extension methods for the ":"\r\n            收集的扩展方法\r\n","\r\n            This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n            change it in the future.\r\n            https://github.com/dotnet/roslyn/issues/27601: Figure out how to make this public. There is also almost no IOperation tests for scenarios involving this node.\r\n            ":"\r\n            该界面保留用于通过其关联的API实现。我们保留权利\r\n            将来更改它。\r\n            https://github.com/dotnet/roslyn/issues/27601：弄清楚如何公开此。几乎没有涉及该节点的方案的ioperation测试。\r\n            \r\n"," is used by default.":" 默认情况下使用。\r\n","#line linenumber":"#line亚麻布\r\n","\r\n            Gets the effective severity of diagnostics created based on this descriptor and the given ":"\r\n            根据此描述符和给定的有效严重性\r\n","\r\n            Flags to configure mode of generated code analysis.\r\n            ":"\r\n            标志以配置生成代码分析模式。\r\n            \r\n","The total number of operator usages found.":"找到了操作员的总数。\r\n"," containing the given ":" 包含给定\r\n","The rule set file has duplicate rules for '{0}' with differing actions '{1}' and '{2}'.":"规则集文件具有“ {0}”的重复规则，并具有不同的操作'{1}'和'{2}'。\r\n"," if a given ":" 如果给定\r\n","All values associated with key. Returns an empty IEnumerable if\r\n            no values are associated. Never returns null.":"与键关联的所有值。如果返回一个空的iEnumerable\r\n            没有关联的值。永远不会返回零。\r\n","The index within the typed array at which to store the first copied element.":"输入数组中存储第一个复制元素的索引。\r\n","\r\n            True if this method has a non empty collection of SecurityAttributes or the System.Security.SuppressUnmanagedCodeSecurityAttribute.\r\n            ":"\r\n            是的，如果此方法具有非空的SecurityAttributes或System.Security.suppressunmanagedCodesecurityAttribute的集合。\r\n            \r\n","\r\n            Normalizes an absolute path.\r\n            ":"\r\n            规范化绝对路径。\r\n            \r\n"," type\r\n            ":" 类型\r\n            \r\n","\r\n            The settings that determine how types are qualified (e.g. Nested vs Containing.Nested vs Namespace.Containing.Nested).\r\n            ":"\r\n            确定类型如何合格的设置（例如，嵌套与包含的嵌套vs vs namespace.containing.nested）。\r\n            \r\n","\r\n                    Extension methods are available if the type that implements them has been\r\n                    exposed in the current script engine.\r\n                    ":"\r\n                    如果实现它们的类型已经存在，则可以使用扩展方法\r\n                    暴露在当前脚本引擎中。\r\n                    \r\n","\r\n            Determines whether the position is considered to be hidden from the debugger or not.\r\n            ":"\r\n            确定该位置是否被认为是从调试器中隐藏的。\r\n            \r\n","A function that computes a replacement node for the\r\n            argument nodes. The first argument is the original node. The second argument is the same\r\n            node potentially rewritten with replaced descendants.":"计算替换节点的函数\r\n            参数节点。第一个参数是原始节点。第二个论点是相同的\r\n            节点可能会被替换后代重写。\r\n","\r\n            Use in an exception filter to report a fatal error.\r\n            Calls ":"\r\n            在例外过滤器中使用致命错误。\r\n            呼叫\r\n"," indicates cancellation is requested by setting\r\n             ":" 指示通过设置请求取消\r\n             \r\n"," custom tag.\r\n            ":" 自定义标签。\r\n            \r\n","\r\n            Gets the top-level nullability of the parameter.\r\n            ":"\r\n            获取参数的顶级删除性。\r\n            \r\n","\r\n            Report a diagnostic as a warning even though /warnaserror is specified.\r\n            ":"\r\n            即使指定了 /warnaserror，也将诊断作为警告。\r\n            \r\n","\r\n            Conversion applied to ":"\r\n            转换应用于\r\n"," that was run in this generator pass, one per generator.\r\n            ":" 那是在此发电机通行证中运行的，每个发电机一个。\r\n            \r\n","The trivia to be replaced.":"要替换的琐事。\r\n","\r\n            Returns a new anonymous type symbol with the given member types, names, source locations, and nullable annotations.\r\n            Anonymous type members will be readonly by default.  Writable properties are\r\n            supported in VB and can be created by passing in ":"\r\n            返回带有给定成员类型，名称，源位置和无效注释的新的匿名类型符号。\r\n            默认情况下，匿名类型成员将被阅读。可写的特性是\r\n            在VB中支持，可以通过传递来创建\r\n","\r\n            The list of RetargetingAssemblySymbol objects created for this Compilation. \r\n            RetargetingAssemblySymbols are created when some other compilation references this one, \r\n            but the other references provided are incompatible with it. For example, compilation C1 \r\n            references v1 of Lib.dll and compilation C2 references C1 and v2 of Lib.dll. In this\r\n            case, in context of C2, all types from v1 of Lib.dll leaking through C1 (through method \r\n            signatures, etc.) must be retargeted to the types from v2 of Lib.dll. This is what \r\n            RetargetingAssemblySymbol is responsible for. In the example above, modules in C2 do not \r\n            reference C1.AssemblySymbol, but reference a special RetargetingAssemblySymbol created\r\n            for C1 by ReferenceManager.\r\n             \r\n            WeakReference is used to allow RetargetingAssemblySymbol to be collected when they become unused.\r\n            \r\n            Guarded by ":"\r\n            为此编辑创建的retargetingAssemblysymbol对象的列表。\r\n            当其他一些汇编引用此内容时，会创建RetargetingAssemblysymbols\r\n            但是提供的其他参考文献与之不兼容。例如，汇编C1\r\n            lib.dll的参考v1和汇编C2参考文献C1和v2的lib.dll。在这一点\r\n            情况，在C2的背景下，lib.dll的V1的所有类型都通过C1泄漏（通过方法\r\n            签名等。这是什么\r\n            retargetingAssemblysymbol负责。在上面的示例中，C2中的模块不\r\n            参考c1.semblysymbol，但请参考创建的特殊retargetingAssemblysymbol\r\n            对于C1由ReferenceManager。\r\n             \r\n            弱率用于允许retargetingAssemblysymbol在未使用时收集它们。\r\n            \r\n            守护\r\n","\r\n            Decodes a generic name.  This is a type name followed optionally by a type parameter count\r\n            ":"\r\n            解码通用名称。这是一个类型名称，可选为类型参数计数\r\n            \r\n","Document access settings for the operation.":"文档访问该操作的设置。\r\n"," for atomicity.\r\n            ":" 用于原子。\r\n            \r\n","Acme.Gadgets.Button":"acme.gadgets.button\r\n","Delegate to get topmost declaration node for a symbol declaration reference.":"委托获取符号声明参考的最高声明节点。\r\n","\r\n            Register an action to be executed at the start of semantic analysis of a method body or an expression appearing outside a method body.\r\n            An operation block start action can register other actions and/or collect state information to be used in diagnostic analysis,\r\n            but cannot itself report any ":"\r\n            注册在方法主体的语义分析开始时要执行的操作，或者出现在方法主体外的表达式。\r\n            操作块启动操作可以注册其他操作和/或收集用于诊断分析的状态信息，\r\n            但本身不能报告任何\r\n","\r\n            Create cache from an array. The cache capacity will be the size\r\n            of the array. All elements of the array will be added to the \r\n            cache. If any duplicate keys are found in the array a\r\n            ":"\r\n            从数组创建缓存。缓存容量将是大小\r\n            阵列。数组的所有元素将添加到\r\n            缓存。如果在数组中找到任何重复键\r\n            \r\n","\r\n            Caller is responsible for freeing any allocated ArrayBuilders.\r\n            ":"\r\n            呼叫者负责释放任何分配的阵列构建器。\r\n            \r\n","\r\n            If the MemoryStream was created with publiclyVisible=true, then we can access its buffer\r\n            directly and save allocations in StreamReader. The input MemoryStream is not closed on exit.\r\n            ":"\r\n            如果使用publicvisible = true创建了内存流，那么我们可以访问其缓冲区\r\n            直接并保存在StreamReader中。输入后，输入不关闭。\r\n            \r\n","\r\n            The name assigned to the BitwiseAnd operator.\r\n            ":"\r\n            分配给Bitwiseand运算符的名称。\r\n            \r\n","\r\n            Returns the underlying node wrapped by the supplied ":"\r\n            返回所提供的基础节点\r\n","the bits of the integer, least significant bits first":"整数的位，最不重要的位\r\n","\r\n            Determines whether this node has any descendant preprocessor directives.\r\n            ":"\r\n            确定该节点是否具有任何后代预处理器指令。\r\n            \r\n","\r\n            Gets the diagnostic descriptor, which provides a description about a ":"\r\n            获取诊断描述符，其中提供了有关\r\n","\r\n            Count of Operation block actions.\r\n            ":"\r\n            操作块动作计数。\r\n            \r\n","Action to be executed at the start of semantic analysis of a code block.":"在代码块的语义分析开始时要执行的操作。\r\n","\r\n            Returns a value indicating whether the specified symbol is a static\r\n            holder type.\r\n            ":"\r\n            返回一个值指示指定符号是否为静态的值\r\n            持有人类型。\r\n            \r\n","An optional category for the requested document.":"请求的文档的可选类别。\r\n","Identities in the baseline. ":"基线中的身份。\r\n","\r\n              Looks up a localized string similar to method.\r\n            ":"\r\n              查找类似于方法的本地化字符串。\r\n            \r\n","\r\n            This property always returns a non-blank string. If a null or blank document name was\r\n            specified at instantiation time, this property returns a default document name.\r\n            ":"\r\n            此属性总是返回一个非空白的字符串。如果空名称为空名称\r\n            该属性在实例化时指定，返回默认文档名称。\r\n            \r\n","Action to be executed at completion of parsing of a document.":"在完成文档解析时要执行的措施。\r\n"," \r\n            API when creating multiple references to the same metadata.\r\n            Reusing ":" \r\n            当创建对同一元数据的多个引用时，API。\r\n            重复使用\r\n","\r\n            If the generator registered an ":"\r\n            如果发电机注册了\r\n","\r\n            Field-like events can be used as fields in types that can access private\r\n            members of the declaring type of the event.\r\n            ":"\r\n            类似现场的事件可以用作可以访问私有的类型的字段\r\n            活动类型的成员。\r\n            \r\n"," keywords for ref-returning methods and properties/indexers.\r\n            ":" 用于参考方法和属性/索引器的关键字。\r\n            \r\n","\r\n            Specifies that script language features that enhance standards compliance are to be\r\n            enabled. This option only affects ":"\r\n            指定脚本语言功能可以增强标准合规性\r\n            已启用。此选项仅影响\r\n","The type of the node":"节点的类型\r\n","\r\n            Returns true if the flags represent a field that should be imported.\r\n            Visibility and the value of ":"\r\n            如果标志代表应导入的字段，则返回true。\r\n            可见性和价值\r\n","\r\n            Represents analyzers stored in an analyzer assembly file.\r\n            ":"\r\n            代表存储在分析仪组件文件中的分析仪。\r\n            \r\n","The script code to execute.":"执行的脚本代码。\r\n","\r\n            Optional argument ref kinds.\r\n            ":"\r\n            可选的论点裁判类型。\r\n            \r\n","\r\n            C# only. Encodes the sizes of using groups that are applicable to the method.\r\n            The actual import strings are stored separately trhu ISymUnmanagedWriter.UsingNamespace.\r\n            ":"\r\n            仅C＃。编码适用于该方法的组的大小。\r\n            实际导入字符串分别存储为trhu ismymanagedwriter.usingnamespace。\r\n            \r\n"," is a nested type defined in a linked netmodule, \r\n            the index of the ":" 是在链接的NetModule中定义的嵌套类型，\r\n            索引\r\n","\r\n            Computes the string representing the strong name of the given assembly reference.\r\n            ":"\r\n            计算代表给定组件参考的强名称的字符串。\r\n            \r\n","The old value of PATH":"路径的旧价值\r\n","The subtraction in ":"减法\r\n","The current statement being visited in ":"当前陈述正在访问\r\n"," is determined to be a user supplied global config and gets a level of 100\r\n                ":" 被确定为用户提供的全局配置，并获得100的水平\r\n                \r\n","\r\n            Holds on to the method body data.\r\n            ":"\r\n            保留方法身体数据。\r\n            \r\n","\r\n            Checks if a given symbol implements an interface member implicitly or explicitly\r\n            ":"\r\n            检查给定符号是否隐含或显式地实现接口成员\r\n            \r\n","\r\n            The containing type of the referenced member, if different from type of the ":"\r\n            包含引用成员的类型，如果与\r\n","\r\n             int x = 3;\r\n             RunWithActionCallback((a, b) => this.DoSomething(a, b, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithactionCallback（（（a，b）=> this.dosomething（a，b，x））;\r\n             \r\n","\r\n            Gets the parameters of this method. If this method has no parameters, returns\r\n            an empty list.\r\n            ":"\r\n            获取此方法的参数。如果此方法没有参数，请返回\r\n            一个空列表。\r\n            \r\n","\r\n            The size of our debug directory: one entry for debug information, and an optional second one indicating\r\n            that the timestamp is deterministic (i.e. not really a timestamp)\r\n            ":"\r\n            我们的调试目录的大小：一个用于调试信息的条目，第二个指示的可选第二个条目\r\n            时间戳是确定性的（即，不是真正的时间戳）\r\n            \r\n","ITypedArray<ushort>":"ItypedArray <ushort>\r\n","\r\n            A member of a type definition, such as a field or a method.\r\n            This interface models the metadata representation of a type member.\r\n            ":"\r\n            类型定义的成员，例如字段或方法。\r\n            该接口建模类型成员的元数据表示。\r\n            \r\n","True to embed interop types from the referenced assembly to the referencing compilation. Must be false for a module.":"从引用组件到引用汇编的嵌入式嵌入式类型。对于模块，必须是错误的。\r\n","\r\n            Gets or sets the maximum size of the old object heap in\r\n            ":"\r\n            获取或设置旧对象堆的最大尺寸\r\n            \r\n"," arguments and\r\n            returns the result of invoking ":" 争论和\r\n            返回调用的结果\r\n","\r\n            Describes a group of effective ":"\r\n            描述一组有效\r\n"," evaluates to null/Nothing.\r\n            ":" 评估为null/Noth。\r\n            \r\n","\r\n            The symbol that was referred to by the syntax node, if any. Returns null if the given\r\n            expression did not bind successfully to a single symbol. If null is returned, it may\r\n            still be that case that we have one or more \"best guesses\" as to what symbol was\r\n            intended. These best guesses are available via the CandidateSymbols property.\r\n            ":"\r\n            语法节点所指的符号（如果有）。如果给定，则返回null\r\n            表达不会成功结合到单个符号。如果返回零，则可能\r\n            仍然是我们有一个或多个符号的“最佳猜测”\r\n            故意的。这些最佳猜测可通过candidateSymbols属性获得。\r\n            \r\n"," tracking an analyzer's partial analysis state.\r\n            An analysis state object can be in one of the following states:\r\n            1. Completely unprocessed: ":" 跟踪分析仪的部分分析状态。\r\n            分析状态对象可以在以下状态之一中：\r\n            1.完全未经处理：\r\n","\r\n            Check whether return type, parameters count and parameter types are same for the given methods.\r\n            ":"\r\n            检查给定方法的返回类型，参数计数和参数类型是否相同。\r\n            \r\n","\r\n            Determines whether a sequence containsmore than ":"\r\n            确定序列是否包含比\r\n","The Unicode character.":"Unicode字符。\r\n","\r\n            Information decoded from early well-known custom attributes applied on a parameter.\r\n            ":"\r\n            从参数应用的早期众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            The name assigned to the LeftShift operator.\r\n            ":"\r\n            分配给左移操作员的名称。\r\n            \r\n","\r\n            True if this property gets special treatment from the runtime.\r\n            ":"\r\n            如果此属性从运行时获得特殊待遇，则是的。\r\n            \r\n"," for the nearest enclosing namespace. Returns null if the\r\n            symbol isn't contained in a namespace.\r\n            ":" 对于最近的封闭名称空间。如果是\r\n            符号不包含在命名空间中。\r\n            \r\n","\r\n            Type is an interactive submission.\r\n            ":"\r\n            类型是交互式提交。\r\n            \r\n","\r\n            If this method is a Lambda method (MethodKind = MethodKind.LambdaMethod) and \r\n            there is an anonymous delegate associated with it, returns this delegate.\r\n            \r\n            Returns null if the symbol is not a lambda or if it does not have an\r\n            anonymous delegate associated with it.\r\n            ":"\r\n            如果此方法是lambda方法（MethodKind = MethodKind.lambdamethod）和\r\n            有一个与之关联的匿名代表，返回此代表。\r\n            \r\n            如果符号不是lambda或没有\r\n            与之关联的匿名代表。\r\n            \r\n","\r\n              Looks up a localized string similar to Size has to be positive..\r\n            ":"\r\n              查找类似于大小的局部字符串必须是积极的。\r\n            \r\n","\r\n            Load the ruleset from the specified file. This ruleset will contain\r\n            all the rules resolved from the includes specified in the ruleset file\r\n            as well. See also: ":"\r\n            从指定文件加载规则集。此规则集将包含\r\n            从规则集文件中指定的包含的所有规则\r\n            也是。也可以看看：\r\n"," invokes the\r\n            protected ":" 调用\r\n            受保护\r\n","\r\n            Serializes the node to the given ":"\r\n            将节点序列到给定\r\n","ITypedArray<float>":"ItypedArray <float>\r\n","A string specifying the document to be loaded and executed.":"指定要加载和执行的文档的字符串。\r\n"," instance that was\r\n            created by accessing the ":" 实例是\r\n            通过访问\r\n"," and only applies\r\n            if the context location is one where an attribute ca be referenced without the suffix.\r\n            ":" 而且只适用\r\n            如果上下文位置是一个没有后缀的属性CA的位置。\r\n            \r\n","\r\n            Converts an array to an immutable array. The array must not be null.\r\n            ":"\r\n            将数组转换为不变的阵列。阵列不得无效。\r\n            \r\n","\r\n            Creates a new compilation with an old syntax tree replaced with a new syntax tree.\r\n            Reuses metadata from old compilation object.\r\n            ":"\r\n            用旧语法树创建新的汇编，替换为新的语法树。\r\n            从旧汇编对象重用元数据。\r\n            \r\n","\r\n            Returns true if this preprocessing symbol is defined at the identifier position.\r\n            ":"\r\n            如果此预处理符号在标识符位置定义，则返回true。\r\n            \r\n","\r\n            Represents a VB 'For To' loop statement.\r\n            ":"\r\n            代表vb'​​for'循环语句。\r\n            \r\n","The name of the property to add.":"要添加的属性名称。\r\n","\r\n            Conversion has VB-specific semantics.\r\n            ":"\r\n            转换具有特定于VB的语义。\r\n            \r\n","\r\n            Writes a Double value to the stream.\r\n            ":"\r\n            为流写一个双重值。\r\n            \r\n"," JavaScript\r\n            module. In a ":" JavaScript\r\n            模块。在一个\r\n","\r\n            Creates a new compilation with an old metadata reference replaced with a new metadata\r\n            reference.\r\n            ":"\r\n            用新的元数据替换为新的元数据，创建新的汇编\r\n            参考。\r\n            \r\n","\r\n            Tries to execute compilation started actions.\r\n            ":"\r\n            试图执行汇编开始动作。\r\n            \r\n","\r\n            Returns a stream of the data to embed.\r\n            ":"\r\n            返回数据流嵌入。\r\n            \r\n"," in context of this expression.\r\n            It is not part of ":" 在这种表达的情况下。\r\n            它不是\r\n","\r\n            Instance used to bind the member reference.\r\n            ":"\r\n            实例用于绑定成员参考。\r\n            \r\n","\r\n            Includes the type keyword before types.\r\n            For example, \"class C\" in C# or \"Structure S\" in Visual Basic.\r\n            ":"\r\n            在类型之前包括类型关键字。\r\n            例如，Visual Basic中的C＃或“结构S”中的“ C类”。\r\n            \r\n",".\r\n            This graph contains a set of ":"。\r\n            该图包含一组\r\n","\r\n            Abstraction that allows the caller to delay the creation of the ":"\r\n            允许呼叫者延迟创建的抽象\r\n","\r\n            Append a default argument (i.e. the default argument of an optional parameter).\r\n            Assumed to be non-null.\r\n            ":"\r\n            附加默认参数（即可选参数的默认参数）。\r\n            假定为非效果。\r\n            \r\n","\r\n            Import public, protected and internal symbols.\r\n            ":"\r\n            进口公共，受保护和内部符号。\r\n            \r\n","\r\n            Explicitly-specified member initializers.\r\n            ":"\r\n            明确指定的成员初始化器。\r\n            \r\n","\r\n            A signed 64 bit integer.\r\n            ":"\r\n            一个签名的64位整数。\r\n            \r\n","\r\n            Returns a StringComparer that compares strings according the VB identifier comparison rules.\r\n            ":"\r\n            返回一个StringComparer，该字符串根据VB标识符比较规则进行比较。\r\n            \r\n","\r\n            Imports a COM/ActiveX type and exposes it to script code with the specified options.\r\n            The registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            导入com/activex类型，并将其公开为脚本代码，并带有指定的选项。\r\n            注册类由程序化标识符（ProgID）指定。\r\n            \r\n"," of the tool being wrapped":" 包装的工具\r\n","\r\n            Search the members of a TypeSymbol to find the one that matches a given MethodDef token.\r\n            ":"\r\n            搜索typesymbol的成员，以找到与给定MethodDef令牌匹配的成员。\r\n            \r\n","\r\n            Given an error code (like 1234) return the identifier (CS1234 or BC1234).\r\n            ":"\r\n            给定一个错误代码（如1234）返回标识符（CS1234或BC1234）。\r\n            \r\n","\r\n            Returns custom modifiers associated with the field, or an empty array if there are none.\r\n            ":"\r\n            返回与该字段关联的自定义修饰符，或者没有一个空数组，如果没有。\r\n            \r\n"," objects returned by this method.\r\n             The implementation needs to retrieve the object from a provider that manages their lifetime (such as metadata cache).\r\n             The ":" 该方法返回的对象。\r\n             实现需要从管理其寿命的提供商（例如元数据缓存）中检索对象。\r\n             这\r\n","An array of trivia.":"一系列琐事。\r\n","\r\n            By default the name of the output assembly is ":"\r\n            默认情况下，输出组件的名称为\r\n","\r\n            Each script engine or runtime maintains private caches for supported document\r\n            categories. These are distinct from the caches used by document loaders.\r\n            ":"\r\n            每个脚本引擎或运行时都维护用于支持文档的私人缓存\r\n            类别。这些与文档加载程序使用的库不同。\r\n            \r\n","Reported diagnostic has an ID '{0}', which is not a valid identifier.":"报告的诊断具有ID'{0}'，这不是有效的标识符。\r\n","\r\n            Local variable used to cache a delegate that is used in inner block (possibly a loop), \r\n            and can be reused for all iterations of the loop.\r\n            ":"\r\n            局部变量用于缓存内部块中使用的委托（可能是循环），\r\n            并且可以重复使用循环的所有迭代。\r\n            \r\n",".\r\n            They are considered to be declared per iteration.\r\n            ":"。\r\n            根据迭代，它们被认为是被宣布为宣布的。\r\n            \r\n","\r\n            Default namespace (VB only).\r\n            ":"\r\n            默认名称空间（仅VB）。\r\n            \r\n"," for the containing assembly. Returns null if the\r\n            symbol is shared across multiple assemblies.\r\n            ":" 用于包含组件。如果是\r\n            符号在多个组件中共享。\r\n            \r\n","\r\n            Windows PDB writer.\r\n            ":"Windows PDB作者。\r\n            \r\n"," to the compilation.\r\n            ":" 进行汇编。\r\n            \r\n","\r\n            Gets the diagnostics produced during symbol declaration.\r\n            ":"\r\n            获取在符号声明期间产生的诊断。\r\n            \r\n","\r\n            This method checks that the specified files exist. During the scan the\r\n            least recent file write time of all the outputs is remembered. It will be\r\n            the basis for up to date comparisons.\r\n            ":"\r\n            此方法检查指定的文件是否存在。在扫描期间\r\n            记住所有输出的最新文件写入时间。这将是\r\n            最新比较的基础。\r\n            \r\n",", false otherwise.":"，否则为错误。\r\n","\r\n            The symbol, if any, used for the fetching values for subpatterns. This is either a ":"\r\n            该符号（如果有的话）用于子图案的获取值。这是\r\n","\r\n            Body of the local function.\r\n            ":"\r\n            本地功能的主体。\r\n            \r\n","module":"模块\r\n","SetPropertyNoCheck":"setPropertynocheck\r\n","\r\n            Represents a reference to a member of a class, struct, or module that is dynamically bound.\r\n            ":"\r\n            表示动态绑定的类，结构或模块的成员的引用。\r\n            \r\n","\r\n            Gets the top-level nullability of this field.\r\n            ":"\r\n            获取该领域的顶级无效性。\r\n            \r\n"," if this is a 'lifted' unary operator.  When there is an\r\n            operator that is defined to work on a value type, 'lifted' operators are\r\n            created to work on the ":" 如果这是一个“抬起”的单一操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            The set of variables that are captured inside a region.\r\n            ":"\r\n            在区域内捕获的一组变量。\r\n            \r\n","\r\n            The PDB content for custom debug information is different between Visual Basic and CSharp.\r\n            E.g. C# always includes a CustomMetadata Header (MD2) that contains the namespace scope counts, where \r\n            as VB only outputs namespace imports into the namespace scopes. \r\n            C# defines forwards in that header, VB includes them into the scopes list.\r\n            \r\n            Currently the compiler doesn't allow mixing C# and VB method bodies. Thus this flag can be per module.\r\n            It is possible to move this flag to per-method basis but native PDB CDI forwarding would need to be adjusted accordingly.\r\n            ":"\r\n            自定义调试信息的PDB内容在Visual Basic和CSHARP之间有所不同。\r\n            例如。 C＃总是包括包含名称空间范围计数的Custommetadata标头（MD2）\r\n            由于VB仅输出名称空间导入到名称空间范围内。\r\n            C＃定义了该标题中的向前，VB将它们包含在范围列表中。\r\n            \r\n            当前，编译器不允许混合C＃和VB方法主体。因此，此标志可以是每个模块。\r\n            可以将此标志移至每方法基础，但是需要相应调整本机PDB CDI转发。\r\n            \r\n","The directory to search for mscorlib, or null if not available.":"搜索MSCORLIB的目录，如果不可用，则为空。\r\n","\r\n            Include the Script type when qualifying type names.\r\n            ":"\r\n            在合格类型名称时包括脚本类型。\r\n            \r\n","\r\n            Executes the symbol start actions.\r\n            ":"\r\n            执行符号启动操作。\r\n            \r\n","\r\n            Syntax the ":"\r\n            语法\r\n","\r\n            Loads and compiles a script document.\r\n            ":"\r\n            加载和编译脚本文档。\r\n            \r\n","\r\n            Represents the VB '=' operator for object typed operands.\r\n            ":"\r\n            代表对象键入操作数的VB'='操作员。\r\n            \r\n","\r\n            Deserializes Edit and Continue method debug information from specified blobs.\r\n            ":"\r\n            来自指定斑点的供应编辑和继续方法调试信息。\r\n            \r\n","List where to store resolved references. References from #r directives will follow references passed to the compilation constructor.":"列出在哪里存储已解决的参考。 #R指令的参考将遵循传递给汇编构造函数的引用。\r\n","Inconsistent language versions":"语言版本不一致\r\n","\r\n            The Assembly that contains this module. May be null if the module is not part of an assembly.\r\n            ":"\r\n            包含此模块的组件。如果模块不是组件的一部分，则可能为null。\r\n            \r\n","\r\n            Instruments the binary to add test coverage.\r\n            ":"\r\n            仪器二进制以添加测试覆盖范围。\r\n            \r\n",".\r\n            We do not support the ":"。\r\n            我们不支持\r\n","\r\n            Checks if the method is an accessor for an event.\r\n            ":"\r\n            检查该方法是否是事件的访问者。\r\n            \r\n","Type - if a type is unsupported (for example, a pointer type)":"类型 - 如果不支持类型（例如，指针类型）\r\n"," in VB code.\r\n            ":" 在VB代码中。\r\n            \r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n            specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n            accessible.\r\n            ":"\r\n            “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n            指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n            无障碍。\r\n            \r\n",".\r\n            The pinned memory is released when the resulting reference becomes unreachable and GC collects it. To control the lifetime of the pinned memory \r\n            deterministically use ":"。\r\n            当结果参考变得无法到达并收集GC时，固定内存将释放。控制固定内存的寿命\r\n            确定性使用\r\n"," and the specified document's category to the specified\r\n            document, bypassing the configuration's document loader.\r\n            ":" 以及指定的指定文档的类别\r\n            文档，绕过配置的文档加载程序。\r\n            \r\n","\r\n              Looks up a localized string similar to Path returned by {0}.ResolveStrongNameKeyFile must be absolute: '{1}'.\r\n            ":"\r\n              查找类似于{0}返回的路径的本地化字符串。ResolvestrongNameKeyKeyFile必须是绝对的：'{1}'。\r\n            \r\n","\r\n            Resolves relative path and returns absolute path.\r\n            The method depends only on values of its parameters and their implementation (for fileExists).\r\n            It doesn't itself depend on the state of the current process (namely on the current drive directories) or \r\n            the state of file system.\r\n            ":"\r\n            解析相对路径并返回绝对路径。\r\n            该方法仅依赖于其参数的值及其实现（对于fileExists）。\r\n            它本身不依赖于当前进程的状态（即当前驱动器目录）或 \r\n            文件系统的状态。\r\n            \r\n","\r\n            Shows the name of the symbol and the names of all containing types.\r\n            ":"\r\n            显示符号的名称和所有包含类型的名称。\r\n            \r\n","Stream is so big that max char count can't fit in ":"流是如此之大，以至于Max Char Count无法适应\r\n","Delegate to add diagnostics generated for exceptions from third party analyzers.":"委托添加第三方分析仪例外生成的诊断。\r\n","\r\n            Notifies the host object that it has been exposed to script code.\r\n            ":"\r\n            通知主机对象已暴露于脚本代码。\r\n            \r\n"," occurs.  However, the accessibility rules\r\n             are different: protected members of the base type will be visible.\r\n            \r\n             Consider the following example:\r\n            \r\n               public class Base\r\n               {\r\n                   protected void M() { }\r\n               }\r\n            \r\n               public class Derived : Base\r\n               {\r\n                   void Test(Base b)\r\n                   {\r\n                       b.M(); // Error - cannot access protected member.\r\n                       base.M();\r\n                   }\r\n               }\r\n            \r\n             Protected members of an instance of another type are only accessible if the instance is known\r\n             to be \"this\" instance (as indicated by the \"base\" keyword).\r\n             ":" 发生。但是，可访问性规则\r\n             有所不同：基本类型的受保护成员将是可见的。\r\n            \r\n             考虑以下示例：\r\n            \r\n               公共班级\r\n               {\r\n                   受保护的void m（）{}\r\n               }\r\n            \r\n               派生公共类：基础\r\n               {\r\n                   空隙测试（基本B）\r\n                   {\r\n                       B.M（）; //错误 - 无法访问受保护的成员。\r\n                       base.m（）;\r\n                   }\r\n               }\r\n            \r\n             仅当已知实例的情况下，只能访问其他类型实例的受保护成员\r\n             为“此”实例（如“基本”关键字所示）。\r\n             \r\n","\r\n            Gets the default settings to read the ruleset xml file.\r\n            ":"\r\n            获取默认设置以读取规则集XML文件。\r\n            \r\n","\r\n            Comparer that should be used for all analyzer config keys. This is a case-insensitive comparison based\r\n            on Unicode case sensitivity rules for identifiers.\r\n            ":"\r\n            所有分析仪配置键都应使用的比较。这是基于病例的比较\r\n            关于标识符的Unicode案例敏感性规则。\r\n            \r\n",", which contains the true/false ":"，其中包含真/错误\r\n","(0,0)-(5,6)":"（0,0） - （5,6）\r\n","\r\n            Gets or sets the maximum size of the executable code heap in\r\n            ":"\r\n            获取或设置可执行代码堆的最大大小\r\n            \r\n","\r\n            Represents an operation that drops the resulting value and the type of the underlying wrapped ":"\r\n            代表删除结果值和基础包裹的类型的操作\r\n","\r\n              Looks up a localized string similar to Name contains invalid characters..\r\n            ":"\r\n              查找类似名称的本地化字符串包含无效字符。\r\n            \r\n","\r\n            Returns true if this property returns by reference a readonly variable.\r\n            ":"\r\n            如果此属性通过引用读取变量返回，则返回true。\r\n            \r\n"," where\r\n                 the doX objects are of type dynamic, we'll have 3 ":" 在哪里\r\n                 DOX对象是动态类型的，我们将有3个\r\n","\r\n            Provides semantic models for syntax trees in a compilation.\r\n            This provider can be attached to a compilation, see ":"\r\n            在汇编中提供语法模型。\r\n            该提供商可以附加到汇编，请参阅\r\n","\r\n            Gets the value of an indexed script object property.\r\n            ":"\r\n            获取索引脚本对象属性的值。\r\n            \r\n","\r\n              Looks up a localized string similar to type parameter.\r\n            ":"\r\n              查找类似于类型参数的本地化字符串。\r\n            \r\n"," that is the subject of the analysis.\r\n            ":" 那是分析的主题。\r\n            \r\n","\r\n            Returns true if the diagnostic is enabled by default.\r\n            ":"\r\n            如果默认启用诊断，则返回true。\r\n            \r\n"," will return equal. Use ":" 将返回相等。利用\r\n",", as well as a common way for handling the special \r\n             ":"，以及处理特别的常见方法\r\n             \r\n","\r\n            True if the method is special in some way for tools. For example, it might be a property getter or setter.\r\n            ":"\r\n            如果该方法在某种程度上是特殊的工具，则为thy。例如，它可能是属性getter或setter。\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified name, resource constraints, options, and debug port.\r\n            ":"\r\n            初始化具有指定名称，资源约束，选项和调试端口的新的V8脚本引擎实例。\r\n            \r\n","When applying this attribute, only explicitly set the values for properties specifically indicated by the\r\n            test/measurement technique described in the associated ":"应用此属性时，仅明确设置由\r\n            相关的测试/测量技术\r\n","\r\n            Debugging information associated with an async method to support EE.\r\n            ":"\r\n            调试与支持EE的异步方法相关的信息。\r\n            \r\n","\r\n            Multiply a BigInteger by the given power of ten.\r\n            ":"\r\n            将biginteger乘以十大的能力。\r\n            \r\n"," is less than 0.-or-":" 小于0.或 - \r\n","\r\n            Add a diagnostic to the bag.\r\n            ":"\r\n            在袋子中添加诊断。\r\n            \r\n","\r\n            Full public key or empty.\r\n            ":"\r\n            完整的公钥或空。\r\n            \r\n","\r\n            The type of the elements of this array.\r\n            ":"\r\n            该数组的元素的类型。\r\n            \r\n","\r\n            An ordered set of fully qualified paths which are searched when locating a cryptographic key file.\r\n            ":"\r\n            定位加密密钥文件时搜索的一组有序的完全合格的路径。\r\n            \r\n","\r\n            array. Returns an empty array if there are no modifiers.\r\n            ":"\r\n            大批。如果没有修饰符，则返回一个空数组。\r\n            \r\n","\r\n            Symbol is a parameter.\r\n            ":"\r\n            符号是一个参数。\r\n            \r\n","\r\n            True if the constant represents a null reference.\r\n            ":"\r\n            如果常数表示零引用，则为true。\r\n            \r\n"," in bytes.\r\n            ":" 在字节中。\r\n            \r\n","\r\n             Represents a single variable declarator and initializer.\r\n             ":"\r\n             代表单个变量声明器和初始化器。\r\n             \r\n","\r\n            Returns a string that represents the current exception.\r\n            ":"\r\n            返回表示当前异常的字符串。\r\n            \r\n","\r\n            The line number. The first line in a file is defined as line 0 (zero based line numbering).\r\n            ":"\r\n            线号。文件中的第一行定义为第0行（基于零的行编号）。\r\n            \r\n","The length of the returned string is always the same as Span.Length":"返回的字符串的长度始终与Span.Length\r\n","\r\n            Represents a basic block in a ":"\r\n            代表一个基本块\r\n","\r\n            Path may be ":"\r\n            路径可能是\r\n"," is the interface ":" 是接口\r\n","\r\n            Predicate always evaluates to false.\r\n            ":"\r\n            谓词总是评估为错误。\r\n            \r\n","\r\n            If a debugger is attached, it will present the specified script code to the user as a\r\n            document with the specified name. This document will be discarded after execution.\r\n            ":"\r\n            如果附加了调试器，它将将指定的脚本代码呈现给用户\r\n            带有指定名称的文档。执行后将丢弃本文档。\r\n            \r\n","ByVal":"byval\r\n"," for a metadata reference used to create this\r\n            compilation.\r\n            ":" 用于用于创建此的元数据参考\r\n            汇编。\r\n            \r\n","\r\n            2. ":"\r\n            2。\r\n","\r\n              Looks up a localized string similar to <in-memory module>.\r\n            ":"\r\n              查找类似于<内存模块>的本地化字符串。\r\n            \r\n"," open for further writes.\r\n            ":" 开放以进一步写作。\r\n            \r\n","\r\n            Gets the default document loader.\r\n            ":"\r\n            获取默认文档加载程序。\r\n            \r\n","Indicates whether or not we're parsing an assembly version string. If so, wildcards are accepted and each component must be less than 65535.":"指示我们是否正在解析汇编版本字符串。如果是这样，通配符被接受，每个组件必须小于65535。\r\n","\r\n            The (delegate) type of the handlers that will handle the event.\r\n            ":"\r\n            将处理事件的处理程序的（委托）类型。\r\n            \r\n"," and its members.\r\n            ":" 及其成员。\r\n            \r\n","\r\n            The conversion from the ":"\r\n            从\r\n","\r\n            Returns a set of descriptors for the suppressions that this suppressor is capable of producing.\r\n            ":"\r\n            返回一组描述符，以抑制该抑制器能够产生的抑制作用。\r\n            \r\n","\r\n            The list of trivia that appear before this token in the source code.\r\n            ":"\r\n            源代码中此图表之前出现的琐事列表。\r\n            \r\n","\r\n            Register an action to be executed at completion of semantic analysis of a document,\r\n            which will operate on the ":"\r\n            注册一项措施将在完成文档的语义分析时执行，\r\n            将在\r\n","\r\n            Determines whether a sequence contains, exactly, ":"\r\n            确定序列是否完全包含\r\n","\r\n            Represents Case Is op x in VB.\r\n            ":"\r\n            代表案例是VB中的OP X。\r\n            \r\n","\r\n            The full string representation of the nodes in this list including separators including separators,\r\n            the first node's leading trivia, and the last node or token's trailing trivia.\r\n            ":"\r\n            此列表中节点的完整字符串表示形式，包括分隔符，包括分离器，\r\n            第一个节点的领先琐事，最后一个节点或令牌的traging琐事。\r\n            \r\n"," is to be marshaled as a variant of type ":" 被称为类型的变体\r\n","The IncludeAll node from which to create a IncludeAll object":"创建一个IncludeAll对象的包含节点\r\n","\r\n            Stores the partial analysis state for syntax node actions executed on the declaration.\r\n            ":"\r\n            存储在声明上执行的语法节点操作的部分分析状态。\r\n            \r\n","\r\n            Enable analyzer action callbacks for generated code.\r\n            Analyzer driver will make callbacks into the analyzer for all entities (source files, symbols, etc.) in the compilation, including generated code.\r\n            ":"\r\n            为生成的代码启用分析仪操作回调。\r\n            分析仪驱动程序将在编译中的所有实体（源文件，符号等）的分析仪中回电，包括生成的代码。\r\n            \r\n","\r\n            An object that contains an instance of an SourceText and raises events when its current instance\r\n            changes.\r\n            ":"\r\n            一个包含SourceText实例并在其当前实例时提出事件的对象\r\n            变化。\r\n            \r\n","\r\n            Populate PropertyMap table.\r\n            ":"\r\n            填充属性表。\r\n            \r\n","\r\n            Kind of binary operator.\r\n            ":"\r\n            一种二进制操作员。\r\n            \r\n","Greater than zero: ":"大于零：\r\n","The bytes.":"字节。\r\n","ITypedArray<byte>":"ItypedArray <byte>\r\n","new()":"新的（）\r\n","\r\n            Enqueue the given type as either a def or a ref.\r\n            ":"\r\n            将给定类型作为def或ref。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# using statement.\r\n             (2) VB Using statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃使用语句。\r\n             （2）使用语句VB。\r\n            \r\n"," statement. When used in this manner,\r\n             ":" 陈述。当以这种方式使用时\r\n             \r\n","Optional constructor arguments.":"可选的构造函数。\r\n","\r\n            descend into nodes and tokens\r\n            ":"\r\n            下降到节点和令牌\r\n            \r\n","\r\n            This is equivalent to the union of all ":"\r\n            这等同于所有人的联合\r\n","A sequence of element nodes.":"一系列元素节点。\r\n"," with the specified node or token inserted at the index.\r\n            ":" 用指定的节点或令牌插入索引。\r\n            \r\n","\r\n            The language name that this token is syntax of.\r\n            ":"\r\n            该令牌是语法的语言名称。\r\n            \r\n",", which\r\n            is the semantic model on which ":"， 哪个\r\n            是语义模型\r\n","The name of an assembly.":"集会的名称。\r\n",", then the canBeEmbedded arg must have\r\n             been true.\r\n            \r\n             Otherwise, ":"，那么canbebedded arg一定有\r\n             是真的。\r\n            \r\n             否则，\r\n","\r\n            Creates a compiled script with the specified document meta-information, generating cache data for accelerated recompilation.\r\n            ":"\r\n            使用指定的文档元信息创建一个编译的脚本，从而生成用于加速重新编译的缓存数据。\r\n            \r\n"," with the container set to the immediate base type of\r\n            the type in which ":" 将容器设置为直接基础类型\r\n            其中的类型\r\n","\r\n            Parses a command line.\r\n            ":"\r\n            解析命令行。\r\n            \r\n","\r\n            Indicates that this symbol uses metadata that cannot be supported by the language.\r\n            \r\n            Examples include:\r\n               - Pointer types in VB\r\n               - ByRef return type\r\n               - Required custom modifiers\r\n               \r\n            This is distinguished from, for example, references to metadata symbols defined in assemblies that weren't referenced.\r\n            Symbols where this returns true can never be used successfully, and thus should never appear in any IDE feature.\r\n            \r\n            This is set for metadata symbols, as follows:\r\n            Type - if a type is unsupported (e.g., a pointer type, etc.)\r\n            Method - parameter or return type is unsupported\r\n            Field - type is unsupported\r\n            Event - type is unsupported\r\n            Property - type is unsupported\r\n            Parameter - type is unsupported\r\n            ":"\r\n            表示此符号使用该语言无法支持的元数据。\r\n            \r\n            示例包括：\r\n                -  VB中的指针类型\r\n                -  BYREF返回类型\r\n                - 必需的自定义修饰符\r\n               \r\n            这与例如未引用的组件中定义的元数据符号的引用相比，有所区别。\r\n            返回true的符号永远无法成功使用，因此绝不应该出现在任何IDE功能中。\r\n            \r\n            这是为元数据符号设置的，如下：\r\n            类型 - 如果不支持类型（例如，指针类型等）\r\n            方法 - 不支持参数或返回类型\r\n            字段 - 类型不支持\r\n            事件 - 类型不支持\r\n            属性 - 类型不支持\r\n            参数 - 类型不支持\r\n            \r\n","\r\n            Checks if the properties of ":"\r\n            检查是否属性\r\n","\r\n            Operation for setting the initial value of the loop control variable. This comes from the expression between the 'For' and 'To' keywords.\r\n            ":"\r\n            设置循环控制变量的初始值的操作。这来自“ for”和“ to”关键字之间的表达。\r\n            \r\n","\r\n            Represents a conditional operation with:\r\n             (1) ":"\r\n            代表有条件的操作：\r\n             （1）\r\n","\r\n            Formats a symbol description as in a C# compiler short error message.\r\n            ":"\r\n            格式化一个符号描述，如C＃编译器短错误消息。\r\n            \r\n"," for C#.\r\n            Always returns null for VB as ":" 对于C＃。\r\n            总是将null返回为vb\r\n","\r\n            A map from a metadata reference to an index to ":"\r\n            从元数据引用索引到索引到索引的地图\r\n","\r\n            Argument is specified by name and matches the parameter of the same name.\r\n            ":"\r\n            参数是按名称指定的，并匹配同名的参数。\r\n            \r\n","The metadata image content can't be read.":"无法读取元数据图像内容。\r\n","\r\n            Represents an initializer for a field, property, or parameter.\r\n            ":"\r\n            代表字段，属性或参数的初始器。\r\n            \r\n","\r\n            Find the MemberNotNullWhen attribute(s) and extract the list of referenced member names\r\n            ":"\r\n            查找成员notnullwhen属性并提取引用的成员名称列表\r\n            \r\n","\r\n            Host types are imported in the form of objects whose properties and methods are bound\r\n            to the host type's static members and nested types. If ":"\r\n            主机类型是以属性和方法绑定的对象形式导入的\r\n            到主机类型的静态成员和嵌套类型。如果\r\n","\r\n            Type is a function pointer.\r\n            ":"\r\n            类型是功能指针。\r\n            \r\n","\r\n            Compilation diagnostics reported by the ":"\r\n            汇编诊断是由\r\n","\r\n            Returns the implementation flags for the given method symbol.\r\n            ":"\r\n            返回给定方法符号的实现标志。\r\n            \r\n","The map to test.":"测试的地图。\r\n"," for a reported diagnostic.\r\n            ":" 报告的诊断。\r\n            \r\n","\r\n            The path in which the compilation takes place.\r\n            ":"\r\n            进行汇编的路径。\r\n            \r\n","The preferred culture to receive a comment in. Null if\r\n            there is no preference. This is a preference only, and providers may choose to provide\r\n            results from another culture if the preferred culture was unavailable.":"首选的文化收到评论。\r\n            没有偏好。这只是一个偏好，提供者可以选择提供\r\n            如果首选文化不可用，则来自另一种文化的结果。\r\n"," containing the text to parse.\r\n            ":" 包含文本进行解析。\r\n            \r\n"," instance with the specified name and script options.\r\n            ":" 带有指定名称和脚本选项的实例。\r\n            \r\n","\r\n            Method is a delegate invoke.\r\n            ":"\r\n            方法是代表调用。\r\n            \r\n","\r\n            The underlying token wrapped by the supplied ":"\r\n            所提供的基础令牌\r\n","\r\n            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.\r\n            ":"\r\n            如果枚举者成功地推进下一个元素，则是的；错误，如果枚举者通过了集合的末尾。\r\n            \r\n","\r\n            Gets the script access setting for the target type member.\r\n            ":"\r\n            获取目标类型成员的脚本访问设置。\r\n            \r\n","Compilation options":"汇编选项\r\n"," stripped away from the original object.\r\n            ":" 脱离原始物体。\r\n            \r\n","\r\n            The compile time value of the definition, if it is a local constant.\r\n            ":"\r\n            定义的编译时间值，如果是局部常数。\r\n            \r\n",", validation of this performance constraint typically involves analyzing\r\n            the method to ensure synchronous completion of the state machine does not require the allocation of a\r\n            ":"，对该绩效约束的验证通常涉及分析\r\n            确保同步完成状态机的方法不需要分配\r\n            \r\n"," against the values in ":" 反对价值\r\n","\r\n             Debug entry-point of the assembly. The method token is stored in the generated PDB stream.\r\n            \r\n             When a program launches with a debugger attached the debugger places the first breakpoint to the start of the debug entry-point method.\r\n             The CLR starts executing the static Main method of ":"\r\n             大会的调试入口点。方法令牌存储在生成的PDB流中。\r\n            \r\n             当程序启动带有调试器时，调试器将第一个断点放在调试入口点方法的开始。\r\n             CLR开始执行静态主方法\r\n","\r\n            This method only works when ":"\r\n            此方法仅在\r\n","\r\n            Describes a source file specification stored on command line arguments.\r\n            ":"\r\n            描述存储在命令行参数上的源文件规范。\r\n            \r\n","\r\n            Identity of the assembly.\r\n            ":"\r\n            组件的身份。\r\n            \r\n","\r\n            Attribute is conditionally omitted if it is a source attribute and both the following are true:\r\n            (a) It has at least one applied conditional attribute AND\r\n            (b) None of conditional symbols are true at the attribute source location.\r\n            ":"\r\n            如果属性是源属性，则有条件地省略属性，以下两个都是正确的：\r\n            （a）它至少具有一个有条件的属性和\r\n            （b）在属性源位置，没有条件符号是正确的。\r\n            \r\n","\r\n            Gets the last token of the tree rooted by this node. Skips zero-width tokens.\r\n            ":"\r\n            获取由该节点扎根的树的最后一个令牌。跳过零宽的令牌。\r\n            \r\n","\r\n            Module name. Null if value specified in the attribute is not valid.\r\n            ":"\r\n            模块名称。 null如果属性中指定的值无效。\r\n            \r\n","\r\n            The individual result of each ":"\r\n            每个人的个人结果\r\n"," is *not* part of that built-in\r\n                equatability, but we do write them out, and so descriptors differing only\r\n                by CustomTags (rare) would cause only one set of tags to be reported in the\r\n                log.\r\n             ":" 是 *不是 *该内置的一部分\r\n                平等性，但我们确实将它们写出，因此描述符只有不同\r\n                通过惯例（稀有）将仅报告一组标签\r\n                日志。\r\n             \r\n","\r\n            An Int32 value encoded as 1 byte.\r\n            ":"\r\n            INT32值编码为1个字节。\r\n            \r\n","\r\n            SyntaxTree which contains current SyntaxNodeOrToken.\r\n            ":"\r\n            语法中包含当前的语法诺言。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified name, resource constraints, and options.\r\n            ":"\r\n            初始化具有指定名称，资源约束和选项的新的V8运行时实例。\r\n            \r\n","[i] are of an assembly ":"[i]是一个集会\r\n"," gets its own\r\n            subdirectory under this directory. This is also the starting point\r\n            for scavenge operations.\r\n            ":" 拥有自己的\r\n            该目录下的子目录。这也是起点\r\n            用于清除行动。\r\n            \r\n","The profile if it was found and completed successfully, ":"个人资料如果找到并成功完成，\r\n","\r\n            This will only compile if ":"\r\n            这只会在\r\n","\r\n             Returns fields that represent tuple elements for types that are tuples.\r\n            \r\n             If this type is not a tuple, then returns default.\r\n             ":"\r\n             返回代表元组类型的元组元素的字段。\r\n            \r\n             如果此类型不是元组，则返回默认值。\r\n             \r\n","\r\n            Expression is not null.\r\n            ":"表达不是零。\r\n            \r\n","A syntax tree.":"语法树。\r\n","\r\n            Represents a C# switch expression arm.\r\n            ":"\r\n            表示C＃开关表达组。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# unary operation expression.\r\n             (2) VB unary operation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃Unary操作表达式。\r\n             （2）VB一元操作表达式。\r\n            \r\n","\r\n            Maps an async/iterator method to the synthesized state machine type that implements the method. \r\n            ":"\r\n            将异步/迭代方法映射到实现该方法的合成状态计算机类型。\r\n            \r\n","\r\n            Returns analyzer options with the given ":"\r\n            带有给定的分析仪选项\r\n","\r\n            Determines the level of optimization of the generated code.\r\n            ":"\r\n            确定生成代码的优化级别。\r\n            \r\n","Modules comprising the assembly. The first module is the manifest module of the assembly.":"包含组件的模块。第一个模块是组件的清单模块。\r\n"," (whitespace, comments, directives) attached to it.\r\n            ":" （空格，评论，指令）附在其中。\r\n            \r\n"," for the declaration containing the syntax node.\r\n            ":" 对于包含语法节点的声明。\r\n            \r\n","\r\n            Returns an instance of the reference with specified interop types embedding.\r\n            ":"\r\n            返回带有指定的Interop类型嵌入的参考实例。\r\n            \r\n","\r\n            Gets the script engine that is invoking a host member on the current thread.\r\n            ":"\r\n            获取脚本引擎在当前线程上调用主机成员。\r\n            \r\n",".\r\n            Unlike the ":"。\r\n            不像\r\n","\r\n            Referenced local variable.\r\n            ":"\r\n            引用本地变量。\r\n            \r\n","\r\n            2. Currently being processed: ":"\r\n            2.当前正在处理：\r\n","\r\n            Add an error to the given node, creating a new node that is the same except it has no parent,\r\n            and has the given error attached to it. The error span is the entire span of this node.\r\n            ":"\r\n            在给定节点上添加错误，创建一个新节点，除非没有父母，否则\r\n            并带有给定的错误。误差跨度是该节点的整个跨度。\r\n            \r\n","\r\n            A diagnostic (such as a compiler error or a warning), along with the location where it occurred.\r\n            ":"\r\n            诊断（例如编译器错误或警告）以及发生的位置。\r\n            \r\n"," property is guaranteed to be empty, and the ":" 保证财产是空的，\r\n","\r\n            Returns true if a given field is a nondefault tuple element\r\n            ":"\r\n            如果给定字段是不默认元组元素，则返回true\r\n            \r\n","\r\n            is used to refer to the ":"\r\n            用于指代\r\n","\r\n            TODO: This should probably be reimplemented with ":"\r\n            TODO：这可能应该重新完成\r\n","\r\n            Returns MetadataToken for assembly ref matching name\r\n            ":"\r\n            返回元数据归纳用于组装涉及匹配名称\r\n            \r\n","TextReader":"Textreader\r\n","\r\n            Kinds of binary operations.\r\n            ":"\r\n            种类的二进制操作。\r\n            \r\n","\r\n            Write this ":"\r\n            写这个\r\n","\r\n            This interface models the metadata representation of a method.\r\n            ":"该接口建模方法的元数据表示。\r\n            \r\n","\r\n            Current usage:\r\n              (1) C# 'while', 'for', 'foreach' and 'do' loop statements\r\n              (2) VB 'While', 'ForTo', 'ForEach', 'Do While' and 'Do Until' loop statements\r\n            ":"\r\n            当前用法：\r\n              （1）c＃'while'，'for'，'foreach'和do'循环语句\r\n              （2）vb'while'，'forto'，'foreach'，'do while'和do do do do\r\n            \r\n","\r\n             Map of reference id's to deserialized objects.\r\n            \r\n             These are not readonly because they're structs and we mutate them.\r\n             ":"\r\n             参考ID的映射到应序列化对象。\r\n            \r\n             这些不是因为它们的结构而被阅读，我们将它们变异。\r\n             \r\n"," to make it writable.":" 使其可写。\r\n"," reported by a ":" 由a报告\r\n"," spans\r\n            ":" 跨度\r\n            \r\n","\r\n            The absolute span of this token in characters, not including its leading and trailing trivia.\r\n            ":"\r\n            这个令牌的绝对跨度，不包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Represents a document category.\r\n            ":"\r\n            代表文档类别。\r\n            \r\n","\r\n            Represents the '*' operator.\r\n            ":"\r\n            代表“*”运算符。\r\n            \r\n","\r\n            Returns the list of custom attributes, if any, associated with the returned value. \r\n            ":"\r\n            返回与返回值关联的自定义属性列表。\r\n            \r\n"," on a basic block.\r\n            It stores data values for each ":" 在基本块上。\r\n            它存储每个数据值\r\n","\r\n            Indicates a \"ref\" parameter or return type.\r\n            ":"\r\n            指示“ REF”参数或返回类型。\r\n            \r\n","\r\n            Represents an await expression.\r\n            ":"\r\n            代表一个正在等待的表达。\r\n            \r\n","\r\n            Represents a C# while, for, foreach, or do statement, or a VB While, For, For Each, or Do statement.\r\n            ":"\r\n            代表一个c＃while，for，for，foreach或do语句，或vb while，for for for for for ever tor或do语句。\r\n            \r\n","\r\n            Represents a source assembly symbol exposed by the compiler.\r\n            ":"\r\n            代表编译器暴露的源组件符号。\r\n            \r\n","\r\n            Represents a named section of the editorconfig file, which consists of a name followed by a set\r\n            of key-value pairs.\r\n            ":"\r\n            代表EditorConfig文件的指定部分，该部分由名称组成，然后是集合\r\n            钥匙值对。\r\n            \r\n","\r\n            Indicates whether the property is readable and/or writable.\r\n            In C#, this is accomplished by including accessors.\r\n            In Visual Basic, this is accomplished by including the ":"\r\n            指示该物业是否可读和/或可写。\r\n            在C＃中，这是通过包括登录器来完成的。\r\n            在Visual Basic中，这是通过包括\r\n","\r\n            Calculates computational complexity metrics based on the number \r\n            of operators and operands found in the code.\r\n            ":"\r\n            根据数量计算计算复杂度指标\r\n            代码中找到的操作员和操作数。\r\n            \r\n","Parallelization APIs and algorithms, e.g. ":"并行化API和算法，例如\r\n","true if the set is empty; otherwise, false.":"如果设置为空，则为thus；否则，错误。\r\n"," method used in a ForEach statement.\r\n            ":" foreach语句中使用的方法。\r\n            \r\n","\r\n            For a DiagnosticInfo that is lazily evaluated, this method evaluates it\r\n            and returns a non-lazy DiagnosticInfo.\r\n            ":"\r\n            对于懒惰评估的诊断，此方法对其进行了评估\r\n            并返回非懒惰诊断。\r\n            \r\n","\r\n            Defines the max length for method call chain (call stack size) for interprocedural analysis.\r\n            This is done for performance reasons for analyzing methods with extremely large call trees.\r\n            https://github.com/dotnet/roslyn-analyzers/issues/1809 tracks improving this heuristic.\r\n            ":"\r\n            定义方法呼叫链的最大长度（呼叫堆栈大小）进行概要分析。\r\n            这是出于表现原因而进行的，以分析非常大的呼叫树的方法。\r\n            https://github.com/dotnet/roslyn-analyzers/issues/1809跟踪这种启发式。\r\n            \r\n","\r\n            A UInt32 value encoded as 1 byte.\r\n            ":"\r\n            UINT32值编码为1个字节。\r\n            \r\n"," value respectively.\r\n            ":" 价值分别。\r\n            \r\n","\r\n            Referenced method.\r\n            ":"\r\n            引用方法。\r\n            \r\n","\r\n            A region representing an exception handler clause. The region exposes the type (catch or\r\n            finally) and the bounds of the try block and catch or finally block as needed by \r\n            ":"\r\n            代表异常处理程序子句的区域。该区域暴露了类型（捕获或\r\n            最后）以及Try Block的边界，并根据需要捕获或最终阻止\r\n            \r\n"," that contains path, line and column information.\r\n            \r\n            Returns an invalid span (see ":" 其中包含路径，行和列信息。\r\n            \r\n            返回无效的跨度（请参阅\r\n","\r\n            Includes the value of the member if is a constant.\r\n            ":"\r\n            包括成员的值，如果是常数。\r\n            \r\n","The member name for which to search.":"要搜索的成员名称。\r\n","\r\n            Root type for representing the abstract semantics of C# and VB statements and expressions.\r\n            ":"\r\n            用于表示C＃和VB语句和表达式的抽象语义的根类型。\r\n            \r\n","\r\n              Looks up a localized string similar to Argument contains an analyzer instance that does not belong to the 'Analyzers' for this CompilationWithAnalyzers instance..\r\n            ":"\r\n              查找类似于参数的本地化字符串包含一个分析仪实例，该实例不属于此compilationWithAnalyzers实例的“分析仪”。\r\n            \r\n","A formatted string that can be displayed to the user.":"可以显示给用户的格式字符串。\r\n","\r\n            True if all type arguments matching this parameter are constrained to be value types or concrete classes with visible default constructors.\r\n            ":"\r\n            正确，如果将与此参数匹配的所有类型参数被限制为具有可见默认构造函数的值类型或具体类。\r\n            \r\n","Local id.":"本地ID。\r\n","\r\n            Determines whether the node represents a language construct that was actually parsed\r\n            from the source code. Missing nodes are generated by the parser in error scenarios to\r\n            represent constructs that should have been present in the source code in order to\r\n            compile successfully but were actually missing.\r\n            ":"\r\n            确定节点是否代表实际解析的语言构造\r\n            从源代码。在错误方案中，解析器生成缺少的节点\r\n            表示源代码中本应存在的结构\r\n            成功地编译，但实际上缺少。\r\n            \r\n","\r\n            Takes a Symbol and syntax for one of its declaring syntax reference and returns the topmost syntax node to be used by syntax analyzer.\r\n            ":"\r\n            为其声明的语法引用之一，为其符号和语法，并返回语法分析仪要使用的最高语法节点。\r\n            \r\n","\r\n            Gets or sets a value indicating whether captures are allowed.\r\n            ":"\r\n            获取或设置一个指示是否允许捕获的值。\r\n            \r\n","\r\n            Specified sizes for dimensions, by position. The length can be less than ":"\r\n            按位置指定的尺寸。长度可能小于\r\n","\r\n              Looks up a localized string similar to Path returned by {0}.ResolveMetadataFile must be absolute: '{1}'.\r\n            ":"\r\n              查找类似于{0}返回的路径的本地化字符串。resolvemetadatafile必须是绝对的：'{1}'。\r\n            \r\n","\r\n            Gets all scopes that contain variables.\r\n            ":"\r\n            获取所有包含变量的范围。\r\n            \r\n","\r\n            Returns true if the string represents an unqualified file name. \r\n            The name may contain any characters but directory and volume separators.\r\n            ":"\r\n            如果字符串表示不合格的文件名，则返回true。\r\n            该名称可能包含除目录和音量分离器以外的任何字符。\r\n            \r\n","\r\n            Special type <Module>\r\n            ":"\r\n            特殊类型<模块>\r\n            \r\n","Compilation to be used in the analysis.":"用于分析的汇编。\r\n","The DecimalFloatingPointString containing the digits in its Mantissa":"十进制位于其Mantissa中的数字\r\n"," will return\r\n            ":" 将返回\r\n            \r\n","\r\n             Dictionary designed to hold small number of items.\r\n             Compared to the regular Dictionary, average overhead per-item is roughly the same, but \r\n             unlike regular dictionary, this one is based on an AVL tree and as such does not require \r\n             rehashing when items are added.\r\n             It does require rebalancing, but that is allocation-free.\r\n            \r\n             Major caveats:\r\n              1) There is no Remove method. (can be added, but we do not seem to use Remove that much)\r\n              2) foreach [keys|values|pairs] may allocate a small array.\r\n              3) Performance is no longer O(1). At a certain count it becomes slower than regular Dictionary.\r\n                 In comparison to regular Dictionary on my machine:\r\n                    On trivial number of elements (5 or so) it is more than 2x faster.\r\n                    The break even count is about 120 elements for read and 55 for write operations (with unknown initial size).\r\n                    At UShort.MaxValue elements, this dictionary is 6x slower to read and 4x slower to write\r\n            \r\n             Generally, this dictionary is a win if number of elements is small, not known beforehand or both.\r\n            \r\n             If the size of the dictionary is known at creation and it is likely to contain more than 10 elements, \r\n             then regular Dictionary is a better choice.\r\n             ":"\r\n             词典旨在容纳少量物品。\r\n             与常规词典相比，平均每个项目的平均开销大致相同，但是\r\n             与常规词典不同，该词基于AVL树，因此不需要\r\n             添加物品时重新进行。\r\n             它确实需要重新平衡，但这是无分配的。\r\n            \r\n             主要警告：\r\n              1）没有删除方法。 （可以添加，但我们似乎不使用太多删除）\r\n              2）foreach [键|值|对]可能会分配一个小数组。\r\n              3）性能不再是O（1）。在一定的计数上，它比常规词典慢。\r\n                 与我的机器上的常规词典相比：\r\n                    在微不足道的元素（5个左右）上，它快2倍以上。\r\n                    突破甚至计数约为读取的120个元素，写入操作（初始尺寸未知）为55。\r\n                    在ushort.maxvalue元素上，该词典的阅读速度慢6倍，并且写得慢4倍\r\n            \r\n             通常，如果元素数量很小，事先或两者兼而有之，则该词典是胜利。\r\n            \r\n             如果词典的大小在创建时已知，并且可能包含10个以上的元素，则\r\n             然后，常规词典是一个更好的选择。\r\n             \r\n"," that contains path, line and column information.\r\n            \r\n            If the location path is mapped the resulting path is the path specified in the corresponding ":" 其中包含路径，行和列信息。\r\n            \r\n            如果映射位置路径，则结果路径是相应的路径\r\n","\r\n            Reset all the instance analysis data for ":"\r\n            重置所有实例分析数据\r\n","\r\n            Report a non-fatal error.\r\n            Calls ":"\r\n            报告非致命错误。\r\n            呼叫\r\n","\r\n            Current Usage:\r\n              (1) C# local declaration statement\r\n              (2) C# fixed statement\r\n              (3) C# using statement\r\n              (4) VB Dim statement\r\n              (5) VB Using statement\r\n            ":"\r\n            当前用法：\r\n              （1）C＃本地声明声明\r\n              （2）C＃固定语句\r\n              （3）C＃使用语句\r\n              （4）VB DIM语句\r\n              （5）使用语句的VB\r\n            \r\n",".  This can happen as the parser is allowed to construct parse\r\n            trees from shared nodes for efficiency.  In all these cases though, it will still remain true that the incrementally\r\n            identical nodes could have different parents and may occur at different positions in their respective trees.\r\n            ":"。当解析器被允许构造解析时，这可能会发生\r\n            共享节点的树木提高效率。但是，在所有这些情况下，逐步递增仍然是正确的\r\n            相同的节点可能有不同的父母，并且可能在各自树木的不同位置发生。\r\n            \r\n","\r\n            Gets telemetry info for the given analyzer, such as count of registered actions, the total execution time (if ":"\r\n            获取给定分析仪的遥测信息，例如注册操作计数，总执行时间（如果\r\n","\r\n            Current usage:\r\n             (1) C# pointer indirection reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃指针间接参考表达式。\r\n            \r\n","\r\n            The category of the diagnostic (like Design, Naming etc.)\r\n            ":"\r\n            诊断类别（例如设计，命名等）\r\n            \r\n","\r\n            True if we need to categorize diagnostics into local and non-local diagnostics and track the analyzer reporting each diagnostic.\r\n            ":"\r\n            如果我们需要将诊断分类为本地和非本地诊断并跟踪报告每个诊断的分析仪，则是事实。\r\n            \r\n","\r\n            Note that it is possible for an element to be both \"Default\" and to have a user provided name.\r\n            That could happen if the provided name matches the default name such as \"Item10\"\r\n            ":"\r\n            请注意，一个元素可以既可以既可以默认”，又有一个用户提供的名称。\r\n            如果提供的名称匹配默认名称，例如“ item10”，那可能会发生这种情况\r\n            \r\n","\r\n            Identifier of the suppressed diagnostic, i.e. ":"\r\n            被抑制诊断的标识符，即\r\n","\r\n            Gets the full text of this node as an new ":"\r\n            将此节点的全文作为新的\r\n","\r\n            Gets or creates a control flow graph for the given ":"\r\n            获取或创建给定的控制流程图\r\n"," with yield return semantics.":" 带有收益率回报语义。\r\n","\r\n                    Events are exposed as read-only properties of type ":"\r\n                    事件被视为类型的仅阅读属性\r\n","\r\n            An abstract analysis domain implementation for core analysis data tracked by ":"\r\n            核心分析数据的摘要分析域实施\r\n","\r\n            Even when an analyzer registers for concurrent execution, certain related actions are *never* executed concurrently.\r\n            For example, end actions registered on any analysis unit (compilation, code block, operation block, etc.) are by definition semantically dependent on analysis from non-end actions registered on the same analysis unit.\r\n            Hence, end actions are never executed concurrently with non-end actions operating on the same analysis unit.\r\n            ":"\r\n            即使分析仪登记并并发执行，某些相关的措施也永远不会同时执行。\r\n            例如，根据定义，在任何分析单元（编译，代码块，操作块等）上注册的最终动作在语义上取决于在同一分析单元上注册的非末端操作的分析。\r\n            因此，从同一分析单元上进行的非终端操作从未同时执行最终动作。\r\n            \r\n","\r\n            Natural type of the tuple, or null if tuple doesn't have a natural type.\r\n            Natural type can be different from ":"\r\n            元组的天然类型，如果元组没有天然类型，则无效。\r\n            自然类型可能不同\r\n","\r\n            Determine if a cache entry is up to date\r\n            ":"确定缓存条目是否最新\r\n            \r\n"," is constructed from ":" 是由\r\n"," if the calling thread has access to the script engine, ":" 如果调用线程可以访问脚本引擎，\r\n","\r\n            A .winmdobj file.\r\n            ":"\r\n            一个.winmdobj文件。\r\n            \r\n"," with explicit children\r\n            \r\n            Use this to create IOperation when we don't have proper specific IOperation yet for given language construct\r\n            ":" 有明确的孩子\r\n            \r\n            当我们没有适当的特定ioperation时，使用它来创建ioperation\r\n            \r\n","\r\n            Specifies the different documentation comment processing modes.\r\n            ":"\r\n            指定不同的文档评论处理模式。\r\n            \r\n","Tuple element names of the local.":"本地的元组元素名称。\r\n","\r\n            EqualityComparer for ITaskItems that only looks at the itemspec\r\n            ":"\r\n            仅查看itemspec\r\n            \r\n"," for the original definition of the symbol.\r\n            If this symbol is derived from another symbol, by type substitution for instance,\r\n            this gets the original symbol, as it was defined in source or metadata.\r\n            ":" 对于符号的原始定义。\r\n            如果此符号是从另一个符号派生的，例如替换，例如\r\n            这将获得原始符号，因为它是在源或元数据中定义的。\r\n            \r\n","\r\n            Operation for the limit value of the loop control variable. This comes from the expression after the 'To' keyword.\r\n            ":"\r\n            循环控制变量的限值的操作。这来自“到”关键字之后的表达。\r\n            \r\n","\r\n              Looks up a localized string similar to Stream is too long..\r\n            ":"\r\n              查找类似于流的本地化字符串太长。\r\n            \r\n","\r\n            Returns true if the type is the implicit class that holds onto invalid global members (like methods or\r\n            statements in a non script file).\r\n            ":"\r\n            如果类型是将无效的全局成员包含的隐式类（例如方法或\r\n            非脚本文件中的语句）。\r\n            \r\n","\r\n            Does for locals what System.Runtime.CompilerServices.DynamicAttribute does for parameters, return types, and fields.\r\n            In particular, indicates which occurrences of ":"\r\n            对于当地人，system.runtime.compilerservices.dynamicattribute为参数，返回类型和字段做。\r\n            特别是指示哪些发生\r\n","\r\n            A V8 runtime unconditionally terminates the process when it exceeds its resource\r\n            constraints (see ":"\r\n            V8运行时无条件地终止该过程超过其资源\r\n            约束（见\r\n","\r\n            Scope for setting up analyzers for a compilation, automatically associating actions with analyzers.\r\n            ":"\r\n            用于设置分析仪进行汇编的范围，将动作与分析仪自动关联。\r\n            \r\n","\r\n            Represents a simple value or a read-only array of ":"\r\n            代表一个简单的值或仅读取数组\r\n","\r\n            Used so we can easily grab the low/high 64bits of a guid for serialization.\r\n            ":"\r\n            使用，因此我们可以轻松获取序列化GUID的低/高64位。\r\n            \r\n"," to the compilation\r\n            ":" 进行汇编\r\n            \r\n","\r\n            If set, the module contains instructions that assume a 32 bit instruction set. For example it may depend on an address being 32 bits.\r\n            This may be true even if the module contains only IL instructions because of PlatformInvoke and COM interop.\r\n            ":"\r\n            如果设置，则该模块包含假定32位指令集的指令。例如，这可能取决于地址是32位。\r\n            即使该模块由于PlatformInvoke和com Interop而仅包含IL指令，也可能是正确的。\r\n            \r\n","\r\n            Creates a COM/ActiveX object and exposes it to script code. The registered class is\r\n            specified by class identifier (CLSID).\r\n            ":"\r\n            创建一个com/activex对象并将其暴露于脚本代码。注册课是\r\n            由类标识符（CLSID）指定。\r\n            \r\n",",\r\n            which is always the last block in ":"，，，，\r\n            这始终是最后一个块\r\n","\r\n            When emitting ref assemblies, some members will not be included.\r\n            ":"\r\n            在发出参考组装时，将不包括一些成员。\r\n            \r\n","\r\n            True if the parameter has a default value that should be supplied as the argument value by a caller for which the argument value has not been explicitly specified.\r\n            ":"\r\n            正确，如果该参数具有默认值，该值应由呼叫者提供作为参数值，该值未明确指定参数值。\r\n            \r\n"," is returned unmodified.":" 被返回未修改。\r\n"," must be locked while calling this method.\r\n            ":" 调用此方法时必须锁定。\r\n            \r\n"," values are to be marshaled as variants of type\r\n            ":" 值应作为类型的变体称为\r\n            \r\n","\r\n            A scope for a single try, catch, or finally clause. If the clause\r\n            is a catch clause, ExceptionType will be set.\r\n            ":"\r\n            一次尝试，捕捉或最终子句的范围。如果条款\r\n            是捕获子句，将设置异常。\r\n            \r\n","\r\n            Named (property value) arguments on the attribute. \r\n            ":"\r\n            命名（属性值）属性上的参数。\r\n            \r\n","\r\n            Returns true and an index of a slot that stores an awaiter of a specified type in the previous generation, if any. \r\n            ":"\r\n            返回true和一个插槽的索引，该插槽存储在上一代（如果有）中存储指定类型的等待者。\r\n            \r\n"," is not a flag set type.\r\n            ":" 不是标志集类型。\r\n            \r\n","\r\n            var ConsoleT = host.type(\"System.Console\");\r\n            var name = host.typeOf(ConsoleT).AssemblyQualifiedName;\r\n            ":"\r\n            var consolet = host.type（“ system.console”）;\r\n            var name = host.typeof（consolet）.semblyQualifiedName;\r\n            \r\n","\r\n            The type specs to be emitted, in row order. These\r\n            are just the type specs from the current generation.\r\n            ":"\r\n            按排顺序排列的类型规格。这些\r\n            只是当前一代的类型规格。\r\n            \r\n","\r\n            Returns a new ArrayTypeSymbol representing an array type tied to the base types of the\r\n            COR Library in this Compilation.\r\n            ":"\r\n            返回一个新的arraytypesymbol，代表与基本类型相关的数组类型\r\n            此汇编中的COR库。\r\n            \r\n","\r\n            Compares the current content of this writer with another one.\r\n            ":"\r\n            将该作者的当前内容与另一个作​​者进行比较。\r\n            \r\n","\r\n            Subsystem version: Windows 7\r\n            ":"\r\n            子系统版本：Windows 7\r\n            \r\n","\r\n            The temporary directory a compilation should use instead of ":"\r\n            编译应使用的临时目录代替\r\n"," and\r\n            packages the result to retain its numeric type across the host-script boundary. It may\r\n            be useful for passing arguments to ":" 和\r\n            包裹的结果以在主机标记边界上保留其数字类型。它可能\r\n            对于将争论传递给\r\n"," with new effective severity based on the options or null if the\r\n            diagnostic has been suppressed.\r\n            ":" 根据选项的新有效严重性，如果是\r\n            诊断已被抑制。\r\n            \r\n","\r\n            True if this property is special in some way, as specified by the name.\r\n            ":"\r\n            如果以某种方式，该属性是特殊的，请按名称指定。\r\n            \r\n","\r\n            Boolean option to configure if the naming heuristic should be used for CA1303 (https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1303).\r\n            ":"\r\n            布尔值选项是否应用于CA1303（https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1303）。\r\n            \r\n","Any additional texts that should be passed to the generators when run.":"运行时应传递给发电机的任何其他文本。\r\n","\r\n            The Int32 value 7\r\n            ":"\r\n            INT32值7\r\n            \r\n","\r\n            Values for severity that are used internally by the compiler but are not exposed.\r\n            ":"编译器内部使用但未暴露的严重性值。\r\n            \r\n","\r\n              Looks up a localized string similar to The type '{0}' cannot be written, it does not implement IObjectWritable.\r\n            ":"\r\n              查找类似于“ {0}”类型的本地化字符串，它不能实现IObjectrable。\r\n            \r\n","\r\n            Creates a new node identical to this node with the annotations of the specified kind removed.\r\n            ":"\r\n            与已删除指定类型的注释相同的新节点与该节点相同。\r\n            \r\n"," access to internal symbols":" 访问内部符号\r\n","\r\n            Displays \"?\" for erroneous types that lack names (perhaps due to faulty metadata).\r\n            ":"\r\n            显示“？”对于缺少名称的错误类型（可能是由于元数据错误）。\r\n            \r\n","The type of variable to create.":"要创建变量的类型。\r\n","Flag to indicate if the operation is a descendant of an ":"标志以指示操作是否是一个后代\r\n","\r\n            Extends ":"\r\n            扩展\r\n","\r\n            The pattern to match.\r\n            ":"\r\n            匹配的模式。\r\n            \r\n","\r\n            The base interface required to implement a source generator\r\n            ":"\r\n            实现源生成器所需的基本接口\r\n            \r\n"," ByRef return type ":" BYREF返回类型\r\n","\r\n            EnC generation. 0 if the module is not an EnC delta, 1 if it is the first EnC delta, etc.\r\n            ":"\r\n            ENC生成。 0如果模块不是ENC DELTA，则为1，如果它是第一个ENC Delta，则等等。\r\n            \r\n","\r\n            basic block in a ":"\r\n            基本块\r\n","\r\n            Given a path to an assembly, returns the ":"\r\n            给定一个组装的途径，返回\r\n","\r\n            Type is a C# struct or VB Structure\r\n            ":"\r\n            类型是C＃结构或VB结构\r\n            \r\n","\r\n            Creates a new list with the specified separator token replaced with the new separator.\r\n            ":"\r\n            用指定的分隔符令牌创建一个新列表，替换为新的分隔符。\r\n            \r\n","A pointer to a TypeDef token that represents the referenced type.":"代表引用类型的Tokedef令牌的指针。\r\n"," \r\n            The Private key information that will exist if it was a private key file that was parsed.\r\n            ":" \r\n            如果它是解析的私钥文件，将存在的私钥信息将存在。\r\n            \r\n","\r\n            Represents a pattern matching operation.\r\n            ":"\r\n            代表模式匹配操作。\r\n            \r\n"," on).\r\n            If emitting a secondary output, this flag is required to be false.\r\n            ":" 上）。\r\n            如果发出辅助输出，则该标志必须为false。\r\n            \r\n","\r\n            Determine whether the set is empty.":"\r\n            确定集合是否为空。\r\n","\r\n            Current usage:\r\n             (1) C# relational pattern.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃关系模式。\r\n            \r\n","\r\n            Abstract cache based equatable implementation for objects that are compared frequently and hence need a performance optimization of using a cached hash code.\r\n            ":"\r\n            基于抽象缓存的对象经常比较的对象实现，因此需要使用缓存的哈希代码进行性能优化。\r\n            \r\n","\r\n            Represents a provider of multiple values that can be transformed to construct an execution pipeline\r\n            ":"\r\n            代表一个可以转换以构建执行管道的多个值的提供商\r\n            \r\n","\r\n            Switch key for the jump table\r\n            ":"\r\n            切换跳台的键\r\n            \r\n","\r\n            Shows the name and the signature of the delegate (e.g. \"void SomeDelegate(int x)\").  \r\n            ":"\r\n            显示代表的名称和签名（例如“ void assedelegate（int x）”）。\r\n            \r\n","\r\n            Filter expression to be executed to determine whether to handle the exception.\r\n            ":"\r\n            要执行的滤波器表达式以确定是否处理异常。\r\n            \r\n","Absolute path of the error log file.":"错误日志文件的绝对路径。\r\n","\r\n            A type reference that has custom modifiers associated with it. For example a reference to the target type of a managed pointer to a constant.\r\n            ":"\r\n            具有与之关联的自定义修饰符的类型参考。例如，引用托管指针的目标类型。\r\n            \r\n","\r\n            Set of completed actions.\r\n            ":"\r\n            一组完成的动作。\r\n            \r\n","\r\n            Exit label for the try. This will always be null for C#.\r\n            ":"\r\n            退出尝试标签。对于C＃，这将永远为无效。\r\n            \r\n","\r\n            A simple, forward-only JSON writer to avoid adding dependencies to the compiler.\r\n            Used to generate /errorlogger output.\r\n            \r\n            Does not guarantee well-formed JSON if misused. It is the caller's reponsibility \r\n            to balance array/object start/end, to only write key-value pairs to objects and\r\n            elements to arrays, etc.\r\n            \r\n            Takes ownership of the given ":"一个简单的，仅向前的JSON作家，避免将依赖项添加到编译器中。\r\n            用于生成 /错误记录器输出。\r\n            \r\n            如果被滥用，不能保证形成良好的JSON。这是呼叫者的重复性\r\n            平衡数组/对象启动/结束，仅将键值对写入对象和\r\n            数组的元素，等等。\r\n            \r\n            拥有给定的所有权\r\n","String to test (non-null).":"串进行测试（非核武器）。\r\n","\r\n            Tries to execute symbol action, symbol start/end actions and declaration actions for the given symbol.\r\n            ":"\r\n            试图执行给定符号的符号操作，符号开始/结束操作和声明操作。\r\n            \r\n","\r\n            Computes string representation of metrics data.\r\n            ":"\r\n            计算指标数据的字符串表示。\r\n            \r\n","The first token or ":"第一个令牌或\r\n","\r\n            Given a MemberRef token for a method, we can find a corresponding MethodSymbol by\r\n            searching for the name and signature.\r\n            ":"\r\n            给定一个方法的成员令牌，我们可以通过\r\n            搜索名称和签名。\r\n            \r\n"," is specified and an error occurs while reading the stream.\r\n            ":" 指定并在阅读流时发生错误。\r\n            \r\n","A value to compare":"比较的价值\r\n","\r\n            Generic implementation of object pooling pattern with predefined pool size limit. The main\r\n            purpose is that limited number of frequently used objects can be kept in the pool for\r\n            further recycling.\r\n            \r\n            Notes: \r\n            1) it is not the goal to keep all returned objects. Pool is not meant for storage. If there\r\n               is no space in the pool, extra returned objects will be dropped.\r\n            \r\n            2) it is implied that if object was obtained from a pool, the caller will return it back in\r\n               a relatively short time. Keeping checked out objects for long durations is ok, but \r\n               reduces usefulness of pooling. Just new up your own.\r\n            \r\n            Not returning objects to the pool in not detrimental to the pool's work, but is a bad practice. \r\n            Rationale: \r\n               If there is no intent for reusing the object, do not use pool - just use \"new\". \r\n            ":"\r\n            具有预定台池尺寸限制的对象合并模式的通用实现。主要的\r\n            目的是可以将有限数量的常用对象保存在池中\r\n            进一步回收。\r\n            \r\n            笔记：\r\n            1）并不是保留所有返回对象的目标。池不是用于存储的目的。如果有\r\n               池中没有空间，将删除额外的返回对象。\r\n            \r\n            2）暗示如果从池中获得对象，呼叫者将将其返回\r\n               相对较短的时间。长时间保持检查对象是可以的，但是\r\n               降低了合并的实用性。只是新的。\r\n            \r\n            不要将物体返回游泳池并不损害池的作品，而是一种不好的做法。\r\n            理由：\r\n               如果没有重复使用对象的意图，请不要使用池 - 只需使用“新”。\r\n            \r\n","\r\n            Integral option to configure maximum lambda or local function call chain for interprocedural dataflow analysis.\r\n            ":"\r\n            配置最大lambda或本地功能呼叫链的积分选项，以进行概要数据流分析。\r\n            \r\n","\r\n            Primary driver task which processes all ":"\r\n            处理所有的主要驱动程序任务\r\n","\r\n            Describes the formatting rules that should be used when displaying symbols.\r\n            ":"\r\n            描述显示符号时应使用的格式规则。\r\n            \r\n"," corresponding to a character position.\r\n            ":" 对应于角色位置。\r\n            \r\n","Type of value.":"价值类型。\r\n",", or null (for example, in\r\n            error cases or when matching a tuple type).\r\n            ":"，或null（例如，在\r\n            错误情况或匹配元组类型时）。\r\n            \r\n","true if the value was added to the set. If the value already exists, this method returns false.":"如果将值添加到集合中，则为正确。如果该值已经存在，则此方法返回false。\r\n","\r\n            Evaluates script code with the specified document meta-information.\r\n            ":"\r\n            用指定的文档元信息评估脚本代码。\r\n            \r\n","\r\n            The nullable annotation state is inherited from the project default.\r\n            ":"\r\n            无效的注释状态是从项目默认值继承的。\r\n            \r\n","\r\n            Get Assembly used as COR library for the candidate.\r\n            ":"\r\n            将组件用作候选人的COR库。\r\n            \r\n","\r\n            The collection of individual text lines.\r\n            ":"\r\n            单个文本行的集合。\r\n            \r\n","\r\n            Returns whether the two ITaskItems are equal, where they are judged to be \r\n            equal as long as the itemspecs, compared case-insensitively, are equal. \r\n            ":"\r\n            返回两个iTaspItem是否相等，在哪里被判断为\r\n            比较案例不敏感，相等的是相等的。\r\n            \r\n","s about a ":"大约\r\n","\r\n            Returns data decoded from security attributes or null if there are no security attributes.\r\n            ":"\r\n            如果没有安全属性，则返回从安全属性解码的数据或null。\r\n            \r\n","\r\n            Parses a version string of the form \"major [ '.' minor [ '.' build [ '.' revision ] ] ]\".\r\n            ":"\r\n            解析“ major ['。''的形式的版本字符串。次要的 [ '。'建造 [ '。'修订 ] ] ]”。\r\n            \r\n","\r\n            Value to be evaluated if Primary evaluates to null/Nothing.\r\n            ":"\r\n            如果主要评估为null/Noth，则需要评估的值。\r\n            \r\n","\r\n            Since VB does not have the concept of extern aliases, it considers all referenced assemblies.\r\n            ":"\r\n            由于VB没有外部别名的概念，因此它考虑了所有引用的组件。\r\n            \r\n","\r\n            method with the ":"\r\n            方法\r\n"," with special structured exception handling semantics:\r\n              1. The source basic block is the last block of an enclosing finally or filter region.\r\n              2. The destination basic block is null.\r\n            ":" 具有特殊结构化的异常处理语义：\r\n              1.源基本块是最后一个或过滤区域的封装的最后一个块。\r\n              2.目的地基本块为null。\r\n            \r\n","The nodes or tokens to insert.":"节点或令牌要插入。\r\n","\r\n            or any other class that extends ":"\r\n            或任何扩展的其他类\r\n","\r\n            Returns zero or more local (block) scopes, each defining an IL range in which an iterator local is defined.\r\n            The scopes are returned for the MoveNext method of the object returned by the iterator method.\r\n            The index of the scope corresponds to the index of the local.  Specifically local scope i corresponds\r\n            to the local stored in a field named <localName>5__i of the class used to store the local values in\r\n            between calls to MoveNext, where localName is the original name of the local variable.  For example, if\r\n            the first local to be moved into the class is named \"xyzzy\", it will be stored in a field named\r\n            \"<xyzzy>5__1\", and the ILocalScope returned from this method at index 1 (i.e. the second one) will\r\n            have the scope information for where that variable is in scope.\r\n            ":"\r\n            返回零或更多局部（块）示波器，每个示波器定义一个IL范围，其中定义了迭代器局部局部性。\r\n            返回范围的范围，用于迭代方法返回的对象的MoveNext方法。\r\n            范围的索引对应于本地的索引。特别是本地范围我对应\r\n            到存储在名为<localname> 5__的字段中的本地，用于将本地值存储在\r\n            在对MovEnext的调用之间，其中localname是本地变量的原始名称。例如，如果\r\n            第一个要移入班级的本地人名为“ Xyzzy”，它将存储在名为的字段中\r\n            “ <xyzzy> 5__1”，从该方法返回的IlocalsCope在索引1（即第二个）将\r\n            具有该变量在范围中的位置的范围信息。\r\n            \r\n","\r\n            Symbol is inserted.\r\n            ":"\r\n            符号被插入。\r\n            \r\n","\r\n            Returns true if diagnostic descriptor is a built-in compiler diagnostic or is not configurable.\r\n            ":"\r\n            如果诊断描述符是内置的编译器诊断或不可配置的，则返回true。\r\n            \r\n","\r\n            The top-level nullability of the expression after it has undergone an implicit conversion.\r\n            For most expressions, this will be the same as the type. It can change in situations such\r\n            as implicit user-defined conversions that have a nullable return type.\r\n            ":"\r\n            表达式后的最高级别无效性发生了隐式转换。\r\n            对于大多数表达式，这将与类型相同。它可以在这种情况下改变\r\n            作为具有无效返回类型的隐式用户定义转换。\r\n            \r\n",".\r\n            A diagnostic in a non-source document should be created with a non-source ":"。\r\n            非源文档中的诊断应使用非源\r\n","\r\n            Represents a coalesce operation with two operands:\r\n             (1) ":"\r\n            代表与两个操作数的结合操作：\r\n             （1）\r\n","\r\n            If the invocation is in its expanded form, then params/ParamArray arguments would be collected into arrays.\r\n            Default values are supplied for optional arguments missing in source.\r\n            ":"\r\n            如果调用以其扩展的形式，则参数/paramarray参数将收集到数组中。\r\n            为源中缺少的可选参数提供了默认值。\r\n            \r\n","\r\n            True if we should attempt to generate a deterministic output (no timestamps or random data).\r\n            ":"\r\n            如果我们应该尝试生成确定性输出（没有时间戳或随机数据），则为正确。\r\n            \r\n"," instances using the given ":" 使用给定的实例\r\n","\r\n            Represents a VB End statement.\r\n            ":"\r\n            代表VB End语句。\r\n            \r\n","Destination type of value to be converted":"要转换的价值的目标类型\r\n","Syntax tree to analyze.":"语法树进行分析。\r\n","Optional arguments for method invocation.":"方法调用的可选论点。\r\n","\r\n            Sets the decoded well-known attribute data (except the early data) on the bag in a thread safe manner. \r\n            Stored decoded data is immutable and cannot be updated further.\r\n            ":"\r\n            以线程安全的方式将袋子上的解码著名属性数据（除早期数据除外）设置。\r\n            存储的解码数据是不可变的，无法进一步更新。\r\n            \r\n","\r\n            Used when a collection usually contains a single item but sometimes might contain multiple.\r\n            ":"\r\n            当集合通常包含一个项目时使用，但有时可能包含多个项目。\r\n            \r\n"," instances, considering their nullability\r\n            ":" 实例，考虑其无效性\r\n            \r\n","\r\n            A set of additional non-code text files that can be used by generators.\r\n            ":"\r\n            生成器可以使用的一组其他非代码文本文件。\r\n            \r\n","\r\n            Subtype for all forward dataflow analyses.\r\n            These analyses operate on the control flow graph starting from the entry block,\r\n            flowing the dataflow values forward to the successor blocks until a fix point is reached.\r\n            ":"\r\n            所有正向数据流分析的亚型。\r\n            这些分析在从入口块开始的控制流程图上运行，\r\n            将数据流值向前流到后继块，直到达到固定点为止。\r\n            \r\n","The input node.":"输入节点。\r\n"," created for ":" 为\r\n","\r\n            The sequence of groups of TypeDef row ids for types contained within the namespace, \r\n            recursively including those from nested namespaces. The row ids must be grouped by the \r\n            fully-qualified namespace name in case-sensitive manner. \r\n            Key of each IGrouping is a fully-qualified namespace name, which starts with the name of \r\n            this namespace. There could be multiple groups for each fully-qualified namespace name.\r\n            \r\n            The groups must be sorted by the keys in a manner consistent with comparer passed in as\r\n            nameComparer. Therefore, all types immediately contained within THIS namespace, if any, \r\n            must be in several IGrouping at the very beginning of the sequence.\r\n            ":"\r\n            命名空间中包含的类型类型的Typedef行ID组序列，\r\n            递归包括来自嵌套名称空间的。行ID必须由\r\n            以情况敏感的方式完全合格的名称名称。\r\n            每个IGrouping的关键是一个完全合格的名称空间名称，该名称从名称开始\r\n            这个名称空间。每个完全合格的名称空间名称可能有多个组。\r\n            \r\n            这些组必须以与通过AS的比较一致的方式对键进行排序\r\n            NameComparer。因此，此名称空间中立即包含的所有类型（如果有）\r\n            在序列的一开始，必须在几个igroup中进行。\r\n            \r\n","\r\n            Topmost syntax node for this declaration.\r\n            ":"\r\n            此声明的最高语法节点。\r\n            \r\n","\r\n            References to metadata supplied on the command line. \r\n            Includes assemblies specified via /r and netmodules specified via /addmodule.\r\n            ":"\r\n            对命令行中提供的元数据的引用。\r\n            包括通过 /r和通过 /addModule指定的NETMODULE指定的组件。\r\n            \r\n","\r\n            Base class for storing information decoded from well-known custom attributes.\r\n            ":"\r\n            从众所周知的自定义属性解码的存储信息的基类。\r\n            \r\n","\r\n            Class that collects content of the scope (blocks, nested scopes, variables etc).\r\n            There is one for every opened scope.\r\n            ":"\r\n            收集范围内容的类（块，嵌套范围，变量等）。\r\n            每个打开的范围都有一个。\r\n            \r\n","\r\n            ErrorType ->\r\n                Symbol* -> \"some value\"\r\n            Namespace ->\r\n                Analyzer.Utilities -> \"\"\r\n            Type ->\r\n                Analyzer.Utilities.SymbolNamesWithValueOption -> \"\"\r\n            Event ->\r\n                Analyzer.Utilities.SymbolNamesWithValueOption.MyEvent -> \"\"\r\n            Field ->\r\n                Analyzer.Utilities.SymbolNamesWithValueOption.myField -> \"\"\r\n            Method ->\r\n                Analyzer.Utilities.SymbolNamesWithValueOption.MyMethod() -> \"\"\r\n            Property ->\r\n                Analyzer.Utilities.SymbolNamesWithValueOption.MyProperty -> \"\"\r\n            ":"\r\n            errortype->\r\n                符号*  - >“一些值”\r\n            名称空间 - >\r\n                Analyzer.ULINISINY->“”\r\n            类型 - >\r\n                Analyzer.utilities.symbolnameswithvalueoption->“”\r\n            事件 - >\r\n                Analyzer.utilities.symbolnameswithvalueoption.myevent->“”\r\n            字段 - >\r\n                Analyzer.utilities.symbolnameswithvalueoption.myfield->“”\r\n            方法 - >\r\n                Analyzer.utilities.symbolnameswithvalueoption.mymethod（） - >“”\r\n            属性 - >\r\n                Analyzer.utilities.symbolnameswithvalueoption.myproperty->“”\r\n            \r\n","\r\n            True if we need to perform only syntax analysis for a single tree.\r\n            ":"\r\n            如果我们只需要对一棵树执行语法分析，则为true。\r\n            \r\n","\r\n            The stream content can't be decoded using the specified ":"\r\n            流内容无法使用指定的\r\n","\r\n            The base interface required to implement an incremental generator\r\n            ":"\r\n            实现增量发电机所需的基本接口\r\n            \r\n","\r\n            Gets or sets a value indicating whether implicit boxing of value types is allowed.\r\n            ":"\r\n            获取或设置一个值，指示是否允许对价值类型的隐式拳击。\r\n            \r\n","\r\n            Optional semantic model that was used to generate this operation.\r\n            Non-null for operations generated from source with ":"\r\n            可选的语义模型用于生成此操作。\r\n            非记录用于从源生成的操作，\r\n","\r\n            If true, append the compiler version during\r\n            ":"\r\n            如果是真的，请在编译器版本中附加\r\n            \r\n","\r\n            Each local has an attributes field in the PDB.  To match the native compiler,\r\n            we emit ":"\r\n            每个本地在PDB中都有一个属性字段。要匹配本地编译器，\r\n            我们发出\r\n","\r\n            True, if successfully executed the actions for the given analysis scope OR all the actions have already been executed for the given analysis scope.\r\n            False, if there are some pending actions.\r\n            ":"\r\n            没错，如果成功地执行了给定分析范围的操作或已经为给定的分析范围执行的所有操作。\r\n            错误，如果有一些待处理的行动。\r\n            \r\n","\r\n            This class is the filetracking log interpreter for .write. tracking logs in canonical form\r\n            Canonical .write. logs need to be rooted, since the outputs need to be associated with an input.\r\n            ":"\r\n            此类是.write的Filetracking Log解释器。以规范形式跟踪日志\r\n            规范。由于需要与输入相关联，因此需要将日志扎根。\r\n            \r\n","\r\n            Common base class for C# and VB PE module builder.\r\n            ":"\r\n            C＃和VB PE模块构建器的普通基类。\r\n            \r\n","\r\n            Must be acquired whenever the following data are about to be modified:\r\n            - Compilation.lazyAssemblySymbol\r\n            - Compilation.referenceManager\r\n            - ReferenceManager state\r\n            - ":"\r\n            每当要修改以下数据时必须获取：\r\n             - 汇编。LazyAssemblysymbol\r\n             - 汇编。推荐人\r\n             - 引用memanager状态\r\n             - \r\n","\r\n            Create a new instance of this diagnostic with the Location property changed.\r\n            ":"\r\n            创建此诊断的新实例，其位置属性更改了。\r\n            \r\n"," instances based on the default comparison rules, equivalent to calling ":" 基于默认比较规则的实例，相当于调用\r\n"," is the specified node and other properties are copied from the current tree.\r\n            ":" 是指定的节点和其他属性是从当前树复制的。\r\n            \r\n","Path to the XML artifact, or null if the file can't be resolved.":"通往XML伪像的路径，或者如果无法解析文件，则为空。\r\n","\r\n            These special types are structs that contain fields of the same type\r\n            (e.g. System.Int32 contains a field of type System.Int32).\r\n            ":"\r\n            这些特殊类型是包含相同类型字段的结构\r\n            （例如System.Int32包含一个类型系统的字段。Int32）。\r\n            \r\n","The class identifier (CLSID) of the registered class to instantiate.":"注册类的类标识符（CLSID）实例化。\r\n","Flag indicating whether we need to log analyzer execution time.":"标志指示我们是否需要记录分析仪执行时间。\r\n","\r\n            Represents the ReDim operation to re-allocate storage space for array variables.\r\n            ":"\r\n            表示REDIM操作，以重新分配数组变量的存储空间。\r\n            \r\n","\r\n            The set of source file paths that are in the set of embedded paths.\r\n            This is used to prevent reading source files that are embedded twice.\r\n            ":"嵌入式路径集中的源文件路径集。\r\n            这用于防止读取两次嵌入的源文件。\r\n            \r\n","\r\n            Specifies that script code is to have full access to the type member. This is the\r\n            default setting.\r\n            ":"\r\n            指定脚本代码将完全访问类型成员。这是\r\n            默认设置。\r\n            \r\n","\r\n            True if the loop has 'Until' loop semantics and the loop is executed while ":"\r\n            如果循环具有“直到”循环语义，并且在执行循环时，则是真的\r\n"," being thrown, a single diagnostic is added\r\n            to represent the failure. Any generator reported diagnostics up to the failure point are not included.\r\n            ":" 被扔了，添加了一个诊断\r\n            代表失败。任何报告的发电机报告的诊断都不包括故障点。\r\n            \r\n","\r\n            If build and/or revision numbers are 65535 they are replaced with time-based values.\r\n            ":"\r\n            如果构建和/或修订号为65535，则将其替换为基于时间的值。\r\n            \r\n","\r\n            Return the 1-based index of the type spec, adding\r\n            the spec to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回类型规格的1个基于1的索引，添加\r\n            如果丢失了这一代的索引规格。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","\r\n            Sets source link data blob (sourcelink stream).\r\n            ":"\r\n            设置源链接数据BLOB（Sourcelink流）。\r\n            \r\n","\r\n            The map does not need to map all syntax nodes in the active method, only those syntax nodes\r\n            that declare a local or generate a long lived local.\r\n            ":"\r\n            该地图不需要在活动方法中映射所有语法节点，只有那些语法节点\r\n            宣布本地或生成长期的本地生活。\r\n            \r\n","\r\n            Determines how fields, properties, events, and methods are displayed.\r\n            ":"\r\n            确定如何显示字段，属性，事件和方法。\r\n            \r\n","\r\n            Represents a scriptable collection of host types.\r\n            ":"\r\n            表示主机类型的脚本集合。\r\n            \r\n","true if up to date":"如果是最新的\r\n","\r\n            Determines whether this node has any descendant skipped text.\r\n            ":"\r\n            确定该节点是否有任何后代跳过文本。\r\n            \r\n","ITaskItem array of outputs.":"输出的ITASCITEM数组。\r\n","\r\n            The input is newer than the output.\r\n            ":"\r\n            输入比输出更新。\r\n            \r\n","The operand appearing on the left side of the operator.":"操作数出现在操作员的左侧。\r\n"," it doesn't check for invalid path characters\r\n            ":" 它没有检查无效的路径字符\r\n            \r\n","\r\n            Represents a local function defined within a method.\r\n            ":"\r\n            表示方法中定义的局部函数。\r\n            \r\n","\r\n            Gets all nodes with the specified annotation.\r\n            ":"\r\n            获取所有带有指定注释的节点。\r\n            \r\n","\r\n            Represents an await operation.\r\n            ":"\r\n            代表一个正在等待的操作。\r\n            \r\n","Slots for local variables are not reused, lifetime of local variables is extended to make the values available during debugging.":"局部变量的插槽不重复使用，局部变量的寿命被扩展以使调试过程中可用的值。\r\n","\r\n            The name is used for determining internals-visible-to relationship with referenced assemblies.\r\n            \r\n            If the compilation represents an assembly the value of ":"\r\n            该名称用于确定与参考组件的内部可视化关系。\r\n            \r\n            如果编译代表一个组件，则\r\n"," value \r\n            and hence signing requires counter signature verification.\r\n            ":" 价值\r\n            因此，签署需要反签名验证。\r\n            \r\n","s in code and is therefore not the exact number of lines in the source code file.\r\n            A high count might indicate that a type or method is trying to do too much work and should be split up.\r\n            It might also indicate that the type or method might be hard to maintain.\r\n            ":"s在代码中，因此不是源代码文件中的行数。\r\n            高计数可能表明类型或方法正在尝试做太多工作，应分裂。\r\n            这也可能表明类型或方法可能难以维护。\r\n            \r\n","\r\n            Represents a non source code file.\r\n            ":"\r\n            代表非源代码文件。\r\n            \r\n","\r\n            Create the fully populated map from an existing map and the key generator.\r\n            ":"\r\n            从现有地图和密钥生成器中创建填充的地图。\r\n            \r\n","\r\n            The value of this property is an object that is bound to the script engine's root\r\n            namespace. It dynamically supports properties and methods that correspond to global\r\n            script objects and functions.\r\n            ":"\r\n            该属性的值是绑定到脚本引擎根的对象\r\n            名称空间。它动态支持与全局相对应的属性和方法\r\n            脚本对象和函数。\r\n            \r\n","\r\n            Creates a clone of a red node that can be used as a root of given syntaxTree.\r\n            New node has no parents, position == 0, and syntaxTree as specified.\r\n            ":"\r\n            创建一个红色节点的克隆，可以用作给定语法的根。\r\n            New Node没有指定的父母，位置== 0和语法。\r\n            \r\n","\r\n            Resolves a symbol that represents script container (Script class). Uses the\r\n            full name of the container class stored in ":"\r\n            解析代表脚本容器（脚本类）的符号。使用\r\n            存储在容器类中的全名\r\n","\r\n            Import internal/private members from all references regardless of \"internals-visible-to\" relationship.\r\n            ":"\r\n            从所有参考文献中导入内部/私人成员，无论“内部可视化”关系如何。\r\n            \r\n","\r\n            Test if a section name is an absolute path with no special chars\r\n            ":"\r\n            测试部分名称是没有特殊字符的绝对路径\r\n            \r\n","Original node.":"原始节点。\r\n"," it when it is itself ":" 当它本身\r\n",",\r\n                    etc.\r\n                    ":"，，，，\r\n                    等等\r\n                    \r\n"," method),\r\n            the ClearScript library provides an instance of this class as a dummy return value.\r\n            ":" 方法），\r\n            ClearScript库将此类的实例作为虚拟返回值。\r\n            \r\n","The trivia to be replaced; descendants of the root node.":"要替换的琐事；根节点的后代。\r\n","\r\n            Returns true if this symbol was automatically created by the compiler, and does not have\r\n            an explicit corresponding source code declaration.\r\n            ":"\r\n            如果该符号是由编译器自动创建的，则返回true，并且没有\r\n            明确的相应源代码声明。\r\n            \r\n","\r\n            True if the locals are initialized by zeroing the stack upon method entry.\r\n            ":"\r\n            正确，如果当地人通过在方法输入时将堆栈归零来初始化。\r\n            \r\n","\r\n            Name of the method providing the implementation.\r\n            ":"\r\n            提供实现的方法的名称。\r\n            \r\n","\r\n            Returns the effective severity of the diagnostic: whether this diagnostic is informational, warning, or error.\r\n            If IsWarningsAsError is true, then this returns ":"\r\n            返回诊断的有效严重程度：该诊断是信息性，警告还是错误。\r\n            如果iswarningsaseRror为真，那么返回\r\n"," from analyzing the given ":" 通过分析给定\r\n","\r\n            Returns a new compilation with attached diagnostic analyzers.\r\n            ":"\r\n            返回带有附带诊断分析仪的新汇编。\r\n            \r\n","\r\n            Represents a reference to a method other than as the target of an invocation.\r\n            ":"\r\n            代表除了作为调用目标以外的方法的引用。\r\n            \r\n","Version of the SARIF format used in the error log.":"错误日志中使用的SARIF格式的版本。\r\n","\r\n            Specifies a hash algorithms used for hashing source files.\r\n            ":"\r\n            指定用于哈希源文件的哈希算法。\r\n            \r\n","\r\n            Represents the value of a conditionally-accessed expression within an expression containing a conditional access.\r\n            ":"\r\n            表示包含条件访问的表达式中有条件获得的表达式的值。\r\n            \r\n","An array of AssemblyData objects to match against.":"一个汇编的对象要匹配。\r\n","Flag indicating whether ":"标志表示是否\r\n","Including private members should not be used when emitting to the secondary assembly output.":"发出二级装配输出时，不应使用私人成员。\r\n","\r\n            Represents a C# 'foreach' statement or a VB 'For Each' statement.\r\n            ":"\r\n            代表每个语句的C＃'foreach'语句或VB'。\r\n            \r\n","\r\n            \"C:\\file\" or \"\\\\machine\" (UNC).\r\n            ":"\r\n            \"C:\\file\"或\"\\\\机\"（UNC）。\r\n            \r\n","\r\n            Blocks are identical if:\r\n            1) have same regular instructions\r\n            2) lead to unconditional control transfer (no fall through)\r\n            3) branch with the same instruction to the same label\r\n            ":"\r\n            如果：\r\n            1）有相同的定期说明\r\n            2）导致无条件的控制转移（无跌落）\r\n            3）分支具有相同的指令到同一标签\r\n            \r\n"," if the property was found and removed, ":" 如果发现并删除了财产，\r\n","\r\n            A crypto hash algorithm used to calculate PDB Checksum stored in the PE/COFF File.\r\n            If not specified (the value is ":"\r\n            用于计算PE/COFF文件中存储的PDB校验和的加密哈希算法。\r\n            如果未指定（值为\r\n","\r\n            Represents a return from the method with an optional return value.\r\n            ":"\r\n            表示具有可选返回值的方法的返回。\r\n            \r\n","s, and can also collect\r\n            state information to be used by other syntax node actions or code block end actions.\r\n            ":"S，也可以收集\r\n            其他语法节点操作或代码块结束操作要使用的状态信息。\r\n            \r\n","\r\n            Checks if the given method implements IDisposable.Dispose()\r\n            ":"\r\n            检查给定方法是否实现IDISPOSABLE.DISPOSE（）\r\n            \r\n","\r\n            Abstract dispose data tracked by ":"\r\n            抽象处理数据由\r\n","\r\n            Invalid value based on predicate analysis.\r\n            ":"\r\n            基于谓词分析的无效价值。\r\n            \r\n","\r\n            Indicates if this branch represents ":"\r\n            指示此分支是否表示\r\n","\r\n            Referenced property.\r\n            ":"\r\n            引用属性。\r\n            \r\n","\r\n            Type is an array type.\r\n            ":"\r\n            类型是数组类型。\r\n            \r\n","\r\n            Use in an exception filter to report a fatal error. \r\n            Unless the exception is ":"\r\n            在例外过滤器中使用致命错误。\r\n            除非例外是\r\n","s related to the same\r\n            use site.\r\n            ":"与同一有关\r\n            使用网站。\r\n            \r\n","\r\n            A root region encapsulating all ":"\r\n            封装所有的根区域\r\n"," empty.\r\n            ":" 空的。\r\n            \r\n","\r\n            Returns converted test expression.\r\n            Caller is responsible for spilling the stack and pushing a stack frame before calling this helper.\r\n            ":"\r\n            返回转换后的测试表达式。\r\n            呼叫者负责溢出堆栈并推动堆栈框架，然后再打电话给此助手。\r\n            \r\n","\r\n            Decode the arguments to ObsoleteAttribute. ObsoleteAttribute can have 0,1 or 2 arguments.\r\n            ":"\r\n            将论点解码为淘汰。 OmpoleTeatTribute可以具有0,1或2个参数。\r\n            \r\n","\r\n            Namespace containing this method.\r\n            TODO: Ideally we would expose INamespace on INamespaceTypeDefinition. Right now we can only get the qualified namespace name.\r\n            ":"\r\n            包含此方法的名称空间。\r\n            TODO：理想情况下，我们将在Inamespacetypedefinition上公开Inamespace。现在，我们只能获取合格的名称空间名称。\r\n            \r\n","PE image doesn't contain managed metadata.":"PE图像不包含托管元数据。\r\n"," is conditionally evaluated if ":" 有条件评估是否\r\n","\r\n            Flag indicating whether analyzer execution time should be logged.\r\n            ":"\r\n            标志指示分析仪执行时间是否应记录。\r\n            \r\n","\r\n            Any directives that would become unbalanced are kept.\r\n            ":"\r\n            保留任何将变得不平衡的指令。\r\n            \r\n","\r\n            Symbol declared by the pattern.\r\n            ":"\r\n            由图案声明的符号。\r\n            \r\n"," must be serializable.\r\n            ":" 必须序列化。\r\n            \r\n","\r\n            Creates a new list with specified element removed.\r\n            ":"\r\n            创建一个已删除指定元素的新列表。\r\n            \r\n","\r\n            Current usage:\r\n             (1) VB With statement.\r\n            ":"\r\n            当前用法：\r\n             （1）VB带有语句。\r\n            \r\n","\r\n            Gets the nodes within the subtree corresponding to the original tracked node.\r\n            Use TrackNodes to start tracking nodes.\r\n            ":"\r\n            获取与原始跟踪节点相对应的子树中的节点。\r\n            使用踪迹开始跟踪节点。\r\n            \r\n",". Only in rare cases it is necessary\r\n            to override the name.\r\n            \r\n            CAUTION: If this is set to a (non-null) value other than the existing compilation output name, then internals-visible-to\r\n            and assembly references may not work as expected.  In particular, things that were visible at bind time, based on the \r\n            name of the compilation, may not be visible at runtime and vice-versa.\r\n            ":"。仅在极少数情况下才有必要\r\n            覆盖名称。\r\n            \r\n            注意：如果将其设置为除现有的汇编输出名称以外的（非null）值，则可以在内部可视化\r\n            而且组装参考可能无法按预期工作。特别是，根据绑定时间可见的事物\r\n            汇编的名称在运行时可能不可见，反之亦然。\r\n            \r\n","\r\n            Specifies that script debugging features are to be enabled.\r\n            ":"\r\n            指定要启用脚本调试功能。\r\n            \r\n","\r\n            True if the file should be treated as a script file.\r\n            ":"\r\n            如果应该将文件视为脚本文件，则为正确。\r\n            \r\n","A TCP port on which to listen for a debugger connection.":"TCP端口可以在该端口上聆听调试器连接。\r\n","Ignored if ":"如果忽略了\r\n"," at which to store the first copied element.":" 在其中存储第一个复制元素。\r\n","\r\n            Returns 0 if method name doesn't represent a v-table gap.\r\n            Otherwise, returns the gap size.\r\n            ":"\r\n            返回0如果方法名称不代表v台式差距。\r\n            否则，返回差距大小。\r\n            \r\n","\r\n            VB namespace or type alias target (not specified).\r\n            ":"\r\n            VB名称空间或键入别名目标（未指定）。\r\n            \r\n","\r\n            Integral option to configure sufficient IterationCount when using weak KDF algorithm.\r\n            ":"\r\n            使用弱KDF算法时，可以配置足够的IteerationCount的积分选项。\r\n            \r\n","\r\n            Represents the unary '-' operator.\r\n            ":"\r\n            代表单一的“  - ”操作员。\r\n            \r\n","\r\n            The type object that represents the type of submission result the host requested.\r\n            ":"\r\n            表示主机请求的提交结果类型的类型对象。\r\n            \r\n","\r\n            True if the field gets special treatment from the runtime.\r\n            ":"\r\n            如果该领域从运行时获得特殊待遇，则是的。\r\n            \r\n","List where to store information about resolved assemblies to.":"列出在哪里存储有关已解决的组件的信息。\r\n","\r\n            Returns true if there is an implicit (C#) or widening (VB) conversion from\r\n            ":"\r\n            如果有隐式（c＃）或从\r\n            \r\n","\r\n            Adds a descriptor to the set if not already present.\r\n            ":"\r\n            如果尚未存在，则将描述符添加到集合中。\r\n            \r\n"," using given file resolver.\r\n            ":" 使用给定的文件解析器。\r\n            \r\n","\r\n            Represents a comparison of two operands that returns a bool type.\r\n            ":"\r\n            表示两个返回布尔类型的操作数的比较。\r\n            \r\n","\r\n            Sets the bound attributes on the bag in a thread safe manner.\r\n            If store succeeds, it seals the bag and makes the bag immutable.\r\n            ":"\r\n            以螺纹安全的方式设置袋子上的绑定属性。\r\n            如果商店成功，它将密封袋子，使袋子不变。\r\n            \r\n","\r\n             Reference resolver used to look up missing assemblies.\r\n             ":"\r\n             参考解析器用于查找缺失的组件。\r\n             \r\n","Deep clone given IOperation":"深克隆给定\r\n","\r\n            Removes a named script object property.\r\n            ":"\r\n            删除命名脚本对象属性。\r\n            \r\n"," instance\r\n            that can be used to alter the compilation that is provided to subsequent generator phases.\r\n            \r\n            For example a generator may choose to add sources during PostInitialization. These will be added to the compilation before execution and\r\n            will be visited by a registered ":" 实例\r\n            可以用来改变随后的发电机阶段提供的汇编。\r\n            \r\n            例如，发电机可以选择在原始化期间添加来源。这些将在执行前添加到编译中，并\r\n            将被注册访问\r\n","\r\n            A predefined syntax annotation that indicates whether the syntax element has elastic trivia.\r\n            ":"预定义的语法注释，指示语法元素是否具有弹性琐事。\r\n            \r\n","\r\n            Gets a list of the descendant nodes and tokens (including this node) in prefix document order.\r\n            ":"\r\n            获取以前缀文档顺序中的后代节点和令牌（包括此节点）的列表。\r\n            \r\n","\r\n            True if the method is implemented via the invocation of an underlying platform method.\r\n            ":"\r\n            正确，如果该方法是通过基础平台方法的调用实现的。\r\n            \r\n","\r\n            Find the methods that a given method explicitly overrides.\r\n            ":"\r\n            找到给定方法明确覆盖的方法。\r\n            \r\n","\r\n            Resolves metadata references stored in command line arguments and reports errors for those that can't be resolved.\r\n            ":"\r\n            解决了存储在命令行参数中的元数据参考，并报告无法解决的人的错误。\r\n            \r\n","Position in the stream of four zero bytes to be replaced by a timestamp":"位于四个零字节的流中，将被时间戳替换\r\n","The BigInteger to multiply by a power of two and replace with the product":"biginteger乘以两个功率并替换为产品\r\n","\r\n            Just a default implementation of a type definition.\r\n            ":"\r\n            只是类型定义的默认实现。\r\n            \r\n"," method is automatically invoked during\r\n            garbage collection, unless finalization by the garbage collector has been disabled by a\r\n            call to ":" 方法自动调用\r\n            垃圾收集，除非垃圾收集器的最终确定已被禁用\r\n            拨电至\r\n","\r\n             Original async/iterator method transformed into MoveNext() \r\n            ":"\r\n             原始异步/迭代方法转化为movenext（）\r\n            \r\n","\r\n            Given a rooting marker, creates a temporary response file with that rooting marker \r\n            in it.\r\n            ":"\r\n            给定一个生根标记，使用该生根标记创建一个临时响应文件\r\n            在里面。\r\n            \r\n"," records added.":" 添加了记录。\r\n",").\r\n                2. Location for the implicit 'this' or 'Me' instance being analyzed (":"）。\r\n                2.分析隐式“ this”或“ me”实例的位置（\r\n"," \r\n            Register an action to be executed after semantic analysis of a method body or an expression appearing outside a method body. \r\n            An operation block action reports ":" \r\n            注册在方法主体或方法主体外出现的表达式之后进行的操作。\r\n            操作块动作报告\r\n","\r\n            to add source files via the ":"\r\n            通过\r\n","\r\n            Errors collection related to an incompatible set of parse options\r\n            ":"\r\n            与一套不兼容的解析选项相关的错误收集\r\n            \r\n","\r\n            Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.\r\n            Null if not specified.\r\n            ":"\r\n            启用或禁用在转换为ANSI“？”的不适合Unicode字符上抛出异常。特点。\r\n            null如果未指定。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.SByte\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toSByte(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.sbyte”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.tosbyte（42））;\r\n            \r\n","\r\n            Gets all trivia with an annotation of the specified annotation kind.\r\n            ":"\r\n            用指定注释类型的注释获得所有琐事。\r\n            \r\n","\r\n            Very cheap trivial comparer that never matches the keys,\r\n            should only be used in empty dictionaries.\r\n            ":"\r\n            非常便宜的微不足道比较，永远不匹配钥匙，\r\n            仅应在空词典中使用。\r\n            \r\n","\r\n            More performant than GetSyntax().GetLocation().\r\n            ":"\r\n            性能比getSyntax（）。getLocation（）。\r\n            \r\n","\r\n              Looks up a localized string similar to The provided operation must not be part of a Control Flow Graph..\r\n            ":"\r\n              查找类似于提供的操作的本地化字符串不可能是控制流程图的一部分。\r\n            \r\n","Unspecified":"未指定\r\n","Exception while performing any I/O on given file paths.":"在给定文件路径上执行任何I/O时的异常。\r\n","\r\n            byte marker mask for encoding compressed uint \r\n            ":"\r\n            字节标记蒙版用于编码压缩UINT\r\n            \r\n"," for which the code block provides a definition or value.\r\n            ":" 代码块为此提供了定义或值。\r\n            \r\n"," in the control flow graph are not in the same operation tree as\r\n            the original operation.\r\n            ":" 在控制流程图中，图形不在同一操作树中\r\n            原始操作。\r\n            \r\n","\r\n            A read-only, non-seekable ":"\r\n            只读，不可读取\r\n","\r\n            Logs a message of the given importance using the specified resource string. To the specified Log.\r\n            ":"\r\n            使用指定的资源字符串记录给定重要性的消息。到指定的日志。\r\n            \r\n","\r\n            Creates a COM/ActiveX object on the specified server and exposes it to script code with\r\n            the specified options. The registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            在指定的服务器上创建一个com/activex对象，并将其暴露于脚本代码\r\n            指定的选项。注册类由程序化标识符（ProgID）指定。\r\n            \r\n","\r\n            The base type for diagnostic analyzers.\r\n            ":"\r\n            诊断分析仪的基本类型。\r\n            \r\n","\r\n            Locals - have identities by which consuming code refers to them.\r\n                Typical use is a local variable or a compiler generated temp that can be accessed in multiple operations.\r\n                Any object can be used as identity. Reference equality is used.\r\n            ":"\r\n            当地人 - 具有消费代码的身份。\r\n                典型的用途是可以在多个操作中访问的局部变量或编译器生成的温度。\r\n                任何对象都可以用作身份。使用参考平等。\r\n            \r\n","\r\n            Gets the type of this local variable.\r\n            ":"\r\n            获取此局部变量的类型。\r\n            \r\n",".\r\n            Failures are only recorded after all resolution attempts have been completed.\r\n            \r\n            This approach addresses the following scenario. Consider a script:\r\n            ":"。\r\n            仅在完成所有分辨率尝试完成后才记录故障。\r\n            \r\n            这种方法解决了以下方案。考虑一个脚本：\r\n            \r\n"," structure on the right side of the equality operator.":" 平等操作员右侧的结构。\r\n","\r\n            Specifies miscellaneous options about the format of symbol descriptions.\r\n            ":"\r\n            指定有关符号描述格式的其他选项。\r\n            \r\n","\r\n            Decodes a serialized type name in its canonical form. The canonical name is its full type name, followed\r\n            optionally by the assembly where it is defined, its version, culture and public key token.  If the assembly\r\n            name is omitted, the type name is in the current assembly otherwise it is in the referenced assembly. The\r\n            full type name is the fully qualified metadata type name. \r\n            ":"\r\n            以其规范形式解码一个串行类型名称。规范的名称是其完整类型名称，然后\r\n            可以选择由大会定义，其版本，文化和公钥令牌。如果是组装\r\n            省略了名称，类型名称在当前汇编中，否则在引用组件中。这\r\n            完整类型名称是完全合格的元数据类型名称。\r\n            \r\n","If the encoded attribute argument is invalid.":"如果编码的属性参数无效。\r\n","\r\n            True if the parameterless constructor constraint (":"\r\n            如果无参数构造函数约束（\r\n","\r\n            The sole instance of the ":"\r\n            唯一的实例\r\n","\r\n            Shows only the names of properties.\r\n            ":"\r\n            仅显示属性的名称。\r\n            \r\n","\r\n            The name of the module.\r\n            ":"\r\n            模块的名称。\r\n            \r\n","\r\n            Nullable warnings and annotations are explicitly turned off at this location.\r\n            ":"\r\n            在此位置明确关闭了可无效的警告和注释。\r\n            \r\n","[i] corresponds to ":"[i]对应\r\n","\r\n            Wraps an incremental generator in a dummy ":"\r\n            将增量发生器包裹在虚拟中\r\n","\r\n            Current usage:\r\n             (1) C# nameof expression.\r\n             (2) VB NameOf expression.\r\n            ":"\r\n            当前用法：\r\n             （1）c＃name of表达式。\r\n             （2）vb名称表达式。\r\n            \r\n","\r\n            Enable reporting diagnostics on generated code.\r\n            Analyzer driver will not suppress any analyzer diagnostic based on whether or not it's location is in generated code.\r\n            ":"\r\n            在生成的代码上启用报告诊断。\r\n            分析仪驱动程序不会根据生成代码中的位置是否抑制任何分析仪诊断。\r\n            \r\n","\r\n            Represents a C# is pattern expression. For example, \"x is int i\".\r\n            ":"\r\n            表示C＃是模式表达式。例如，“ x是int i”。\r\n            \r\n","\r\n            Get the underlying concurrent storage, creating it on demand if needed.\r\n            NOTE: Concurrent Adding to the bag is supported, but concurrent Clearing is not.\r\n                  If one thread adds to the bug while another clears it, the scenario is \r\n                  broken and we cannot do anything about it here.\r\n            ":"\r\n            获取基础并发存储，如果需要，请按需创建它。\r\n            注意：同时添加袋子是支持的，但并非清除却不是。\r\n                  如果一个线程在错误清除时添加到错误，则场景为\r\n                  破碎了，我们在这里无法做任何事情。\r\n            \r\n",", and each inner array\r\n            corresponds to each ":"和每个内部数组\r\n            对应于每个\r\n","\r\n            Information decoded from well-known custom attributes applied on a field.\r\n            ":"\r\n            从现场应用的众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            Returns reversed branch operation for the current block.\r\n            If no reverse opcode can be obtained Nop is returned.\r\n            ":"\r\n            返回当前块的反向分支操作。\r\n            如果无法获得反向操作码，则返回NOP。\r\n            \r\n","return":"返回\r\n","\r\n            Returns true and the 1-based index of the method definition\r\n            if the method definition is recognized. Otherwise returns false.\r\n            The index is into the full metadata.\r\n            ":"\r\n            返回true和方法定义的基于1的索引\r\n            如果识别方法定义。否则返回false。\r\n            该索引进入了完整的元数据。\r\n            \r\n","\r\n            Arguments of the indexer property reference, excluding the instance argument. Arguments are in evaluation order.\r\n            ":"\r\n            索引属性参考的参数，不包括实例参数。争论处于评估顺序。\r\n            \r\n","\r\n              Looks up a localized string similar to The underlying type for a tuple must be tuple-compatible..\r\n            ":"\r\n              查找类似于元组的基础类型的局部字符串，必须兼容。\r\n            \r\n","\r\n            Creates a localizable resource string with no formatting arguments.\r\n            ":"\r\n            创建一个无需格式参数的可本质资源字符串。\r\n            \r\n","\r\n            Obtain an enumerator that iterates through the elements in the set.\r\n            ":"\r\n            获取通过集合中元素进行迭代的枚举器。\r\n            \r\n","\r\n            Get full metadata handle of the field definition.\r\n            ":"\r\n            获取字段定义的完整元数据手柄。\r\n            \r\n","\r\n            Gets the immediately containing ":"\r\n            立即包含\r\n","The source to add outputs for":"添加输出的来源\r\n","\r\n            Used when there's a possibility that more than one set of inputs may produce the \r\n            same output -- this is a way to invalidate any other roots that produce that same \r\n            outputs, so that the next time the task is run with that other set of inputs, it \r\n            won't incorrectly believe that it is up-to-date.  \r\n            ":"\r\n            在有可能产生多组输入的可能性时使用\r\n            相同的输出 - 这是一种使产生同样的其他根无效的方法\r\n            输出，因此下次任务使用其他集合输入时，\r\n            不会错误地相信它是最新的。\r\n            \r\n","\r\n            Specifies the Ids of special runtime types.\r\n            ":"\r\n            指定特殊运行时类型的ID。\r\n            \r\n","\r\n            Represents a local variable in method body.\r\n            ":"\r\n            代表方法主体中的局部变量。\r\n            \r\n"," and exception handler for the given ":" 和给定的例外处理程序\r\n","\r\n            Interface implemented by the compiler's internal representation of a symbol.\r\n            An object implementing this interface might also implement ":"\r\n            由编译器的内部表示符号实现的接口。\r\n            实现此接口的对象也可能实现\r\n","\r\n            Gets the document name associated with the compiled script.\r\n            ":"\r\n            获取与编译脚本关联的文档名称。\r\n            \r\n","The PE image format is invalid.":"PE图像格式无效。\r\n","\r\n              Looks up a localized string similar to struct.\r\n            ":"\r\n              查找类似于struct的局部字符串。\r\n            \r\n","\r\n            Finds all modules of an assembly on a specified path and builds an instance of ":"\r\n            在指定路径上找到一个组件的所有模块，并构建一个实例\r\n","\r\n            Returns true if a given field is a tuple element\r\n            ":"\r\n            如果给定字段是元组元素，则返回true\r\n            \r\n","'s Kind matches the given ":"的友善与给定的\r\n","\r\n            Creates a generator state that contains results\r\n            ":"\r\n            创建一个包含结果的发电机状态\r\n            \r\n","\r\n            Stores the current partial analysis state for an analyzer.\r\n            ":"\r\n            存储分析仪的当前部分分析状态。\r\n            \r\n","\r\n            Construct a rooting marker string from the ITaskItem array of primary sources.\r\n            ":"\r\n            从主源的iTaskItem数组中构造一个生根标记字符串。\r\n            \r\n","Two consecutive NUL characters were detected in the decoded text and ":"在解码文本中检测到两个连续的NUL字符，\r\n",". This is used as a decrement operator":"。这被用作减少操作员\r\n","Indicates if the file can be embedded in the PDB.":"指示文件是否可以嵌入PDB中。\r\n","\r\n            Encoding to use when UTF-8 fails. We try to find the following, in order, if available:\r\n                1. The default ANSI codepage\r\n                2. CodePage 1252.\r\n                3. Latin1.\r\n            ":"\r\n            编码在UTF-8失败时使用。我们尝试按顺序找到以下内容：\r\n                1.默认的ANSI CodePage\r\n                2. CodePage 1252。\r\n                3.拉丁1。\r\n            \r\n"," state\r\n            that is needed to build graphs for lambdas and local functions.\r\n            ":"状态\r\n            为lambdas和本地功能构建图形所需。\r\n            \r\n","\r\n            Append '?' to nullable reference types.\r\n            ":"\r\n            附加'？'可无效的参考类型。\r\n            \r\n","Parallel.ForEach":"平行\r\n","\r\n            Current usage:\r\n             (1) C# method body for non-constructor\r\n            ":"\r\n            当前用法：\r\n             （1）非构造者的C＃方法主体\r\n            \r\n"," rules applies to this file, and correctly applies\r\n            precedence rules if there are multiple rules for the same file.\r\n            ":" 规则适用于此文件，并正确应用\r\n            优先规则，如果同一文件有多个规则。\r\n            \r\n","\r\n            Maps values of #r references to resolved metadata references.\r\n            ":"\r\n            #R引用对已解决的元数据参考的映射值。\r\n            \r\n","\r\n            Represents a VB End statemnt.\r\n            ":"\r\n            代表VB End宣号。\r\n            \r\n","\r\n            Returns a new INamedTypeSymbol with the given element types, names, and locations.\r\n            ":"\r\n            返回带有给定元素类型，名称和位置的新型InamedTypeSymbol。\r\n            \r\n","internal":"内部的\r\n",", including all its ruleset includes,\r\n            into an .editorconfig file at the given ":"，包括其所有规则集包括，\r\n            在给定的一个.editorconfig文件中\r\n"," as the parent (i.e. parent is a value type).\r\n            ":" 作为父（即父是一个值类型）。\r\n            \r\n"," in C# or VB.\r\n            ":" 在C＃或VB中。\r\n            \r\n","\r\n            Methods imported from metadata can explicitly implement more than one method, \r\n            that is why return type is ImmutableArray.\r\n            ":"\r\n            从元数据中导入的方法可以明确实现多个方法，\r\n            这就是为什么返回类型是ImmutableArray的原因。\r\n            \r\n","\r\n            A UInt32 value encoded as 2 bytes.\r\n            ":"\r\n            UINT32值编码为2个字节。\r\n            \r\n"," for the given executable code block root ":" 对于给定的可执行代码块根\r\n"," property set to\r\n            ":" 属性设置为\r\n            \r\n","\r\n            Register an action to be executed at start of semantic analysis of an ":"\r\n            注册一个措施将在开始的语义分析开始\r\n","\r\n            Full path describing the location of the analyzer reference, or null if the reference has no location.\r\n            ":"\r\n            完整的路径描述分析仪参考的位置，如果参考没有位置，则为null。\r\n            \r\n"," if the forwarding should be done directly via UsingNamespace,\r\n            null if the forwarding is done via custom debug info.\r\n            ":" 如果应该通过使用namespace直接完成转发，则\r\n            null如果转发是通过自定义调试信息完成的。\r\n            \r\n","\r\n            True if this type gets special treatment from the runtime.\r\n            ":"\r\n            如果此类型从运行时获得特殊待遇，则是的。\r\n            \r\n","\r\n            Hash algorithm to use to calculate source file debug checksums.\r\n            ":"\r\n            哈希算法用于计算源文件调试检查。\r\n            \r\n","\r\n            Object to store the decoded data from early bound well-known attributes.\r\n            Created lazily only when some decoded data needs to be stored, null otherwise.\r\n            ":"\r\n            目的是从早期绑定众所周知的属性中存储解码的数据。\r\n            仅当需要存储一些解码的数据时，才创建懒惰，否则将无效。\r\n            \r\n","The analyzer this rule belongs to":"分析仪该规则属于\r\n","\r\n            Gets the host exception that caused the current exception to be thrown, or ":"\r\n            获取导致当前例外的主机例外，或\r\n","\r\n            Register an action to be executed at the start of semantic analysis of a method body or an expression appearing outside a method body.\r\n            A code block start action can register other actions and/or collect state information to be used in diagnostic analysis,\r\n            but cannot itself report any ":"\r\n            注册在方法主体的语义分析开始时要执行的操作，或者出现在方法主体外的表达式。\r\n            代码块启动操作可以注册其他操作和/或收集用于诊断分析的状态信息，\r\n            但本身不能报告任何\r\n","\r\n            Kind of binary pattern; either ":"\r\n            一种二进制模式；任何一个\r\n","\r\n            This method is necessary to avoid an ambiguity between ":"\r\n            这种方法是必要的，以避免在\r\n","\r\n            Returns the constructed form of the ReducedFrom property,\r\n            including the type arguments that were either inferred during reduction or supplied at the call site.\r\n            ":"\r\n            返回还原性属性的构造形式，\r\n            包括在减少期间推断或在呼叫站点提供的类型参数。\r\n            \r\n","\r\n            Modifier types that are considered part of the calling convention of this method, if the ":"\r\n            如果是该方法，则被认为是该方法的调用约定的一部分的修饰语类型\r\n",".\r\n            It assumes that an instance of ":"。\r\n            它假设一个实例\r\n","\r\n            String option to configure names of types (separated by '|'), so that the type and all its derived types are excluded for analysis.\r\n            Configurable rules: CA1303 (https://docs.microsoft.com/visualstudio/code-quality/ca1303).\r\n            Allowed method name formats:\r\n              1. Type name only (includes all types with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format\r\n                 with an optional \"T:\" prefix.\r\n            ":"\r\n            字符串选项以配置类型的名称（由'|'分开），以便将类型及其所有派生类型排除在外。\r\n            可配置规则：CA1303（https://docs.microsoft.com/visualstudio/code-quality/ca1303）。\r\n            允许的方法名称格式：\r\n              1.仅键入名称（无论包含类型或名称空间如何，都包含所有具有名称的类型）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format\r\n                 带有可选的“ t：”前缀。\r\n            \r\n","\r\n            Pooled object that carries the info needed to process\r\n            a reported diagnostic from a syntax node action.\r\n            ":"\r\n            汇总的对象，该对象携带处理所需的信息\r\n            从语法节点动作中报告的诊断。\r\n            \r\n","\r\n            Imports a COM/ActiveX type and exposes it to script code. The registered class is\r\n            specified by programmatic identifier (ProgID).\r\n            ":"\r\n            导入com/activex类型并将其公开为脚本代码。注册课是\r\n            由程序化标识符（PROGID）指定。\r\n            \r\n","\r\n            Resets the analysis data for the given ":"\r\n            重置给定的分析数据\r\n","\r\n            Given an input string changes it to be acceptable as a part of a type name.\r\n            ":"\r\n            给定输入字符串将其更改为可以作为类型名称的一部分接受。\r\n            \r\n","\r\n            This type is attached to diagnostics for required language version and should only be used\r\n            on such diagnostics, as they are recognized by ":"\r\n            此类型附在所需语言版本的诊断上，仅应使用\r\n            在这样的诊断方面，正如它们所认可的那样\r\n","\r\n            When getting information for a symbol that resolves to a method group or property group,\r\n            from which a method is then chosen; the chosen method or property is present in Symbol;\r\n            all methods in the group that was consulted are placed in this property.\r\n            ":"\r\n            获取解决方法组或属性组的符号的信息时，\r\n            然后选择一种方法；所选方法或属性存在于符号中；\r\n            咨询的组中的所有方法都放在该物业中。\r\n            \r\n","\r\n            The string returned from this function represents the inputs to the compiler which impact determinism.  It is \r\n            meant to be inline with the specification here:\r\n            \r\n                - https://github.com/dotnet/roslyn/blob/main/docs/compilers/Deterministic%20Inputs.md\r\n            \r\n            Issue #8193 tracks filling this out to the full specification. \r\n            \r\n                https://github.com/dotnet/roslyn/issues/8193\r\n            ":"\r\n            从该函数返回的字符串表示影响确定论的编译器的输入。这是\r\n            在此处与规格结合在一起：\r\n            \r\n                -https：//github.com/dotnet/roslyn/blob/main/docs/compilers/deterministic%20inputs.md\r\n            \r\n            问题＃8193跟踪将其填充到完整规范中。\r\n            \r\n                https://github.com/dotnet/roslyn/issues/8193\r\n            \r\n","\r\n            Zero or more parameters that can be used as type annotations.\r\n            ":"\r\n            可以用作类型注释的零或更多参数。\r\n            \r\n","\r\n            The intersection of the spans, or null if the intersection is empty.\r\n            ":"\r\n            跨度的交点，如果交点是空的，则无效。\r\n            \r\n","\r\n            Marks blocks that are recursively reachable from the given block.\r\n            ":"\r\n            可从给定块递归到达的标记块。\r\n            \r\n","\r\n            If true, a language may use the modified storage location without \r\n            being aware of the meaning of the modification, modopt vs. modreq. \r\n            ":"\r\n            如果是真的，则语言可以使用修改的存储位置，而无需\r\n            了解修改的含义，Modopt与Modreq。\r\n            \r\n","\r\n            A compile time constant value that provides the default value for the property. (Who uses this and why?)\r\n            ":"\r\n            编译时常数值，可为属性提供默认值。 （谁使用这个，为什么？）\r\n            \r\n"," with the specified token added to the end.\r\n            ":" 随着指定的令牌添加到末尾。\r\n            \r\n","A key in the pathMap is empty.":"Pathmap中的一个键是空的。\r\n"," being visited":" 被访问\r\n","\r\n            Symbol is a label.\r\n            ":"\r\n            符号是标签。\r\n            \r\n","\r\n            Body of the lock, to be executed while holding the lock.\r\n            ":"\r\n            锁定锁时要执行的锁。\r\n            \r\n","The task's result type.":"任务的结果类型。\r\n","\r\n            Writes UTF8 encoded string at the current position.\r\n            ":"\r\n            将UTF8编码的字符串在当前位置写入。\r\n            \r\n","\r\n            If true the resulting assembly is marked as delay signed.\r\n            \r\n            If false and ":"\r\n            如果正确，则将结果组件标记为延迟签名。\r\n            \r\n            如果是错误的\r\n","\r\n            The name assigned to the ":"\r\n            分配给\r\n","\r\n            The containing type of this expression. In C#, this will always be null.\r\n            ":"\r\n            包含此表达式的类型。在C＃中，这将永远是零的。\r\n            \r\n"," at the start and end of the basic block.\r\n            ":" 在基本块的开始和结尾处。\r\n            \r\n"," is true and\r\n             (3) ":" 是真的\r\n             （3）\r\n","\r\n            Compiles your assembly to run on a computer that has an Advanced RISC Machine 64 bit (ARM64) processor.\r\n            ":"\r\n            编译您的组件以在具有高级RISC机器64位（ARM64）处理器的计算机上运行。\r\n            \r\n","The name of a record class.":"唱片类的名称。\r\n","\r\n            Calculates map from the identities of specified symbols to the corresponding identities in the original EnC baseline metadata.\r\n            The map only includes an entry for identities that differ, i.e. for symbols representing assembly references of the current compilation that have different identities \r\n            than the corresponding identity in baseline metadata AssemblyRef table. The key comparer of the map ignores build and revision parts of the version number, \r\n            since these might change if the original version included wildcard.\r\n            ":"\r\n            计算从指定符号的身份到原始ENC基线元数据中相应身份的映射。\r\n            该地图仅包括一个不同的身份的条目，即代表具有不同身份的当前汇编的汇编引用的符号\r\n            比基线元数据组装表中的相应身份表。地图的关键比较忽略了版本号的构建和修订部分，\r\n            由于原始版本包括通配符，因此可能会改变。\r\n            \r\n","Invalid metadata.":"无效的元数据。\r\n","\r\n            The settings that determine which kind keywords should be included when displaying symbols.\r\n            ":"\r\n            显示符号时应包含哪种关键字的设置。\r\n            \r\n","The root of the subtree containing the current node corresponding to the original tracked node.":"包含与原始跟踪节点相对应的当前节点的子树的根。\r\n",".\r\n            Control flow leaves the basic block by taking either the ":"。\r\n            控制流程通过服用\r\n","\r\n            The set of local variables for which a value is always assigned inside\r\n            a region.\r\n            ":"\r\n            在内部始终分配一个值的本地变量集\r\n            一个地区。\r\n            \r\n","A new host array with ":"一个新主机阵列\r\n"," including the given ":" 包括给定\r\n"," with the specified error message.\r\n            ":" 带有指定的错误消息。\r\n            \r\n"," it when it is itself disposed.":" 当它本身处置时。\r\n"," that wraps the supplied node.\r\n            ":" 这包裹了提供的节点。\r\n            \r\n","\r\n            Initializes reference properties.\r\n            ":"\r\n            初始化参考属性。\r\n            \r\n","\r\n            Modifies the incoming diagnostic, for example escalating its severity, or discarding it (returning null) based on the compilation options.\r\n            ":"\r\n            修改传入的诊断，例如根据汇编选项升级其严重性或丢弃（返回null）。\r\n            \r\n","\r\n            Two ropes are \"the same\" if they represent the same sequence of characters.\r\n            ":"\r\n            如果两个绳索表示相同的字符序列，则是“相同”。\r\n            \r\n","The hash code for the given identifier":"给定标识符的哈希代码\r\n","\r\n            A list of methods that are associated with the event.\r\n            ":"\r\n            与事件关联的方法列表。\r\n            \r\n"," representing an optional prefix of ":" 表示可选的前缀\r\n","\r\n            Set the global thread count, and assign that count to the current thread. \r\n            ":"\r\n            设置全局线程计数，并将计数分配给当前线程。\r\n            \r\n","\r\n            Set of well-known collection add method names.\r\n            Used in ":"\r\n            一组知名集合添加方法名称。\r\n            在\r\n","\r\n             Updated array ":"\r\n             更新的数组\r\n","The default compiler warning level for ":"默认编译器警告级别\r\n","True if emit succeeded.":"如果发射成功，则为真实。\r\n","The expression or statement syntax node.":"表达式或语句语法节点。\r\n","Path is empty or invalid.":"路径是空的或无效的。\r\n","\r\n            Creates a new LocalDefinition.\r\n            ":"\r\n            创建一个新的localDefinition。\r\n            \r\n","\r\n            Adds a key/value pair using the specified function if the key does not already exist.  Returns the new value, or the existing value if the key exists.\r\n            ":"\r\n            如果键尚不存在，则使用指定函数添加密钥/值对。返回新值，如果存在密钥，则返回现有值。\r\n            \r\n","\r\n            Defines common script engine exception properties.\r\n            ":"\r\n            定义常见的脚本引擎异常属性。\r\n            \r\n","\r\n            Handles of methods with sequence points that have been updated in this delta.\r\n            ":"\r\n            带有序列点的方法的处理，在此三角洲已更新。\r\n            \r\n","\r\n            Successful binding.\r\n            ":"\r\n            成功结合。\r\n            \r\n"," of a code document, and can use a ":" 代码文档，可以使用\r\n"," objects describing assemblies, for which this method should\r\n             resolve references and find suitable AssemblySymbols. The first slot contains the assembly being built.\r\n             ":" 描述组件的对象，此方法应\r\n             解析参考并找到合适的组合符号。第一个插槽包含正在构建的组件。\r\n             \r\n","\r\n            This attribute is applicable to classes, enums, interfaces, structs, and assemblies. Use\r\n            ":"\r\n            此属性适用于类，枚举，接口，结构和组件。利用\r\n            \r\n","\r\n            'This' or 'Me' instance to be supplied to the method, or null if the method is static.\r\n            ":"\r\n            “此”或“ me”实例将提供给该方法，或者如果该方法是静态的，则为null。\r\n            \r\n","\r\n            Represents unknown case kind.\r\n            ":"\r\n            代表未知的案例类型。\r\n            \r\n","\r\n            The new text.\r\n            ":"\r\n            新文字。\r\n            \r\n","The token to be replaced; a descendant of the root node and an element of a list member.":"要替换的令牌；根节点的后代和列表成员的元素。\r\n","\r\n            Responsible for orchestrating a source generation pass\r\n            ":"\r\n            负责策划源通行证\r\n            \r\n","Useful for long running valueFactory functions, like say performing \r\n            dataflow analysis.  This way DFA is invoked only once per key, even if multiple\r\n            threads simultaneously request the same key.":"对于长期运行valueFactory函数有用，例如表演表演\r\n            数据流分析。这样，即使多个\r\n            线程同时请求相同的键。\r\n","Action to be executed at the start of semantic analysis of an operation block.":"操作块的语义分析开始时要执行的操作。\r\n","\r\n            Only an event was valid in the given location, but the candidate symbols was\r\n            of the wrong kind.\r\n            ":"\r\n            在给定位置只有一个事件有效，但是候选符号是\r\n            错误的。\r\n            \r\n","\r\n            Compute total text length and total size of storage buffers held\r\n            ":"\r\n            计算总文本长度和持有的存储缓冲总数\r\n            \r\n","\r\n            Creates a shallow copy of contained modules and wraps them into a new instance of ":"\r\n            创建一个包含模块的浅副本，并将其包裹在一个新实例中\r\n","\r\n            Specifies that the script engine is to wait for a debugger connection and schedule a\r\n            pause before executing the first line of application script code. This option is\r\n            ignored if ":"\r\n            指定脚本引擎要等待调试器连接并安排A\r\n            在执行应用程序脚本代码的第一行之前暂停。此选项是\r\n            如果忽略了\r\n","\r\n            Dispenser of unique ordinals for synthesized variable names that have the same kind and syntax offset.\r\n            ":"\r\n            具有相同类型和语法偏移的合成变量名称的唯一序数分配器。\r\n            \r\n","Reads from the beginning of the stream. Leaves the stream open.":"从流的开头读取。使溪流打开。\r\n","\r\n            Should root markers in the TLog be treated as file accesses, or only as markers?\r\n            ":"\r\n            TLOG中的根标记是否应视为文件访问，还是仅为标记？\r\n            \r\n",".\r\n            2) ":"。\r\n            2）\r\n","\r\n            The resulting copy shares the metadata images and metadata information read from them with the original.\r\n            It doesn't own the underlying metadata images and is not responsible for its disposal.\r\n            \r\n            This is used, for example, when a metadata cache needs to return the cached metadata to its users\r\n            while keeping the ownership of the cached metadata object.\r\n            ":"\r\n            生成的副本共享元数据图像和元数据信息，并从中读取原件。\r\n            它不拥有基本的元数据图像，也不对其处置负责。\r\n            \r\n            例如，当元数据缓存需要将缓存的元数据退还给其用户时\r\n            同时保留缓存的元数据对象的所有权。\r\n            \r\n"," only, or all its subdirectories as well.":" 仅，或其所有子目录。\r\n","\r\n            Returns true iff analysis was successful.  Analysis can fail if the region does not\r\n            properly span a single expression, a single statement, or a contiguous series of\r\n            statements within the enclosing block.\r\n            ":"返回真实的IFF分析成功。如果区域没有，分析可能会失败\r\n            正确跨越单个表达式，单个语句或连续的一系列\r\n            封闭块中的语句。\r\n            \r\n","\r\n            Returns the string representation of the nodes in this list, not including \r\n            the first node's leading trivia and the last node's trailing trivia.\r\n            ":"\r\n            返回此列表中节点的字符串表示形式，而不包括\r\n            第一个节点的领先琐事和最后一个节点的尾随琐事。\r\n            \r\n","Boolean flag indicating if the argument was escaped due to lack of interprocedural analysis or not.":"布尔国旗指示该论点是否由于缺乏概要分析而逃脱。\r\n","\r\n            Kinds of conversions.\r\n            ":"\r\n            一种转换。\r\n            \r\n","\r\n            For enum types, gets the underlying type. Returns null on all other\r\n            kinds of types.\r\n            ":"\r\n            对于枚举类型，获取基础类型。返回所有其他\r\n            类型的种类。\r\n            \r\n","\r\n            Shows only the name of the delegate (e.g. \"SomeDelegate\").\r\n            ":"\r\n            仅显示代表的名称（例如“某种程度上”）。\r\n            \r\n","\r\n            A .netmodule file.\r\n            ":"\r\n            一个.netModule文件。\r\n            \r\n","The total number of operand usages found.":"找到了操作数的总数。\r\n","\r\n              Looks up a localized string similar to A key in the pathMap ends with a path separator..\r\n            ":"\r\n              查找与路径分离器结束的路径图中类似的局部字符串。\r\n            \r\n"," to merge and compare ":" 合并和比较\r\n","\r\n            Imports types from one or more host assemblies and merges them with an existing host type collection.\r\n            ":"\r\n            从一个或多个主机组件中导入类型，并将它们与现有主机类型集合合并。\r\n            \r\n"," in VB).\r\n            ":" 在VB中）。\r\n            \r\n","\r\n            Create a RuleSet with a global effective action applied on it.\r\n            ":"\r\n            创建一个规则集，并采用全球有效的操作。\r\n            \r\n","\r\n            Count of registered syntax node actions.\r\n            ":"\r\n            注册语法节点操作的计数。\r\n            \r\n","\r\n              Looks up a localized string similar to File not found..\r\n            ":"\r\n              查找类似于未找到的文件的本地化字符串。\r\n            \r\n","\r\n            Synthesized symbol that implements a method body feature (iterator, async, lambda, etc.)\r\n            ":"\r\n            综合符号，该符号实现方法身体功能（迭代器，异步，lambda等）\r\n            \r\n","\r\n            The root namespace that contains all namespaces and types defined in source code or in \r\n            referenced metadata, merged into a single namespace hierarchy.\r\n            ":"\r\n            包含源代码中定义的所有名称空间和类型的根名称空间或\r\n            引用元数据，合并为单个名称空间层次结构。\r\n            \r\n","\r\n            The 'add' accessor of the event.  Null only in error scenarios.\r\n            ":"\r\n            活动的“添加”登录器。仅在错误方案中null。\r\n            \r\n"," that some entity from ":" 来自某些实体\r\n","\r\n            Represents a single EditorConfig file, see http://editorconfig.org for details about the format.\r\n            ":"\r\n            代表一个单个editorConfig文件，有关格式的详细信息，请参见http://editorconfig.org。\r\n            \r\n","\r\n            Copy of the global binder data that maps from Types to the appropriate reading-function\r\n            for that type.  Types register functions directly with ":"\r\n            全局活页夹数据的副本，该数据从类型到适当的阅读功能映射\r\n            对于该类型。类型注册功能直接使用\r\n"," that wraps the supplied token.\r\n            ":" 这包裹了提供的令牌。\r\n            \r\n","\r\n            Element type of the created array instance.\r\n            ":"\r\n            创建数组实例的元素类型。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# array creation expression.\r\n             (2) VB array creation expression.\r\n            ":"当前用法：\r\n             （1）C＃数组创建表达式。\r\n             （2）VB数组创建表达式。\r\n            \r\n","\r\n            An object reference with the id encoded as 1 byte.\r\n            ":"\r\n            具有编码为1个字节的ID的对象引用。\r\n            \r\n","\r\n            Errors collection related to an incompatible set of compilation options\r\n            ":"\r\n            与不兼容的汇编选项相关的错误收集\r\n            \r\n","\r\n            descend into only nodes\r\n            ":"\r\n            下降到节点\r\n            \r\n","The name of a delegate.":"代表的名字。\r\n","\r\n            True if the assembly identity includes full public key.\r\n            ":"\r\n            如果包装身份包含完整的公钥，则为正确。\r\n            \r\n","Element of the return Token List":"返回令牌列表的元素\r\n","The following example shows the use of a pooled delegate to avoid capturing allocations for the same\r\n             callback action:":"以下示例显示了使用合并的代表以避免捕获相同的分配\r\n             回调操作：\r\n","\r\n            Platform invoke information, or null if the method isn't a P/Invoke.\r\n            ":"\r\n            平台调用信息，如果该方法不是P/Invoke，则为null。\r\n            \r\n","\r\n            If this module represents an assembly, name of the assembly used in AssemblyDef table. Otherwise name of the module same as ":"\r\n            如果此模块代表一个组件，则在“汇编”表中使用的组件名称。否则该模块的名称与\r\n","Node to track is not a descendant of the root.":"跟踪节点不是根的后代。\r\n","\r\n            Flags for arguments. Each item indicates whether corresponding argument refers to NoPia local types.\r\n            ":"\r\n            争论的标志。每个项目指示相应的参数是否指NOPIA本地类型。\r\n            \r\n","\r\n            Defines properties that comprise ClearScript's global configuration.\r\n            ":"\r\n            定义构成ClearScript的全局配置的属性。\r\n            \r\n","\r\n            Set of unsuppressed analyzers that need to be executed. \r\n            ":"\r\n            需要执行的一组未抑制的分析仪。\r\n            \r\n","\r\n            Copy may or may not be shared by other ":"\r\n            副本可能由其他人共享或可能不会共享\r\n","\r\n            Exception class to enable generating ERR_PermissionSetAttributeFileReadError while reading the file for PermissionSetAttribute fixup.\r\n            ":"\r\n            异常类以在读取文件以获取文件permissetattribute fixup时生成err_permissionsetattributefilereaderror。\r\n            \r\n",", that if present,\r\n                will be returned as a separate token.\r\n            ":"，如果存在，\r\n                将作为一个单独的令牌返回。\r\n            \r\n","\r\n            Reads the action from the given node\r\n            ":"\r\n            读取给定节点的动作\r\n            \r\n","\r\n            These are also the rules used for VB identifier comparison.\r\n            ":"\r\n            这些也是VB标识符比较的规则。\r\n            \r\n"," basic block.\r\n            ":" 基本块。\r\n            \r\n","\r\n            Count of special types. This is not a count of enum members.\r\n            ":"\r\n            特殊类型的计数。这不是枚举成员的罪名。\r\n            \r\n","\r\n            This is ONLY used for debugging purpose\r\n            ":"\r\n            这仅用于调试目的\r\n            \r\n","\r\n            Value to be assigned to the target of the assignment.\r\n            ":"\r\n            要分配给分配目标的价值。\r\n            \r\n","\r\n            Is current namespace a global namespace?\r\n            ":"\r\n            当前名称空间是全局名称空间吗？\r\n            \r\n",", but \r\n            that means that ":"， 但\r\n            这意味着\r\n","A duplicate of the SymbolDisplayFormat, without the specified ":"symboldisplayformat的重复，没有指定的\r\n","\r\n            The method that will be called to start execution of this executable module. \r\n            ":"\r\n            将被调用以开始执行此可执行模块的方法。\r\n            \r\n","\r\n            the diagnostic will have the HelpLinkUri ":"\r\n            诊断将具有Helplinkuri\r\n","\r\n            Result of binding an input assembly and its references. \r\n            ":"\r\n            结合输入组件及其参考的结果。\r\n            \r\n","\r\n            True if the type is a Windows runtime type.\r\n            ":"\r\n            如果类型是Windows运行时类型，则为true。\r\n            \r\n","\r\n            Sets the early decoded well-known attribute data on the bag in a thread safe manner.\r\n            Stored early decoded data is immutable and cannot be updated further.\r\n            ":"\r\n            以线程安全的方式将袋子上的早期解码著名属性数据设置。\r\n            存储的早期解码数据是不变的，无法进一步更新。\r\n            \r\n"," is called\r\n            ":" 叫做\r\n            \r\n"," if this is a 'lifted' increment operator.  When there is an \r\n            operator that is defined to work on a value type, 'lifted' operators are \r\n            created to work on the ":" 如果这是一个“提升”增量操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            Describes a command line analyzer assembly specification.\r\n            ":"\r\n            描述命令行分析仪组件规范。\r\n            \r\n"," implementation of this method performs no action.\r\n            ":" 此方法的实现无需采取任何措施。\r\n            \r\n","\r\n            The complete width of the token in characters including its leading and trailing trivia.\r\n            ":"\r\n            令牌的完整宽度，包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Some of the slots might not be used anymore (the type of an awaiter might have changed).\r\n            Still, new awaiters are assigned slots starting with ":"\r\n            某些插槽可能不再使用（等待者的类型可能已经更改了）。\r\n            尽管如此，新的等待者还是从\r\n","The host type with which to test ":"测试的主机类型\r\n","Gets the child at the specified index.":"在指定的索引中获取孩子。\r\n","\r\n            An unsigned 32 bit integer or 64 bit integer, depending on the native word size of the underlying processor.\r\n            ":"未签名的32位整数或64位整数，具体取决于基础处理器的本地单词大小。\r\n            \r\n"," \r\n            to get a reference to it.\r\n            ":" \r\n            获取参考。\r\n            \r\n",".  This can happen as the parser is allowed to construct parse\r\n            trees using shared tokens for efficiency.  In all these cases though, it will still remain true that the incrementally\r\n            identical tokens could have different parents and may occur at different positions in their respective trees.\r\n            ":"。当解析器被允许构造解析时，这可能会发生\r\n            树木使用共享令牌提高效率。但是，在所有这些情况下，逐步递增仍然是正确的\r\n            相同的代币可能有不同的父母，并且可能在各自树木的不同位置发生。\r\n            \r\n","\r\n            Optional alignment of the interpolation.\r\n            ":"\r\n            插值的可选对准。\r\n            \r\n","\r\n            Gets an immutable copy of the state of this binder.  This copy does not need to be\r\n            locked while it is used.\r\n            ":"\r\n            获取该粘合剂状态的不变副本。此副本不需要\r\n            使用时锁定。\r\n            \r\n"," parameter; otherwise,\r\n            ":" 范围;否则，\r\n            \r\n","\r\n            Guard (when clause expression) associated with the switch arm, if any.\r\n            ":"\r\n            与开关组关联的后卫（子句表达式）（如果有）。\r\n            \r\n","\r\n            Compute the hashcode of a sub-string using FNV-1a\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            Note: FNV-1a was developed and tuned for 8-bit sequences. We're using it here\r\n            for 16-bit Unicode chars on the understanding that the majority of chars will\r\n            fit into 8-bits and, therefore, the algorithm will retain its desirable traits\r\n            for generating hash codes.\r\n            ":"\r\n            使用FNV-1A计算子弦的哈希码\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            注意：开发FNV-1A并调整为8位序列。我们在这里使用它\r\n            对于16位Unicode Chars的理解，大多数炭将\r\n            适合8位，因此，该算法将保留其理想的特征\r\n            用于生成哈希代码。\r\n            \r\n","\r\n            The value for a ":"\r\n            一个值\r\n"," is null, and the result is assigned into ":" 为null，结果分配给\r\n"," has been invoked.":" 已被调用。\r\n","The root node from which to remove a descendant node from.":"从中从中删除后代节点的根节点。\r\n"," if there are any elements in the list, else ":" 如果列表中有任何元素，否则\r\n"," should return the same object.\r\n            ":" 应该返回同一对象。\r\n            \r\n","\r\n            Compares assembly reference identity with definition identity.\r\n            ":"\r\n            将汇编参考身份与定义身份进行比较。\r\n            \r\n","\r\n            This interface is reserved for implementation by its associated APIs. We reserve the right to change it in the future.\r\n            ":"\r\n            该界面保留用于通过其关联的API实现。我们保留将来改变它的权利。\r\n            \r\n"," setting. \r\n            ":" 环境。\r\n            \r\n","Cache data for accelerated compilation.":"加速汇编的缓存数据。\r\n","\r\n             Represents a declarator that declares multiple individual variables.\r\n             ":"\r\n             代表声明多个单个变量的声明器。\r\n             \r\n","\r\n            Creates a new list with the specified element replaced by the new nodes.\r\n            ":"\r\n            创建一个新列表，指定元素被新节点替换。\r\n            \r\n","Local symbol, used by edit and continue only, null otherwise.":"本地符号，仅由编辑使用并仅继续，否则为空。\r\n","\r\n            If set, the module contains instructions that assume a 64 bit instruction set. For example it may depend on an address being 64 bits.\r\n            This may be true even if the module contains only IL instructions because of PlatformInvoke and COM interop.\r\n            ":"\r\n            如果设置，则该模块包含假定64位指令集的指令。例如，这可能取决于地址是64位。\r\n            即使该模块由于PlatformInvoke和com Interop而仅包含IL指令，也可能是正确的。\r\n            \r\n","The text of the floating-point literal":"浮点文字的文字\r\n","\r\n            On the rule CA1710, we allow user specific suffix to be registered for symbol names using the following format:\r\n            MyClass->Suffix or T:MyNamespace.MyClass->Suffix or N:MyNamespace->Suffix.\r\n            ":"\r\n            在规则CA1710上，我们允许使用以下格式注册用户特定后缀：\r\n            myClass->后缀或t：mynamespace.myclass-->后缀或n：mynamespace->后缀。\r\n            \r\n","The compiled script to execute.":"编译的脚本要执行。\r\n","\r\n            Indicates an ":"\r\n            指示一个\r\n","\r\n            The set of the local variables that are read outside a region.\r\n            ":"\r\n            在区域之外读取的本地变量的集合。\r\n            \r\n","\r\n            Region representing ":"\r\n            代表区域\r\n","\r\n            An unsigned 16 bit integer.\r\n            ":"\r\n            一个未签名的16位整数。\r\n            \r\n","The type to check":"检查的类型\r\n","\r\n            command line option to suppress diagnostics over a severity of interest. When N is 0, only error severity\r\n            messages are produced by the compiler. Values greater than 0 indicated that warnings up to and including\r\n            level N should also be included.\r\n            ":"\r\n            命令行选项以抑制诊断的严重性。当n为0时，只有错误严重性\r\n            消息由编译器生成。大于0的值表示警告到包括\r\n            N级也应包括在内。\r\n            \r\n","\r\n            Dynamically indexed operation.\r\n            ":"\r\n            动态索引操作。\r\n            \r\n","\r\n            Get diagnostic severity set globally for a given diagnostic identifier\r\n            ":"\r\n            为给定的诊断标识符在全球范围内设置诊断严重程度\r\n            \r\n","\r\n            Context for a syntax tree action.\r\n            A syntax tree action can use a ":"\r\n            语法树动作的上下文。\r\n            语法树的动作可以使用\r\n","\r\n            Deep Clone given IOperation\r\n            ":"\r\n            深克隆给定\r\n            \r\n","\r\n            Gets either a loop or a switch operation that corresponds to the given branch operation.\r\n            ":"\r\n            获取与给定分支操作相对应的循环或开关操作。\r\n            \r\n","\r\n            Member initializer.\r\n            ":"\r\n            会员初始化器。\r\n            \r\n","\r\n            Symbol is a namespace.\r\n            ":"\r\n            符号是一个名称空间。\r\n            \r\n","Array of implemented methods.":"实现方法数组。\r\n","\r\n            Path describing the location of the metadata, or null if the metadata have no location.\r\n            ":"描述元数据位置的路径，如果元数据没有位置，则null的位置。\r\n            \r\n"," is not a value of the ":" 不是\r\n","\r\n            Pool of event queues to serve each diagnostics request.\r\n            ":"\r\n            事件队列以服务每个诊断请求。\r\n            \r\n"," opens successfully, set to normalized absolute path of the file, null otherwise.":" 成功打开，设置为文件的归一化绝对路径，否则为空。\r\n"," to hash":" 哈希\r\n","\r\n            For each namespace declaration enclosing a method (innermost-to-outermost), there is a count\r\n            of the number of imports in that declaration.\r\n            ":"\r\n            对于每个命名空间声明封闭方法（最内向），有一个计数\r\n            该声明中的进口数量。\r\n            \r\n","\r\n            IL opcodes emitted by this builder.\r\n            This includes branch instructions that end blocks except if they are fall-through NOPs.\r\n            \r\n            This count allows compilers to see if emitting a particular statement/expression \r\n            actually produced any instructions.\r\n            \r\n            Example: a label will not result in any code so when emitting debugging information \r\n                     an extra NOP may be needed if we want to decorate the label with sequence point. \r\n            ":"\r\n            该建筑商发出的IL opcodes。\r\n            这包括分支说明，这些说明是结束块，除非它们是秋天的nop。\r\n            \r\n            该计数允许编译器查看是否发出特定的语句/表达式\r\n            实际产生了任何说明。\r\n            \r\n            示例：标签不会导致任何代码，因此在发出调试信息时\r\n                     如果我们想用序列装饰标签，则可能需要额外的NOP。\r\n            \r\n","\r\n             The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n             specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n             accessible.\r\n            \r\n             Labels are not considered (see ":"\r\n             “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n             指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n             无障碍。\r\n            \r\n             标签不考虑（请参阅\r\n","The BigInteger result":"Biginteger结果\r\n","\r\n            Maps {array type, method kind} tuples to implementing pseudo-methods.\r\n            ":"\r\n            地图{array类型，方法类型}元组实现伪方法。\r\n            \r\n","\r\n            Free any basic blocks owned by this scope or sub-scopes.\r\n            ":"\r\n            释放此范围或子分数拥有的任何基本块。\r\n            \r\n"," instance to script code. Each instance can only be exposed in one\r\n            script engine.\r\n            ":" 实例到脚本代码。每个实例只能在一个\r\n            脚本引擎。\r\n            \r\n"," that classifies the conversion from the\r\n            ":" 这可以分类从\r\n            \r\n",", the script engine may format script code\r\n            before executing or compiling it. This is intended to facilitate interactive debugging.\r\n            The formatting operation currently includes stripping leading and trailing blank lines\r\n            and removing global indentation.\r\n            ":"，脚本引擎可以格式化脚本代码\r\n            在执行或编译之前。这旨在促进交互式调试。\r\n            格式操作当前包括剥离领先和尾随的空白线\r\n            并消除全球凹痕。\r\n            \r\n","\r\n            For more information about the mapping between host members and script-callable\r\n            properties and methods, see\r\n            ":"\r\n            有关主机成员与脚本可听点之间映射的更多信息\r\n            属性和方法，请参阅\r\n            \r\n","\r\n            True if the anonymous type field was marked as 'Key' in VB.\r\n            ":"\r\n            如果将匿名类型字段标记为VB中的“键”，则为thus。\r\n            \r\n",".\r\n            Used to improve the preciseness of analysis when we can apply the ":"。\r\n            用于提高分析的精确性时，我们可以应用\r\n","\r\n              Looks up a localized string similar to The item specified is not the element of a list..\r\n            ":"\r\n              查找类似于指定项目的本地化字符串不是列表的元素。\r\n            \r\n","\r\n            Represents a pattern comparing the input with a constant value using a relational operator.\r\n            ":"\r\n            表示使用关系运算符将输入与恒定值进行比较的模式。\r\n            \r\n","\r\n            Display `System.[U]IntPtr` instead of `n[u]int`.\r\n            ":"\r\n            显示“系统。[u] intptr`而不是`n [u] int`。\r\n            \r\n","\r\n            All decoded attribute data has been computed and stored on the bag, but bound attributes are not yet stored.\r\n            Both ":"\r\n            所有解码的属性数据均已计算并存储在袋子上，但界限尚未存储。\r\n            两个都\r\n","\r\n            Tries to execute operation actions for the given analyzer for the given declaration.\r\n            ":"试图为给定的声明执行给定分析仪的操作操作。\r\n            \r\n","\r\n            Return full metadata handle of the method spec, adding\r\n            the spec to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回方法规格的完整元数据句柄，添加\r\n            如果丢失了这一代的索引规格。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            Read a type Id from the signature.\r\n            This may consume one or two bytes, and therefore increment the position correspondingly.\r\n            ":"从签名中读取类型ID。\r\n            这可能会消耗一个或两个字节，因此相应地递增位置。\r\n            \r\n","true if the set contains the specified value; otherwise, false.":"如果该集合包含指定的值，则为true；否则，错误。\r\n","\r\n            Declare Sub or Function.\r\n            ":"\r\n            声明子或功能。\r\n            \r\n","True if the properties are compatible and hence merged, false if the duplicate reference should not merge it's properties with primary reference.":"正确，如果属性兼容并因此合并，则为false，如果重复引用不应将其属性与主要参考合并。\r\n","SpecialType of the named argument.":"指定参数的特色菜。\r\n","\r\n            Merge any partial global configs into a single global config, and remove the partial configs\r\n            ":"\r\n            将任何部分全局配置合并到单个全局配置中，然后删除部分配置\r\n            \r\n"," of the first element to copy.":" 要复制的第一个元素。\r\n"," will use that index to get the reader used\r\n            for deserialization.\r\n            ":" 将使用该索引使读者使用\r\n            进行挑选。\r\n            \r\n","\r\n            and the incremental parser is able to take the token from the original tree and use it in its entirety in the\r\n            new tree.  In this case, the ":"\r\n            增量解析器能够从原始树中获取令牌，并在其中完整地使用它\r\n            新树。在这种情况下，\r\n",", Partition I, §8.6.1.3 Local signatures).\r\n            ":"，分区I，第8.6.1.3节本地签名）。\r\n            \r\n"," is set on the ":" 设置在\r\n","\r\n            Gets or creates the decoded data object.\r\n            ":"获取或创建解码的数据对象。\r\n            \r\n","The attribute to match.":"匹配的属性。\r\n"," during initialization, this will be the instance created for this generation pass.\r\n            ":" 在初始化期间，这将是为这一代创建的实例。\r\n            \r\n"," about a code block.\r\n            ":" 大约一个代码块。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Int16\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toInt16(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.int16”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.toint16（42））;\r\n            \r\n","\r\n            Resolves XML document file path.\r\n            ":"\r\n            解决XML文档文件路径。\r\n            \r\n","\r\n            Returns an instance of the reference with specified properties, or this instance if properties haven't changed.\r\n            ":"\r\n            返回带有指定属性的引用的实例，或者如果属性尚未更改，则此实例。\r\n            \r\n","\r\n            Given a path to an assembly, identifies files in the same directory\r\n            that could satisfy the assembly's dependencies. May throw.\r\n            ":"\r\n            给定一个汇编的途径，在同一目录中标识文件\r\n            这可以满足议会的依赖性。可能会扔。\r\n            \r\n","\r\n            A reference to a string with the id encoded as 4 bytes.\r\n            ":"\r\n            对字符串的引用，该字符串编码为4个字节。\r\n            \r\n","\r\n            Returns false if the file has already been processed for the analyzer OR is currently being processed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已为分析仪处理文件或当前正在处理另一个任务，则返回false。\r\n            如果是真的，那么它将返回一个非编号\r\n","\r\n            The path is treated as an opaque string, i.e. a case-sensitive comparison is used.\r\n            ":"\r\n            该路径被视为不透明的字符串，即使用对病例敏感的比较。\r\n            \r\n","\r\n            Initializes a new Windows Script engine instance with the specified list of supported file name extensions.\r\n            ":"\r\n            初始化一个新的Windows脚本引擎实例，其中指定的文件名称扩展名列表。\r\n            \r\n","\r\n            Addressed reference.\r\n            ":"\r\n            引用。\r\n            \r\n","\r\n            Get's the enumerator for this list.\r\n            ":"\r\n            获取此列表的枚举者。\r\n            \r\n","The object to cast to its static type.":"将其施放为静态类型的对象。\r\n","The array to copy the elements into.":"将元素复制到的数组。\r\n","\r\n            Construct a new entry\r\n            ":"\r\n            构建新条目\r\n            \r\n","\r\n            A bit field containing the output kinds that should not be produced by this generator driver.\r\n            ":"\r\n            一点点字段，其中包含该发电机驱动程序不应产生的输出类型。\r\n            \r\n","\r\n            Creates a localizable resource string that may possibly be formatted differently depending on culture.\r\n            ":"\r\n            创建一个可本质的资源字符串，可能会根据文化的格式不同。\r\n            \r\n","#line (startLine, startChar) - (endLine, endChar) charOffset":"#line（startline，startchar） - （endline，endchar）charoffset\r\n"," the source sequence contains less than ":" 源序列包含的少于\r\n",", this operation represents an \"expression\" declaring a variable.\r\n            ":"，此操作代表声明变量的“表达式”。\r\n            \r\n","\r\n             that is not owned by any other ":"\r\n             这不是其他任何人所有的\r\n",". If one cannot be gotten or created then a diagnostic will \r\n            be added to ":"。如果无法获得或创建一个，则诊断将\r\n            被添加到\r\n","The type of argument to pass to ":"传递的论点类型\r\n"," that contains path, line and column information.\r\n            The values are not affected by line mapping directives (":" 其中包含路径，行和列信息。\r\n            这些值不受行映射指令的影响（\r\n","\r\n            Include custom modifiers (e.g. modopt([mscorlib]System.Runtime.CompilerServices.IsConst)) on\r\n            the member (return) type and parameters.\r\n            ":"\r\n            包括自定义修饰符（例如modopt（[mscorlib] system.runtime.compilerservices.isconst））\r\n            成员（返回）类型和参数。\r\n            \r\n","\r\n            Compares assembly reference name (possibly partial) with definition identity.\r\n            ":"\r\n            将汇编参考名称（可能是部分）与定义身份进行比较。\r\n            \r\n","Scope the search to supertypes of the implementing type.":"范围搜索到实现类型的超级型。\r\n","\r\n            Definition of a simple field mapped to a metadata block\r\n            ":"\r\n            映射到元数据块的简单字段的定义\r\n            \r\n","\r\n            Current Usage:\r\n             (1) C# discard expressions\r\n            ":"\r\n            当前用法：\r\n             （1）C＃丢弃表达式\r\n            \r\n","\r\n            This method constructs the correct Tracker.exe arguments from its parameters\r\n            ":"\r\n            此方法从其参数构造正确的tracker.exe参数\r\n            \r\n","\r\n            The key must be provided through either an absolute path in ":"\r\n            必须通过一个绝对路径提供钥匙\r\n","\r\n            This property specifies the maximum number of documents to be cached by the document\r\n            loader. For the default document loader, its initial value is 1024.\r\n            ":"\r\n            此属性指定文档缓存的最大文档数量\r\n            加载程序。对于默认文档加载程序，其初始值为1024。\r\n            \r\n","\r\n            Analysis data predicated by true/false value of an ":"\r\n            分析数据由真/错误的值\r\n","If the items's length is 0, this will return an empty immutable array":"如果项目的长度为0，则将返回一个空的不变阵列\r\n","\r\n            Current usage:\r\n             (1) C# field reference expression.\r\n             (2) VB field reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃字段参考表达式。\r\n             （2）VB字段参考表达式。\r\n            \r\n","\r\n            Element type of the collection\r\n            ":"\r\n            集合的元素类型\r\n            \r\n","\r\n            Returns true if this is an error diagnostic which cannot be suppressed and is guaranteed to break the build.\r\n            Only diagnostics which have default severity error and are tagged as NotConfigurable fall in this bucket.\r\n            This includes all compiler error diagnostics and specific analyzer error diagnostics that are marked as not configurable by the analyzer author.\r\n            ":"\r\n            如果这是一个无法抑制并保证破坏构建的错误诊断，则返回true。\r\n            只有默认严重性错误并将其标记为Notconfigurable的诊断落在此存储桶中。\r\n            这包括所有编译器错误诊断和特定分析仪错误诊断，这些错误诊断不可是由分析仪作者标记为不可配置的。\r\n            \r\n","\r\n            Signature of the accessor when comparing property and accessor,\r\n            or the setter when comparing getter and setter (return type and then parameters).\r\n            ":"\r\n            比较属性和访问者时登录器的签名，\r\n            或比较getter和setter（返回类型，然后参数）时的设置器。\r\n            \r\n","\r\n            Enables or disables extension method enumeration.\r\n            ":"\r\n            启用或禁用扩展方法枚举。\r\n            \r\n",",\r\n            which can be used to index into ":"，，，，\r\n            可以用来索引\r\n","The dynamic host object that contains the element to get.":"包含要获取元素的动态主机对象。\r\n","\r\n            Transfers the analysis data rooted from ":"\r\n            传输从根源的分析数据\r\n","s produced during this generation pass by parsing each ":"在这一代人中生产的S通过分析。\r\n","Error reading file ":"错误读取文件\r\n"," for an argument at the given ":" 在给定的论点\r\n","\r\n            Gets the receiver type for an invocation expression (i.e. type of 'A' in invocation 'A.B()')\r\n            If the invocation actually involves a conversion from A to some other type, say 'C', on which B is invoked,\r\n            then this method returns type A if ":"\r\n            获取调用表达式的接收器类型（即'in in in in Inned'A.B（）'的类型\r\n            如果调用实际上涉及从A转换为其他类型的转换，例如“ C”，则b被调用，则\r\n            然后，此方法返回类型A如果\r\n","The following example shows the use of a capturing delegate for a predicate that requires an\r\n             argument:":"以下示例显示了捕获代表的使用\r\n             争论：\r\n","\r\n            Value to whose members leading-dot-qualified references within the with body bind.\r\n            ":"\r\n            其成员在其内部领先的符合条件参考的价值与身体结合。\r\n            \r\n","\r\n            True if this is a read-only property; that is, a property with no set accessor.\r\n            ":"\r\n            如果这是只读的属性，则为thus；也就是说，没有设置访问者的属性。\r\n            \r\n"," directive that followed a hidden span\r\n            ":" 遵循隐藏跨度的指令\r\n            \r\n","\r\n            True if the parameter is passed by reference (using a managed pointer).\r\n            ":"\r\n            如果通过参考传递参数（使用托管指针）。\r\n            \r\n","\r\n            Returns null if there are no synthesized methods.\r\n            ":"\r\n            如果没有合成的方法，则返回null。\r\n            \r\n","\r\n            keyword, as appropriate.\r\n            ":"\r\n            关键字，适当。\r\n            \r\n","Invalid alias.":"无效别名。\r\n",", which is unique for each control flow graph,\r\n            with its owning ":"，对于每个控制流程图都是唯一的，\r\n            拥有它的所有\r\n","\r\n            Returns true if this method has no return type; i.e., returns \"void\".\r\n            ":"\r\n            如果此方法没有返回类型，则返回true；即，返回“无效”。\r\n            \r\n","\r\n            Gets a task that transitions to a completed state when ":"\r\n            完成一项任务，该任务在\r\n","\r\n              Looks up a localized string similar to MetadataReference '{0}' not found to remove..\r\n            ":"\r\n              查找类似于元数据的本地化字符串，找不到删除。\r\n            \r\n","\r\n            The type that will be represented by the System.Type instance.\r\n            ":"\r\n            将由System.Type实例表示的类型。\r\n            \r\n","The root of the subtree containing the nodes to be tracked.":"子树的根，其中包含要跟踪的节点。\r\n","\r\n            Writes a Decimal value to the stream.\r\n            ":"\r\n            写入流的小数值。\r\n            \r\n"," should be reported.":" 应该报告。\r\n","\r\n            Find the argument supplied for a given parameter of the target method.\r\n            ":"\r\n            找到目标方法给定参数提供的参数。\r\n            \r\n","\r\n            Gets an array of additional locations related to the diagnostic.\r\n            Typically these are the locations of other items referenced in the message.\r\n            ":"\r\n            获取与诊断相关的其他位置。\r\n            通常，这些是消息中引用的其他项目的位置。\r\n            \r\n","\r\n            Type of instrumentation that should be added to the output binary.\r\n            ":"\r\n            应添加到输出二进制的仪器类型。\r\n            \r\n"," is null, the exceptions are unhandled.\r\n            ":" 是无效的，例外是没有治疗的。\r\n            \r\n","\r\n            Gets the heap size limit in bytes.\r\n            ":"\r\n            获取字节中的堆尺寸限制。\r\n            \r\n","\r\n            Represents a compiled script that can be executed multiple times without recompilation.\r\n            ":"\r\n            表示可以多次执行的编译脚本而无需重新编译。\r\n            \r\n","\r\n              Looks up a localized string similar to No analyzers found.\r\n            ":"\r\n              查找类似于未发现分析仪的局部字符串。\r\n            \r\n","ref":"参考\r\n","\r\n            Convert a DecimalFloatingPointString to the bits of the given floating-point type.\r\n            ":"\r\n            将十进制的点链点转换为给定浮点类型的位。\r\n            \r\n","This node is associated with the following operation kinds:":"该节点与以下操作类型相关联：\r\n","\r\n            The capacity of document table. \r\n            ":"\r\n            文档表的容量。\r\n            \r\n"," that provides the results of the transformation":" 提供转换的结果\r\n","\r\n            Metadata file path or an assembly display name.\r\n            ":"\r\n            元数据文件路径或汇编显示名称。\r\n            \r\n","\r\n            Generic type arguments, including those for containing types.\r\n            ":"\r\n            通用类型参数，包括包含类型的参数。\r\n            \r\n","\r\n            Used in VB for spans inside of a ":"\r\n            在VB中用于跨度\r\n","\r\n            The definition of the method whose body this is.\r\n            If this is the body of an event or property accessor, this will hold the corresponding adder/remover/setter or getter method.\r\n            ":"\r\n            该方法的定义是其身体的定义。\r\n            如果这是事件或属性登录器的正文，则将保留相应的加法器/删除剂/启动器或Getter方法。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer Driver Failure.\r\n            ":"\r\n              查找类似于Analyzer驱动程序故障的本地化字符串。\r\n            \r\n"," is a commonly used ref-like type.\r\n            ":" 是一种常用的类型类型。\r\n            \r\n","\r\n            Creates a new node from this node with the trailing trivia removed.\r\n            ":"\r\n            从该节点中创建一个新的节点，而尾随琐事已删除。\r\n            \r\n","The \"value\" parameter for a property setter.":"属性设置器的“值”参数。\r\n","\r\n            Operand.\r\n            ":"\r\n            操作数。\r\n            \r\n","An IO error occurred while reading from the stream.":"从流中阅读时发生IO错误。\r\n","\r\n            Test to see if the specified file is excluded from tracked dependencies\r\n            ":"\r\n            测试以查看指定的文件是否被排除在跟踪依赖项之外\r\n            \r\n","\r\n            Determines whether the two specified ":"\r\n            确定两个指定\r\n","\r\n            String option to configure names of interfaces (separated by '|'), with their required generic interfaces (separated by '->').\r\n            Configurable rules: CA1010 (https://docs.microsoft.com/visualstudio/code-quality/ca1010)\r\n            Allowed interface formats:\r\n              1. Interface name only(includes all interfaces with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format with an optional \"T:\" prefix.\r\n            ":"\r\n            字符串选项以配置接口名称（由'|'分开），其必需的通用接口（由' - >'隔开）。\r\n            可配置规则：CA1010（https://docs.microsoft.com/visualstudio/code-quality/ca1010）\r\n            允许的接口格式：\r\n              1.仅接口名称（包括所有具有名称的接口，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format，带有可选的“ t：” prefix。\r\n            \r\n","\r\n            Gets the set of ranges for the change.\r\n            ":"\r\n            获取更改的范围。\r\n            \r\n"," instance with the specified script access setting and script options.\r\n            ":" 带有指定脚本访问设置和脚本选项的实例。\r\n            \r\n","\r\n            None of the trivia associated with the node or token is kept.\r\n            ":"\r\n            与节点或令牌相关的琐事都没有保留。\r\n            \r\n"," to execute analyzer actions with given arguments\r\n            ":" 用给定参数执行分析仪操作\r\n            \r\n","\r\n            Either \r\n            - null (meaning no diagnostic info and dependencies), or\r\n            - a ":"\r\n            任何一个\r\n            -NULL（无需诊断信息和依赖项）或\r\n            - 一个\r\n","\r\n            While resolving the name, consider only types following \r\n            CLS-compliant generic type names and arity encoding (ECMA-335, section 10.7.2).\r\n            I.e. arity is inferred from the name and matching type must have the same\r\n            emitted name and arity.\r\n            ":"\r\n            解决名称时，仅考虑以下类型\r\n            符合CLS的通用类型名称和Arity编码（ECMA-335，第10.7.2节）。\r\n            IE。从名称中推断出Arity，匹配类型必须具有相同的\r\n            发出的名称和arity。\r\n            \r\n","/warn:0":"/warn：0\r\n","The name of the property to get or set.":"要获取或设置的属性名称。\r\n","\r\n            Current Usage:\r\n              (1) C# variable declarator\r\n              (2) C# catch variable declaration\r\n              (3) VB single variable declaration\r\n              (4) VB catch variable declaration\r\n            ":"\r\n            当前用法：\r\n              （1）C＃变量声明器\r\n              （2）C＃捕获变量声明\r\n              （3）VB单变量声明\r\n              （4）VB捕获变量声明\r\n            \r\n","\r\n            Creates a host object of the specified type. This version is invoked if the specified\r\n            type cannot be used as a type argument.\r\n            ":"\r\n            创建指定类型的主机对象。如果指定了此版本\r\n            类型不能用作类型参数。\r\n            \r\n","\r\n            Context for a compilation start action.\r\n            A compilation start action can use a ":"\r\n            汇编启动操作的上下文。\r\n            汇编启动操作可以使用\r\n","\r\n            Current usage:\r\n             (1) C# switch expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃开关表达式。\r\n            \r\n"," structure on the left side of the inequality operator.":" 不等式操作员左侧的结构。\r\n",") was specified for the type parameter.\r\n            ":"为类型参数指定）。\r\n            \r\n","\r\n            Determines whether a sequence contains fewer than ":"\r\n            确定序列是否包含的少于\r\n","\r\n            Symbol is an Event.\r\n            ":"\r\n            符号是一个事件。\r\n            \r\n","\r\n            to all ":"\r\n            对所有人\r\n",".\r\n            4) Pragma directives for the given ":"。\r\n            4）给定的Pragma指令\r\n","\r\n            Returns the metadata kind. ":"\r\n            返回元数据。\r\n","\r\n            A list of pairs of paths. This stores the value of the command-line compiler\r\n            option /pathMap:X1=Y1;X2=Y2... which causes a prefix of X1 followed by a path\r\n            separator to be replaced by Y1 followed by a path separator, and so on for each following pair.\r\n            ":"\r\n            一对路径列表。这存储命令行编译器的值\r\n            选项 /pathmap：x1 = y1; x2 = y2 ...它导致前缀x1，然后是路径\r\n            分离器将被Y1替换，然后是一个路径分离器，依此类推，依此类推。\r\n            \r\n","\r\n            Symbol is a field.\r\n            ":"\r\n            符号是一个字段。\r\n            \r\n","\r\n            Used to devirtualize ConcurrentDictionary for EqualityComparer{T}.Default and ReferenceEquals\r\n            \r\n            This type is to enable fast-path devirtualization in the Jit. Dictionary{K, V}, HashTable{T}\r\n            and ConcurrentDictionary{K, V} will devirtualize (and potentially inline) the IEquatable{T}.Equals\r\n            method for a struct when the Comparer is unspecified in .NET Core, .NET 5; whereas specifying\r\n            a Comparer will make .Equals and GetHashcode slower interface calls.\r\n            ":"\r\n            用来使EqualityComparer {t}的同义义务devirtualize。\r\n            \r\n            这种类型是为了在JIT中启用快速path devirtualization。字典{k，v}，hashtable {t}\r\n            和contrentDictionary {k，v}将使（可能内联）defiralize {t}。\r\n            当比较中未指定的.NET CORE，.NET 5时，结构的方法；而指定\r\n            一个比较将制作.Equals和GethashCode较慢的接口调用。\r\n            \r\n","\r\n            An information that should be reported at a call site of a symbol. \r\n            ":"\r\n            应在符号的呼叫网站上报告的信息。\r\n            \r\n","If the given encoding is set to use a throwing decoder as a fallback":"如果给定的编码设置为使用投掷解码器作为后备\r\n","Namespace + type name, e.g. \"System.Exception\".":"名称空间 +类型名称，例如“ System.Exception”。\r\n","\r\n            Trim excessive inaccessible text.\r\n            ":"\r\n            修剪过多的无法访问的文本。\r\n            \r\n","\r\n            Determines source assembly identity.\r\n            ":"\r\n            确定源组件身份。\r\n            \r\n","\r\n            Returns zero or more local constant definitions that are local to the given scope.\r\n            ":"\r\n            返回给定范围本地的零或更多局部常数定义。\r\n            \r\n","The warning level, between 1 and 4 if severity is ":"警告级别，如果严重程度为1到4\r\n","\r\n             int x = 3;\r\n             RunWithPredicate(() => this.IsSomething(x));\r\n             ":"\r\n             int x = 3;\r\n             runwithPredicate（（）=> this.issomething（x））;\r\n             \r\n","\r\n              Looks up a localized string similar to Argument cannot have a null element..\r\n            ":"\r\n              查找类似于参数的本地化字符串不能具有空元素。\r\n            \r\n","\r\n            Extract a simple name of a top level child namespace from potentially qualified namespace name.\r\n            ":"\r\n            从潜在合格的名称空间名称中提取顶级儿童名称空间的简单名称。\r\n            \r\n","\r\n            A duplicate of the SymbolDisplayFormat, with an additional set of ":"\r\n            SymboldisPlayFormat的重复，还有一组\r\n","\r\n            A helper used to combine information from multiple ":"\r\n            一个用于结合多个信息信息的助手\r\n","\r\n             Any diagnostics reported while resolving missing assemblies.\r\n             ":"\r\n             在解决缺失的组件时报告的任何诊断。\r\n             \r\n","\r\n            Creates a syntax receiver input node. Only used for back compat in ":"\r\n            创建语法接收器输入节点。仅用于背部兼容\r\n","\r\n            Parse the value provided to an MSBuild Feature option into a list of entries.  This will \r\n            leave name=value in their raw form.\r\n            ":"\r\n            将提供给MSBUILD功能选项的值分析到条目列表中。这将\r\n            留下名称=其原始形式的值。\r\n            \r\n","\r\n            True when comparing a property or getter to a setter, false otherwise.\r\n            ":"\r\n            当将属性或Getter与设置器进行比较时，否则为false。\r\n            \r\n","\r\n            An object that represents a local variable or constant.\r\n            ":"\r\n            代表局部变量或常数的对象。\r\n            \r\n","\r\n            Start the process; tracking the command.  \r\n            ":"\r\n            开始过程；跟踪命令。\r\n            \r\n","\r\n            Gets a list of descendant nodes (including this node) in prefix document order.\r\n            ":"\r\n            获取前缀文档顺序中的后代节点（包括此节点）的列表。\r\n            \r\n","\r\n            Sometimes we need to know if a label is targeted by conditional branches.\r\n            For example optimizer can do optimizations of branches into outer try scopes only \r\n            if they are unconditional (because there are no conditional Leave opcodes)\r\n            ":"\r\n            有时我们需要知道标签是否是有条件分支的目标。\r\n            例如，优化器只能对分支的优化仅在外部尝试范围内进行\r\n            如果它们是无条件的（因为没有有条件的休假操作码）\r\n            \r\n","\r\n            Conversion is defined by the underlying type system and produces a null result if it fails.\r\n            ":"\r\n            转换由基础类型系统定义，如果失败，则会产生无效结果。\r\n            \r\n"," but propagates the exception.\r\n            ":" 但是传播了例外。\r\n            \r\n","\r\n            The convention for calling a generic method.\r\n            ":"\r\n            调用通用方法的约定。\r\n            \r\n"," to the corresponding index in ":" 到相应的索引\r\n","A collection of strings representing the command line arguments.":"代表命令行参数的字符串集合。\r\n","\r\n            Stack guard for ":"\r\n            堆栈后卫\r\n","\r\n            Operator method used by the operation, null if the operation does not use an operator method.\r\n            ":"\r\n            操作方法使用的操作方法为NULL，如果操作不使用操作员方法。\r\n            \r\n"," value indicates the corresponding ":" 值表示相应\r\n","\r\n            Partial analysis state for code block actions executed on the declaration.\r\n            ":"\r\n            在声明上执行的代码块操作的部分分析状态。\r\n            \r\n","\r\n            The syntax tree that this references a node within.\r\n            ":"\r\n            该引用一个节点的语法树。\r\n            \r\n","\r\n              Looks up a localized string similar to Reported diagnostic '{0}' has a source location '{1}' in file '{2}', which is outside of the given file..\r\n            ":"\r\n              查找类似于报告的诊断'{0}'具有源位置'{1}'在文件'{2}'中的局部字符串，该字符串在给定文件之外。\r\n            \r\n","Pointer types in VB":"VB中的指针类型\r\n"," is not specified.\r\n            ":" 未指定。\r\n            \r\n","\r\n            Disconnects the host event source from the script handler function.\r\n            ":"\r\n            从脚本处理程序函数中断开主机事件源。\r\n            \r\n","\r\n              Looks up a localized string similar to An error occurred while loading the included rule set file {0} - {1}.\r\n            ":"\r\n              在加载随附的规则集文件{0}  -  {1}时，查找类似于错误的本地化字符串。\r\n            \r\n","\r\n            No CandidateSymbols.\r\n            ":"\r\n            没有候选符号。\r\n            \r\n"," (i.e. with a fixed string value).\r\n            ":" （即带有固定的字符串值）。\r\n            \r\n"," \r\n            or for embedding source line numbers in error messages.\r\n            \r\n            Unlike Dev12 we do account for #line and #ExternalSource directives when determining value for \r\n            ":" \r\n            或用于将源线编号嵌入错误消息中。\r\n            \r\n            与dev12不同，我们在确定值时要考虑#line和#externalsource指令\r\n            \r\n","true if the combination of ":"如果结合在一起\r\n","\r\n            An object that represents a .NET module.\r\n            ":"\r\n            表示.NET模块的对象。\r\n            \r\n","\r\n            Creates a new SyntaxTrivia without the specified annotations.\r\n            ":"\r\n            创建一个没有指定注释的新语法。\r\n            \r\n","\r\n            The type parameter kind of this type parameter.\r\n            ":"\r\n            此类型参数的类型参数类型。\r\n            \r\n","\r\n            Gets the specified source code kind, which is the value that was specified in\r\n            the call to the constructor, or modified using the ":"\r\n            获取指定的源代码类型，这是在\r\n            调用构造函数，或使用\r\n","\r\n            Defines properties and methods common to all\r\n            ":"\r\n            定义所有人共有的属性和方法\r\n            \r\n","An object that can be used to obtain the result of the control flow analysis.":"可用于获得控制流分析结果的对象。\r\n","\r\n            Given a token for a type, return the type's name and namespace.  Only works for top level types. \r\n            namespaceHandle will be NamespaceDefinitionHandle for defs and StringHandle for refs. \r\n            ":"\r\n            给定一个类型的令牌，返回类型的名称和名称空间。仅适用于顶级类型。\r\n            命名空间Handle将是DEFS的命名pacedefinitionHandle，Refs的StringHandle将是命名。\r\n            \r\n","\r\n            Represents a block containing a sequence of operations and local declarations.\r\n            ":"\r\n            代表包含一系列操作和本地声明的块。\r\n            \r\n","IO error while reading the metadata. See ":"阅读元数据时错误。看\r\n","\r\n            A .dll file.\r\n            ":"\r\n            一个.dll文件。\r\n            \r\n","\r\n            Enables all optimizations, debugging experience might be degraded.\r\n            ":"\r\n            启用所有优化，调试经验可能会降低。\r\n            \r\n","\r\n            Gets or sets the name that script code will use to access the target type member.\r\n            ":"\r\n            获取或设置脚本代码将用于访问目标类型成员的名称。\r\n            \r\n","s as individual files, according to the editorconfig spec.\r\n            \r\n            However, when viewing the configs as an ":"根据editorConfig规格，作为单个文件。\r\n            \r\n            但是，当将配置视为一个\r\n"," to the iteration variable type.\r\n            ":" 到迭代变量类型。\r\n            \r\n"," set to specified value.\r\n            ":" 设置为指定值。\r\n            \r\n","\r\n            Returns true if this local variable is function return variable whose name is the function's name, \r\n            whose type is the return type of the function and whose initial value is the default of its type. \r\n            ":"\r\n            如果此局部变量为函数返回变量，其名称是函数的名称，则返回true，\r\n            其类型是函数的返回类型，其初始值是其类型的默认值。\r\n            \r\n","\r\n            Underlying unrolled expression.\r\n            ":"\r\n            基础展开的表达。\r\n            \r\n","\r\n            Returns the child non-terminal node representing the syntax tree structure under this structured trivia.\r\n            ":"\r\n            返回代表该结构化琐事下语法树结构的儿童非末端节点。\r\n            \r\n","If the files does not exist or cannot be accessed.":"如果文件不存在或无法访问。\r\n",", which is shared across all analyzers.\r\n            ":"，在所有分析仪中共享。\r\n            \r\n","\r\n            Gets the total heap size in bytes.\r\n            ":"\r\n            在字节中获取总堆大小。\r\n            \r\n","\r\n            Gets the cancellation token.\r\n            ":"\r\n            获取取消令牌。\r\n            \r\n","The property value if the property was found, ":"属性价值如果找到属性，\r\n","\r\n            \"call ArrayAddress\"  is equivalent of \"ldelema ElementType\" \r\n            when working with multidimensional arrays\r\n            ":"\r\n            “ Call ArrayAddress”等效于“ Ldelema ElementType”\r\n            使用多维阵列时\r\n            \r\n","\r\n            Returns a value indicating whether the specified symbol qualifies as a\r\n            member of a static holder class.\r\n            ":"\r\n            返回一个值，指示指定符号是否符合\r\n            静态持有人课程的成员。\r\n            \r\n","\r\n            Represents an assignment expression.\r\n            ":"\r\n            代表分配表达式。\r\n            \r\n","\r\n            Gets a list of the direct child tokens of this node.\r\n            ":"\r\n            获取该节点的直接子令牌的列表。\r\n            \r\n","s about an operation block.\r\n            ":"大约一个操作块。\r\n            \r\n","\r\n            Gets the merged root namespace that contains all namespaces and types defined in the modules\r\n            of this assembly. If there is just one module in this assembly, this property just returns the \r\n            GlobalNamespace of that module.\r\n            ":"\r\n            获取包含模块中定义的所有名称空间和类型的合并根名称空间\r\n            这个组装。如果此组件中只有一个模块，则此属性只会返回\r\n            该模块的全局名称空间。\r\n            \r\n"," instance associated with this symbol.\r\n            ":" 与此符号关联的实例。\r\n            \r\n","\r\n            The compiler prefers debuggability over performance. Do not use for code running in a production environment.\r\n            ":"\r\n            编译器更喜欢辩论性而不是性能。请勿用于在生产环境中运行的代码。\r\n            \r\n","\r\n            The following table lists the specific interfaces implemented by JavaScript typed arrays:\r\n            ":"\r\n            下表列出了JavaScript键入数组实现的特定接口：\r\n            \r\n"," API\r\n            and operation callbacks made to analyzers.\r\n            Null for operations inside a ":" API\r\n            和对分析仪的操作回调。\r\n            无效用于操作\r\n","\r\n            Creates a new list with the specified node added at the end.\r\n            ":"\r\n            创建一个新列表，最后添加了指定的节点。\r\n            \r\n","Indicates that invocation is a delegate invocation.":"表示调用是委托调用。\r\n","\r\n            Aggregated value content analysis data tracked by ":"\r\n            集合价值内容分析数据由\r\n","An optional context callback for the document.":"文档的可选上下文回调。\r\n",".\r\n            This will be equivalent to calling ":"。\r\n            这将等同于打电话\r\n","\r\n            Defines properties and methods common to all JavaScript\r\n            ":"\r\n            定义所有JavaScript共有的属性和方法\r\n            \r\n","\r\n            Filter out warnings based on the compiler options (/nowarn, /warn and /warnaserror) and the pragma warning directives.\r\n            'incoming' is freed.\r\n            ":"\r\n            根据编译器选项（ /Nowarn， /Warn和 /Warnaserror）和Pragma警告指令过滤警告。\r\n            “进来”被释放。\r\n            \r\n","\r\n            Type of the exception handled by the catch clause.\r\n            ":"\r\n            捕获子句处理的异常类型。\r\n            \r\n","\r\n            Base class for the ":"\r\n            基础课\r\n","\r\n            Data encoding to use if the encoded buffer doesn't start with Byte Order Mark.\r\n            ":"\r\n            如果编码的缓冲区不以字节订单标记开头，则可以使用的数据编码要使用。\r\n            \r\n","\r\n            The type of the attribute. For example System.AttributeUsageAttribute.\r\n            ":"\r\n            属性的类型。例如system.attributeusageattribute。\r\n            \r\n","Parameter of the target method.":"目标方法的参数。\r\n","\r\n            Each local has an attributes field in the PDB.  To match the native compiler,\r\n            we emit \"1\" for locals that should definitely not bind in the debugger and \"0\"\r\n            for all other locals.\r\n            ":"\r\n            每个本地在PDB中都有一个属性字段。要匹配本地编译器，\r\n            我们为当地人发出“ 1”，这些当地人绝对不应该在调试器中绑定和“ 0”\r\n            对于所有其他当地人。\r\n            \r\n","A numeric literal.":"数字文字。\r\n","\r\n            Determines whether given string can be used as a non-empty metadata identifier (a NUL-terminated UTF8 string).\r\n            ":"\r\n            确定给定的字符串是否可以用作非空的元数据标识符（NUL端接的UTF8字符串）。\r\n            \r\n","Specified values not supported.":"指定值不支持。\r\n","\r\n            No change to symbol but may contain changed symbols.\r\n            ":"\r\n            没有更改符号，但可能包含更改的符号。\r\n            \r\n"," cannot be used as a type argument. Note that this applies to\r\n            some host types; examples are static types and overloaded generic type groups.\r\n            ":" 不能用作类型参数。请注意，这适用于\r\n            一些主机类型；示例是静态类型和过载的通用类型组。\r\n            \r\n","\r\n            The location in some external file.\r\n            ":"\r\n            某些外部文件中的位置。\r\n            \r\n","\r\n            will receive a set of value providers when constructing its execution pipeline. A set of extension methods\r\n            are then used to create transforms over the data that creates the actual pipeline.\r\n            ":"\r\n            构建其执行管道时，将收到一组价值提供商。一组扩展方法\r\n            然后使用用于创建创建实际管道的数据。\r\n            \r\n","\r\n            A map capturing ":"\r\n            捕获地图\r\n","\r\n            This property is specified in bytes. When it is set to the default value, heap size\r\n            monitoring is disabled, and scripts with memory leaks or excessive memory usage\r\n            can cause unrecoverable errors and process termination.\r\n            ":"\r\n            该属性在字节中指定。设置为默认值时，堆大小\r\n            监视是禁用的，并且具有内存泄漏或过度内存使用的脚本\r\n            可能导致无法恢复的错误和过程终止。\r\n            \r\n","\r\n            The AssemblyNameFlags.\r\n            ":"\r\n            汇编名称。\r\n            \r\n","\r\n            Returns a list of method symbols from a given list of the method symbols, which has its parameter type as\r\n            expectedParameterType as its first parameter or the last parameter in addition to matching all the other \r\n            parameter types of the selectedOverload method symbol\r\n            ":"\r\n            从给定的方法符号列表中返回方法符号列表，该符号的参数类型为\r\n            除了匹配所有其他参数外\r\n            选定加载方法符号的参数类型\r\n            \r\n","s about ":"S关于\r\n"," is default(":" 是默认（\r\n","\r\n            Local variable that holds the object passed to With statement (VB). \r\n            ":"\r\n            将对象传递给语句（VB）的本地变量。\r\n            \r\n","\r\n            The input type to the pattern-matching operation.\r\n            ":"\r\n            模式匹配操作的输入类型。\r\n            \r\n","The host type (ignored).":"主机类型（忽略）。\r\n","\r\n            A reference to the method definition that has been specialized to obtain the method definition referred to by this method reference. \r\n            When the containing type of the referenced specialized method definition is itself a specialized nested type of a generic type instance, \r\n            then the unspecialized method reference refers to the corresponding method definition from the unspecialized containing type definition.\r\n            (I.e. the unspecialized method reference always refers to a method definition that is not obtained via specialization.)\r\n            ":"对已专业的方法定义的引用，以获取此方法参考的方法定义。\r\n            当包含引用的专业方法定义的类型本身是通用类型实例的专业嵌套类型时，\r\n            然后，无专门的方法参考是指未包含类型定义的相应方法定义。\r\n            （即，无专业的方法参考始终是指未通过专业获得的方法定义。）\r\n            \r\n","\r\n            The string representation of the nodes in this list including separators but not including \r\n            the first node's leading trivia and the last node or token's trailing trivia.\r\n            ":"\r\n            此列表中节点的字符串表示形式，包括分隔器，但不包括\r\n            第一个节点的领先琐事和最后一个节点或令牌的尾随琐事。\r\n            \r\n","Signature of the accessor (return type and then parameters).":"登录器的签名（返回类型，然后参数）。\r\n"," keywords before variant type parameters.\r\n            For example, \"Foo<out T>\" in C# or (Foo Of Out T\" in Visual Basic.\r\n            ":" 变体类型参数之前的关键字。\r\n            例如，在C＃或（Visual Basic中的of t of t of t of of t> foo）中的“ foo <out t>”。\r\n            \r\n"," will\r\n            perform better if they are.\r\n            ":" 将要\r\n            如果他们表现更好。\r\n            \r\n","\r\n              Looks up a localized string similar to Reported diagnostic '{0}' has a source location in file '{1}', which is not part of the compilation being analyzed..\r\n            ":"\r\n              查找类似于报告的诊断'{0}'的本地化字符串，在文件'{1}'中具有源位置，这不是要分析的汇编的一部分。\r\n            \r\n","\r\n            We should not see new anonymous types from source after we finished emit phase. \r\n            If this field is true, the collection is sealed; in DEBUG it also is used to check the assertion.\r\n            ":"\r\n            完成EMIT阶段后，我们不应该从源中看到新的匿名类型。\r\n            如果此字段为真，则将收集密封；在调试中，它也用于检查断言。\r\n            \r\n","is_global":"is_global\r\n","\r\n            Represents a reference to a member of a class, struct, or interface.\r\n            ":"\r\n            代表对类，结构或接口的成员的引用。\r\n            \r\n","\r\n            The name assigned to the Division operator.\r\n            ":"\r\n            分配给部门运营商的名称。\r\n            \r\n","\r\n            Represents the C# '%' operator and VB 'Mod' operator.\r\n            ":"\r\n            代表C＃'％'运算符和VB'mod'运算符。\r\n            \r\n","\r\n            Operand enclosed in parentheses.\r\n            ":"\r\n            括号中的操作数。\r\n            \r\n","assembly":"部件\r\n","\r\n            Represents a sequence point before translation by #line/ExternalSource directives.\r\n            ":"\r\n            代表＃线/ExternalSource指令翻译之前的序列。\r\n            \r\n","\r\n                    instead.\r\n                    ":"\r\n                    反而。\r\n                    \r\n","Intermediate directory where tracking logs will be written":"将编写跟踪日志的中间目录\r\n","\r\n            Finds a lambda in the previous generation that corresponds to the specified syntax.\r\n            The ":"在上一代中找到与指定语法相对应的lambda。\r\n            这\r\n"," (as is done in VB),\r\n            or the compiler's symbols might be wrapped to implement ISymbol (as is done in C#).\r\n            ":" （如在VB中所做的那样），\r\n            否则可以将编译器的符号包裹为实现ISYMBOL（如C＃所做的那样）。\r\n            \r\n","\r\n            Corresponds to command line argument /optimize-.\r\n            ":"\r\n            对应于命令行参数 /优化。\r\n            \r\n","\r\n            Returns true if the given basic block is the first block of a region of the given regionKind.\r\n            ":"\r\n            如果给定的基本块是给定区域的区域的第一个块，则返回true。\r\n            \r\n","\r\n            A set of strings designating experimental compiler features that are to be enabled.\r\n            ":"\r\n            一组指定将启用实验编译器功能的字符串。\r\n            \r\n","\r\n            Implementation flags.\r\n            ":"\r\n            实现标志。\r\n            \r\n","\r\n            This type abstracts away the legacy COM based signing implementation for PE streams. Under the hood\r\n            a temporary file must be created on disk (at the last possible moment), emitted to, signed on disk\r\n            and then copied back to the original ":"\r\n            此类型将PE流的基于旧版COM的签名实现抽象。在引擎盖下\r\n            必须在磁盘上（在最后的时刻）上创建一个临时文件\r\n            然后复制回原始\r\n","\r\n            Information of the conversion applied to the argument value passing it into the target method. Applicable only to VB Reference arguments.\r\n            ":"\r\n            转换的信息应用于参数值将其传递到目标方法中。仅适用于VB参考参数。\r\n            \r\n","\r\n            Initializes a new instance to the specified value.\r\n            ":"\r\n            将新实例初始化为指定值。\r\n            \r\n","\r\n            Defines options for initializing a new V8 JavaScript engine instance.\r\n            ":"\r\n            定义用于初始化新V8 JavaScript引擎实例的选项。\r\n            \r\n","\r\n            Represents a coalesce assignment operation with a target and a conditionally-evaluated value:\r\n            (1) ":"\r\n            代表具有目标和有条件评估的值的联合分配操作：\r\n            （1）\r\n","\r\n            Take a string of lines from a response file, remove comments, \r\n            and split into a set of command line arguments.\r\n            ":"\r\n            从响应文件中获取一串线，删除注释，\r\n            并分成一组命令行参数。\r\n            \r\n","Exception for invalid ruleset file.":"无效的规则集文件例外。\r\n"," is automatically generated.\r\n            ":" 自动生成。\r\n            \r\n","\r\n            The path for the oldest file we have seen\r\n            ":"\r\n            我们看到的最古老的文件的路径\r\n            \r\n","\r\n            Performs context sensitive interprocedural analysis for all source method invocations,\r\n            including lambda and location function invocations.\r\n            Context sensitive interprocedural analysis analyzes invoked method at each call site by considering the calling context,\r\n            i.e. the argument values and instance receiver, hence is the most precise analysis mode.\r\n            This mode is also the most performance intensive mode.\r\n            Note that we apply a max threshold to the length of interprocedural call chain to analyze in\r\n            a context sensitive fashion to avoid infinite computation for huge call graphs.\r\n            ":"\r\n            对所有源方法调查执行上下文敏感的概要分析，\r\n            包括lambda和位置功能调用。\r\n            上下文敏感的概解室内分析分析通过考虑呼叫上下文，在每个呼叫站点中调用的方法，\r\n            即参数值和实例接收器，因此是最精确的分析模式。\r\n            此模式也是性能最密集的模式。\r\n            请注意，我们将最大阈值应用于外聚呼叫链的长度以分析\r\n            上下文敏感的时尚，以避免用于巨大呼叫图的无限计算。\r\n            \r\n","MethodDef handle of the method to find.":"MethodDef手柄查找的方法。\r\n","The programmatic identifier (ProgID) of the JScript engine class.":"JScript引擎类的程序化标识符（ProgID）。\r\n"," (may also be relative), or null if not available.":" （也可能是相对的），或者如果不可用的话。\r\n","\r\n            Adds a fully-qualified path to the Logger for a read and written\r\n            file. Semantics are undefined after a call to\r\n            ":"\r\n            在读取和书面的记录器中添加了完全合格的路径\r\n            文件。语义是在打电话后不确定的\r\n            \r\n","\r\n              Looks up a localized string similar to Arrays with more than one dimension cannot be serialized..\r\n            ":"\r\n              查找类似于一个以上维数的数组类似的本地化字符串，无法序列化。\r\n            \r\n","\r\n                    This includes host types and other ClearScript-specific objects intended for\r\n                    script code use only. It may also include language-specific values that the\r\n                    ClearScript library does not support. \r\n                    ":"\r\n                    这包括主机类型和其他针对用于\r\n                    脚本代码仅使用。它还可能包括特定于语言的值\r\n                    ClearScript库不支持。\r\n                    \r\n","\r\n            Indicates the number of different classes that inherit from one another, all the way back to the base class.\r\n            Depth of Inheritance is similar to class coupling in that a change in a base class can affect any of its inherited classes.\r\n            The higher this number, the deeper the inheritance and the higher the potential for base class modifications to result in a breaking change.\r\n            For Depth of Inheritance, a low value is good and a high value is bad.\r\n            ":"\r\n            指示彼此继承的不同类的数量，一直返回基类。\r\n            继承深度类似于类耦合，因为基类的变化会影响其任何继承的类。\r\n            这个数字越高，继承越深，基础类修改导致破裂变化的可能性就越高。\r\n            对于继承深度，低价值是好的，高价值是坏的。\r\n            \r\n","\r\n            Gets the name associated with the script engine instance.\r\n            ":"\r\n            获取与脚本引擎实例关联的名称。\r\n            \r\n","\r\n            Flag indicating if this is a partial analysis for the corresponding ":"\r\n            标志指示这是否是相应的部分分析\r\n","Note that the operation blocks are not in any specific order.":"请注意，该操作块没有任何特定顺序。\r\n","\r\n            Indicates default in C# or Case Else in VB.\r\n            ":"\r\n            表示C＃中的默认值或VB中的其他情况。\r\n            \r\n","\r\n            This type is responsible for parsing a ruleset xml file and producing a ":"\r\n            此类型负责解析规则集XML文件并产生一个\r\n","\r\n              Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, are missing one or both of sections '.rsrc$01' and '.rsrc$02'.\r\n            ":"\r\n              查找类似于Win32资源的本地化字符串，假定为Coff对象格式，缺少一个或两个部分'.RSRC $ 01'和'.RSRC $ 02'。\r\n            \r\n","\r\n            Adds an element to the tail of the queue.  This method will throw if the queue \r\n            is completed.\r\n            ":"\r\n            在队列的尾部添加一个元素。如果队列\r\n            完成了。\r\n            \r\n","\r\n            Enumeration for common accessibility combinations.\r\n            ":"\r\n            列举共同的可访问组合。\r\n            \r\n","The array of parts.":"零件阵列。\r\n","\r\n            Information about the character boundaries of a single line of text.\r\n            ":"\r\n            有关单行文本的字符边界的信息。\r\n            \r\n","\r\n            Count of registered compilation end actions.\r\n            ":"\r\n            注册汇编最终操作的计数。\r\n            \r\n","\r\n            Attaches a pre-populated event queue to the driver and processes all events in the queue.\r\n            ":"\r\n            将预先填充的事件队列附加到驱动程序，并处理队列中的所有事件。\r\n            \r\n"," can't be represented as a compressed integer.":" 不能表示为压缩整数。\r\n","\r\n            Gets or sets an optional document context callback.\r\n            ":"\r\n            获取或设置可选文档上下文回调。\r\n            \r\n","\r\n            Adds cached retargeting symbols into the given list.\r\n            ":"\r\n            将缓存的重新定位符号添加到给定列表中。\r\n            \r\n","\r\n            Target exception type for ":"\r\n            目标异常类型\r\n","\r\n            Represents an ordered sequence of weak references.\r\n            ":"\r\n            代表弱参考的有序顺序。\r\n            \r\n","\r\n            Write the entire \"Debug Directory (Image Only)\" along with data that it points to.\r\n            ":"\r\n            写出整个“调试目录（仅图像）”以及指向的数据。\r\n            \r\n","The programmatic identifier (ProgID) of the Windows Script engine class.":"Windows脚本引擎类的程序化标识符（ProgID）。\r\n"," structure is equal to the current instance; otherwise, false.":" 结构等于当前实例。否则，错误。\r\n","\r\n            Get the paths to all files contributing rules to the ruleset from the specified file.\r\n            See also: ":"\r\n            从指定的文件中获取所有文件贡献规则的路径。\r\n            也可以看看：\r\n","Size has to be positive.":"大小必须为正。\r\n"," indices to index into the parent key.\r\n                3. \"this\" or \"Me\" instance.\r\n                4. An allocation or an object creation.\r\n            ":" 索引索引到父键。\r\n                3.“这个”或“我”实例。\r\n                4.分配或对象创建。\r\n            \r\n"," if both lists equal, else ":" 如果两个列表相等，否则\r\n","\r\n            Length of the span.\r\n            ":"\r\n            跨度的长度。\r\n            \r\n",".\r\n             This logger is responsible for closing the given stream on ":"。\r\n             该记录器负责关闭给定的流\r\n","The compilation to which the new driver should be attached.":"新驱动程序应附加的汇编。\r\n","\r\n            The candidate symbol was in a place where a variable (or sometimes, a property) was\r\n            required, but was not allowed there because it isn't a symbol that can be assigned to. \r\n            For example, the left hand side of an assignment, or a ref or out parameter.\r\n            ":"\r\n            候选符号位于变量（或有时是财产）的地方\r\n            需要，但不允许那里，因为它不是可以分配给的符号。\r\n            例如，分配的左侧或参数或输出参数。\r\n            \r\n","\r\n            Generates code that loads an element of a multidimensional array\r\n            ":"\r\n            生成加载多维数组元素的代码\r\n            \r\n","The value to use if the target is currently null.":"如果目标当前为null，则使用的值。\r\n","\r\n            True to enable high entropy virtual address space for the output binary.\r\n            ":"\r\n            为启用输出二进制的高熵虚拟地址空间。\r\n            \r\n","struct":"结构\r\n","\r\n            Names[i] is the identity of assembly Symbols[i].\r\n            Unresolved references are represented as MissingAssemblySymbols.\r\n            ":"\r\n            名称[i]是汇编符号[i]的身份。\r\n            未解决的引用表示为缺失的emblysymbols。\r\n            \r\n","\r\n            A set of files to embed in the PDB.\r\n            ":"\r\n            一组嵌入PDB的文件。\r\n            \r\n","\r\n            Represents the change to a span of text.\r\n            ":"\r\n            表示对文本跨度的更改。\r\n            \r\n","\r\n            The name of the PDB file to be embedded in the PE image, or null to use the default.\r\n            ":"\r\n            PDB文件的名称要嵌入PE映像中，或用于使用默认值的null。\r\n            \r\n","Queue of TypeSymbols (representing typeRefs to search).":"typesymbols的队列（代表要搜索的Typerefs）。\r\n","Pointer to the DOS header (\"MZ\") of a portable executable image.":"指向便携式可执行映像的DOS标头（“ MZ”）。\r\n","\r\n            Dependencies are identified by simply checking the name of an assembly\r\n            reference against a file name; if they match the file is considered a\r\n            dependency. Other factors, such as version, culture, public key, etc., \r\n            are not considered, and so the returned collection may include items that\r\n            cannot in fact satisfy the original assembly's dependencies.\r\n            ":"\r\n            通过简单地检查组件的名称来确定依赖关系\r\n            针对文件名的引用；如果它们匹配文件\r\n            依赖性。其他因素，例如版本，文化，公钥等\r\n            不考虑，因此返回的收集可能包括\r\n            实际上，无法满足原始大会的依赖性。\r\n            \r\n","\r\n            Initializes a new JScript engine instance.\r\n            ":"\r\n            初始化新的JScript引擎实例。\r\n            \r\n","\r\n            This method allows generators to be 'syntax aware'. Before each generation the ":"\r\n            此方法允许发电机“语法意识”。在每一代之前\r\n","\r\n            Current usage:\r\n             (1) C# default clause.\r\n             (2) VB Case Else clause.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃默认子句。\r\n             （2）VB案例其他条款。\r\n            \r\n","The flags to include in the flag set.":"将标志包含在标志集中的标志。\r\n","One or more indices that identify the element to remove.":"一个或多个索引识别要删除的元素。\r\n","\r\n            Locates a namespace within a host type collection.\r\n            ":"\r\n            在主机类型集合中找到名称空间。\r\n            \r\n","\r\n            are to be enabled. This is an experimental feature and may be removed in a future release.\r\n            ":"\r\n            将启用。这是一个实验功能，可以在以后的版本中删除。\r\n            \r\n","\r\n            Insert the given value into the set.\r\n            ":"\r\n            将给定值插入集合。\r\n            \r\n","\r\n            Represents a point of use of an intermediate result captured earlier.\r\n            The fact of capturing the result is represented by ":"\r\n            表示前面捕获的中间结果的使用点。\r\n            捕获结果的事实由\r\n","The new references.":"新参考。\r\n","The name that script code will use to access the target type member.":"脚本代码的名称将用于访问目标类型成员。\r\n","\r\n            Region representing the initialization for a VB ":"\r\n            代表VB初始化的区域\r\n","Full assembly display name.":"完整的组装显示名称。\r\n","The old tree.":"老树。\r\n","\r\n            Returns a new INamedTypeSymbol with the given underlying type and\r\n            (optional) element names, locations, and nullable annotations.\r\n            The underlying type needs to be tuple-compatible.\r\n            ":"\r\n            返回具有给定类型的新型InamedTypeSymbol，并且\r\n            （可选）元素名称，位置和无效注释。\r\n            基础类型需要兼容元组。\r\n            \r\n"," containing the text to check.\r\n            ":" 包含文本检查。\r\n            \r\n","\r\n            var RandomT = host.type(\"System.Random\");\r\n            var random = host.newObj(RandomT, 100);\r\n            var value = random.NextDouble();\r\n            ":"\r\n            var randomt = host.type（“ system.random”）;\r\n            var random = host.newobj（Randomt，100）;\r\n            var value = random.nextdouble（）;\r\n            \r\n","\r\n            Arguments of the invocation, excluding the instance argument. Arguments are in evaluation order.\r\n            ":"\r\n            调用的参数，不包括实例参数。争论处于评估顺序。\r\n            \r\n","The source path to normalize. May be absolute or relative.":"正常化的源路径。可能是绝对的或相对的。\r\n","\r\n            Appears when there are dynamic locals.\r\n            Exposed for ":"\r\n            当有动态当地人时出现。\r\n            暴露于\r\n","\r\n            The following code creates a \r\n            ":"\r\n            以下代码创建一个\r\n            \r\n","\r\n            Array of unique bound #r references.\r\n            ":"\r\n            唯一绑定#r引用的数组。\r\n            \r\n","\r\n            Condition of the loop. This can only be null in error scenarios.\r\n            ":"\r\n            循环的条件。这只能在错误方案中无效。\r\n            \r\n","Justification for the suppression. For example: \"Suppress CS0649 on fields marked with YYY attribute as they are implicitly assigned.\".":"抑制的理由。例如：“抑制CS0649在带有YYY属性的字段上被隐式分配。”。\r\n","\r\n            This function uses a ":"\r\n            此功能使用\r\n"," will delay the creation\r\n            of the PE / PDB file until the compiler determines the compilation has succeeded.  This prevents\r\n            the compiler from deleting output from the previous compilation when a new compilation \r\n            fails.\r\n            ":" 会延迟创作\r\n            PE / PDB文件直到编译器确定编译成功。这可以防止\r\n            新汇编时，从上次汇编中删除输出的编译器\r\n            失败。\r\n            \r\n"," to actions from this instance.\r\n            ":" 从此实例中的动作。\r\n            \r\n","\r\n            Kind of argument.\r\n            ":"\r\n            有点论点。\r\n            \r\n","returns ":"返回\r\n","Bag to which filtered diagnostics will be added.":"将添加过滤后的诊断袋。\r\n","\r\n            Combines a value, ":"\r\n            结合一个值，\r\n","\r\n            The flags that indicate the attributes of the file. \r\n            ":"\r\n            指示文件属性的标志。\r\n            \r\n","The offset to start copying from.":"开始复制的偏移。\r\n"," in the compiler layer, as this does not introduce allocations.\r\n            ":" 在编译器层中，因为这不会引入分配。\r\n            \r\n"," is believed to be the add method of a collection.":" 被认为是集合的添加方法。\r\n","\r\n            Read a UTF-8 encoded file and return the text as a string.\r\n            ":"\r\n            读取一个UTF-8编码文件，然后将文本返回为字符串。\r\n            \r\n","\r\n            Returns true if the given basic block is the first block of a finally region.\r\n            ":"\r\n            如果给定的基本块是最后一个区域的第一个块，则返回true。\r\n            \r\n","\r\n            Clauses of the case. For C# there is one clause per case, but for VB there can be multiple.\r\n            ":"\r\n            案件的条款。对于C＃，每个情况有一个子句，但是对于VB，可能有多个子句。\r\n            \r\n","This object disposes the elements of ":"此对象处置了\r\n",", and a flag, ":"和一个旗帜，\r\n","\r\n            Represents a C# case or VB Case statement.\r\n            ":"\r\n            代表C＃案例或VB案例语句。\r\n            \r\n","\r\n            Value to be awaited.\r\n            ":"\r\n            值得期待的价值。\r\n            \r\n","\r\n            Return the 1-based index of the module reference, adding\r\n            the reference to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回模块参考的1基索引，添加\r\n            如果丢失了这一代的索引的引用。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","s about the model.\r\n            ":"关于模型的s。\r\n            \r\n","\r\n            A symbol is a static holder type if it is a class with at least one\r\n            \"qualifying member\" (":"\r\n            符号是静态支架类型，如果它是至少一个类\r\n            “合格成员”（\r\n","[i].\r\n            ":"[一世]。\r\n            \r\n","\r\n            Determines whether references are the same. Compilation references are the same if they refer to the same compilation.\r\n            Otherwise, references are represented by their object identities.\r\n            ":"\r\n            确定参考是否相同。如果汇编引用是指相同的汇编，则相同。\r\n            否则，引用由其对象身份表示。\r\n            \r\n","\r\n            Imports a COM/ActiveX type.\r\n            ":"导入com/activex类型。\r\n            \r\n","\r\n            If the compilation being built represents an assembly its assembly name.\r\n            If the compilation being built represents a module, the name of the \r\n            containing assembly or ":"\r\n            如果要构建的汇编代表一个组件，其组件名称。\r\n            如果构建的汇编代表一个模块，则\r\n            包含组件或\r\n","\r\n            Gets the type of the parameter.\r\n            ":"\r\n            获取参数的类型。\r\n            \r\n","\r\n            Maps an immutable array through a function that returns ValueTasks, returning the new ImmutableArray.\r\n            ":"\r\n            通过返回valueTasks的函数映射一个不变的数组，返回新的ImmutableArray。\r\n            \r\n","The name of the server on which to create the object.":"创建对象的服务器的名称。\r\n","(s) to other basic block(s).\r\n            ":"（s）到其他基本块。\r\n            \r\n","\r\n            Information about a metadata reference.\r\n            ":"\r\n            有关元数据参考的信息。\r\n            \r\n","\r\n            A scope for an entire exception handler (a try block with either several\r\n            catches or a finally block). Unlike other scopes, this scope contains\r\n            nested scopes only, no IL blocks (although nested ExceptionHandlerScopes\r\n            for the clauses will contain IL blocks).\r\n            ":"\r\n            整个异常处理程序的范围（有几个的尝试块\r\n            捕获或最终阻止）。与其他范围不同，此范围包含\r\n            仅嵌套示波器，没有IL块（尽管嵌套了异常障碍物\r\n            对于条款，将包含IL块）。\r\n            \r\n","The node or token to search for in the list.":"节点或令牌要在列表中搜索。\r\n","A script function that invokes one or more host methods or properties.":"调用一种或多种主机方法或属性的脚本函数。\r\n","\r\n            Initialized fields. There can be multiple fields for Visual Basic fields declared with AsNew clause.\r\n            ":"\r\n            初始化字段。使用ASNEW子句声明的视觉基本字段可以有多个字段。\r\n            \r\n","\r\n            Gets the primary location of the diagnostic, or ":"\r\n            获取诊断的主要位置，或\r\n","The task to convert to a promise.":"转换为承诺的任务。\r\n","\r\n            Converts a\r\n            ":"\r\n            转换a\r\n            \r\n","False to close the stream upon disposal of the metadata.":"错误地关闭元数据时关闭溪流。\r\n","If any changes are not in bounds of this ":"如果没有任何更改的范围\r\n","A short localizable title describing the diagnostic. For example, for CA1001: \"Types that own disposable fields should be disposable\".":"一个简短的可本质标题，描述了诊断。例如，对于CA1001：“拥有一次性字段的类型应该是一次性的”。\r\n"," and doesn't pass the exception through (the method returns true).\r\n            This is generally expected to be used within an exception filter as that allows us to\r\n            capture data at the point the exception is thrown rather than when it is handled.\r\n            However, it can also be used outside of an exception filter. If the exception has not\r\n            already been thrown the method will throw and catch it itself to ensure we get a useful\r\n            stack trace.\r\n            ":" 并且不会通过异常（方法返回true）。\r\n            通常期望在异常过滤器中使用它，因为这使我们能够\r\n            捕获数据，而不是在处理时抛出异常。\r\n            但是，它也可以在异常过滤器之外使用。如果例外没有\r\n            已经被抛出了该方法将抛弃并捕捉它，以确保我们获得有用\r\n            堆栈跟踪。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# event reference expression.\r\n             (2) VB event reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃事件参考表达式。\r\n             （2）VB事件参考表达式。\r\n            \r\n","IsCompleted":"完成了\r\n","\r\n            An object specifying additional parameters for how generic symbols will be formatted.\r\n            ":"\r\n            指定对通用符号格式的其他参数的对象。\r\n            \r\n","\r\n            The size of the storage representation of the text (in characters).\r\n            This can differ from length when storage buffers are reused to represent fragments/subtext.\r\n            ":"\r\n            文本的存储表示大小（以字符为单位）。\r\n            重复使用存储缓冲以表示片段/潜台词时，这可能与长度有所不同。\r\n            \r\n","The specified object in its static type form, stripped of its dynamic members.":"指定的对象以其静态类型形式，剥离了动态成员。\r\n","\r\n            In C#, this will always be a single declaration, with all variables in ":"\r\n            在C＃中，这将永远是单个声明，所有变量都在\r\n","\r\n            \r\n            Note: The early cancellation behavior is intentional.\r\n            ":"\r\n            \r\n            注意：早期取消行为是有意的。\r\n            \r\n","\r\n            Used for logging compiler diagnostics to a stream in the unstandardized SARIF\r\n            (Static Analysis Results Interchange Format) v1.0.0 format.\r\n            https://github.com/sarif-standard/sarif-spec\r\n            https://rawgit.com/sarif-standard/sarif-spec/main/Static%20Analysis%20Results%20Interchange%20Format%20(SARIF).html\r\n            ":"\r\n            用于记录编译器诊断到非标准化的Sarif中的流\r\n            （静态分析结果互换格式）v1.0.0格式。\r\n            https://github.com/sarif-standard/sarif-pec\r\n            https://rawgit.com/sarif-standard/sarif-pec/main/static%20analissis%20Results%20 Interchange%20Format%20Format%20(Sarif).html\r\n            \r\n"," is used to resolve protected access for instance members. All symbols are\r\n            required to be from this compilation or some assembly referenced (":" 用于解决受保护的访问的示例。所有符号都是\r\n            要求来自此汇编或引用的一些集会（\r\n","\r\n            Set method used to initialize the property.\r\n            ":"\r\n            设置方法用于初始化属性。\r\n            \r\n","\r\n            Determines how types are qualified (e.g. Nested vs Containing.Nested vs Namespace.Containing.Nested).\r\n            ":"\r\n            确定类型是如何合格的（例如，嵌套与包含的nested vs namespace。\r\n            \r\n","\r\n            Encoding of the file that the text was read from or is going to be saved to.\r\n            ":"\r\n            从读取或将保存到文本的文件编码。\r\n            \r\n","The dependency table to be cached":"依赖表被缓存\r\n","\r\n            Cache descriptors for each diagnostic analyzer. We do this since ":"\r\n            每个诊断分析仪的缓存描述符。我们这样做是\r\n"," used to access the three described known types.":" 用于访问三种已知类型。\r\n","Interop types can't be embedded from modules.":"Interop类型不能从模块中嵌入。\r\n"," depending on the\r\n            conversion context, in which the tuple is used. \r\n            ":" 取决于\r\n            转换上下文，其中使用元组。\r\n            \r\n","The FNV-1a hash code of the character.":"字符的FNV-1A哈希代码。\r\n"," if this is a postfix expression. ":" 如果这是后缀表达式。\r\n","\r\n            An optional delegate to be invoked when an analyzer throws an exception.\r\n            ":"当分析仪抛出异常时，要调用的可选代表。\r\n            \r\n","\r\n            for schema details.\r\n            ":"\r\n            有关模式的详细信息。\r\n            \r\n","\r\n            Absolute path of the .ruleset file or null if not specified.\r\n            ":"\r\n            .ruleset文件或null的绝对路径（如果未指定）。\r\n            \r\n","\r\n            This is how VB Anonymous Types combine hash values for fields.\r\n            PERF: Do not use with enum types because that involves multiple\r\n            unnecessary boxing operations.  Unfortunately, we can't constrain\r\n            T to \"non-enum\", so we'll use a more restrictive constraint.\r\n            ":"\r\n            这就是VB匿名类型结合字段的哈希值的方式。\r\n            perf：不要与枚举类型一起使用，因为这涉及多个\r\n            不必要的拳击操作。不幸的是，我们不能约束\r\n            t到“非元素”，因此我们将使用更限制的约束。\r\n            \r\n","\r\n            Creates a new options instance with the specified platform.\r\n            ":"\r\n            使用指定平台创建一个新的选项实例。\r\n            \r\n"," is not one or more of the ":" 不是一个或多个\r\n","\r\n            Represents an instance of the V8 runtime.\r\n            ":"\r\n            表示V8运行时的实例。\r\n            \r\n","\r\n            Enumerates files in the specified directory and subdirectories whose name matches the given pattern.\r\n            ":"\r\n            在指定目录和子目录中列举文件匹配给定模式的文件。\r\n            \r\n","\r\n            Gets whether this editorconfig is a global editorconfig.\r\n            ":"\r\n            了解此EditorConfig是否是全局EditorConfig。\r\n            \r\n","\r\n            The original value as specified by ":"\r\n            指定的原始值\r\n"," as a byte array or null if the stream can't easily\r\n            be read into a byte array.\r\n            ":" 如果流不容易\r\n            被阅读到字节阵列中。\r\n            \r\n","\r\n            The language for which this resource is appropriate.\r\n            ":"\r\n            此资源适当的语言。\r\n            \r\n"," instances tracked by ":" 跟踪的实例\r\n","The portable executable image beginning with the DOS header (\"MZ\").":"便携式可执行文件以DOS标头（“ MZ”）开头。\r\n","\r\n            Variables declared by the declaration.\r\n            ":"\r\n            声明声明的变量。\r\n            \r\n","\r\n            Represents an interpolated string.\r\n            ":"\r\n            表示一个插值字符串。\r\n            \r\n","\r\n            Helper method for enqueuing a type token in the right queue.\r\n            Def -> typeDefsToSearch\r\n            Ref -> typeSymbolsToSearch\r\n            null -> neither\r\n            ":"\r\n            助手方法用于在右队列中加入类型令牌。\r\n            def-> typedefstosearch\r\n            参考 - > typesymbolstosearch\r\n            null->都不\r\n            \r\n",".\r\n            It contains the set of possible ":"。\r\n            它包含一组可能的\r\n","\r\n            Represents a set of filtered diagnostic severities.\r\n            Currently, we only support filtering out Hidden and Info severities during build.\r\n            ":"\r\n            代表一组过滤的诊断严重程度。\r\n            目前，我们仅支持在构建过程中过滤隐藏和信息严重性。\r\n            \r\n","\r\n            This is called when starting emitting a method for which there is some source.\r\n            It is done in case the first sequence point is a hidden point.\r\n            Even though hidden points do not have syntax, they need to associate with some document.\r\n            ":"\r\n            在开始发出某种来源的方法时，这就是称为。\r\n            如果第一个序列点是隐藏点，则完成。\r\n            即使隐藏点没有语法，他们也需要与某些文档相关联。\r\n            \r\n","\r\n            Gets a string representation of the script call stack.\r\n            ":"\r\n            获取脚本调用堆栈的字符串表示。\r\n            \r\n","\r\n            True if the method has an external implementation (i.e. not supplied by this definition).\r\n            ":"\r\n            如果该方法具有外部实现（即此定义不提供），则为true。\r\n            \r\n","\r\n            Provides the core implementation for all Windows Script engines.\r\n            ":"\r\n            为所有Windows脚本引擎提供核心实现。\r\n            \r\n","\r\n            Checks whether signatures match where the signatures are either from a property\r\n            and an accessor or two accessors. When comparing a property or getter to setter, the\r\n            setter signature must be the second argument and 'comparingToSetter' must be true.\r\n            ":"\r\n            检查签名是否匹配签名来自属性的位置\r\n            和一个或两个登录器。比较属性或Getter与Setter时\r\n            Setter签名必须是第二个参数，并且“比较tosetter”必须为真。\r\n            \r\n","\r\n            Created to capture the limit value of a VB for loop.\r\n            ":"\r\n            为捕获循环的VB的限值而创建。\r\n            \r\n","\r\n            Advances the enumerator to the next token in the collection.\r\n            ":"\r\n            将枚举者推进到该集合中的下一个令牌。\r\n            \r\n","\r\n              Looks up a localized string similar to Programmatic suppression of an analyzer diagnostic.\r\n            ":"\r\n              查找类似于对分析仪诊断的程序化抑制类似的局部字符串。\r\n            \r\n","\r\n            Gets the well-known optional named properties on ObsoleteAttribute, if present.\r\n            Both 'diagnosticId' and 'urlFormat' may be present, or only one, or neither.\r\n            ":"\r\n            如果存在，请在OmpoleTeatTribute上获取众所周知的可选属性。\r\n            “诊断”和“ urlformat”都可能存在，或者只有一个或两者。\r\n            \r\n","\r\n            The following code casts a floating-point value to a 32-bit integer.\r\n            It assumes that an instance of ":"\r\n            以下代码将浮点值投入到32位整数。\r\n            它假设一个实例\r\n","\r\n            This function creates a delegate that accepts ":"\r\n            此功能创建一个接受的委托\r\n","\r\n            Decode text from a stream.\r\n            ":"\r\n            从流中解码文本。\r\n            \r\n","Current":"当前的\r\n","\r\n            The initializer of this node is applied to all individual declarations in ":"\r\n            该节点的初始化程序应用于所有单独声明\r\n","\r\n            Defines a local variable.\r\n            ":"\r\n            定义局部变量。\r\n            \r\n","\r\n            to a ":"\r\n            到\r\n","\r\n            Optional fall through branch executed at the end of the basic block.\r\n            This branch is null for exit block, and non-null for all other basic blocks.\r\n            ":"\r\n            可选的跌落通过基本块末尾执行的分支。\r\n            该分支为出口块为null，对于所有其他基本块而非无效。\r\n            \r\n","\r\n            Load the message for the given error code. If the message contains\r\n            \"fill-in\" placeholders, those should be expressed in standard string.Format notation\r\n            and be in the string.\r\n            ":"加载给定错误代码的消息。如果消息包含\r\n            “填充”占位符，应在标准字符串中表达。\r\n            并在字符串中。\r\n            \r\n"," if the spans overlap, otherwise ":" 如果跨越重叠，则\r\n","\r\n            Returns the first trivia in the list.\r\n            ":"\r\n            返回列表中的第一个琐事。\r\n            \r\n","\r\n            Marks the end of filter condition and start of the actual filter handler.\r\n            ":"\r\n            标记过滤条件的末端和实际过滤器处理程序的启动。\r\n            \r\n","\r\n            The list of trivia that appears before this node in the source code and are attached to a token that is a\r\n            descendant of this node.\r\n            ":"\r\n            源代码中此节点之前出现的琐事列表，并将其附加到令牌上\r\n            该节点的后代。\r\n            \r\n"," except it will not\r\n            throw if the queue is already completed.\r\n            ":" 除了不会\r\n            如果队列已经完成，请投掷。\r\n            \r\n","Stream to which the metadata-only output will be written.":"流将写入仅元数据的流。\r\n","\r\n            Return startLineBreak = index-1, lengthLineBreak = 2   if there is a \\r\\n at index-1\r\n            Return startLineBreak = index,   lengthLineBreak = 1   if there is a 1-char newline at index\r\n            Return startLineBreak = index+1, lengthLineBreak = 0   if there is no newline at index.\r\n            ":"返回startline break = index-1，lenthline break = 2如果在index-1处有\\ r \\ n\r\n            返回startline break = index，lenthline break = 1，如果有1个字符的索引\r\n            返回startline break = index+1，lenthline break = 0，如果索引没有新线。\r\n            \r\n","\r\n            Underlying unrolled operation.\r\n            ":"\r\n            基础展开的操作。\r\n            \r\n","\r\n            Resolves specified path with respect to base file path.\r\n            ":"\r\n            解决基本文件路径的指定路径。\r\n            \r\n","It is advised to avoid the use of this API within the compilers, as the compilers have additional\r\n            requirements for access checking that are not satisfied by this implementation, including the\r\n            avoidance of infinite recursion that could result from the use of the ISymbol APIs here, the detection\r\n            of use-site diagnostics, and additional returned details (from the compiler's internal APIs) that are\r\n            helpful for more precisely diagnosing reasons for accessibility failure.":"建议避免在编译器中使用此API，因为编译器还有其他\r\n            该实现不满足的访问检查要求，包括\r\n            避免在此处使用ISYMBOL API所产生的无限递归，检测\r\n            用用点诊断和其他返回的详细信息（来自编译器的内部API）\r\n            有助于更精确地诊断出可访问性故障的原因。\r\n","\r\n            A subset of ":"\r\n            一个子集\r\n","\r\n            Read a String value from the stream. This value must have been written using ObjectWriter.WriteString.\r\n            ":"\r\n            从流中读取字符串值。该值必须使用objectwriter.writestring编写。\r\n            \r\n","Semantic model for the syntax tree containing the ":"包含语法树的语义模型\r\n"," is wrapping a\r\n            token.\r\n            ":" 正在包装\r\n            令牌。\r\n            \r\n","\r\n            COR library symbol, or null if the compilation itself is the COR library.\r\n            ":"\r\n            COR库符号或null如果汇编本身是COR库。\r\n            \r\n","\r\n            Adds selected types from an assembly to a host type collection. The assembly is\r\n            specified by name.\r\n            ":"\r\n            从汇编中添加选定的类型到主机类型集合。组件是\r\n            按名称指定。\r\n            \r\n","\r\n            Option to configure whether copy analysis should be executed during dataflow analysis.\r\n            Copy analysis tracks value and reference copies. For example,\r\n            ":"\r\n            选项以配置在数据流分析期间是否应执行复制分析。\r\n            复制分析跟踪价值和参考副本。例如，\r\n            \r\n","The name of an event.":"事件的名称。\r\n","\r\n            Indicates if control flow can reach this basic block from the entry block of the graph.\r\n            ":"\r\n            指示控制流是否可以从图表的入口块到达此基本块。\r\n            \r\n","\r\n            Executes the symbol actions on the given symbol.\r\n            ":"\r\n            在给定符号上执行符号操作。\r\n            \r\n","The dynamic host object that contains the property to set.":"包含要设置的属性的动态主机对象。\r\n","\r\n            If set, the module must include a machine code stub that transfers control to the virtual execution system.\r\n            ":"\r\n            如果设置，则该模块必须包括将控件传输到虚拟执行系统的机器代码存根。\r\n            \r\n","\r\n            \"call ArraySet\"  is equivalent of \"stelem ElementType\" \r\n            when working with multidimensional arrays\r\n            ":"\r\n            “ Call Arrayset”等效于“ Stelem ElementType”\r\n            使用多维阵列时\r\n            \r\n","\r\n            Filename that indicates this file is a user provided global config\r\n            ":"\r\n            指示此文件的文件名提供了全局配置\r\n            \r\n",". Note that this may return a position off the end\r\n            of the array if all elements are less than or equal to ":"。请注意，这可能会返回末端\r\n            数组的所有元素小于或等于\r\n","\r\n            Primary method for emitting string switch jump table\r\n            ":"\r\n            发射字符串开关跳台的主要方法\r\n            \r\n"," that can provide a transform over ":" 可以提供转变\r\n","The symbol of an operator (e.g. \"+\").":"操作员的符号（例如“+”）。\r\n","\r\n            Sets a property value in a dynamic host object that implements ":"\r\n            在动态主机对象中设置属性值\r\n","A new array containing a copy of the typed array's contents.":"一个包含键入数组内容的副本的新数组。\r\n","\r\n            F# is not a supported compile target for the Roslyn compiler.\r\n            ":"\r\n            F＃不是Roslyn编译器的受支持的编译目标。\r\n            \r\n"," contain ":" 包含\r\n","\r\n            Represents a default case clause.\r\n            ":"\r\n            表示默认情况子句。\r\n            \r\n","Return type can't be a value type, pointer, by-ref or open generic type":"返回类型不能是值类型，指针，by-ref或开放式通用类型\r\n","Invalid content type":"无效的内容类型\r\n","\r\n            While resolving the name, consider only types following \r\n            CLS-compliant generic type names and arity encoding (ECMA-335, section 10.7.2).\r\n            I.e. arity is inferred from the name and matching type must have the same\r\n            emitted name and arity.\r\n            TODO: PERF: Encode this field elsewhere to save 4 bytes\r\n            ":"\r\n            解决名称时，仅考虑以下类型\r\n            符合CLS的通用类型名称和Arity编码（ECMA-335，第10.7.2节）。\r\n            IE。从名称中推断出Arity，匹配类型必须具有相同的\r\n            发出的名称和arity。\r\n            todo：perf：在其他地方编码此字段以保存4个字节\r\n            \r\n"," method used in a ForEach-await statement.\r\n            ":" for-wait语句中使用的方法。\r\n            \r\n","\r\n            Determines if the specified node is a descendant of this node.\r\n            ":"\r\n            确定指定节点是否是该节点的后代。\r\n            \r\n","\r\n            Remove the extraneous quotes and slashes from the argument.  This function is designed to have\r\n            compat behavior with the native compiler.\r\n            ":"\r\n            从参数中删除无关的引号和斜线。此功能设计为\r\n            与天然编译器的组合行为。\r\n            \r\n","The argument to pass to the unbound action delegate.":"传递未结合行动代表的论点。\r\n","\r\n            C# extern alias.\r\n            ":"\r\n            c＃extern别名。\r\n            \r\n","The node that represents the namespace if it was found, ":"表示名称空间的节点，如果发现了名称空间，\r\n"," to add to the compilation":" 添加到汇编\r\n","\r\n            The PE file is a module.\r\n            ":"\r\n            PE文件是一个模块。\r\n            \r\n","\r\n            Specifies how to display extension methods.\r\n            ":"\r\n            指定如何显示扩展方法。\r\n            \r\n","\r\n            Current usage:\r\n             (1) VB End Statement.\r\n            ":"\r\n            当前用法：\r\n             （1）VB END语句。\r\n            \r\n",", not both.\r\n            ":"， 不是都。\r\n            \r\n"," cannot be specified for an the argument in VB.\r\n            ":" 不能为VB中的参数指定。\r\n            \r\n","\r\n            Reprsents an empty or no-op operation.\r\n            ":"\r\n            代表空的或无操作操作。\r\n            \r\n"," is equal to this\r\n            ":" 等于这个\r\n            \r\n","\r\n            This is an opaque type that cannot be used directly. Instead an ":"\r\n            这是不可直接使用的不透明类型。而是\r\n","\r\n            Gets a value indicating whether the symbol is an override of a base class symbol.\r\n            ":"\r\n            获取一个值，指示该符号是否是基类符号的覆盖。\r\n            \r\n","List of outputs to populate":"填充的输出列表\r\n","The node or token that spans the given position.":"跨越给定位置的节点或令牌。\r\n","\r\n            Convenience constructor to initialize fields of this structure.\r\n            ":"\r\n            便利构造函数初始化此结构的字段。\r\n            \r\n"," structure with the specified document URI.\r\n            ":"带有指定文档URI的结构。\r\n            \r\n","\r\n            Creates a new V8 script engine instance with the specified name and options.\r\n            ":"使用指定名称和选项创建一个新的V8脚本引擎实例。\r\n            \r\n","\r\n            We parse all ":"\r\n            我们要解析\r\n"," is populated or when every state of ":" 被人口组成或每个状态\r\n","\r\n            This implementation uses a binary search to find the first slot that contains\r\n            the given offset.\r\n            ":"\r\n            该实现使用二进制搜索来查找包含的第一个插槽\r\n            给定偏移。\r\n            \r\n","The corresponding MethodSymbol or null.":"相应的方法符号或null。\r\n","\r\n            A loaded document must have an absolute ":"\r\n            加载文档必须具有绝对\r\n","The script access setting for the target type member.":"目标类型成员的脚本访问设置。\r\n",".\r\n            To determine if this is a warning treated as an error, use ":"。\r\n            要确定这是否是被视为错误的警告，请使用\r\n","\r\n            Used for file names, module names, and module ref names.\r\n            \r\n            See CLI Part II, section 22.\r\n            ":"\r\n            用于文件名，模块名称和模块REF名称。\r\n            \r\n            参见CLI第二部分，第22节。\r\n            \r\n","Path returned by {0}.ResolveMetadataFile must be absolute: '{1}'":"{0}返回的路径。resolvemetadatafile必须是绝对的：'{1}'\r\n","\r\n            Called for each ":"\r\n            每个人都要求\r\n","The XML node that contains the attribute":"包含属性的XML节点\r\n"," host":" 主持人\r\n"," in two ways:\r\n            1. It attempts to minimize allocations by trying to read the stream into a byte array.\r\n            2. If ":" 通过两种方式：\r\n            1.它试图通过尝试将流读取为字节数组来最大程度地减少分配。\r\n            2.如果\r\n"," with do1, do2, and\r\n                 do3 as their arguments.\r\n             (3) VB late bound invocation expression.\r\n             (4) VB dynamic collection element initializer.\r\n                 Similar to the C# example, ":" 与do1，do2和\r\n                 do3作为他们的论点。\r\n             （3）VB晚期调用表达式。\r\n             （4）VB动态集合元素初始化器。\r\n                 类似于C＃示例，\r\n","\r\n            Gets the text before the change.\r\n            ":"\r\n            在更改之前获取文本。\r\n            \r\n","s associated with this state.\r\n            ":"S与此状态相关。\r\n            \r\n","\r\n            Condition to be tested.\r\n            ":"\r\n            要测试的条件。\r\n            \r\n","\r\n            Creates a host array with ":"\r\n            使用\r\n","\r\n            Core method for executing analyzers.\r\n            ":"\r\n            执行分析仪的核心方法。\r\n            \r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible.\r\n            \r\n            Non-reduced extension methods are considered, but reduced extension methods are not.\r\n            ":"\r\n            “位置”用于确定哪些变量可见和可访问。\r\n            \r\n            考虑了未还原的扩展方法，但不进行减少的扩展方法。\r\n            \r\n"," if the calling thread has access to the current script engine, ":" 如果调用线程可以访问当前脚本引擎，\r\n","\r\n            This attribute is applicable to events, fields, methods, properties, and nested types.\r\n            ":"\r\n            此属性适用于事件，字段，方法，属性和嵌套类型。\r\n            \r\n","\r\n            Checks if a given symbol implements an interface member explicitly\r\n            ":"\r\n            检查给定符号是否明确实现接口成员\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# \"new\" expression with dynamic argument(s).\r\n             (2) VB late bound \"New\" expression.\r\n            ":"\r\n            当前用法：\r\n             （1）带有动态参数的C＃“新”表达式。\r\n             （2）vb后期绑定的“新”表达式。\r\n            \r\n","\r\n            Removes all properties without checking whether the ":"\r\n            删除所有属性，而无需检查是否是否\r\n","\r\n            Returns true if signature matches signature of the method.\r\n            Signature should be in format described in MemberDescriptor.\r\n            ":"\r\n            如果签名与该方法的签名匹配，则返回true。\r\n            签名应以成员描述符中描述的格式。\r\n            \r\n","\r\n            An ImmutableArray representing the single string \"System\"\r\n            ":"\r\n            代表单字符串“系统”的immutablearray\r\n            \r\n","\r\n            Imports types from one or more host assemblies.\r\n            ":"\r\n            从一个或多个主机组件中导入类型。\r\n            \r\n","\r\n            object to access them.\r\n            ":"\r\n            对象访问它们。\r\n            \r\n","\r\n            Gets a node at given node index without forcing its creation.\r\n            If node was not created it would return null.\r\n            ":"\r\n            在给定节点索引上获取一个节点，而无需强迫其创建。\r\n            如果未创建节点，它将返回null。\r\n            \r\n","\r\n            Gets a list of descendant nodes and tokens in prefix document order.\r\n            ":"\r\n            获取前缀文档顺序中的后代节点和令牌的列表。\r\n            \r\n","\r\n            True if this type is known to be a reference type. It is never the case that\r\n            ":"\r\n            如果已知这种类型是参考类型，则为正确。从来没有这样\r\n            \r\n","\r\n              Looks up a localized string similar to The stream cannot be read from..\r\n            ":"查找类似于流的本地化字符串。\r\n            \r\n","\r\n            Loads and executes a script document.\r\n            ":"\r\n            加载并执行脚本文档。\r\n            \r\n"," with an appropriate Kind.\r\n            A syntax node action can report ":" 有一种适当的方式。\r\n            语法节点操作可以报告\r\n","\r\n            Method could not be selected statically.\r\n            The candidate symbols are the methods there were considered during overload resolution \r\n            (which may or may not be applicable methods). \r\n            ":"\r\n            无法静态选择方法。\r\n            候选符号是在超负荷分辨率期间考虑的方法\r\n            （可能是或可能不适用的方法）。\r\n            \r\n"," with its\r\n            type argument satisfying ":" 与它的\r\n            类型参数满足\r\n","Whether or not the operation succeeded.":"该操作是否成功。\r\n","\r\n            The settings that determine how the global namespace is displayed.\r\n            ":"\r\n            确定如何显示全局名称空间的设置。\r\n            \r\n","\r\n            Tries to execute syntax node, code block and operation actions for the given declaration.\r\n            ":"\r\n            试图为给定声明执行语法节点，代码块和操作操作。\r\n            \r\n"," members are delegated to the virtual ":" 成员被委派给虚拟\r\n","\r\n            Initializes a new V8 script engine instance with the specified options.\r\n            ":"\r\n            用指定选项初始化新的V8脚本引擎实例。\r\n            \r\n","\r\n            Represents an initializer for a field, property, parameter or a local variable declaration.\r\n            ":"\r\n            代表字段，属性，参数或局部变量声明的初始器。\r\n            \r\n","\r\n            The module references to be emitted, in row order. These\r\n            are just the module references from the current generation.\r\n            ":"\r\n            模块参考将以行排序发射。这些\r\n            只是当前一代的模块参考。\r\n            \r\n","\r\n            If an unknown diagnostic is resolved and found to be unnecessary then it is \r\n            treated as a \"Void\" diagnostic\r\n            ":"\r\n            如果解决未知的诊断并发现不必要，那是\r\n            被视为“空隙”诊断\r\n            \r\n","The offset within the view at which to store the first copied byte.":"在存储第一个复制字节的视图中的偏移。\r\n","The unexpected value.":"意外价值。\r\n"," only if the current value is null.\r\n            ":" 仅当当前值为null时。\r\n            \r\n","\r\n            Represents a constant value used as an argument to a custom attribute.\r\n            ":"\r\n            代表一个常数值用作自定义属性的参数。\r\n            \r\n","\r\n            The type definition that contains this member.\r\n            ":"\r\n            包含此成员的类型定义。\r\n            \r\n","s about an ":"关于一个\r\n","\r\n            Subsystem version: Windows 8\r\n            ":"\r\n            子系统版本：Windows 8\r\n            \r\n"," is evaluated and assigned to target.\r\n            (2) ":" 评估并分配给目标。\r\n            （2）\r\n","\r\n            The set of registered analyzer actions.\r\n            ":"\r\n            一组注册分析仪。\r\n            \r\n"," when creating the diagnostic message with this descriptor.\r\n            For example, for CA1001: \"Implement IDisposable on '{0}' because it creates members of the following IDisposable types: '{1}'.\"":" 使用此描述符创建诊断消息时。\r\n            例如，对于CA1001：“在'{0}上实现IDisposable，因为它创建以下IDISPOSABLE类型的成员：'{1}'。”\r\n","\r\n            True if the subsystem version has a valid value\r\n            ":"\r\n            如果子系统版本具有有效值，则为true\r\n            \r\n","\r\n            Returns an unbound generic type of this named type.\r\n            ":"\r\n            返回该命名类型的无限通用类型。\r\n            \r\n","Key to compare":"比较的关键\r\n"," to expose a host\r\n            type collection to script code.\r\n            ":" 暴露主机\r\n            将收集到脚本代码。\r\n            \r\n","\r\n            Returns true if this reference is an unresolved reference.\r\n            ":"\r\n            如果此引用是未解决的参考，则返回true。\r\n            \r\n","\r\n            The type of value that is stored in this field.\r\n            ":"\r\n            存储在此字段中的值类型。\r\n            \r\n"," that encompasses the character position.\r\n            ":" 这包括角色位置。\r\n            \r\n","\r\n            The method used to add a handler to the event.\r\n            ":"\r\n            用于将处理程序添加到事件的方法。\r\n            \r\n","\r\n            Determines whether we must track out-of-proc, or whether inproc tracking will work. \r\n            ":"\r\n            确定我们是否必须跟踪进出外，或者INPROC跟踪是否有效。\r\n            \r\n","True if a byte array could be created.":"如果可以创建一个字节数组，则为正确。\r\n","\r\n              Looks up a localized string similar to Inconsistent syntax tree features.\r\n            ":"\r\n              查找类似于不一致的语法树功能的局部字符串。\r\n            \r\n","\r\n            Marks the given symbol declaration as fully analyzed for the given analyzers.\r\n            ":"\r\n            标记给定的符号声明为给定的分析仪进行了全面分析。\r\n            \r\n","Options that determine how the nodes' trivia is treated.":"确定节点的琐事如何处理的选项。\r\n","The variable does not contain any instances of a non-literal.":"该变量不包含非文字的任何实例。\r\n","\r\n            A value of zero indicates that no column number is available.\r\n            ":"\r\n            零值表示没有可用的列号。\r\n            \r\n","\r\n            The culture name of the assembly, or empty if the culture is neutral.\r\n            ":"\r\n            组装的文化名称，或者如果文化是中性的，则空无一人。\r\n            \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledAction((a, arg) => arg.self.DoSomething(a, arg.x), (self: this, x), out Action<int> action);\r\n             RunWithActionCallback(action);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooleDaction（（（a，arg）=> arg.self.dosothing（a，arg.x），（self：self：this，x），out action <int> action）;\r\n             runwithactionCallback（action）;\r\n             \r\n","\r\n            Partial analysis state for operation block actions executed on the declaration.\r\n            ":"\r\n            在声明上执行操作块操作的部分分析状态。\r\n            \r\n","\r\n            Finally handler of the try.\r\n            ":"\r\n            最后，尝试处理者。\r\n            \r\n","\r\n            The name assigned to the UnsignedRightShift operator.\r\n            ":"\r\n            分配给UnsignedRight缩短运算符的名称。\r\n            \r\n","\r\n            A reference to a type parameter of a generic method.\r\n            ":"\r\n            对通用方法的类型参数的引用。\r\n            \r\n","\r\n            Adds this annotation to a given syntax token, creating a new syntax token of the same type with the\r\n            annotation on it.\r\n            ":"\r\n            将此注释添加到给定的语法令牌中，创建一个新的语法令牌\r\n            注释。\r\n            \r\n","\r\n            The name assigned to the static constructor.\r\n            ":"\r\n            分配给静态构造函数的名称。\r\n            \r\n","\r\n             Represents a read-only list of ":"\r\n             代表只读的列表\r\n","\r\n            The value for a non-array constant.\r\n            ":"\r\n            非阵列常数的值。\r\n            \r\n","\r\n            Lookup a type defined in this module.\r\n            ":"\r\n            查找此模块中定义的类型。\r\n            \r\n"," method.\r\n            It assumes that an instance of ":" 方法。\r\n            它假设一个实例\r\n","\r\n            True if the type is an enumeration (it extends System.Enum and is sealed). Corresponds to C# enum.\r\n            ":"\r\n            如果类型是枚举（它扩展了系统。对应于C＃枚举。\r\n            \r\n"," with the specified tokens insert at the index.\r\n            ":" 用指定的令牌插入在索引处。\r\n            \r\n","\r\n            Executes script code.\r\n            ":"\r\n            执行脚本代码。\r\n            \r\n","\r\n            Factory that provides the ":"\r\n            提供的工厂\r\n"," doesn't contain the given span.":" 不包含给定的跨度。\r\n"," instance for which the value is queried.":" 查询该值的实例。\r\n","\r\n            A cache entry\r\n            ":"\r\n            缓存条目\r\n            \r\n","\r\n            Initialized properties. There can be multiple properties for Visual Basic 'WithEvents' declaration with AsNew clause.\r\n            ":"\r\n            初始化属性。 ASNEW子句可能有多个属性用于视觉基本“ withest”声明。\r\n            \r\n","\r\n            Represents a general placeholder when no more specific kind of placeholder is available.\r\n            A placeholder is an expression whose meaning is inferred from context.\r\n            ":"\r\n            当没有更多特定种类的占位符时，代表普通占位符。\r\n            占位符是一种表达式，其含义是从上下文中推断出来的。\r\n            \r\n"," if the profile contains no samples.\r\n            ":" 如果配置文件不包含样品。\r\n            \r\n","\r\n            Rules for command line parsing, according to MSDN:\r\n            \r\n            Arguments are delimited by white space, which is either a space or a tab.\r\n             \r\n            A string surrounded by double quotation marks (\"string\") is interpreted \r\n            as a single argument, regardless of white space contained within. \r\n            A quoted string can be embedded in an argument.\r\n             \r\n            A double quotation mark preceded by a backslash (\\\") is interpreted as a \r\n            literal double quotation mark character (\").\r\n             \r\n            Backslashes are interpreted literally, unless they immediately precede a \r\n            double quotation mark.\r\n             \r\n            If an even number of backslashes is followed by a double quotation mark, \r\n            one backslash is placed in the argv array for every pair of backslashes, \r\n            and the double quotation mark is interpreted as a string delimiter.\r\n             \r\n            If an odd number of backslashes is followed by a double quotation mark, \r\n            one backslash is placed in the argv array for every pair of backslashes, \r\n            and the double quotation mark is \"escaped\" by the remaining backslash, \r\n            causing a literal double quotation mark (\") to be placed in argv.\r\n            ":"\r\n            根据MSDN的说法，命令行解析规则：\r\n            \r\n            参数由白空间界定，该空间是空间或标签。\r\n             \r\n            解释了一个被双引号标记（“字符串”）包围的字符串\r\n            作为一个论点，无论其中包含什么空间。\r\n            引号可以嵌入参数中。\r\n             \r\n            两引号标记之前是后斜线（\\“），被解释为\r\n            字面双引号标记字符（“）。\r\n             \r\n            从字面上解释了反斜线，除非它们紧接\r\n            双引号标记。\r\n             \r\n            如果均匀数量的后斜线后面是双引号标记，则\r\n            一个后斜线放在ARGV数组中，每对后斜线，\r\n            并且双引号标记被解释为字符串定界符。\r\n             \r\n            如果奇数后斜线后面有双引号标记，则\r\n            一个后斜线放在ARGV数组中，每对后斜线，\r\n            剩下的后斜线“逃脱”了双引号标记，\r\n            导致字面的双引号（“）放置在argv中。\r\n            \r\n","The maximum number of bytes to copy.":"要复制的最大字节数。\r\n","\r\n              Looks up a localized string similar to SourceText cannot be embedded. Provide encoding or canBeEmbedded=true at construction..\r\n            ":"\r\n              查找与SourceText类似的本地化字符串无法嵌入。在施工时提供编码或canbeembedded = true ..\r\n            \r\n","\r\n            Returns an empty array if the input nullable value type is null or the underlying array is null (default)\r\n            ":"\r\n            如果输入空名称类型为null或基础数组为null，则返回一个空数组（默认）\r\n            \r\n","\r\n            Info needed when emitting ExportedType table entry.\r\n            ":"\r\n            排放ExtortedType表条目时需要的信息。\r\n            \r\n","\r\n            Reference to the value being matching in a property subpattern.\r\n            ":"\r\n            引用在属性子图案中匹配的值。\r\n            \r\n","\r\n            The result of the Compilation.Emit method.\r\n            ":"\r\n            汇编的结果。\r\n            \r\n","\r\n            Gets the early decoded well-known attribute data in the bag. \r\n            ":"\r\n            获取袋子中的早期解码众所周知的属性数据。\r\n            \r\n","Position delta created by previous block size reductions.":"由以前的块大小减少创建的位置三角洲。\r\n","\r\n            Specifies the possible kinds of symbols.\r\n            ":"\r\n            指定可能的符号。\r\n            \r\n","ITypedArray<short>":"ITYPEDARRAY <short>\r\n","The power of ten to multiply it by":"十大的力量将其乘以\r\n","The result of the operation, which is usually the value assigned to the specified element.":"操作的结果，通常是分配给指定元素的值。\r\n","\r\n            Executes the given diagnostic suppressor.\r\n            ":"\r\n            执行给定的诊断抑制器。\r\n            \r\n"," defined in\r\n            the given ":" 定义\r\n            给定\r\n","\r\n            Represents a scriptable collection of named properties.\r\n            ":"\r\n            代表一个命名属性的脚本集合。\r\n            \r\n","A filtered list of methods.":"过滤的方法列表。\r\n","\r\n            Fall through label for the jump table\r\n            ":"\r\n            通过标签跌入跳台\r\n            \r\n","\r\n            The ordinal of the closure frame the lambda belongs to, or\r\n            ":"\r\n            Lambda属于或\r\n            \r\n","Delegate applied to trivia.  If this delegate is present then trailing trivia is\r\n            included in the search.":"委托适用于琐事。如果存在这个代表，那么拖延琐事是\r\n            包括在搜索中。\r\n","\r\n            Returns a new INamespaceSymbol representing an error (missing) namespace with the given name.\r\n            ":"\r\n            返回一个新的InamespaceSymbol，代表带有给定名称的错误（缺少）名称空间。\r\n            \r\n"," input\r\n            ":" 输入\r\n            \r\n","\r\n            Filter operation to be executed to determine whether to handle the exception.\r\n            ":"\r\n            要执行的过滤操作以确定是否处理异常。\r\n            \r\n","\r\n            Abstract dispose value for ":"\r\n            抽象处置价值\r\n","\r\n            helper instead. Also, do not assign ":"\r\n            助手。另外，不要分配\r\n","\r\n            leaves the script engine in an unusable state. After calling ":"\r\n            使脚本引擎处于无法使用的状态。打电话后\r\n","\r\n              Looks up a localized string similar to The changes must not overlap..\r\n            ":"\r\n              查找类似于更改的本地化字符串一定不能重叠。\r\n            \r\n","\r\n            Returns a copy of the ":"\r\n            返回\r\n","\r\n            Get the message id (for example \"CS1001\") for the message. This includes both the error number\r\n            and a prefix identifying the source.\r\n            ":"\r\n            获取消息ID（例如“ CS1001”）的消息。这两个错误号码包括\r\n            以及识别源的前缀。\r\n            \r\n","\r\n            In ClearScript 5.4.4 and earlier, indexed array and list elements were exempt from type\r\n            restriction. ClearScript 5.4.5 introduced a breaking change to correct this, but you can\r\n            set this property to ":"\r\n            在clearscript 5.4.4和更早的时候，索引阵列和列表元素免于类型\r\n            限制。 clearscript 5.4.5引入了破坏更改以纠正这一点，但是您可以\r\n            将此属性设置为\r\n","The script engine in which the host object will be used.":"将使用主机对象的脚本引擎。\r\n","\r\n            A reference to a instance of ":"\r\n            对一个实例的引用\r\n"," is wrapping a\r\n            node.\r\n            ":" 正在包装\r\n            节点。\r\n            \r\n","\r\n            Specifies the options for how members are displayed in the description of a symbol.\r\n            ":"\r\n            指定符号描述中如何显示成员的选项。\r\n            \r\n","Lambda and closure map.":"lambda和闭合图。\r\n","\r\n            Returns a value indicating whether the specified symbol has the specified\r\n            attribute.\r\n            ":"\r\n            返回一个值，指示指定符号是否已指定\r\n            属性。\r\n            \r\n","\r\n            Given a filename (only really meant to support either Tracker.exe or FileTracker.dll), returns\r\n            the appropriate path for the appropriate file type. \r\n            ":"\r\n            给定文件名（仅真正旨在支持tracker.exe或filetracker.dll），返回\r\n            适当的文件类型的适当路径。\r\n            \r\n","\r\n            Gets a list of ancestor nodes\r\n            ":"获取祖先节点的列表\r\n            \r\n","\r\n            Specifies that\r\n            ":"\r\n            指定\r\n            \r\n","The root that is comprised of subroots to look for":"由者场组成的根\r\n","\r\n            Describes different kinds of Dispose-like methods.\r\n            ":"\r\n            描述了不同种类的类似处置方法。\r\n            \r\n","\r\n            compute number of chars needed to end up on a 32-bit boundary assuming that three\r\n            WORDS preceded this string.\r\n            ":"\r\n            假设三个\r\n            单词先于这个字符串。\r\n            \r\n","\r\n            Defines document categories for JavaScript modules.\r\n            ":"\r\n            定义JavaScript模块的文档类别。\r\n            \r\n","\r\n            Checks if the given event has been fully analyzed for the given analyzer.\r\n            ":"\r\n            检查给定的事件是否已完全分析给定的分析仪。\r\n            \r\n","\r\n            A reference to the method that provides the implementation.\r\n            ":"\r\n            对提供实现的方法的引用。\r\n            \r\n","\r\n            Boolean option to prevent analyzing indirect base types (walking more than one level up) when suggesting suffixes.\r\n            ":"\r\n            建议在建议后缀时防止分析间接基本类型（步行多个级别）的布尔值选择。\r\n            \r\n","\r\n            An array of child operations for this operation.\r\n            ":"\r\n            此操作的一系列儿童操作。\r\n            \r\n","\r\n            Whether or not to display integral literals in hexadecimal.\r\n            ":"\r\n            是否在十六进制中展示不可或缺的文字。\r\n            \r\n","Stream to write PDB data to.":"流将PDB数据写入。\r\n","\r\n            Custom modifiers associated with the array type, or an empty array if there are none.\r\n            ":"\r\n            与数组类型关联的自定义修饰符，或者没有一个空数组。\r\n            \r\n","The return value if a function was invoked, an undefined value otherwise.":"返回值如果调用函数，则否则不确定值。\r\n","The type of the second parameter of the bound function.":"绑定函数的第二个参数的类型。\r\n","\r\n            Current usage:\r\n             (1) C# literal expression.\r\n             (2) VB literal expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃字面表达。\r\n             （2）VB字面表达。\r\n            \r\n","A new delegate that invokes the specified script function and returns its result value.":"调用指定脚本功能并返回其结果值的新委托。\r\n","\r\n             Hide lower versions of dependencies that have multiple versions behind an alias.\r\n             ":"\r\n             隐藏具有多个版本的依赖版本的较低版本。\r\n             \r\n","The new compilation with the analyzer driver attached.":"附有带有分析仪驱动程序的新汇编。\r\n"," be visible to the later phases of other generators operating on the compilation. \r\n            ":" 在编译上运行的其他发电机的后期阶段可见。\r\n            \r\n","\r\n            The value for an ":"\r\n            一个值\r\n","\r\n            Try parsing a correctly-formatted double floating-point literal into the nearest representable double\r\n            using IEEE round-to-nearest-ties-to-even rounding mode. Behavior is not defined for inputs that are\r\n            not valid C# floating-point literals.\r\n            ":"\r\n            尝试将正确形成的双浮点字面文字解析为最近代表性的双重双浮点\r\n            使用IEEE往返界限到连续的圆形模式。行为未针对输入定义\r\n            无效C＃浮点文字。\r\n            \r\n","\r\n            The nullable annotation of the expression represented by the syntax node. This represents\r\n            the nullability of expressions that can be assigned to this expression, if this expression\r\n            can be used as an lvalue.\r\n            ":"\r\n            语法节点表示的表达式的无效注释。这代表\r\n            如果此表达式，可以分配给该表达式的表达式的无效性\r\n            可以用作LVALUE。\r\n            \r\n"," that represents position 0 at line 0.\r\n            ":" 这代表位置0处的位置0。\r\n            \r\n","\r\n            Create a DecimalFloatingPointString from a string representing a floating-point literal.\r\n            ":"\r\n            从代表浮点文字的字符串创建一个十分径流点。\r\n            \r\n","\r\n             int x = 3;\r\n             RunWithPredicate(a => this.IsSomething(a, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithPredicate（a => this.issomething（a，x））;\r\n             \r\n","\r\n            List of rulesets included by this ruleset.\r\n            ":"\r\n            此规则集包含的规则集列表。\r\n            \r\n","\r\n            Create metadata module from a byte array.\r\n            ":"\r\n            从字节数组创建元数据模块。\r\n            \r\n","\r\n            Converts a array to an immutable array.\r\n            ":"\r\n            将数组转换为不变的阵列。\r\n            \r\n","\r\n            Returns true if the specified type is equal to or derives from System.Attribute well-known type.\r\n            ":"如果指定类型等于或从系统派生。\r\n            \r\n","Source type of value to be converted":"要转换的值的源类型\r\n","\r\n            Options passed to a ":"\r\n            选项传递给\r\n","Inferred type or Nothing if nothing was inferred.":"推断的类型或一无所获，如果什么都没有推断。\r\n","\r\n            Apply the result data from interprocedural analysis to CurrentAnalysisData.\r\n            Default implementation is designed for the default implementation of GetInitialInterproceduralAnalysisData.\r\n            and overwrites the CurrentAnalysisData with the given ":"\r\n            将概要分析的结果数据应用于当前分析。\r\n            默认实现设计用于默认实现getInitialInterProceDuralanalysissdata。\r\n            并用给定的\r\n","Returns true if bound attributes were stored into the bag on this thread.":"如果将绑定属性存储在此线程上的袋子中，则返回true。\r\n","Namespace names are never used on their own - this is the type that is adding the namespace name.\r\n            Used only for length checking.":"名称名称从未单独使用 - 这是添加命名空间名称的类型。\r\n            仅用于长度检查。\r\n","he type of the elements of ":"他类型的元素\r\n","The key of the new entry.":"新条目的关键。\r\n","Can be one of the following values: 0, 512, 1024, 2048, 4096, 8192":"可以是以下值之一：0、512、1024、2048、4096、8192\r\n","\r\n            Subsystem version default for the specified output kind and platform combination\r\n            ":"\r\n            指定输出类型和平台组合的子系统版本默认值\r\n            \r\n","\r\n            Converts the set to a list, sorted by index.\r\n            ":"\r\n            将集合转换为列表，按索引排序。\r\n            \r\n","\r\n            \r\n            /// Second.cs:\r\n            ":"\r\n            \r\n            /// second.cs：\r\n            \r\n","\r\n            The Width property returns the same value as Span.Length, but is somewhat more efficient.\r\n            ":"\r\n            宽度属性返回与Span.Length相同的值，但效率更高。\r\n            \r\n","\r\n            Get the effective ruleset after resolving all the included rulesets.\r\n            ":"\r\n            解决所有随附的规则集后，获取有效的规则集。\r\n            \r\n","\r\n            The absolute span of this trivia in characters. If this trivia is a structured trivia then the returned span\r\n            will include spans of any leading or trailing trivia present on the child non-terminal node of this trivia.\r\n            ":"\r\n            这个琐事的绝对跨度。如果这个琐事是一个结构化的琐事，则返回的跨度\r\n            将包括该琐事的儿童非末端节点上存在的任何领先或尾随的琐事。\r\n            \r\n","\r\n            Represents a C# or VB new/New anonymous object creation expression.\r\n            ":"\r\n            表示C＃或VB新/新的匿名对象创建表达式。\r\n            \r\n","\r\n            Specifies that documents may be loaded from the file system.\r\n            ":"\r\n            指定可以从文件系统加载文档。\r\n            \r\n","\r\n            Temp variable created by the optimizer.\r\n            ":"\r\n            优化器创建的温度变量。\r\n            \r\n","Reported suppression with ID '{0}' is not supported by the suppressor.":"抑制器不支持用ID'{0}'报告的抑制。\r\n","\r\n            Copies bytes from the ":"副本字节来自\r\n","\r\n            Decodes attribute argument type from attribute blob (called FieldOrPropType in the spec).\r\n            ":"\r\n            从属性blob（规格中称为fieldorProptype）的解码属性参数类型。\r\n            \r\n","\r\n            Gets the value of a property in a dynamic host object that implements ":"在实施的动态主机对象中获取属性的值\r\n","\r\n            Determines whether this token has any leading trivia.\r\n            ":"\r\n            确定这个令牌是否具有任何领先的琐事。\r\n            \r\n"," files for that would apply to a compilation.\r\n            ":" 文件的文件适用于汇编。\r\n            \r\n","\r\n            Map from a ":"\r\n            来自a的地图\r\n","\r\n            Get an analyzer config value for the given key, using the ":"\r\n            获取给定键的分析仪配置值，使用\r\n"," is ignored.\r\n            ":" 被忽略。\r\n            \r\n"," operator for string concatenation.\r\n            ":" 字符串串联的操作员。\r\n            \r\n"," executing analyzers clears per-tree entries in the cache whenever a ":" 执行分析仪在缓存中清除每条条条目\r\n"," to validate XML doc comments. Unfortunately it cannot be reset and thus can't be pooled. \r\n            Each time we need to validate a fragment of XML we \"append\" it to the underlying text reader, implemented by this class, \r\n            and advance the reader. By the end of the fragment validation, we keep the reader open in a state \r\n            that is ready for the next fragment validation unless the fragment was invalid, in which case we need to create a new XmlReader.\r\n            That is why ":" 验证XML文档评论。不幸的是，它不能重置，因此不能汇总。\r\n            每次我们需要验证XML的片段时，我们都会将其“附加”到基础文本读取器，该课程由此类实现，\r\n            并推进读者。到片段验证结束时，我们将读者保持在状态\r\n            除非该片段无效，否则这已经准备好用于下一个片段验证，在这种情况下，我们需要创建一个新的XMLReader。\r\n            这就是为什么\r\n","\r\n            Gets all the declared local variables in the given ":"\r\n            获取给定的所有声明的本地变量\r\n","\r\n            Unsuppressed analyzers that need to be executed. \r\n            ":"\r\n            需要执行的未抑制分析仪。\r\n            \r\n","\r\n            Marks the given symbol declaration as fully analyzed for the given analyzer.\r\n            ":"\r\n            标记给定的符号声明为给定的分析仪进行了充分分析。\r\n            \r\n","\r\n            For each namespace enclosing the method, a list of import strings, innermost to outermost.\r\n            There should always be at least one entry, for the global namespace.\r\n            ":"\r\n            对于封闭该方法的每个名称空间，导入字符串列表，最内向至最外面。\r\n            对于全局名称空间，总是至少有一个条目。\r\n            \r\n","\r\n            Aliases that should be applied to the referenced assembly. \r\n            Empty array means {\"global\"} (all namespaces and types in the global namespace of the assembly are accessible without qualification).\r\n            Null if not applicable (the reference only has recursive aliases).\r\n            ":"\r\n            应应用于引用组件的别名。\r\n            空数组表示{“ global”}（在没有资格的情况下，可以访问汇编全局名称空间中的所有名称空间和类型）。\r\n            null如果不适用（参考仅具有递归别名）。\r\n            \r\n","Suppressed diagnostic ID '{0}' does not match suppressable ID '{1}' for the given suppression descriptor.":"对于给定的抑制描述符，被抑制的诊断ID'{0}'与可抑制ID'{1}'不匹配。\r\n","Field - type is unsupported":"字段 - 类型不支持\r\n","The original referenced syntax node.":"原始引用的语法节点。\r\n","\r\n            Write document entries for any embedded text document that does not yet have an entry.\r\n            ":"\r\n            为任何尚无条目的嵌入式文本文档编写文档条目。\r\n            \r\n","\r\n            Set of unsuppressed analyzers that report non-configurable diagnostics that cannot be suppressed with end user configuration. \r\n            ":"\r\n            一组未抑制的分析仪，报告不可用最终用户配置抑制的不可配合的诊断。\r\n            \r\n","\r\n            Another way to create a string dictionary is to import the specific type directly.\r\n            ":"\r\n            创建字符串词典的另一种方法是直接导入特定类型。\r\n            \r\n","MiB":"MIB\r\n"," to be tested,\r\n             (2) ":" 要测试，\r\n             （2）\r\n"," for the immediately containing symbol.\r\n            ":" 对于立即包含符号。\r\n            \r\n","The name of a reduced extension method.":"减少扩展方法的名称。\r\n","\r\n            Copy ":"\r\n            复制\r\n","\r\n            A set of options keyed to ":"\r\n            一组关键的选项\r\n","\r\n            The size of the virtual memory to reserve for the initial thread's stack.\r\n            Must fit into 32 bits if the target platform is 32 bit.\r\n            ":"\r\n            虚拟内存的大小可保留初始线程的堆栈。\r\n            如果目标平台为32位，则必须适合32位。\r\n            \r\n","The name of a type parameter.":"类型参数的名称。\r\n","Can't alias a module.":"不能别名模块。\r\n","\r\n            The variable is not synthesized (C#, VB).\r\n            ":"\r\n            该变量未合成（C＃，VB）。\r\n            \r\n","The node instance originally tracked.":"节点实例最初跟踪。\r\n","\r\n              Looks up a localized string similar to Unresolved: .\r\n            ":"\r\n              查找类似于未解决的局部字符串：。\r\n            \r\n","\r\n            Context for a semantic model action.\r\n            A semantic model action operates on the ":"\r\n            语义模型动作的上下文。\r\n            语义模型动作在\r\n","\r\n            Stores a map from entity to set of entities that share the same instance location.\r\n            Primarily used for ref arguments for context sensitive interprocedural analysis\r\n            to ensure that PointsTo value updates to any of the mapped entities is reflected in the others in the set.\r\n            ":"\r\n            存储从实体到共享相同实例位置的实体集的地图。\r\n            主要用于涉及上下文敏感概论分析的参数\r\n            为了确保对任何映射实体的PointSto值更新反映在集合中的其他实体中。\r\n            \r\n","\r\n            lazily fetches or creates a new array method.\r\n            ":"\r\n            懒惰地获取或创建一种新的数组方法。\r\n            \r\n","\r\n            Encoding to be used for source files or 'null' for autodetect/default.\r\n            ":"\r\n            编码用于源文件或``null''用于autoDeTect/默认值。\r\n            \r\n"," for some well known tags.":" 对于一些众所周知的标签。\r\n","\r\n            Writes a UInt32 value to the stream.\r\n            ":"\r\n            将UINT32值写入流。\r\n            \r\n"," that produced this result.\r\n            ":" 这产生了这个结果。\r\n            \r\n","The name of the global function or procedure to invoke.":"全局函数或调用过程的名称。\r\n","\r\n            A 32 bit IEEE floating point number.\r\n            ":"\r\n            一个32位IEEE浮点数。\r\n            \r\n","\r\n            The name assigned to the GreaterThan operator.\r\n            ":"分配给大型运营商的名称。\r\n            \r\n","Flag indicating if this is a generated code symbol.":"标志表示这是否是生成的代码符号。\r\n"," before the operation occurs.\r\n            ":" 在操作发生之前。\r\n            \r\n","\r\n            Determines the segment count that would result if the segments of size less than or equal to \r\n            the specified segment size were to be combined.\r\n            ":"\r\n            确定如果大小小于或等于\r\n            指定的片段大小要组合。\r\n            \r\n","\r\n            Provides pooled delegate instances to help avoid closure allocations for delegates that require a state argument\r\n            with APIs that do not provide appropriate overloads with state arguments.\r\n            ":"\r\n            提供汇总的代表实例，以帮助避免对需要状态参数的代表的关闭分配\r\n            使用不提供与状态参数的适当过载的API。\r\n            \r\n","\r\n            Value evaluated if the Condition is true.\r\n            ":"\r\n            值评估条件是否为真。\r\n            \r\n","\r\n            Output parameter, never null:\r\n            A sequence of groups of TypeDef row ids for types immediately contained within this namespace.\r\n            ":"输出参数，永不零：\r\n            该命名空间中立即包含的类型类型的一组序列。\r\n            \r\n"," to check for cardinality.":" 检查基数。\r\n","\r\n            \"..\\file\"\r\n            ":"\r\n            \"..\\文件\"\r\n            \r\n","Reference resolver should return readable non-null stream.":"参考解析器应返回可读的非循环流。\r\n",".\r\n             It is incorrect to use the logger concurrently from multiple threads.\r\n            \r\n             The log format is SARIF (Static Analysis Results Interchange Format)\r\n             https://sarifweb.azurewebsites.net\r\n             https://github.com/sarif-standard/sarif-spec\r\n             ":"。\r\n             从多个线程同时使用记录器是不正确的。\r\n            \r\n             日志格式为sarif（静态分析结果互换格式）\r\n             https://sarifweb.azurewebsites.net\r\n             https://github.com/sarif-standard/sarif-pec\r\n             \r\n","Module metadata is invalid.":"模块元数据无效。\r\n","\r\n            Returns a new SourceText with the specified span of characters replaced by the new text.\r\n            ":"\r\n            返回一个新的SourceText，其指定的字符跨度被新文本代替。\r\n            \r\n","Constructor of the custom attribute.":"自定义属性的构造函数。\r\n","The fully qualified name to compare with.":"与之相比的完全合格的名称。\r\n","\r\n            Location kind (None/SourceFile/MetadataFile).\r\n            ":"\r\n            位置类（无/sourcefile/metadatafile）。\r\n            \r\n","\r\n            The symbol from the later compilation,\r\n            or null if the edit represents a deletion.\r\n            ":"\r\n            后来汇编的符号，\r\n            或null如果编辑表示删除。\r\n            \r\n"," the generator can obtain the \r\n            created instance via the ":" 发电机可以获得\r\n            通过\r\n"," invokes ":" 调用\r\n","Scripting.FileSystemObject":"脚本。Filesystemobject\r\n","'true' if ":"'true'如果\r\n","An ImmutableArray containing all the members of this symbol. If this symbol has no members,\r\n            returns an empty ImmutableArray. Never returns Null.":"一个包含此符号的所有成员的不可分付款。如果此符号没有成员，\r\n            返回一个空的Immutablearray。永远不会返回零。\r\n","\r\n            If this method overrides another method (because it both had the override modifier\r\n            and there correctly was a method to override), returns the overridden method.\r\n            ":"如果此方法覆盖了另一种方法（因为它都具有覆盖修饰符\r\n            并且正确地是一种覆盖方法），返回覆盖方法。\r\n            \r\n","\r\n            Represents an abstract index into a location.\r\n            It is used by an ":"\r\n            将抽象索引代表到一个位置。\r\n            它被一个\r\n","\r\n              Looks up a localized string similar to A node or token is out of sequence..\r\n            ":"\r\n              查找类似于节点或令牌的局部字符串是不可行的。\r\n            \r\n",", used to drive analyzer execution.\r\n            ":"，用于驱动分析仪执行。\r\n            \r\n",",\r\n            use constructor overload ":"，，，，\r\n            使用构造函数过载\r\n","If the file is not an assembly or is somehow corrupted.":"如果该文件不是程序集或以某种方式损坏。\r\n","\r\n            Not a dispose-like method.\r\n            ":"\r\n            不是类似的方法。\r\n            \r\n","\r\n            Represents a tuple with one or more elements.\r\n            ":"\r\n            代表一个或多个元素的元组。\r\n            \r\n","The dynamic host object that contains the property to remove.":"包含要删除的属性的动态主机对象。\r\n","\r\n            Add a new value with the given key to the given concurrent map.\r\n            ":"\r\n            在给定的并发地图中添加带有键的新值。\r\n            \r\n",", with an ":"， 带着\r\n","\r\n            Primary method for emitting integer switch jump table.\r\n            ":"\r\n            发射整数开关跳台表的主要方法。\r\n            \r\n","\r\n            Determines whether this node has any annotations with any of the specific annotation kinds.\r\n            ":"\r\n            确定该节点是否具有任何特定注释类型的注释。\r\n            \r\n","s about code blocks.\r\n            ":"S关于代码块。\r\n            \r\n","\r\n            Gets the profile's name.\r\n            ":"\r\n            获取个人资料的名称。\r\n            \r\n","\r\n            The optional offset in the syntax tree for the line immediately following an enhanced ":"\r\n            在增强后，立即在该行的语法树中的可选偏移\r\n","\r\n            Binds the name in the context of the specified location and sees if it resolves to an\r\n            alias name. If it does, return the AliasSymbol corresponding to it. Otherwise, return null.\r\n            ":"\r\n            在指定位置的上下文中绑定名称，并查看是否解决\r\n            别名。如果确实如此，请返回与之相对应的别秒词。否则，返回null。\r\n            \r\n","\r\n            Gets an optional string describing the reason why the node's script function was not optimized.\r\n            ":"\r\n            获取一个可选的字符串，描述没有优化节点脚本函数的原因。\r\n            \r\n","\r\n            Default marshalling of the Strings in this class.\r\n            ":"\r\n            默认的弦乐编组此类字符串。\r\n            \r\n","\r\n            Operation visitor to flow the PointsTo values across a given statement in a basic block.\r\n            ":"\r\n            操作访问者在基本块中以给定语句跨给定语句的点数流动。\r\n            \r\n","\r\n            Writes a Int32 value to the stream.\r\n            ":"\r\n            将INT32值写入流。\r\n            \r\n"," method to be invoked for each element in a collection initializer expression\r\n            (see C# Specification, §7.6.10.3 Collection initializers).\r\n            ":" 收集初始化器表达式中每个元素调用的方法\r\n            （请参阅C＃规范，第7.6.10.3节收集初始化器）。\r\n            \r\n","\r\n            Operation visitor to flow the abstract dataflow analysis values across a given statement in a basic block.\r\n            ":"\r\n            操作访问者以基本块中的给定语句中的抽象数据流分析值流动。\r\n            \r\n","\r\n            Returns true if all analyzers need to analyze and report diagnostics in generated code - we can assume all code to be non-generated code.\r\n            ":"\r\n            如果所有分析仪都需要在生成的代码中分析和报告诊断，则返回为TRUE，我们可以假设所有代码都是非生成代码。\r\n            \r\n","Where the bits of the floating-point number are stored":"浮点数存储的位置\r\n","\r\n            Returns a new SourceText with the specified range of characters replaced by the new text.\r\n            ":"\r\n            返回新的SourceText，其指定的字符范围被新文本替换。\r\n            \r\n","\r\n            Object or collection initializer, if any.\r\n            ":"\r\n            对象或集合初始化器（如果有）。\r\n            \r\n"," version of this method returns \"[nothing]\".\r\n            ":" 此方法的版本返回“ [Nothing]”。\r\n            \r\n"," is a stream which will carry the output PE bits\r\n            * ":" 是将携带输出PE位的流\r\n            *\r\n"," is null.\r\n            For additional files, ":" 一片空白。\r\n            对于其他文件，\r\n","\r\n            Indicates disposable locations that are either not disposed or escaped.\r\n            ":"\r\n            指示未被处置或逃脱的一次性位置。\r\n            \r\n","Elemental type of the sequence.":"序列的元素类型。\r\n","\r\n            Optional list of comma separated next variables at loop bottom in VB.\r\n            This list is always empty for C#.\r\n            ":"\r\n            逗号的可选列表是在VB中的循环底部分离的下一个变量。\r\n            此列表始终为C＃空。\r\n            \r\n"," method used in a Using statement.\r\n            ":" 在使用语句中使用的方法。\r\n            \r\n"," to a text writer.\r\n            ":" 给文字作家。\r\n            \r\n","\r\n            Import scopes are associated with binders (in C#) and thus multiple instances might be created for a single set of imports.\r\n            We consider scopes with the same parent and the same imports the same.\r\n            Internal for testing.\r\n            ":"\r\n            导入范围与绑定器（在C＃中）关联，因此可以为一组导入创建多个实例。\r\n            我们考虑使用相同父母的范围，并且相同的导入相同。\r\n            内部测试。\r\n            \r\n"," cannot be used as a type argument. Note that this applies\r\n            to some host types that support instantiation, such as certain COM/ActiveX types.\r\n            ":" 不能用作类型参数。请注意，这适用\r\n            对于支持实例化的某些主机类型，例如某些COM/ActiveX类型。\r\n            \r\n","\r\n            Gets the number of children contained in the ":"\r\n            获取所包含的孩子的人数\r\n","\r\n            True if all type arguments matching this parameter are constrained to be reference types.\r\n            ":"\r\n            正确，如果将匹配此参数的所有类型参数限制为参考类型。\r\n            \r\n","\r\n            Allows a user to create Syntax based input nodes for incremental generation\r\n            ":"\r\n            允许用户创建基于语法的输入节点以增量生成\r\n            \r\n","\r\n            Returns a new INamedTypeSymbol representing an error type with the given name and arity\r\n            in the given optional container.\r\n            ":"\r\n            返回一个新的inamedtypesymbol，代表带有给定名称和arity的错误类型\r\n            在给定的可选容器中。\r\n            \r\n","\r\n            Symbol added.\r\n            ":"\r\n            添加了符号。\r\n            \r\n","\r\n              Looks up a localized string similar to Windows PDB writer doesn't support deterministic compilation: '{0}'.\r\n            ":"\r\n              查找类似于Windows PDB Writer的本地化字符串不支持确定性汇编：'{0}'。\r\n            \r\n","\r\n            The UInt32 value 7\r\n            ":"\r\n            UINT32值7\r\n            \r\n","\r\n            Highest valid warning level for non-error diagnostics.\r\n            ":"\r\n            非错误诊断的最高有效警告水平。\r\n            \r\n","\r\n            Optional argument names for named arguments.\r\n            ":"\r\n            命名参数的可选参数名称。\r\n            \r\n","\r\n            Set of diagnostic suppressions that are suppressed via analyzer suppression actions. \r\n            ":"\r\n            通过分析仪抑制作用抑制的一组诊断抑制。\r\n            \r\n","\r\n            The number of bytes read. Less than ":"\r\n            字节的数量读取。少于\r\n","\r\n            A write-only memory stream backed by a ":"\r\n            仅写的记忆流。\r\n","\r\n            A localizable resource string that may possibly be formatted differently depending on culture.\r\n            ":"\r\n            根据文化的不同，可能会以不同的格式进行本地化的资源字符串。\r\n            \r\n","\r\n              Looks up a localized string similar to Name cannot be empty..\r\n            ":"\r\n              查找类似于名称的本地化字符串不能为空。\r\n            \r\n","\r\n            Stores all the tracked entities.\r\n            NOTE: Entities added to this set should not be removed.\r\n            ":"\r\n            存储所有追踪实体。\r\n            注意：添加到该集合中的实体不应删除。\r\n            \r\n","The zero-based index of the trivia to get.":"基于零的琐事索引获得。\r\n","\r\n            Creates a new options instance with optimizations enabled or disabled.\r\n            ":"\r\n            创建具有启用或禁用的优化的新选项实例。\r\n            \r\n","\r\n            Information decoded from security attributes, i.e. attributes derived from well-known SecurityAttribute, applied on a method/type/assembly.\r\n            ":"\r\n            从安全性属性（即源自众所周知的安全性属性）衍生的属性解码的信息，该属性应用于方法/类型/汇编。\r\n            \r\n","\r\n            Structure that describes a member of a type.\r\n            ":"\r\n            描述类型成员的结构。\r\n            \r\n","\r\n            Creates a byte array containing a copy of the view's contents.\r\n            ":"\r\n            创建一个包含视图内容副本的字节数组。\r\n            \r\n","\r\n            This is only ever true in CSharp scripts, where a top-level statement creates a new variable\r\n            in a reference, such as an out variable declaration or a deconstruction declaration.\r\n            ":"\r\n            这仅在CSHARP脚本中都是如此，其中顶级语句创建了一个新变量\r\n            在引用中，例如OUT变量声明或解构声明。\r\n            \r\n"," is accessible from within ":" 可以从内部访问\r\n","\r\n            An integer representing the language specific kind of the underlying node or token.\r\n            ":"\r\n            代表基础节点或令牌的特定语言类型的整数。\r\n            \r\n",") or a syntax token (":"）或语法令牌（\r\n","\r\n            One or more operation blocks that are the subject of the analysis.\r\n            This includes all blocks associated with the ":"\r\n            一个或多个是分析主题的操作块。\r\n            这包括与\r\n","\r\n            Current usage:\r\n             (1) C# is pattern expression. For example, \"x is int i\".\r\n            ":"当前用法：\r\n             （1）C＃是模式表达式。例如，“ x是int i”。\r\n            \r\n","\r\n            Reference to the object being initialized in C# or VB object or collection initializer,\r\n            anonymous type creation initializer, or to the object being referred to in a VB With statement.\r\n            ":"\r\n            引用在C＃或VB对象或集合初始化器中初始化的对象，\r\n            匿名类型创建初始化器，或带有语句的VB中所引用的对象。\r\n            \r\n","\r\n            Gets the ordinal position of the parameter. The first parameter has ordinal zero.\r\n            The 'this' parameter ('Me' in Visual Basic) has ordinal -1.\r\n            ":"\r\n            获取参数的顺序位置。第一个参数具有序数零。\r\n            “ this”参数（在Visual Basic中的“ ME”）具有序数-1。\r\n            \r\n","The encoded source buffer.":"编码的源缓冲区。\r\n","\r\n            Represents a trivia in the syntax tree.\r\n            ":"代表语法树中的琐事。\r\n            \r\n","\r\n            Local storing the key hash value, used for emitting hash table based string switch.\r\n            ":"\r\n            本地存储密钥哈希值，用于发射基于哈希表的字符串开关。\r\n            \r\n","A document name for the compiled script. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.":"编译脚本的文档名称。当前，此名称仅在演示文稿上下文中用作标签，例如调试器用户界面。\r\n"," visitor that visits only the single IOperation\r\n            passed into its Visit method with an additional argument of the type specified by the\r\n            ":"仅访问单一偶然的访客\r\n            传递到其访问方法中，并提出了有关该类型的附加参数\r\n            \r\n","\r\n            The location represents a position in an XML file.\r\n            ":"\r\n            该位置表示XML文件中的位置。\r\n            \r\n"," path length.\r\n            ":" 路径长度。\r\n            \r\n","\r\n             An array of references passed to the compilation and resolved from #r directives.\r\n             May contain references that were skipped during resolution (they don't have a corresponding explicit assembly).\r\n             ":"\r\n             一系列参考文献传递给了汇编并根据#R指令解决。\r\n             可能包含在分辨率期间跳过的参考文献（它们没有相应的显式组件）。\r\n             \r\n","\r\n            The candidate symbol existed, but was not allowed to be created in a new expression. \r\n            For example, interfaces, static classes, and unconstrained type parameters.\r\n            ":"候选符号存在，但不允许在新表达中创建。\r\n            例如，接口，静态类和无约束类型参数。\r\n            \r\n","\r\n            Symbol represents a function pointer type\r\n            ":"\r\n            符号代表功能指针类型\r\n            \r\n","\r\n            this.QualifiedNameOnly = containingSymbol.QualifiedNameOnly + \".\" + this.Name\r\n            ":"\r\n            this.qualifiedNameonly = ContiningSymbol.QualifiedNameonly +“。” + this.name\r\n            \r\n","\r\n            The type accepted for the recursive pattern.\r\n            ":"\r\n            递归模式接受的类型。\r\n            \r\n","\r\n            The container of this ":"\r\n            这个容器\r\n"," is set.\r\n            However, the default diagnostic reporting mode is liable to change in future.\r\n            ":" 设置。\r\n            但是，默认的诊断报告模式可能会在将来改变。\r\n            \r\n","The last child in the list.":"名单中的最后一个孩子。\r\n","\r\n            Assembly or module symbol corresponding to the given reference or null if there is none.\r\n            ":"\r\n            汇编或模块符号对应于给定的引用或null，如果没有。\r\n            \r\n","Script":"脚本\r\n","\r\n            Always uses the default comparer.\r\n            ":"始终使用默认比较。\r\n            \r\n","Indicates an explicit this or Me expression.":"表示明确的表达。\r\n","\r\n            Symbol represents a value that is discarded, e.g. in M(out _)\r\n            ":"\r\n            符号表示被丢弃的值，例如在M（OUT _）\r\n            \r\n"," and corresponding finally ":" 并最终对应\r\n",")\r\n            by appending a default extension for ":"）\r\n            通过附加默认扩展名\r\n","\r\n            The method pins ":"\r\n            方法引脚\r\n","The arguments as a string":"作为字符串的论点\r\n","\r\n            Returns a full path of the PDB file that the compiler will generate the debug symbols to \r\n            if ":"\r\n            返回编译器将生成调试符号的PDB文件的完整路径\r\n            如果\r\n","The array from which to copy the elements.":"复制元素的数组。\r\n","The original compilation.":"原始汇编。\r\n","\r\n            If the operation is an expression that evaluates to a constant value, ":"如果操作是评估恒定值的表达式，则\r\n","\r\n            The second part of a two part version number indicating the version of the format used to persist this module. For example, the 0 in 1.0.\r\n            ":"\r\n            两部分版本编号的第二部分指示用于持续此模块的格式的版本。例如，0在1.0中。\r\n            \r\n"," type. When the first breakpoint is hit\r\n             the debugger steps thru the code statement by statement until user code is reached, skipping methods marked by ":" 类型。当第一个断点击中\r\n             通过语句通过代码语句进行调试器步骤，直到达到用户代码为止，跳过了标记的方法\r\n","\r\n            contains.  This copy does not need to be ":"\r\n            包含。此副本不需要\r\n","\r\n            Gets or sets a callback that can be used to halt script execution.\r\n            ":"\r\n            获取或设置可用于停止脚本执行的回调。\r\n            \r\n","\r\n            Cancels a ":"\r\n            取消\r\n","\r\n            Optional catch handler that handles this exception.\r\n            ":"\r\n            可选处理此例外的可选捕获处理程序。\r\n            \r\n"," operation.\r\n            Note that this operation is different from an ":" 手术。\r\n            请注意，此操作与\r\n","The command output.":"命令输出。\r\n","\r\n            Determine if the specific method is a Task.ConfigureAwait(bool) method.\r\n            ":"\r\n            确定特定方法是否为任务。\r\n            \r\n","\r\n            Search strategy is a simple linear probing which is chosen for it cache-friendliness.\r\n            Note that Free will try to store recycled objects close to the start thus statistically \r\n            reducing how far we will typically search in Allocate.\r\n            ":"\r\n            搜索策略是一种简单的线性探测，为其选择了缓存友好性。\r\n            请注意，Free将尝试将回收的对象存储在距离附近的附近\r\n            减少我们通常会分配的范围。\r\n            \r\n","\r\n            Statement that has been labeled.\r\n            ":"\r\n            已标记的陈述。\r\n            \r\n","\r\n            Given a set of source files in the form of ITaskItem, creates a temporary response\r\n            file containing the rooting marker that corresponds to those sources. \r\n            ":"\r\n            给定一组源文件以iTaskItem的形式创建临时响应\r\n            包含与这些来源相对应的生根标记的文件。\r\n            \r\n","\r\n            Creates a new compilation with additional syntax trees.\r\n            ":"\r\n            使用其他语法树创建新的汇编。\r\n            \r\n","True if the sequence contains only characters in the ASCII range.":"如果序列仅包含ASCII范围内的字符，则为正确。\r\n","\r\n            Returns all diagnostics computed by the analyzers since the last time this was invoked.\r\n            If ":"\r\n            自上次调用以来，分析仪计算出的所有诊断。\r\n            如果\r\n"," for the body of the anonymous function is available from\r\n            the enclosing ":" 对于匿名功能的主体可从\r\n            封闭\r\n","\r\n            Returns true if the diagnostic is an error that should be reported.\r\n            ":"\r\n            如果诊断是应报告的错误，则返回为true。\r\n            \r\n","\r\n            The width of this trivia in characters. If this trivia is a structured trivia then the returned width will\r\n            not include the widths of any leading or trailing trivia present on the child non-terminal node of this\r\n            trivia.\r\n            ":"\r\n            这个琐事在人物中的宽度。如果这个琐事是一个结构化的琐事，那么返回的宽度将\r\n            不包括该儿童非末端节点上存在的任何领先或尾随琐事的宽度\r\n            琐事。\r\n            \r\n","\r\n            The class and entry point method for top-level statements are not considered as implicitly declared.\r\n            ":"\r\n            顶级语句的类和入口点方法不被视为隐式声明。\r\n            \r\n","Full path.":"完整路径。\r\n","\r\n            Returns the Documentation Comment ID for the symbol, or null if the symbol doesn't\r\n            support documentation comments.\r\n            ":"\r\n            返回该符号的文档注释ID，或者如果符号未返回null\r\n            支持文档评论。\r\n            \r\n","\r\n            Provides caching functionality for green nonterminals with up to 3 children.\r\n            Example:\r\n                When constructing a node with given kind, flags, child1 and child2, we can look up \r\n                in the cache whether we already have a node that contains same kind, flags, \r\n                child1 and child2 and use that.\r\n                \r\n                For the purpose of children comparison, reference equality is used as a much cheaper \r\n                alternative to the structural/recursive equality. This implies that in order to de-duplicate\r\n                a node to a cache node, the children of two nodes must be already de-duplicated.     \r\n                When adding a node to the cache we verify that cache does contain node's children,\r\n                since otherwise there is no reason for the node to be used.\r\n                Tokens/nulls are for this purpose considered deduplicated. Indeed most of the tokens\r\n                are deduplicated via quick-scanner caching, so we just assume they all are.\r\n                \r\n                As a result of above, \"fat\" nodes with 4 or more children or their recursive parents\r\n                will never be in the cache. This naturally limits the typical single cache item to be \r\n                a relatively simple expression. We do not want the cache to be completely unbounded \r\n                on the item size. \r\n                While it still may be possible to store a gigantic nested binary expression, \r\n                it should be a rare occurrence.\r\n                \r\n                We only consider \"normal\" nodes to be cacheable. \r\n                Nodes with diagnostics/annotations/directives/skipped, etc... have more complicated identity \r\n                and are not likely to be repetitive.\r\n                \r\n            ":"\r\n            为有多达3名儿童的绿色非终端提供缓存功能。\r\n            例子：\r\n                当用给定的旗帜，child1和child构造节点时，我们可以查找\r\n                在缓存中，我们是否已经有一个包含相同类型的节点，标志，\r\n                Child1和Child2并使用它。\r\n                \r\n                为了进行儿童比较，参考平等被用作便宜得多的\r\n                替代结构/递归平等。这意味着为了脱颖而出\r\n                缓存节点的节点，必须已经删除两个节点的孩子。\r\n                在缓存中添加节点时，我们验证缓存确实包含节点的孩子，\r\n                由于否则没有理由使用节点。\r\n                令牌/空为此目的被认为是被重复的。确实大多数令牌\r\n                通过Quick-Scanner缓存进行重复进行，因此我们只是假设它们都是。\r\n                \r\n                由于上述，有4个或更多的孩子或其递归父母的“脂肪”节点\r\n                永远不会在缓存中。这自然会限制典型的单个缓存项目\r\n                一个相对简单的表达。我们不希望缓存完全无限\r\n                在项目大小上。\r\n                虽然仍然可以存储一个巨大的二进制表达式，但\r\n                这应该是罕见的。\r\n                \r\n                我们仅认为“正常”节点是可缓存的。\r\n                带有诊断/注释/指令/跳过等的节点，等身份更复杂\r\n                并且不太可能重复。\r\n                \r\n            \r\n","\r\n            Gets or sets a document loader.\r\n            ":"\r\n            获取或设置文档加载程序。\r\n            \r\n","Path returned by ":"返回的路径\r\n","The collection was modified after the enumerator was created. ":"在创建枚举器之后，对该集合进行了修改。\r\n","\r\n                Any file matching the ":"\r\n                任何匹配的文件\r\n","\r\n            Reduces the number of segments toward the target number of segments,\r\n            if the number of segments is deemed to be too large (beyond the maximum).\r\n            ":"\r\n            减少了针对目标段数的段数，\r\n            如果片段的数量被认为太大（超出了最大值）。\r\n            \r\n","\r\n            An enumerated value that identifies certain 'special' types such as ":"\r\n            列举某些“特殊”类型的枚举价值，例如\r\n","Formatting rules - null implies\r\n            SymbolDisplayFormat.ErrorMessageFormat.":"格式规则 - 无效\r\n            SymboldisPlayFormat.ErrormessageFormat。\r\n","\r\n            Used to normalize explicit interface implementation member names.\r\n            Only expected to be applied to interface types (and their type arguments).\r\n            ":"\r\n            用于标准化显式接口实现成员名称。\r\n            仅预期应用于接口类型（及其类型参数）。\r\n            \r\n","\r\n            Modifier used to preserve the data in the existing array when you change the size of only the last dimension.\r\n            ":"\r\n            当您仅更改最后一个维度的大小时，用于保留现有数组中数据的修饰符。\r\n            \r\n","IDispatchEx":"IDISPATCHEX\r\n","\r\n            Gets the value of the current object.\r\n            ":"\r\n            获取当前对象的值。\r\n            \r\n","s a wrapper is created that also implements\r\n            ":"创建了一个包装器，也是实施的\r\n            \r\n"," is\r\n             called multiple times is undefined.":" 是\r\n             多次称为未定义。\r\n","True if this visited all of the statements":"如果访问了所有陈述，则是真的\r\n","Object.Equals":"object.Equals\r\n","\r\n            Creates a new object initialized to a meaningful value. \r\n            ":"\r\n            创建一个初始化为有意义值的新对象。\r\n            \r\n","\r\n            True if this token has annotations of the specified annotation kind.\r\n            ":"\r\n            是的，如果该令牌具有指定注释类型的注释。\r\n            \r\n","A syntax node that represents a parsed expression. This syntax\r\n            node need not and typically does not appear in the source code referred to  SemanticModel\r\n            instance.":"表示解析表达式的语法节点。这个语法\r\n            节点无需，通常不会出现在引用Semanticmodel的源代码中\r\n            实例。\r\n","\r\n            Returns the full string representation of the nodes in this list including separators, \r\n            the first node's leading trivia, and the last node or token's trailing trivia.\r\n            ":"\r\n            返回此列表中节点的完整字符串表示形式，包括分隔符，\r\n            第一个节点的领先琐事，最后一个节点或令牌的traging琐事。\r\n            \r\n","Argument cannot be empty.":"参数不能为空。\r\n","The synthesized dynamic attributes of the local.":"局部的合成动态属性。\r\n","\r\n            Represents reference specialized field.\r\n            ":"\r\n            代表参考专业领域。\r\n            \r\n","\r\n            Write a span of text to a text writer.\r\n            ":"\r\n            将文本跨越给文本作者。\r\n            \r\n","\r\n            Points to one or more known possible locations.\r\n            ":"\r\n            指向一个或多个可能的位置。\r\n            \r\n",".\r\n                2. One or more ":"。\r\n                2.一个或多个\r\n","The script command to execute.":"执行的脚本命令。\r\n","\r\n            Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.\r\n            Null if not specified (the setting for the containing type or assembly should be used, ":"\r\n            将Unicode字符转换为ANSI字符时，启用或禁用最佳拟合映射行为。\r\n            null如果未指定（应使用包含类型或汇编的设置，\r\n","\r\n            This is a marker attribute that can be put on an interface to denote that only internal implementations\r\n            of that interface should exist.\r\n            ":"\r\n            这是一个标记属性，可以将其放在界面上表示仅内部实现\r\n            该接口应该存在。\r\n            \r\n","\r\n            Variable declared by the declaration.\r\n            ":"\r\n            声明声明的变量。\r\n            \r\n","Unresolved:":"未解决：\r\n","\r\n              Looks up a localized string similar to Analyzer Failure.\r\n            ":"\r\n              查找类似于分析仪故障的局部字符串。\r\n            \r\n","The operation is a part of Control Flow Graph":"该操作是控制流程图的一部分\r\n","\r\n            Represents the kind of a TypedConstant.\r\n            ":"\r\n            代表一种类型con。\r\n            \r\n","An optional longer localizable description of the diagnostic.":"可选的诊断更长的可本质描述。\r\n","\r\n            Local variable that stores the resources to be disposed at the end of using statement (C#, VB).\r\n            ":"\r\n            本地变量存储在使用语句（C＃，VB）结束时要处理的资源。\r\n            \r\n","\r\n             \r\n            This value is unused when ":"\r\n             \r\n            当这个值未使用时\r\n","\r\n            Stores the results of analyzer execution:\r\n            1. Local and non-local diagnostics, per-analyzer.\r\n            2. Analyzer execution times, if requested.\r\n            ":"\r\n            存储分析仪执行的结果：\r\n            1.局部和非本地诊断，每分析仪。\r\n            2.分析仪执行时间（如果要求）。\r\n            \r\n","The name of a namespace.":"名称空间的名称。\r\n","\r\n            Locals declared within the switch case section scoped to the section.\r\n            ":"\r\n            当地人在开关案例部分中声明了范围为部分。\r\n            \r\n","\r\n            Represents a dynamically bound invocation expression in C# and late bound invocation in VB.\r\n            ":"\r\n            表示C＃中的动态绑定调用表达式和VB中的晚期调用。\r\n            \r\n","Primitive type code of switch key.":"开关键的原始类型代码。\r\n","\r\n            Gets the root part of the path.\r\n            ":"\r\n            获取路径的根部。\r\n            \r\n","\r\n            via a ":"\r\n            通过\r\n","\r\n            True if the given enumerable is not null and contains at least one element.\r\n            ":"\r\n            如果给定的枚举不是零，则至少包含一个元素。\r\n            \r\n","\r\n            Loads and compiles a document with the specified category, consuming previously generated cache data.\r\n            ":"\r\n            加载并与指定类别一起编译文档，消耗先前生成的缓存数据。\r\n            \r\n","\r\n            This boolean field determines if the caller requires an optimistic OR a pessimistic analysis for such cases.\r\n            For example, invoking an instance method may likely invalidate all the instance field analysis state, i.e.\r\n            reference type fields might be re-assigned to point to different objects in the called method.\r\n            An optimistic points to analysis assumes that the points to values of instance fields don't change on invoking an instance method.\r\n            A pessimistic points to analysis resets all the instance state and assumes the instance field might point to any object, hence has unknown state.\r\n            ":"\r\n            该布尔字段确定呼叫者是否需要对此类情况进行乐观​​或悲观分析。\r\n            例如，调用实例方法可能可能使所有实例字段分析状态（即\r\n            参考类型字段可以重新分配以指向所谓方法中的不同对象。\r\n            对分析的乐观点假设实例字段的点点在调用实例方法时不会发生变化。\r\n            一个悲观的分析点重置所有实例状态，并假设实例字段可能指向任何对象，因此具有未知状态。\r\n            \r\n","ITypedArray<char>":"ItypedArray <char>\r\n","\r\n            Writes a snapshot of the V8 runtime's heap to the given stream.\r\n            ":"\r\n            将V8运行时堆的快照写入给定的流。\r\n            \r\n","\r\n            Creates a singleton list of syntax nodes.\r\n            ":"\r\n            创建一个语法节点的单例列表。\r\n            \r\n","\r\n            Containing namespace or null if this namespace is global.\r\n            ":"\r\n            如果此命名空间为全局，则包含名称空间或null。\r\n            \r\n","\r\n            Returns the list of custom modifiers, if any, associated with the ref modifier. \r\n            ":"\r\n            返回与Ref修饰符关联的自定义修饰符列表。\r\n            \r\n","\r\n            Provides bounded cache for analyzers.\r\n            Acts as a good alternative to ":"\r\n            为分析仪提供有限的缓存。\r\n            可以作为一个很好的选择\r\n","The actual encoding used.":"实际使用的实际编码。\r\n","\r\n            A list of methods that are associated with the property.\r\n            ":"\r\n            与属性关联的方法列表。\r\n            \r\n","\r\n            Realizes the array and clears the collection.\r\n            ":"\r\n            意识到数组并清除集合。\r\n            \r\n","\r\n            Runtime metadata version. \r\n            ":"\r\n            运行时元数据版本。\r\n            \r\n","The underlying syntax node.":"基础语法节点。\r\n","\r\n            Statements of the case.\r\n            ":"\r\n            案件的陈述。\r\n            \r\n","\r\n                Returns the next word in the text without consuming it.\r\n            ":"\r\n                返回文本中的下一个单词而无需消耗。\r\n            \r\n"," for member references.\r\n            ":" 用于会员参考。\r\n            \r\n","\r\n            Determines if it is possible that ":"\r\n            确定是否可能\r\n","\r\n            Returns a constructed type given its type arguments and type argument nullable annotations.\r\n            ":"\r\n            给定其类型参数和类型参数无效注释，返回构造的类型。\r\n            \r\n","\r\n            Determines if two strings are equal according to Unicode rules for case-insensitive\r\n            identifier comparison (lower-case mapping).\r\n            ":"\r\n            根据对案例不敏感的Unicode规则，确定两个字符串是否相等\r\n            标识符比较（下盘映射）。\r\n            \r\n",",\r\n            otherwise an integer between 1 and 4.\r\n            ":"，，，，\r\n            否则，整数在1到4之间。\r\n            \r\n","\r\n            Executes script code with the specified document meta-information.\r\n            ":"\r\n            用指定的文档元信息执行脚本代码。\r\n            \r\n","\r\n            Integral option to configure maximum method call chain for interprocedural dataflow analysis.\r\n            ":"\r\n            配置最大方法呼叫链的积分选项，以进行概要数据流分析。\r\n            \r\n","\r\n            True if the type is unmanaged according to language rules. False if managed or if the language\r\n            has no concept of unmanaged types.\r\n            ":"\r\n            如果根据语言规则不受管理，则为thus。如果管理的话，或者语言\r\n            没有非托管类型的概念。\r\n            \r\n","\r\n            Represents the results of a single ":"\r\n            代表一个单一的结果\r\n"," that contains the characters in the specified span of this text.\r\n            ":" 其中包含本文指定跨度中的字符。\r\n            \r\n","\r\n            Returns an array of assembly identities for assemblies referenced by this module.\r\n            Items at the same position from ReferencedAssemblies and from ReferencedAssemblySymbols \r\n            correspond to each other.\r\n            ":"\r\n            返回该模块引用的汇编数组。\r\n            参考杂志和引用Assemblysymbols的同一位置的项目\r\n            彼此对应。\r\n            \r\n"," in evaluation order.\r\n            ":" 在评估顺序中。\r\n            \r\n","\r\n             The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n             specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n             accessible.\r\n            \r\n             Does not return INamespaceOrTypeSymbol, because there could be aliases.\r\n             ":"\r\n             “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n             指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n             无障碍。\r\n            \r\n             不返回InamespaceOrtyPesymbol，因为可能会有别名。\r\n             \r\n","\r\n            Represents a compound assignment that mutates the target with the result of a binary operation.\r\n            ":"\r\n            代表一个复合分配，该分配通过二进制操作而突变目标。\r\n            \r\n"," in reversed order.\r\n            ":" 以相反的顺序。\r\n            \r\n"," to another.\r\n            ":"另一个。\r\n            \r\n","\r\n            Enables or disables access restrictions for anonymous types.\r\n            ":"\r\n            启用或禁用匿名类型的访问限制。\r\n            \r\n"," is case insensitive.\r\n            ":" 是病例不敏感的。\r\n            \r\n","\r\n              Looks up a localized string similar to Stream must be writable..\r\n            ":"\r\n              查找类似于流的本地弦必须是可写的。\r\n            \r\n","The span is not with a method\r\n            body.":"跨度不使用方法\r\n            身体。\r\n","\r\n            Gets the default instance of the AnalyzerManager for the lifetime of the analyzer host process.\r\n            ":"\r\n            获取分析仪主机流程生命周期的AnalyzerManager的默认实例。\r\n            \r\n","\r\n            Get an optional localizable description for the given diagnostic code.\r\n            ":"\r\n            为给定的诊断代码获取可选的本地化描述。\r\n            \r\n","\r\n            True, if successfully executed the actions for the given analysis scope OR all the actions have already been executed for the given analysis scope.\r\n            False, if there are some pending actions that are currently being executed on another thread.\r\n            ":"\r\n            没错，如果成功地执行了给定分析范围的操作或已经为给定的分析范围执行的所有操作。\r\n            错误，如果当前在另一个线程上执行了一些待处理的操作。\r\n            \r\n","\r\n            Unspecified location.\r\n            ":"\r\n            未指定的位置。\r\n            \r\n","\r\n            Local variable that holds on the display class instance.\r\n            ":"\r\n            在显示类实例上保留的本地变量。\r\n            \r\n",") to help contain runaway scripts.\r\n            ":"）帮助包含失控的脚本。\r\n            \r\n","\r\n            Gets all the diagnostic analyzers defined in this assembly reference, irrespective of the language supported by the analyzer.\r\n            Use this method only if you need all the analyzers defined in the assembly, without a language context.\r\n            In most instances, either the analyzer reference is associated with a project or is being queried for analyzers in a particular language context.\r\n            If so, use ":"\r\n            无论是分析仪支持的语言，获取本汇编参考中定义的所有诊断分析仪。\r\n            仅当您需要在没有语言上下文的情况下定义的所有分析仪时，才使用此方法。\r\n            在大多数情况下，分析仪参考与项目相关，或者在特定语言上下文中向分析仪询问。\r\n            如果是这样，请使用\r\n","\r\n            Represents a C# catch or VB Catch clause.\r\n            ":"\r\n            表示C＃捕获或VB捕获子句。\r\n            \r\n","\r\n            Represents a parameter in an array pseudo-method.\r\n            \r\n            NOTE: It appears that only number of indices is used for verification, \r\n            types just have to be Int32.\r\n            Even though actual arguments can be native ints.\r\n            ":"\r\n            代表阵列伪方法中的参数。\r\n            \r\n            注意：看来仅使用数量索引进行验证，\r\n            类型只需是INT32。\r\n            即使实际的论点可以是本地int。\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified resource constraints and options.\r\n            ":"\r\n            初始化具有指定资源约束和选项的新的V8脚本引擎实例。\r\n            \r\n","\r\n            This method can be used to restrict script access to the members of a particular\r\n            interface or base class.\r\n            ":"\r\n            此方法可用于限制脚本访问特定成员的访问\r\n            接口或基类。\r\n            \r\n"," with the container set to the immediate base type of\r\n             the type in which ":" 将容器设置为直接基础类型\r\n             其中的类型\r\n","\r\n            The method used to set the value of this property. May be absent (null).\r\n            ":"\r\n            用于设置此属性值的方法。可能不存在（无效）。\r\n            \r\n","\r\n            This is a re-definition of COM's IStream interface. The important change is that\r\n            the Read and Write methods take an ":"\r\n            这是COM的IStream接口的重新定义。 重要的变化是\r\n            读写方法采用 \r\n","Indicates an explicit base or MyBase expression.":"表示明确的基础或mybase表达式。\r\n","\r\n            Cached versions of commonly used delegates.\r\n            ":"\r\n            常用代表的缓存版本。\r\n            \r\n","\r\n            This operation is never exposed to script code.\r\n            ":"\r\n            此操作永远不会暴露于脚本代码。\r\n            \r\n","\r\n            Gets all the diagnostics reported by all the ":"\r\n            获取所有报告的所有诊断\r\n","s in this set. This list has been sorted per ":"在此组中。此列表已排序\r\n","\r\n            The parameters forming part of this signature.\r\n            ":"\r\n            构成此签名的一部分的参数。\r\n            \r\n","Name cannot start with whitespace.":"名称不能从空格开始。\r\n","\r\n            AnyCPU (default) compiles the assembly to run on any platform.\r\n            ":"\r\n            AnyCPU（默认值）编译汇编以在任何平台上运行。\r\n            \r\n","The task completion source.":"任务完成源。\r\n","\r\n                The available stack space is insufficient to execute\r\n                the average function.\r\n            ":"\r\n                可用的堆栈空间不足以执行\r\n                平均功能。\r\n            \r\n","\r\n            Sets method async information.\r\n            ":"\r\n            设置方法异步信息。\r\n            \r\n","s are unequal.\r\n            ":"S不平等。\r\n            \r\n","\r\n            Returns the number of tokens in the list.\r\n            ":"\r\n            返回列表中的令牌数。\r\n            \r\n","\r\n            Returns the parent trivia syntax for this structured trivia syntax.\r\n            ":"\r\n            返回此结构化琐事语法的父琐词语法。\r\n            \r\n",". The editorconfig spec defines property\r\n            keys as being compared case-insensitively according to Unicode lower-case rules.\r\n            ":"。 EditorConfig规格定义了属性\r\n            根据Unicode下案例规则对键进行比较。\r\n            \r\n","\r\n            A reference to a named type, such as an INamespaceTypeReference or an INestedTypeReference.\r\n            ":"对命名类型的引用，例如InamespaceTypeeference或InestedTypereference。\r\n            \r\n"," Property - type is unsupported ":" 属性 - 类型不支持\r\n","\r\n            Returns true if this special static factory method whose name starts with \"Create\", such that\r\n            method's containing type is static OR a special type OR derives from or is same as the type of the field/property/method return.\r\n            For example: class SomeType { static SomeType CreateXXX(...); }\r\n            ":"\r\n            如果该名称以“创建”开头的特殊静态工厂方法，则返回true，以便\r\n            方法的包含类型是静态的或特殊类型或衍生或与字段/属性/方法返回的类型相同。\r\n            例如：类：lye stype {static wory sty stype createxxx（...）; }\r\n            \r\n","\r\n            The synthesized dynamic attributes of the local definition if any, or empty.\r\n            ":"\r\n            如果有的话，则本地定义的合成动态属性。\r\n            \r\n","\r\n            The path which containts the compiler binaries and response files.\r\n            ":"\r\n            困扰编译器二进制文件和响应文件的路径。\r\n            \r\n","\r\n            Label associated with the case clause, if any.\r\n            ":"\r\n            与案例子句相关联的标签（如果有）。\r\n            \r\n","\r\n            Return AssemblySymbols referenced by the input AssemblySymbol. The AssemblySymbols must correspond \r\n            to the AssemblyNames returned by AssemblyData.AssemblyReferences property. If reference is not \r\n            resolved, null reference should be returned in the corresponding item. \r\n            ":"\r\n            输入组件符号引用的返回组合符号。组合符号必须对应\r\n            汇给汇编归还的汇编名称。如果参考不是\r\n            已解决的无效参考应在相应的项目中返回。\r\n            \r\n"," if it is not ":" 如果不是\r\n","\r\n            Type is a class.\r\n            ":"\r\n            类型是一类。\r\n            \r\n"," \r\n            it calls ":" \r\n            它打电话\r\n","\r\n            Creates a new V8 script engine instance with the specified options.\r\n            ":"\r\n            使用指定选项创建一个新的V8脚本引擎实例。\r\n            \r\n","\r\n            \r\n            All the above data should be updated at once while holding this lock.\r\n            Once lazyAssemblySymbol is set the Compilation.referenceManager field and ReferenceManager\r\n            state should not change.\r\n            ":"\r\n            \r\n            持有此锁定时，应立即更新上述数据。\r\n            一旦设置了lazyassemblysymbol。\r\n            状态不应改变。\r\n            \r\n","The set of sources that form the rooting marker whose outputs\r\n            should not be shared by any other rooting marker.":"形成其输出的生根标记的一组来源\r\n            不应由任何其他生根标记共享。\r\n","\r\n            The parameters and return type that makes up a method or property signature.\r\n            This interface models the metadata representation of a signature.\r\n            ":"\r\n            构成方法或属性签名的参数和返回类型。\r\n            该接口对签名的元数据表示建模。\r\n            \r\n","\r\n            Gets view's underlying ":"\r\n            获取视图的基础\r\n","This overload is for backwards compatibility. Do not remove.":"此过载用于向后兼容。不要删除。\r\n","\r\n            Guarded by ":"\r\n            守护\r\n","\r\n            Context for a syntax node action.\r\n            A syntax node action can use a ":"\r\n            语法节点操作的上下文。\r\n            语法节点操作可以使用\r\n","Uint32Array":"uint32array\r\n","\r\n            Current usage:\r\n             (1) C# \"is\" operator expression.\r\n             (2) VB \"TypeOf\" and \"TypeOf IsNot\" expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃“是”操作员表达式。\r\n             （2）Vb“ typeof”和“ typeof isof issof”表达式。\r\n            \r\n"," to enable the host's modeless dialogs, ":" 为了启用主机的无模式对话框，\r\n","\r\n            For user defined attributes VB allows duplicate named arguments and uses the last value.\r\n            Dev11 reports an error for pseudo-custom attributes when emitting metadata. We don't.\r\n            ":"\r\n            对于用户定义的属性，VB允许重复命名参数并使用最后一个值。\r\n            DEV11在排放元数据时报告了伪custom属性的错误。我们没有。\r\n            \r\n","\r\n            Provides a string representation of the StringText located within given span.\r\n            ":"\r\n            提供定位在给定跨度内的字符串文字的字符串表示。\r\n            \r\n","Float64Array":"float64array\r\n","\r\n            Load the rule from the XML node\r\n            ":"\r\n            从XML节点加载规则\r\n            \r\n"," that contains the merged partial configs, or ":" 包含合并的部分配置，或\r\n","\r\n            Label associated with the case clause.\r\n            https://github.com/dotnet/roslyn/issues/27602: Similar property was added to the base interface, consider if we can remove this one.\r\n            ":"\r\n            与案例子句关联的标签。\r\n            https://github.com/dotnet/roslyn/issues/27602：将类似的属性添加到基本接口中，请考虑是否可以删除此属性。\r\n            \r\n","\r\n            Reads an attribute from a node and validates that it is not empty.\r\n            ":"\r\n            从节点读取属性，并验证其不是空的。\r\n            \r\n","\r\n            An object specifying parameters with which symbols belonging to kind keywords should be formatted.\r\n            ":"\r\n            指定参数的对象应格式化属于属性关键字的符号。\r\n            \r\n","\r\n            A set that returns the inserted values in insertion order.\r\n            The mutation operations are not thread-safe.\r\n            ":"\r\n            以插入顺序返回插入值的集合。\r\n            突变操作不是线程安全。\r\n            \r\n","\r\n            Represents a local variable declaration statement.\r\n            ":"\r\n            代表局部变量声明语句。\r\n            \r\n"," is specified\r\n            or attribute System.Reflection.AssemblyKeyFileAttribute or System.Reflection.AssemblyKeyNameAttribute is applied to the \r\n            compilation assembly in source the resulting assembly is signed accordingly to the specified values/attributes.\r\n            \r\n            If null the semantics is specified by the value of attribute System.Reflection.AssemblyDelaySignAttribute \r\n            applied to the compilation assembly in source. If the attribute is not present the value defaults to \"false\".\r\n            ":" 指定\r\n            或属性system.Reflection.semblyKeykeyFileatTribute或System.Reflection.semblyKeyKeyeatTribute被应用于\r\n            源中的汇编组件将结果组件相应地签名到指定的值/属性。\r\n            \r\n            如果null，语义是由attribute system.reflection.semblydelaysignattribute指定的语义的\r\n            应用于源中的编译组件。如果属性不显示为“ false”的值默认值。\r\n            \r\n","\r\n            This indicates that friend access should be granted.\r\n            ":"\r\n            这表明应授予朋友访问。\r\n            \r\n","\r\n            Gets all the annotations of the specified annotation kind.\r\n            ":"\r\n            获取指定注释类型的所有注释。\r\n            \r\n","Stream from which the compilation's Win32 resources will be read (in RES format).  \r\n            Null to indicate that there are none. The RES format begins with a null resource entry.":"汇编的WIN32资源将被读取（以RES格式）。\r\n            null表示没有。 RES格式从零资源条目开始。\r\n"," with the specified element replaced with a new node or token.\r\n            ":" 指定的元素用新的节点或令牌替换。\r\n            \r\n","\r\n            Allows a generator to provide instances of an ":"\r\n            允许发电机提供一个实例\r\n","\r\n            Zero or more implementation overrides provided by the class.\r\n            ":"\r\n            零或更多的实施替代了班级。\r\n            \r\n","\r\n            Count of Operation block start actions.\r\n            ":"\r\n            操作块的计数开始动作。\r\n            \r\n","\r\n            Returns true if we have any pending symbol analysis for given analysis scope.\r\n            ":"\r\n            如果我们对给定的分析范围有任何未决符号分析，则返回是正确的。\r\n            \r\n","\r\n            Returns the string value of this symbol display part.\r\n            ":"\r\n            返回此符号显示部分的字符串值。\r\n            \r\n","\r\n              Looks up a localized string similar to Reported diagnostic with ID '{0}' is not supported by the analyzer..\r\n            ":"\r\n              查找与分析仪不支持具有ID'{0}'的报告诊断类似的本地化字符串。\r\n            \r\n","\r\n                Ensures that the remaining stack space is large enough to execute\r\n                the average function.\r\n            ":"\r\n                确保剩余的堆栈空间足够大，可以执行\r\n                平均功能。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# case clause.\r\n             (2) VB Case clause.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃案例子句。\r\n             （2）VB案例子句。\r\n            \r\n","\r\n            Information about how values of managed types should be marshalled to and from unmanaged types.\r\n            ":"\r\n            有关如何将托管类型价值的信息与非托管类型进行编组的信息。\r\n            \r\n",".\r\n            This option is ignored if ":"。\r\n            如果此选项被忽略\r\n","\r\n            Describes a single change when a particular span is replaced with a new text.\r\n            ":"\r\n            当特定跨度被新文本替换时，描述了一个更改。\r\n            \r\n","\r\n            Controls whether host objects provide access to the static members of their exposed types to script code.\r\n            ":"\r\n            控制主机是否提供对脚本代码暴露类型的静态成员的访问。\r\n            \r\n",", which is the second operand that is conditionally evaluated and is the result of the operation if ":"，这是进行有条件评估的第二个操作数，并且是操作的结果\r\n","The concurrent dictionary":"并发词典\r\n","Second identifier to compare":"第二个标识符比较\r\n"," in context of this expression. \r\n            It is not part of ":" 在这种表达的情况下。\r\n            它不是\r\n"," Type - if a type is unsupported (e.g., a pointer type, etc.) ":" 类型 - 如果不支持类型（例如，指针类型等）\r\n","\r\n            Creates a compiled script with the specified document meta-information.\r\n            ":"\r\n            使用指定的文档元信息创建一个编译的脚本。\r\n            \r\n"," to override it for individual type members. Note that\r\n            it has no effect on the method binding algorithm. If a script-based call is bound to a\r\n            method that is blocked by this attribute, it will be rejected even if an overload exists\r\n            that could receive the call.\r\n            ":" 为单个类型成员覆盖它。注意\r\n            它对方法结合算法没有影响。如果基于脚本的呼叫绑定到\r\n            该属性阻止的方法，即使存在过载，它也会被拒绝\r\n            可以接到电话。\r\n            \r\n","\r\n            Emit the IL for the compiled source code into the specified stream.\r\n            ":"\r\n            将编译源代码的IL发射到指定的流中。\r\n            \r\n","\r\n            Parse a response file into a set of arguments. Errors opening the response file are output into \"errors\".\r\n            ":"\r\n            将响应文件解析为一组参数。打开响应文件的错误输出到“错误”中。\r\n            \r\n"," calling ":" 打电话\r\n","\r\n            The name assigned to the True operator.\r\n            ":"\r\n            分配给真实操作员的名称。\r\n            \r\n","\r\n            The syntax offset of the syntax node declaring the lambda (lambda expression) or its body (lambda in a query).\r\n            ":"\r\n            语法偏移语法节点声明了lambda（lambda表达式）或其身体（查询中的lambda）。\r\n            \r\n","identifier to get the hash code for":"标识符以获取哈希代码\r\n","\r\n            Invoked after the parent invocation/creation operation of the given argument has been visited.\r\n            ":"\r\n            在访问了给定参数的父召唤/创建操作后，被调用。\r\n            \r\n","\r\n            The project default can change depending on the file type. Generated\r\n            files have nullable off by default, regardless of the project-level\r\n            default setting.\r\n            ":"\r\n            项目默认值可以根据文件类型更改。生成\r\n            默认情况下，文件无效，无论项目级如何\r\n            默认设置。\r\n            \r\n","\r\n            Returns a new tree whose ":"\r\n            返回一棵新树\r\n","\r\n            Compares  two ":"\r\n            比较两个\r\n","Root operation block, which must have a null parent.":"根操作块，必须具有无效父母。\r\n","\r\n            Operation to be conditionally evaluated if ":"\r\n            如果操作有条件地评估是否\r\n","\r\n            Corresponds to command line argument /optimize+.\r\n            ":"\r\n            对应于命令行参数 /优化+。\r\n            \r\n","\r\n            Specific part of the symbol to which the attributes apply, or AttributeLocation.None if the attributes apply to the symbol itself.\r\n            Used e.g. for return type attributes of a method symbol.\r\n            ":"\r\n            属性应用的符号的特定部分或属性。如果属性应用于符号本身，则无。\r\n            使用了，例如用于返回类型符号的属性。\r\n            \r\n","An unclassified part.":"一个未分类的部分。\r\n","\r\n            The candidate symbol had an accessibility modifier (private, protected, ...) that made\r\n            it inaccessible.\r\n            ":"\r\n            候选符号具有可访问性修饰符（私有，受保护的...）\r\n            它无法访问。\r\n            \r\n","\r\n            Returns the index from the list for the given ":"\r\n            从列表中返回索引\r\n","\r\n              When overridden by a derived class, this property can override the current thread's\r\n              CurrentUICulture property for diagnostic message resource lookups.\r\n            ":"\r\n              当被派生类覆盖时，此属性可以覆盖当前线程的\r\n              诊断消息资源查找的CurrentUculture属性。\r\n            \r\n","\r\n            Represents a C# try or a VB Try statement.\r\n            ":"\r\n            表示C＃尝试或VB尝试语句。\r\n            \r\n","\r\n            Offset of the field.\r\n            ":"\r\n            场地的抵消。\r\n            \r\n","\r\n            Evaluates script code with an associated document name.\r\n            ":"\r\n            用关联的文档名称评估脚本代码。\r\n            \r\n","\r\n            Note that this API doesn't execute any ":"\r\n            请注意，此API不会执行任何\r\n"," is specified, the ClearScript library uses\r\n            virtual method table patching to support JScript-specific\r\n            ":" 已指定，clearscript库使用\r\n            虚拟方法表修补以支持特定于JScript\r\n            \r\n","\r\n            or if the corresponding key is in ":"\r\n            或者如果相应的键在\r\n","A node or token is out of sequence.":"节点或令牌是不顺序的。\r\n"," at runtime if the cast fails. This is true for C#'s\r\n            ":" 在运行时，如果演员阵容失败。对于C＃的s是正确的\r\n            \r\n","\r\n            Kind of the loop.\r\n            ":"\r\n            循环。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# field initializer with equals value clause.\r\n             (2) VB field(s) initializer with equals value clause or AsNew clause. Multiple fields can be initialized with AsNew clause in VB.\r\n            ":"当前用法：\r\n             （1）具有等值子句的C＃字段初始化器。\r\n             （2）具有等值子句或ASNEW子句的VB字段（S）初始化器。可以使用VB中的ASNEW子句初始化多个字段。\r\n            \r\n","\r\n            The set of local variables which are definitely assigned a value when a region is\r\n            entered.\r\n            ":"\r\n            当区域为时，一组本地变量肯定被分配了一个值\r\n            输入。\r\n            \r\n","\r\n            Search for the ":"\r\n            搜索\r\n","The diagnostic message text.":"诊断消息文本。\r\n","\r\n            Hash algorithm to use to calculate source file debug checksums and PDB checksum.\r\n            ":"\r\n            哈希算法用于计算源文件调试校验和PDB校验和。\r\n            \r\n","dynamic module imports":"动态模块导入\r\n","\r\n            Boolean option to configure if passing a disposable object as an argument to a method invocation should be considered\r\n            as a dispose ownership transfer to the caller, primarily for CA2000 (DisposeObjectsBeforeLosingScope)\r\n            ":"\r\n            如果将一次性对象作为参数传递给方法调用，则布尔值选项应考虑\r\n            作为处置所有权转让给呼叫者，主要用于CA2000（DisposeObjectsbeforelosingscope）\r\n            \r\n","\r\n            Enclosing region. Null for ":"\r\n            封闭区域。为空\r\n","\r\n            A field is a member that represents a variable associated with an object or class.\r\n            This interface models the metadata representation of a field.\r\n            ":"\r\n            字段是代表与对象或类关联的变量的成员。\r\n            该接口对字段的元数据表示建模。\r\n            \r\n","The passed in name is interpreted as a stand-alone name, as if it\r\n            appeared by itself somewhere within the scope that encloses \"position\".":"以名称通过的名称被解释为独立名称，好像\r\n            自行出现在包围“位置”的范围内的某个地方。\r\n","Zero: ":"零：\r\n","The input token.":"输入令牌。\r\n","\r\n            Realizes the array, downcasting each element to a derived type.\r\n            ":"\r\n            实现数组，将每个元素降低到派生类型。\r\n            \r\n","\r\n            struct enumerator used in foreach.\r\n            ":"\r\n            用于foreach的结构枚举器。\r\n            \r\n",").\r\n            4) Replacing the 'File = fileName' named argument with 'Hex = hexFileContent' argument, where hexFileContent is the converted output from step 3) above.\r\n            ":"）。\r\n            4）用“ hex = hexfilecontent”参数替换命名参数的“ file = filename”参数，其中hexfilecontent是上面的步骤3的转换输出。\r\n            \r\n","\r\n            Optional branch value, which if non-null, is evaluated after ":"\r\n            可选的分支值，如果非记录，则在此之后评估\r\n","\r\n            Represents C# throw expression.\r\n            ":"\r\n            代表C＃投掷表达。\r\n            \r\n","\r\n            Represents a while or do while loop.\r\n            ":"\r\n            代表一段时间或循环时。\r\n            \r\n","\r\n            Gets the document category for normal scripts.\r\n            ":"\r\n            获取普通脚本的文档类别。\r\n            \r\n","Action to invoke if an analyzer throws an exception.":"如果分析仪引发异常，则可以调用行动。\r\n","\r\n            Current usage:\r\n             (1) C# nested collection element initializer expression within a collection initializer.\r\n                 For example, given a collection initializer \"new Class() { Y = { { x, y, 3 } } }\",\r\n                 nested collection element initializer for Y, i.e. \"{ { x, y, 3 } }\" is represented by this operation.\r\n             (2) VB nested collection element initializer expression within a collection initializer.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃嵌套集合元素初始化器表达式中的initializer中的表达式。\r\n                 例如，给定一个集合初始化程序“ new Class（）{y = {{x，y，3}}}}”，\r\n                 y的嵌套集合元素初始化器，即“ {{x，y，3}}”。\r\n             （2）vb嵌套集合元素初始化器表达式中的initializer中的表达式。\r\n            \r\n","\r\n            Gets the symbols that match the reference id string.\r\n            ":"\r\n            获取符合参考ID字符串的符号。\r\n            \r\n","\r\n            Represents an event.\r\n            ":"\r\n            代表事件。\r\n            \r\n","\r\n            Specifies that the host resource's members are to be exposed as global items in the\r\n            script engine's root namespace.\r\n            ":"\r\n            指定主机资源的成员应在\r\n            脚本引擎的根名称空间。\r\n            \r\n"," class, creates an\r\n            instance using the\r\n            ":" 班级，创建一个\r\n            实例使用\r\n            \r\n","\r\n            Specifies that script code is to have no access to type members by default.\r\n            ":"\r\n            指定脚本代码默认情况下无法访问类型成员。\r\n            \r\n","\r\n            Name of the member.\r\n            ":"\r\n            会员名称。\r\n            \r\n","\r\n            Specifies that the class or interface is imported from another module.  See\r\n            ":"\r\n            指定从另一个模块导入类或接口。看\r\n            \r\n",", \r\n            meaning there is no need to manage the lifetime of the receiver or its contents.\r\n            ":"，，，，\r\n            这意味着无需管理接收器或其内容的寿命。\r\n            \r\n"," keywords before parameters.\r\n            ":" 参数之前的关键字。\r\n            \r\n","\r\n            A reference to a type definition that is a member of a namespace definition.\r\n            ":"\r\n            对命名空间定义成员的类型定义的引用。\r\n            \r\n","\r\n            Gets the line span not including the line break.\r\n            ":"\r\n            获取线跨度不包括线路断路。\r\n            \r\n","\r\n            Indicates if the member is public or confined to its containing type, derived types and/or declaring assembly.\r\n            ":"\r\n            指示成员是公共的还是仅限于其包含类型，派生类型和/或声明的组件。\r\n            \r\n","\r\n            Determines if this symbol is equal to another, according to the rules of the provided ":"\r\n            根据提供的规则，确定此符号是否等于另一个符号\r\n","\r\n              Looks up a localized string similar to Argument to '/keepalive' option is not a 32-bit integer..\r\n            ":"\r\n              查找类似于“/keetalive”选项的参数的本地化字符串，不是32位整数。\r\n            \r\n"," at a position in the file.\r\n            ":" 在文件中的位置。\r\n            \r\n"," when predicate is just a simple string check.\r\n            ":" 当谓词只是一个简单的字符串检查。\r\n            \r\n","\r\n            Anonymous types are\r\n            ":"\r\n            匿名类型是\r\n            \r\n","\r\n            Attempts to read all of the requested bytes from the stream into the buffer\r\n            ":"\r\n            尝试将流从流到缓冲区中读取所有请求的字节\r\n            \r\n","A list of all reachable nodes, in which each node always precedes its successors":"所有可及节点的列表，其中每个节点始终先于其继任者\r\n","\r\n            A trivial DocumentationProvider which never returns documentation.\r\n            ":"\r\n            一个永不返回文档的琐碎文档提供者。\r\n            \r\n","The XML that would be written to the documentation file for the symbol.":"将写入该符号的文档文件的XML。\r\n","The type of flag set to create.":"要创建的标志类型。\r\n","\r\n            Given a message identifier (e.g., CS0219), severity, warning as error and a culture, \r\n            get the entire prefix (e.g., \"error CS0219: Warning as Error:\" for C# or \"error BC42024:\" for VB) used on error messages.\r\n            ":"\r\n            给定消息标识符（例如CS0219），严重性，警告作为错误和文化，\r\n            获取整个前缀（例如，“错误cs0219：警告为错误：对于C＃或“错误bc42024：”用于VB的错误）。\r\n            \r\n","\r\n            Methods may be on class or interfaces.\r\n            Containing classes/interfaces will be supertypes of the implementing type.\r\n            ":"\r\n            方法可以在类或接口上。\r\n            包含类/接口将是实现类型的超级型。\r\n            \r\n","\r\n            Reference to another C# or VB compilation.\r\n            ":"\r\n            参考另一个C＃或VB汇编。\r\n            \r\n","\r\n            The list of child nodes and tokens of the underlying node or token.\r\n            ":"\r\n            基础节点或令牌的子节点和令牌列表。\r\n            \r\n","\r\n            Returns null if there are no synthesized fields.\r\n            ":"\r\n            如果没有合成字段，则返回null。\r\n            \r\n","\r\n            The name assigned to the LogicalNot operator.\r\n            ":"\r\n            分配给LogicalNot运算符的名称。\r\n            \r\n","\r\n            An optional longer localizable description for the diagnostic.\r\n            ":"\r\n            可选的诊断更长的可本质描述。\r\n            \r\n","\r\n            Test the given name to see if it fits in metadata.\r\n            ":"\r\n            测试给定名称以查看是否适合元数据。\r\n            \r\n"," in a thread-safe manner.\r\n            The value is changed to ":" 以线程安全的方式。\r\n            该值已更改为\r\n","\r\n            Strongly named reference matches strongly named definition (strong identity is identity with public key or token),\r\n            Or weak reference matches weak definition.\r\n            ":"\r\n            强烈命名的参考匹配强烈命名的定义（强烈的身份是公共密钥或令牌的身份），\r\n            或弱参考与弱定义匹配。\r\n            \r\n","\r\n            The source languages to which this analyzer applies.  See ":"\r\n            该分析仪适用的源语言。看\r\n","\r\n            This will trim the root directory separator:\r\n            \"C:\\\" maps to \"C:\", and \"/\" maps to \"\"\r\n            ":"\r\n            这将修剪根目录分离器：\r\n            “ C：\\”地图为“ C：”和“/”地图为“”\r\n            \r\n"," is also zero and the slot represents a synthesized local.\r\n            ":" 也为零，插槽代表合成的局部。\r\n            \r\n","\r\n            The set of local functions that are used.\r\n            ":"\r\n            使用的本地功能集。\r\n            \r\n","\r\n             Indicates whether the operation is invalid, either semantically or syntactically.\r\n            ":"\r\n             指示该操作在语义上还是句法是无效的。\r\n            \r\n","The name of an error type.":"错误类型的名称。\r\n","\r\n            Returns the underlying token if this ":"\r\n            如果此返回基础令牌\r\n","\r\n            The lambda or method binding that this delegate is created from.\r\n            ":"\r\n            该委托人创建的lambda或方法绑定。\r\n            \r\n","The changes must not overlap.":"更改不得重叠。\r\n","\r\n            The backing dictionary. The values are never used; just the keys.\r\n            ":"背景字典。这些值永远不会使用；只是钥匙。\r\n            \r\n","\r\n            The data of the resource.\r\n            ":"\r\n            资源的数据。\r\n            \r\n","\r\n            Count of registered code block start actions.\r\n            ":"\r\n            注册代码块启动操作的计数。\r\n            \r\n"," invokes the protected ":" 调用受保护的人\r\n","\r\n            An Id that can be used to identify a metadata instance.  If two metadata instances \r\n            have the same id then they are guaranteed to have the same content.  If two metadata\r\n            instances have different ids, then the contents may or may not be the same.  As such,\r\n            the id is useful as a key in a cache when a client wants to share data for a metadata\r\n            reference as long as it has not changed.\r\n            ":"\r\n            可用于识别元数据实例的ID。如果两个元数据实例\r\n            具有相同的ID，然后保证它们具有相同的内容。如果两个元数据\r\n            实例具有不同的ID，那么内容可能会或可能不会相同。像这样，\r\n            当客户端想要共享元数据数据时，该ID可作为缓存中的键\r\n            参考只要没有改变。\r\n            \r\n","\r\n            This is intended for symbols that are ordinary symbols in the language sense, and may be\r\n            used by code, but that are simply declared implicitly rather than with explicit language\r\n            syntax.\r\n            \r\n            ":"\r\n            这是针对语言意义上的普通符号的符号，并且可能是\r\n            代码使用，但仅仅是隐式声明而不是用明确的语言声明\r\n            句法。\r\n            \r\n            \r\n","\r\n            Called to perform source generation. A generator can use the ":"\r\n            被称为执行源生成。发电机可以使用\r\n","\r\n            Indicates an exit block for a ":"\r\n            指示一个出口块\r\n","\r\n            Current usage:\r\n             (1) VB 'For ... To ... Step' loop statement\r\n            ":"\r\n            当前用法：\r\n             （1）vb'for ... to ... step'循环语句\r\n            \r\n","Non-reported diagnostic with ID '{0}' cannot be suppressed.":"无法抑制具有ID'{0}'的非报告诊断。\r\n","\r\n            Implemented by any entity that has a name.\r\n            ":"\r\n            由任何具有名称的实体实施。\r\n            \r\n","\r\n            Tries to execute symbol actions.\r\n            ":"\r\n            试图执行符号操作。\r\n            \r\n","\r\n            Marks the given symbol as fully analyzed for the given analyzer.\r\n            ":"\r\n            标记给定分析仪的给定符号为完全分析。\r\n            \r\n","The new tree.":"新树。\r\n","\r\n            Exposes a host type to script code.\r\n            ":"\r\n            将主机类型公开为脚本代码。\r\n            \r\n","\r\n            This field has associated field marshalling information.\r\n            ":"\r\n            该字段具有关联的字段编组信息。\r\n            \r\n","\r\n                    Other numeric types are possible. The exact conversions between script and .NET\r\n                    numeric types are defined by the script engine.\r\n                    ":"\r\n                    其他数字类型是可能的。脚本和.NET之间的确切转换\r\n                    数字类型由脚本引擎定义。\r\n                    \r\n","\r\n            A UIn16 value encoded as 2 bytes.\r\n            ":"\r\n            UIN16值编码为2个字节。\r\n            \r\n",". The type of all\r\n            parameters and the return value is ":"。所有类型\r\n            参数和返回值为\r\n"," that corresponds to the assembly symbol. \r\n            ":" 这对应于汇编符号。\r\n            \r\n","The programmatic identifier (ProgID) of the registered class to instantiate.":"注册类的程序化标识符（ProgID）实例化。\r\n","\r\n            result wrapping is in effect (see \r\n            ":"\r\n            结果包装有效（请参阅\r\n            \r\n","\r\n            Symbol declared by the pattern, if any.\r\n            ":"\r\n            符号按模式声明（如果有）。\r\n            \r\n","\r\n            Removes an object from leak tracking.  \r\n            \r\n            This is called when an object is returned to the pool.  It may also be explicitly \r\n            called if an object allocated from the pool is intentionally not being returned\r\n            to the pool.  This can be of use with pooled arrays if the consumer wants to \r\n            return a larger array to the pool than was originally allocated.\r\n            ":"\r\n            从泄漏跟踪中删除对象。\r\n            \r\n            当对象返回池时，这就是调用。它也可能是明确的\r\n            如果从池中分配的物体有意不退回，请调用\r\n            到游泳池。如果消费者想要\r\n            将更大的阵列返回池，而不是最初分配的。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified nodes, tokens and trivia replaced.\r\n            ":"\r\n            用指定的节点，代币和琐事更换了一个新的节点树。\r\n            \r\n","\r\n            Converts the specified value to a strongly typed ":"将指定值转换为强键\r\n","\r\n            Driver task which initializes all analyzers.\r\n            This task is initialized and executed only once at start of analysis.\r\n            ":"\r\n            驾驶员任务初始化所有分析仪。\r\n            该任务在分析开始时仅初始化，并且仅执行一次。\r\n            \r\n","\r\n            An object specifying parameters on how symbols belonging to locals should be formatted.\r\n            ":"\r\n            应向当地符号的格式格式化的对象指定参数。\r\n            \r\n"," instance with the specified name, script access setting, and script options.\r\n            ":" 带有指定名称，脚本访问设置和脚本选项的实例。\r\n            \r\n","\r\n            Returns true if signature matches signature of the property.\r\n            Signature should be in format described in MemberDescriptor.\r\n            ":"\r\n            如果签名匹配该属性的签名，则返回true。\r\n            签名应以成员描述符中描述的格式。\r\n            \r\n","The following example shows the use of a capturing delegate for a callback action that requires an\r\n             argument:":"下面的示例显示了捕获代表的使用用于回调操作\r\n             争论：\r\n"," is true and ":" 是真的\r\n","\r\n            If multiple script engines are invoking host members on the current thread, this\r\n            property gets the one responsible for the most deeply nested invocation. If no script\r\n            engines are invoking host members on the current thread, this property returns\r\n            ":"\r\n            如果多个脚本引擎在当前线程上调用主机成员，则\r\n            财产对最深层嵌套的调用负责。如果没有脚本\r\n            引擎正在当前线程中调用主机成员，此属性返回\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# conditional access expression (? or ?. operator).\r\n             (2) VB conditional access expression (? or ?. operator).\r\n            ":"\r\n            当前用法：\r\n             （1）C＃条件访问表达式（？或？操作员）。\r\n             （2）VB条件访问表达式（？或？操作员）。\r\n            \r\n","The child non-terminal node representing the syntax tree structure under this structured\r\n            trivia.":"在该结构化下代表语法树结构的儿童非末端节点\r\n            琐事。\r\n","\r\n            Gets a value indicating whether this assembly gives \r\n            ":"\r\n            获得一个值，指示此组件是否给出\r\n            \r\n","\r\n            Creates a new tree of nodes with new trivia inserted before the specified trivia.\r\n            ":"\r\n            在指定的琐事之前创建一棵新的节点的新树。\r\n            \r\n","\r\n            to get a resolved Tuple(Of NamedTypeSymbol, ImmutableArray(Of Diagnostic)) (i.e. empty after eliminating void diagnostics).\r\n            ":"\r\n            要获取已解决的元组（命名为typesymbol，immutablearray（诊断））（即消除void诊断后的空）。\r\n            \r\n","\r\n            The Field being referred to.\r\n            ":"\r\n            该字段被提及。\r\n            \r\n","\r\n            The candidate symbol was used in a way that an invocable member (method, or variable of\r\n            delegate type) was required, but the candidate symbol was not invocable.\r\n            ":"\r\n            候选符号的使用方式是可将构件（方法或变量的变量）\r\n            委托类型）是必需的，但是候选符号不可弹。\r\n            \r\n","This method does not require ":"此方法不需要\r\n","The metadata property or field name. This name is case sensitive (both VB and C#).":"元数据属性或字段名称。此名称是案例敏感的（VB和C＃）。\r\n"," type or\r\n            whose name ends with 'EventArgs'.\r\n            ":" 类型或\r\n            其名称以“ Eventargs”结尾。\r\n            \r\n",",\r\n            otherwise an integer greater than zero.\r\n            ":"，，，，\r\n            否则，整数大于零。\r\n            \r\n","\r\n              Looks up a localized string similar to Assembly signing not supported..\r\n            ":"\r\n              查找类似于不支持的汇编签名的本地化字符串。\r\n            \r\n","\r\n            Stops tracking file accesses.  \r\n            ":"\r\n            停止跟踪文件访问。\r\n            \r\n","\r\n            A ruleset that contains resolved rules or null if there were errors.\r\n            ":"\r\n            如果存在错误，则包含已解决的规则或null的规则集。\r\n            \r\n","\r\n            Creates a new node from this node with the trailing trivia replaced.\r\n            ":"\r\n            从此节点创建一个新节点，而尾随的琐事已更换。\r\n            \r\n","\r\n            Used in VB for spans inside of a \"#ExternalSource\" directive that followed an unknown span\r\n            ":"\r\n            在VB中用于跨越未知跨度的“ #ExternAlsource”指令内的跨度\r\n            \r\n","\r\n            Adds a file to consider when loading an analyzer or its dependencies.\r\n            ":"\r\n            加载分析仪或其依赖项时添加要考虑的文件。\r\n            \r\n","\r\n                void M(string str1, string str2)\r\n                {\r\n                    if (str1 != null)\r\n                    {\r\n                        if (str1 == str2)\r\n                        {\r\n                            if (str2 != null) // This is redundant as 'str1' and 'str2' are value copies on this code path. This requires copy analysis.\r\n                            {\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ":"\r\n                void M（String Str1，String Str2）\r\n                {\r\n                    如果（str1！= null）\r\n                    {\r\n                        if（str1 == str2）\r\n                        {\r\n                            if（str2！= null）//这是冗余，如'str1'和'str2'是此代码路径上的值副本。这需要复制分析。\r\n                            {\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            \r\n","The type name in metadata format (case sensitive)":"元数据格式的类型名称（情况敏感）\r\n","\r\n            The full metadata handle of the parameter definition.\r\n            ":"\r\n            参数定义的完整元数据手柄。\r\n            \r\n","Delegate to identify if the given analyzer is suppressed for the given tree.":"委托确定给定树的给定分析仪是否被抑制。\r\n","\r\n            Gets explicit descendants or self of the given ":"\r\n            得到明确的后代或自我的自我\r\n","A new node, with no parent, that has this error added to it.":"一个没有父母的新节点添加了此错误。\r\n"," do not need to\r\n            take any locks while processing.\r\n            ":" 不需要\r\n            处理时取得任何锁。\r\n            \r\n"," that can be queried to obtain more information, before generation\r\n            runs.\r\n            ":" 可以查询以获取更多信息，然后再来\r\n            运行。\r\n            \r\n","peStream":"Pestrook\r\n","A property collection containing context information for the document.":"包含文档上下文信息的属性集合。\r\n","\r\n            Prefer this over the Equals methods on ":"\r\n            优先于等于\r\n","completion of parsing a code document,":"完成解析代码文档，\r\n","\r\n            This is a bridge for APIs that are only available on CoreCLR or .NET 4.6\r\n            and NOT on .NET 4.5. The compiler currently targets .NET 4.5 and CoreCLR\r\n            so this shim is necessary for switching on the dependent behavior.\r\n            ":"\r\n            这是仅在coreclr或.net 4.6上可用的API的桥梁\r\n            并且不在.NET 4.5上。编译器当前针对.NET 4.5和CORECLR\r\n            因此，这种垫片对于打开依赖行为是必要的。\r\n            \r\n"," is greater.":" 更伟大。\r\n","\r\n            Represents a module within an assembly. Every assembly contains one or more modules.\r\n            ":"\r\n            代表组件中的模块。每个组件都包含一个或多个模块。\r\n            \r\n","\r\n            The pattern on the left.\r\n            ":"\r\n            左侧的图案。\r\n            \r\n","property, indexer":"属性，索引器\r\n","\r\n            Index into an array of assemblies (not including the assembly being built) or an array of modules, depending on ":"\r\n            索引成组装数组（不包括正在构建的组件）或一系列模块，具体取决于\r\n","\r\n            Creates a host array with the specified element type.\r\n            ":"\r\n            使用指定的元素类型创建主机数组。\r\n            \r\n","\r\n            Block can be reached either falling through\r\n            from previous block or from branch.\r\n            ":"\r\n            可以到达块\r\n            从上一个块或分支。\r\n            \r\n",") of the first ":"）第一个\r\n","Action to be executed at compilation end.":"在编译结束时执行的操作。\r\n"," with the specified element replaced with a new nodes and tokens.\r\n            ":" 指定元素用新的节点和令牌取代。\r\n            \r\n","\r\n            A syntax tree created by a ":"\r\n            由\r\n","\r\n            The number of nodes in the list.\r\n            ":"\r\n            列表中的节点数。\r\n            \r\n","\r\n            A float value encoded as 4 bytes.\r\n            ":"\r\n            浮点值编码为4个字节。\r\n            \r\n","\r\n            Exposes a host object to script code with the specified type restriction.\r\n            ":"\r\n            将主机对象公开具有指定类型限制的脚本代码。\r\n            \r\n","\r\n            Declare the following extension methods in System.Linq namespace to avoid accidental boxing of ImmutableArray{T} that implements IEnumerable{T}.\r\n            The boxing would occur if the methods were defined in Roslyn.Utilities and the file calling these methods has ":"\r\n            在System.Linq名称空间中声明以下扩展方法，以避免意外的ImmutableArray {T}实现IEnumerable {T}的拳击。\r\n            如果在Roslyn中定义了这些方法，则会发生拳击。\r\n","Previous submission has errors.":"以前的提交有错误。\r\n","The value to use if the target is currently uninitialized (default).":"如果目标当前非初始化（默认值），则使用的值。\r\n","\r\n              Looks up a localized string similar to Name cannot be null..\r\n            ":"\r\n              查找类似于名称的本地化字符串不能为null ..\r\n            \r\n"," that describe how the text changed\r\n            between this text an older version. This may be multiple detailed changes\r\n            or a single change encompassing the entire text.\r\n            ":" 描述文本如何改变\r\n            在此文本之间一个较旧的版本。这可能是多个详细的更改\r\n            或单个更改包含整个文本。\r\n            \r\n","\r\n            Predicate always evaluates to true.\r\n            ":"\r\n            谓词总是评估为true。\r\n            \r\n","\r\n            Path of the output ref assembly or null if not specified.\r\n            ":"\r\n            如果未指定，输出参考组件的路径或null的路径。\r\n            \r\n","\r\n            Register an action to be executed at completion of semantic analysis of an operation with an appropriate Kind.\r\n            An operation action can report ":"注册一项操作，以完成操作的语义分析，以适当的方式进行。\r\n            操作行动可以报告\r\n","\r\n            Null or empty.\r\n            ":"\r\n            空或空。\r\n            \r\n"," call.\r\n             ":"称呼。\r\n             \r\n","\r\n            A value of zero indicates that no line number is available.\r\n            ":"\r\n            零值表示没有行号可用。\r\n            \r\n","typed array":"键入数组\r\n","\r\n            The method definition corresponding to full metadata method handle. \r\n            Deltas are only required to support indexing into current generation.\r\n            ":"\r\n            对应于完整元数据方法的方法定义。\r\n            仅需要向当前一代索引索引。\r\n            \r\n","\r\n            This is only ever non-null in error situations.\r\n            ":"\r\n            在错误情况下，这仅是无效的。\r\n            \r\n","\r\n            Returns a new IPointerTypeSymbol representing a pointer type tied to a type in this\r\n            Compilation.\r\n            ":"\r\n            返回一个新的IpoInterTypesymbol，代表与此类型相关的指针类型\r\n            汇编。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# goto, break, or continue statement.\r\n             (2) VB GoTo, Exit ***, or Continue *** statement.\r\n            ":"\r\n            当前用法：\r\n             （1）c＃goto，中断或继续语句。\r\n             （2）vb goto，退出***或继续***语句。\r\n            \r\n","\r\n            Reference to the event to be raised.\r\n            ":"\r\n            参考要提出的事件。\r\n            \r\n","\r\n             Import options applied to implicitly resolved references.\r\n             ":"\r\n             导入选项应用于隐式解决的参考。\r\n             \r\n","\r\n            Represents a single item or many items. \r\n            ":"\r\n            代表一个或许多项目。\r\n            \r\n","\r\n            Checks if a type is a primitive of a fixed size.\r\n            ":"\r\n            检查类型是否为固定尺寸的原始性。\r\n            \r\n","\r\n            Tries to execute the symbol actions on the given symbol.\r\n            ":"\r\n            试图在给定符号上执行符号操作。\r\n            \r\n","\r\n            Returns the underlying token wrapped by the supplied ":"\r\n            返回所提供的基础令牌\r\n","\r\n            Current usage:\r\n             (1) C# \"new { ... }\" expression\r\n             (2) VB \"New With { ... }\" expression\r\n            ":"\r\n            当前用法：\r\n             （1）C＃“新{...}”表达式\r\n             （2）vb“ with {...}”表达式\r\n            \r\n","Invalid assembly name: '{0}'":"无效的汇编名称：'{0}'\r\n"," accepting a variety of optional parameters.\r\n            ":" 接受各种可选参数。\r\n            \r\n","\r\n            IOperation that has this operation as a child\r\n            ":"\r\n            小时候有这种操作\r\n            \r\n"," represents a type forwarder definition,\r\n            false if it represents a type from a linked netmodule.\r\n            ":" 代表类型转发器的定义，\r\n            false如果它代表来自链接的NetModule的类型。\r\n            \r\n","The node to read the action, it can be a rule node or an include node.":"读取操作的节点可以是规则节点或包含节点。\r\n","\r\n            True if all analyzers need to analyze and report diagnostics in generated code - we can assume all code to be non-generated code.\r\n            ":"\r\n            是的，如果所有分析仪都需要在生成的代码中分析和报告诊断 - 我们可以假设所有代码都是非生成代码。\r\n            \r\n","\r\n            If this syntax tree is not associated with a file, this value can be empty.\r\n            The path shall not be null.\r\n            \r\n            The file doesn't need to exist on disk. The path is opaque to the compiler.\r\n            The only requirement on the path format is that the implementations of \r\n            ":"\r\n            如果此语法树与文件不关联，则该值可以为空。\r\n            路径不得为无效。\r\n            \r\n            该文件不需要在磁盘上存在。该路径对编译器是不透明的。\r\n            路径格式的唯一要求是\r\n            \r\n","\r\n            Adds namespace import.\r\n            ":"\r\n            添加名称空间导入。\r\n            \r\n","\r\n            Symbols declared by the declaration. In VB, it's possible to declare multiple variables with the\r\n            same initializer. In C#, this will always have a single symbol.\r\n            ":"\r\n            声明声明的符号。在VB中，可以用\r\n            相同的初始化器。在C＃中，这将始终具有一个单个符号。\r\n            \r\n","\r\n            Creates a new token from this token with the trailing trivia specified.\r\n            ":"\r\n            使用该令牌创建一个新的令牌，并指定了尾随的琐事。\r\n            \r\n","\r\n            Returns true if there is at least one dynamic local within the MethodBody\r\n            ":"\r\n            如果方法机构中至少有一个动态局部性，则返回true\r\n            \r\n"," to get a reference to it.\r\n            ":" 获取参考。\r\n            \r\n","\r\n            Return a task that completes when the driver is initialized.\r\n            ":"\r\n            返回驱动程序初始化时完成的任务。\r\n            \r\n","\r\n            The settings that determine how fields, properties, events, and methods are displayed.\r\n            ":"确定如何显示字段，属性，事件和方法的设置。\r\n            \r\n","Named type symbol, if any.":"命名类型符号，如果有的话。\r\n","\r\n            Find out if the method overrides from target virtual method of a certain type\r\n            or it is the virtual method itself.\r\n            ":"\r\n            找出该方法是否从某种类型的目标虚拟方法覆盖\r\n            或者是虚拟方法本身。\r\n            \r\n","\r\n            Returns a new compilation with a given semantic model provider.\r\n            ":"\r\n            通过给定的语义模型提供商返回新的汇编。\r\n            \r\n","\r\n            Determines if the two nodes or tokens are equivalent.\r\n            ":"\r\n            确定两个节点或令牌是否等效。\r\n            \r\n","\r\n            C# or VB type import.\r\n            ":"\r\n            C＃或VB类型导入。\r\n            \r\n","System.Double":"System.Double\r\n","\r\n            Returns whether the property is really an indexer.\r\n            ":"\r\n            返回该属性是否真的是索引器。\r\n            \r\n","\r\n            Gets all the diagnostics for the compilation, including syntax, declaration, and\r\n            binding. Does not include any diagnostics that might be produced during emit, see\r\n            ":"\r\n            获取汇编的所有诊断，包括语法，声明和\r\n            捆绑。不包括发射过程中可能产生的任何诊断，请参阅\r\n            \r\n","Determines if nodes that are part of structured trivia are included in the list.":"确定列表中是否包括结构化琐事的一部分的节点。\r\n","\r\n              Looks up a localized string similar to Analyzer driver threw an exception of type '{0}' with message '{1}'..\r\n            ":"\r\n              查找类似于Analyzer驱动程序的本地化字符串，带有消息'{1}'..的类型“ {0}”。\r\n            \r\n",". It does not make a conclusive\r\n            determination of visibility because the compilation's strong name key is not supplied.\r\n            ":"。它不会得出结论\r\n            确定可见性，因为未提供编译的强名称密钥。\r\n            \r\n","\r\n            Returns false if any of the client arguments are invalid and true otherwise.\r\n            ":"\r\n            返回false，如果任何客户端参数无效，则否则为true。\r\n            \r\n","\r\n            Creates a new SyntaxTrivia with the specified annotations.\r\n            ":"\r\n            使用指定的注释创建一个新的语法。\r\n            \r\n","\r\n            This interface models the metadata representation of an array type reference.\r\n            ":"\r\n            该接口对数组类型参考的元数据表示模型。\r\n            \r\n","The new value referenced by ":"由\r\n"," is non-null and ":" 是非效果和\r\n","\r\n            include type symbols\r\n            ":"\r\n            包括类型符号\r\n            \r\n","\r\n            The alignment factor (in bytes) that is used to align the raw data of sections in the image file.\r\n             The value should be a power of 2 between 512 and 64K, inclusive. The default is 512.\r\n            ":"\r\n            对齐因子（在字节中）用于对齐图像文件中的部分的原始数据。\r\n             该值应为512至64K之间的2幂。默认值为512。\r\n            \r\n","\r\n            Used for implementation of ":"\r\n            用于实施\r\n","\r\n            Determine whether this node is structurally equivalent to another.\r\n            ":"\r\n            确定该节点在结构上是否等同于另一个。\r\n            \r\n","\r\n            Get the syntax node(s) where this symbol was declared in source. Some symbols (for example,\r\n            partial classes) may be defined in more than one location. This property should return\r\n            one or more syntax nodes only if the symbol was declared in source code and also was\r\n            not implicitly declared (see the IsImplicitlyDeclared property). \r\n            \r\n            Note that for namespace symbol, the declaring syntax might be declaring a nested namespace.\r\n            For example, the declaring syntax node for N1 in \"namespace N1.N2 {...}\" is the entire\r\n            NamespaceDeclarationSyntax for N1.N2. For the global namespace, the declaring syntax will\r\n            be the CompilationUnitSyntax.\r\n            ":"\r\n            获取在源中声明此符号的语法节点。一些符号（例如，\r\n            部分类）可以在多个位置定义。此属性应返回\r\n            仅在源代码中声明符号并且是一个或多个语法节点，并且\r\n            没有隐式声明（请参见IsimplicerDeclared属性）。\r\n            \r\n            请注意，对于名称空间符号，声明的语法可能会声明一个嵌套的名称空间。\r\n            例如，“命名空间n1.n2 {...}”中N1的声明语法节点是整个\r\n            n1.n2的namespacedeclarationsyntax。对于全局名称空间，声明的语法将\r\n            成为汇编单数。\r\n            \r\n","The namespace part of the split name.":"命名空间部分的拆分名称。\r\n"," information from XML with app.config schema.\r\n            ":" 来自XML的信息，带有app.config架构。\r\n            \r\n","\r\n            Creates a COM/ActiveX object and exposes it to script code with the specified options.\r\n            The registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            创建一个COM/ActiveX对象，并使用指定选项将其公开为脚本代码。\r\n            注册类由类标识符（CLSID）指定。\r\n            \r\n",",\r\n            and a ":"，，，，\r\n            和\r\n","\r\n            Failure to find any of these properties does not imply failure to decode the ObsoleteAttribute,\r\n            so we don't return a value indicating success or failure.\r\n            ":"\r\n            未能找到这些属性中的任何一个并不意味着未能解码过时的tribute，\r\n            因此，我们不会返回表示成功或失败的值。\r\n            \r\n","\r\n            Capture Id is an opaque identifier to represent an intermediate result from an ":"捕获ID是不透明的标识符，代表来自\r\n","\r\n            Textual representation of the literal.\r\n            ":"\r\n            文字的文字表示。\r\n            \r\n","\r\n            Returns a new anonymous type symbol with the given member types member names.\r\n            Anonymous type members will be readonly by default.  Writable properties are\r\n            supported in VB and can be created by passing in ":"\r\n            带有给定的成员类型成员名称的新的匿名类型符号。\r\n            默认情况下，匿名类型成员将被阅读。可写的特性是\r\n            在VB中支持，可以通过传递来创建\r\n","\r\n            If possible, changes the branch code of the current block to the short version and \r\n            updates the delta correspondingly.\r\n            ":"如果可能的话，将当前块的分支代码更改为简短版本，\r\n            相应地更新三角洲。\r\n            \r\n","\r\n                    Indexers appear as properties named \"Item\" that accept one or more index values\r\n                    as arguments. In addition, objects that implement ":"索引器以属性为“ item”的属性，接受一个或多个索引值\r\n                    作为参数。另外，实现的对象\r\n"," version of this method attempts to use\r\n            ":" 此方法的版本尝试使用\r\n            \r\n","\r\n            Returns the string representation of a decimal integer, or null if\r\n            the current lexeme is not an integer.\r\n            ":"\r\n            返回小数整数的字符串表示形式，或null\r\n            当前的词汇不是整数。\r\n            \r\n","The input stream containing the encoded text. The stream will not be closed.":"包含编码文本的输入流。该流将不会关闭。\r\n","\r\n            Type parameter of a method. For example: ":"\r\n            类型方法的参数。例如：\r\n","\r\n            Represents a null-coalescing expression.\r\n            ":"\r\n            表示无效的表达。\r\n            \r\n","A value in the pathMap is null.":"路径图中的值为null。\r\n","\r\n            Returns 'true' when the same instance could be used more than once.\r\n            Instances that return 'false' should not be tracked for the purpose \r\n            of de-duplication while serializing/deserializing.\r\n            ":"\r\n            当可以多次使用同一实例时，返回“ true”。\r\n            不应出于目的跟踪返回“ false”的实例\r\n            序列化/挑剔的同时进行删除。\r\n            \r\n","\r\n            A state object for tracking cancellation and a TaskCompletionSource.\r\n            ":"\r\n            跟踪取消和任务Completionsource的状态对象。\r\n            \r\n","\r\n             value is given that value as its unique key. Subsequent adds with the same ID will have .NNN\r\n             appended to their with an auto-incremented numeric value.\r\n             ":"\r\n             值将值作为其唯一键。随后的添加具有相同的ID将具有.nnn\r\n             用自动插入数字值附加到它们。\r\n             \r\n","\r\n            Returns debug information for local variables hoisted to state machine fields, \r\n            or null if this method isn't MoveNext method of a state machine.\r\n            ":"\r\n            返回的调试信息，用于悬挂到状态机场的本地变量，\r\n            或null，如果此方法不是状态机的MoveNext方法。\r\n            \r\n","\r\n            The name of an entry point method.\r\n            ":"\r\n            入口点方法的名称。\r\n            \r\n","\r\n            The id of the method, or null if the method wasn't assigned one.\r\n            ":"\r\n            该方法的ID，如果未分配该方法，则为null。\r\n            \r\n","\r\n            Symbol is a netmodule.\r\n            ":"\r\n            符号是NetModule。\r\n            \r\n","\r\n            Selects code caching. Code cache data is larger and more expensive to generate than\r\n            parser cache data, but it is more effective at accelerating recompilation.\r\n            ":"选择代码缓存。代码缓存数据比生成更大，生成更昂贵\r\n            解析器缓存数据，但在加速重新编译方面更有效。\r\n            \r\n","\r\n            Debug information maintained for each lambda.\r\n            ":"\r\n            为每个lambda维护的调试信息。\r\n            \r\n","An optional sequence of whitespace characters used for end of line.":"用于行末端的白色空间字符的可选序列。\r\n","\r\n            Indices that specify an individual element.\r\n            ":"\r\n            指定单个元素的索引。\r\n            \r\n","\r\n            The type of the expression after it has undergone an implicit conversion. If the type\r\n            did not undergo an implicit conversion, returns the same as Type.\r\n            ":"\r\n            表达式之后的类型经历了隐式转换。如果类型\r\n            没有进行隐式转换，返回与类型相同。\r\n            \r\n","\r\n            ToLower implements the Unicode lowercase mapping\r\n            as described in ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt.\r\n            VB uses these mappings for case-insensitive comparison.\r\n            ":"Tolower实现Unicode小写映射\r\n            如ftp://ftp.unicode.org/public/unidata/unicodedata.txt中所述。\r\n            VB使用这些映射进行不敏感的比较。\r\n            \r\n","\r\n            Resolves references to XML documents specified in source code.\r\n            ":"\r\n            解决源代码中指定的XML文档的引用。\r\n            \r\n"," for the context.\r\n            ":" 对于上下文。\r\n            \r\n","\r\n            Returns true if the type is a Script class. \r\n            It might be an interactive submission class or a Script class in a csx file.\r\n            ":"\r\n            如果类型是脚本类，则返回true。\r\n            它可能是CSX文件中的交互式提交类或脚本类。\r\n            \r\n","\r\n            Operation that has been labeled. In VB, this is always null.\r\n            ":"\r\n            已标记的操作。在VB中，这始终是无效的。\r\n            \r\n","\r\n            Opens a map of tokens to source spans.\r\n            ":"\r\n            打开一个令牌图以源跨度。\r\n            \r\n"," is equal to the provided option name\r\n            ":" 等于提供的选项名称\r\n            \r\n","\r\n            Returns diagnostics produced by given ":"\r\n            通过给定产生的回报诊断\r\n","Return type can't be void, by-ref or open generic type":"返回类型不能无效，by-ref或打开通用类型\r\n","\r\n            Pattern associated with case clause.\r\n            ":"\r\n            与案例子句相关的模式。\r\n            \r\n","\r\n              Looks up a localized string similar to Cannot deserialize type '{0}', it has no deserialization reader..\r\n            ":"\r\n              查找类似于避免的局部字符串'{0}'，它没有必要读取器。\r\n            \r\n","\r\n            Invoke the underlying HashAlgorithm's TransformBlock operation on the provided data.\r\n            ":"\r\n            在提供的数据上调用底层桥梁的基础桥梁的转换板操作。\r\n            \r\n","\r\n            Convert a float value to the bits of its representation\r\n            ":"\r\n            将浮点值转换为其表示形式的位\r\n            \r\n"," of a document.\r\n            ":" 文件。\r\n            \r\n","\r\n            The statement or expression must be fully inside a method body.\r\n            ":"\r\n            陈述或表达必须完全在方法主体内部。\r\n            \r\n","\r\n            Path to resolve.\r\n            ":"\r\n            路径来解决。\r\n            \r\n","The number of characters, beginning with ":"字符数，从\r\n","\r\n            Kinds of unary operations.\r\n            ":"\r\n            一种单一操作。\r\n            \r\n","\r\n            Returns syntax diagnostics produced by given ":"\r\n            给定产生的返回语法诊断\r\n"," contains a property with the specified name, ":" 包含带有指定名称的属性，\r\n","\r\n            Current usage:\r\n             (1) C# pattern case clause.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃模式案例子句。\r\n            \r\n",",\r\n            which is always the first block in ":"，，，，\r\n            这始终是第一个街区\r\n","\r\n            A enumeration of all of the value types that are built into the Runtime (and thus have specialized IL instructions that manipulate them).\r\n            ":"\r\n            对运行时内置的所有值类型的列举（因此具有操纵它们的专业IL指令）。\r\n            \r\n"," that called ":" 那叫\r\n","\r\n            Shim for APIs available only on CoreCLR.\r\n            ":"\r\n            仅在Coreclr上可用的API。\r\n            \r\n","\r\n            A COM IStream implementation over memory. Supports just enough for DiaSymReader's PDB writing.\r\n            Also tuned for performance:\r\n            1. SetSize (and Seek beyond the length) is very fast and doesn't re-allocate the underlying memory.\r\n            2. Read and Write are optimized to avoid copying (see ":"\r\n            记忆上的com iStream实现。足以支持Diasymreader的PDB写作。\r\n            还调整了性能：\r\n            1.设置（并超出长度）非常快，并且不会重新分配基础内存。\r\n            2.读取和写入以避免复制的优化（请参阅\r\n","\r\n            Returns true if the Unicode character is a formatting character (Unicode class Cf).\r\n            ":"\r\n            如果Unicode字符是格式化字符（Unicode类CF），则返回true。\r\n            \r\n"," version of this method returns the empty string\r\n            if script debugging features have not been enabled for the instance.\r\n            ":"此方法的版本返回空字符串\r\n            如果脚本调试功能尚未启用该实例。\r\n            \r\n","\r\n            This method overrides ":"\r\n            此方法覆盖\r\n",")was specified for the type parameter.\r\n            ":"为类型参数指定）。\r\n            \r\n","Output kind not supported.":"输出类不支持。\r\n","\r\n            Original operation, representing an executable code block, from which this control flow graph was generated.\r\n            Note that ":"\r\n            原始操作，代表可执行的代码块，从中生成了该控制流程图。\r\n            注意\r\n"," as the element type.\r\n            ":" 作为元素类型。\r\n            \r\n","cref":"克雷夫\r\n","\r\n            The last node in the list.\r\n            ":"\r\n            列表中的最后一个节点。\r\n            \r\n","\r\n            VB: Stores the return value of a function that is not accessible from user code (e.g. operator, lambda, async, iterator).\r\n            C#: Stores the return value of a method/lambda with a block body, so that we can put a sequence point on the closing brace of the body.\r\n            ":"\r\n            VB：存储从用户代码无法访问的函数的返回值（例如Operator，Lambda，async，Iterator）。\r\n            C＃：将方法/lambda的返回值存储在带有块主体的情况下，以便我们可以在身体的闭合支架上放置一个序列。\r\n            \r\n","\r\n            Register a callback that is invoked after initialization.\r\n            ":"\r\n            注册初始化后调用的回调。\r\n            \r\n","\r\n            Represents a reference to an array element.\r\n            ":"\r\n            表示对数组元素的引用。\r\n            \r\n",". Returns false if\r\n            either ":"。返回false如果\r\n            任何一个\r\n","Value too large to be represented as a 30 bit unsigned integer.":"价值太大，无法表示为30位未签名的整数。\r\n"," for 'System.Diagnostics.Contracts.Contract' type. />\r\n            ":" 对于“ system.diagnostics.contracts.contract”类型。 />\r\n            \r\n","\r\n            Realizes the array.\r\n            ":"\r\n            意识到数组。\r\n            \r\n","Optional instantiation arguments.":"可选的实例化论点。\r\n","\r\n            Compares objects based upon their reference identity.\r\n            ":"\r\n            根据对象根据其参考身份进行比较。\r\n            \r\n","\r\n            Assembly identity read from Assembly table, or null if the table is empty.\r\n            ":"\r\n            汇编身份从汇编表读取，如果表为空，则null。\r\n            \r\n","\r\n            Abstracts the ability to classify and load messages for error codes. Allows the error\r\n            infrastructure to be reused between C# and VB.\r\n            ":"\r\n            抽象能够为错误代码进行分类和加载消息的能力。允许错误\r\n            C＃和VB之间要重复使用的基础架构。\r\n            \r\n","\r\n            Create a new instance of this diagnostic with the given programmatic suppression info.\r\n            ":"\r\n            使用给定的程序化抑制信息创建此诊断的新实例。\r\n            \r\n","The span does not include the end of a line.":"跨度不包括线的末端。\r\n","\r\n            Performs the union of this state and the other state \r\n            and returns a new ":"\r\n            执行该州和另一个州的联合\r\n            并返回新的\r\n","\r\n            for the given ":"\r\n            对于给定\r\n","\r\n            Try to create a ":"\r\n            尝试创建一个\r\n",".\r\n            Contains the ":"。\r\n            包含\r\n","\r\n              Looks up a localized string similar to Invalid module name specified in metadata module '{0}': '{1}'.\r\n            ":"查找类似于元数据模块中指定的无效模块名称'{0}'：'{1}'。\r\n            \r\n","\r\n            Use this routine, rather than IUnitReference.Dispatch, to call the appropriate derived overload of an IUnitReference.\r\n            The former routine will call Visit(IAssembly) rather than Visit(IAssemblyReference), etc.\r\n            in the case where a definition is used as the reference to itself.\r\n            ":"使用此例程，而不是IunitReference.dispatch，以调用适当的IunitReference的过载。\r\n            以前的例行程序将致电访问（Iassembly），而不是访问（IassemblyReference），等等。\r\n            在将定义用作自身的引用的情况下。\r\n            \r\n","Collection types.":"收集类型。\r\n","\r\n            The project default can change depending on the file type. Generated\r\n            files have nullable off by default, regardless of of the project-level\r\n            default setting.\r\n            ":"\r\n            项目默认值可以根据文件类型更改。生成\r\n            默认情况下，文件无效，无论项目级如何\r\n            默认设置。\r\n            \r\n","\r\n            The property definitions to be emitted, in row order. These\r\n            are just the property definitions from the current generation.\r\n            ":"\r\n            属性定义要以行顺序排列。这些\r\n            只是当前一代的属性定义。\r\n            \r\n","\r\n            When invoked on a node that represents an anonymous function or a query clause [1]\r\n            with a ":"\r\n            当在表示匿名函数或查询子句[1]的节点上调用时\r\n            与\r\n","\r\n            Current usage:\r\n             (1) C# method body for constructor declaration\r\n            ":"\r\n            当前用法：\r\n             （1）c＃构造函数声明的方法主体\r\n            \r\n","\r\n            Represents a lambda expression.\r\n            ":"\r\n            代表lambda的表达。\r\n            \r\n","\r\n            Register an action to be executed at completion of semantic analysis of a ":"\r\n            注册一个措施将在完成的语义分析时执行\r\n","Max length for name.  (Expected to be at least 5.)":"名称的最大长度。 （预计至少为5。）\r\n","\r\n            Arguments of the invocation, excluding the instance argument. Arguments are in the order specified in source,\r\n            and params/ParamArray arguments have been collected into arrays. Arguments are not present\r\n            unless supplied in source.\r\n            ":"\r\n            调用的参数，不包括实例参数。参数按源中指定的顺序，\r\n            和参数参数已收集到数组中。不存在争论\r\n            除非来源提供。\r\n            \r\n","The kind of cache data to be generated.":"要生成的缓存数据。\r\n","\r\n            Returns a line number for particular location in source that is presented to the user. \r\n            ":"\r\n            返回向用户呈现的源中特定位置的行号。\r\n            \r\n","\r\n            Returns whether the nullable annotation state was inherited from the project default for this file type.\r\n            ":"\r\n            返回该文件类型的项目默认值是否从项目默认值继承了无效的注释状态。\r\n            \r\n","\r\n            Create a stream filled with default win32 resources.\r\n            ":"\r\n            创建一个充满默认Win32资源的流。\r\n            \r\n","True if there is at least one hidden region.":"如果至少有一个隐藏区域，则为thus。\r\n","Resolved symbols for the the \"Target\" argument of the global SuppressMessageAttribute.":"为全局抑制图的“目标”参数解析了符号。\r\n"," to be tested,\r\n            (2) ":" 要测试，\r\n            （2）\r\n","\r\n              Looks up a localized string similar to A language name must be specified for this option..\r\n            ":"\r\n              查找类似于语言名称的本地化字符串必须为此选项指定。\r\n            \r\n","Optional arguments for object invocation.":"对象调用的可选论点。\r\n","False to propagate the exception.":"错误以传播例外。\r\n","\r\n            Slight performance improvement.\r\n            ":"\r\n            略有性能改善。\r\n            \r\n",", null initialized ":"，原始化\r\n","Static":"静止的\r\n","\r\n            Returns the innermost control flow region of the given ":"\r\n            返回给定的最内向的控制流动区域\r\n","\r\n            Represents a reference to a property.\r\n            ":"\r\n            代表对属性的引用。\r\n            \r\n","\r\n             This flag is set by default at the start of all files.\r\n            \r\n             The project default can change depending on the file type. Generated\r\n             files have nullable off by default, regardless of the project-level\r\n             default setting.\r\n             ":"\r\n             默认情况下，该标志在所有文件的开头设置。\r\n            \r\n             项目默认值可以根据文件类型更改。生成\r\n             默认情况下，文件无效，无论项目级如何\r\n             默认设置。\r\n             \r\n","\r\n            Represents an operation that stops the execution of code abruptly.\r\n            ":"\r\n            代表一个操作，该操作突然停止执行代码。\r\n            \r\n","Analyzer '{0}' threw the following exception:\r\n            '{1}'.":"分析仪'{0}'抛出以下例外：\r\n            '{1}'。\r\n","A sorted list of TypeDef row ids, grouped by fully-qualified namespace name.":"Typedef行ID的排序列表，由完全合格的名称空间名称分组。\r\n","\r\n            Region representing a union of a ":"\r\n            代表联合的区域\r\n","\r\n            Defines a source document.\r\n            ":"\r\n            定义源文档。\r\n            \r\n",", then only\r\n            the parentheses will be shown (e.g. M()).\r\n            ":"，然后只有\r\n            括号将显示（例如M（））。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# declaration pattern.\r\n            ":"当前用法：\r\n             （1）C＃声明模式。\r\n            \r\n","\r\n            True if the instructions in this module must be compiled in such a way that the debugging experience is not compromised.\r\n            To set the value of this property, add an instance of System.Diagnostics.DebuggableAttribute to the MetadataAttributes list.\r\n            ":"是的，如果必须以这种方式来编译此模块中的说明，以使调试体验不会受到损害。\r\n            要设置此属性的值，请添加system.diagnostics.debuggableAttribute的实例中。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer '{0}' contains a null descriptor in its 'SupportedSuppressions'..\r\n            ":"\r\n              查找类似于分析仪'{0}'的局部字符串，其中包含一个null描述符，其“受支持的抑制”。\r\n            \r\n"," and\r\n            explicit ":" 和\r\n            显式\r\n","\r\n            The first part of a two part version number indicating the version of the format used to persist this module. For example, the 1 in 1.0.\r\n            ":"\r\n            两部分版本号的第一部分指示用于持续此模块的格式的版本。例如，1中的1。\r\n            \r\n","The index just past the last digit to convert":"索引刚刚超过了最后一个要转换的数字\r\n","\r\n            Compute the FNV-1a hash of a sequence of bytes\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            计算一系列字节的FNV-1A哈希\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","\r\n            Gets a list of all the diagnostics associated with the trivia.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取与琐事相关的所有诊断列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            The path which contains mscorlib.  This can be null when specified by the user or running in a \r\n            CoreClr environment.\r\n            ":"\r\n            包含MSCORLIB的路径。当用户指定或在\r\n            Coreclr环境。\r\n            \r\n","Optionally, expand <include> elements.  No impact on non-source documentation comments.":"可选，扩展<cludly>元素。对非源文档评论没有影响。\r\n","\r\n            Manages properties of analyzers (such as registered actions, supported diagnostics) for analyzer host's lifetime\r\n            and executes the callbacks into the analyzers.\r\n            \r\n            It ensures the following for the lifetime of analyzer host:\r\n            1) ":"\r\n            管理分析仪的属性（例如注册操作，支持的诊断）\r\n            并将回调执行到分析仪中。\r\n            \r\n            它确保了分析仪主机的生命周期的以下内容：\r\n            1）\r\n","\r\n            Provide options from an analyzer config file keyed on a source file.\r\n            ":"\r\n            从源文件上键入的分析仪配置文件中提供选项。\r\n            \r\n",". In VBScript these objects are the native date-time type. JScript code\r\n            can pass them to the\r\n            ":"。在vbscript中，这些对象是本地日期时间类型。 JScript代码\r\n            可以将它们传递到\r\n            \r\n","\r\n            Gets the location in terms of path, line and column after applying source line mapping directives \r\n            (":"\r\n            应用源线映射指令后，在路径，线路和列中获取位置\r\n            （（\r\n","An optional longer description of the diagnostic.":"可选的诊断更长描述。\r\n","\r\n            Detailed information about the PInvoke stub. Identifies which method to call, which module has the method and the calling convention among other things.\r\n            ":"\r\n            有关Pinvoke存根的详细信息。标识要调用的方法，哪个模块具有方法和调用约定。\r\n            \r\n","\r\n            Basic blocks for the control flow graph.\r\n            ":"\r\n            控制流程图的基本块。\r\n            \r\n","\r\n            Calls the visitor.Visit(T) method where T is the most derived object model node interface type implemented by the concrete type\r\n            of the object implementing IDefinition. The dispatch method does not invoke Dispatch on any child objects. If child traversal\r\n            is desired, the implementations of the Visit methods should do the subsequent dispatching.\r\n            ":"\r\n            调用visitor.visit（t）方法，其中t是由混凝土类型实现的最派生的对象模型节点接口类型\r\n            实现iDefinition的对象。调度方法不会在任何子对象上调用调度。如果儿童遍历\r\n            需要，访问方法的实现应进行后续派遣。\r\n            \r\n"," for every basic block in the graph.\r\n             (3) Merged analysis state for all the unhandled throw operations in the graph.\r\n            ":" 对于图中的每个基本块。\r\n             （3）图中所有未经处理的投掷操作的合并分析状态。\r\n            \r\n","completion of semantic analysis of a method body or an expression appearing outside a method body, or":"完成方法主体的语义分析或方法主体外出现的表达式或\r\n","\r\n            Returns null if there are no synthesized properties.\r\n            ":"\r\n            如果没有合成的属性，则返回null。\r\n            \r\n","\r\n            The type of value the expression represents.\r\n            ":"\r\n            表达式表示的值类型。\r\n            \r\n","\r\n            Get the location of this node or token.\r\n            ":"\r\n            获取此节点或令牌的位置。\r\n            \r\n","\r\n            Walks an IOperation tree to find catch blocks that handle general types without rethrowing them.\r\n            ":"\r\n            步行一棵ioperation树，找到处理一般类型的捕获块，而无需重新磨损它们。\r\n            \r\n","\r\n            Loads and compiles a script document, generating cache data for accelerated recompilation.\r\n            ":"\r\n            加载和编译脚本文档，生成用于加速重新编译的缓存数据。\r\n            \r\n","\r\n            The full string representation of the tokens in this list including \r\n            the first token's leading trivia and the last token's trailing trivia.\r\n            ":"\r\n            该列表中令牌的完整字符串表示，包括\r\n            第一个代币的主要琐事和最后一个令牌的拖尾琐事。\r\n            \r\n","\r\n            Creates a new syntax token identical to this one without the specified annotations.\r\n            ":"\r\n            在没有指定注释的情况下，创建一个与该语法相同的新语法令牌。\r\n            \r\n","\r\n            See BoundAggregateClause node in VB compiler.\r\n            ":"\r\n            请参阅VB编译器中的boundaggregatecla节点。\r\n            \r\n","\r\n            Used by structured trivia which has \"parent == null\", and therefore must know its\r\n            SyntaxTree explicitly when created.\r\n            ":"\r\n            由结构化的琐事使用，具有“父== null”，因此必须知道它的\r\n            创建时SyntaxTree明确。\r\n            \r\n","The invocation result value.":"调用结果值。\r\n","\r\n             An array of references passed to the compilation and resolved from #r directives.\r\n             May contain references that were skipped during resolution (they don't have a corresponding explicit assmebly).\r\n             ":"\r\n             一系列参考文献传递给了汇编并根据#R指令解决。\r\n             可能包含在分辨率期间跳过的参考文献（它们没有相应的明确表示）。\r\n             \r\n","The parent of this rule set include":"此规则集的父母包括\r\n","\r\n            Analyze data-flow within a part of a method body.\r\n            ":"\r\n            在方法主体的一部分内分析数据流。\r\n            \r\n","The sequence to convert":"转换的序列\r\n","Use in an exception filter to report a fatal error (by calling ":"在例外过滤器中使用致命错误（通过调用\r\n",".\r\n            The result of the entire expression is":"。\r\n            整个表达的结果是\r\n","Error occurred while writing PDB data.":"编写PDB数据时发生错误。\r\n","\r\n            Boolean option to exclude analysis of 'this' parameter for extension methods.\r\n            ":"\r\n            布尔值选项，排除扩展方法的“此”参数的分析。\r\n            \r\n","\r\n            Creates a new list with the specified element replaced with new nodes.\r\n            ":"\r\n            创建一个新列表，指定元素被新节点替换。\r\n            \r\n","\r\n            partial class Outer\r\n            {\r\n                partial class Inner\r\n                {\r\n                    public void Method()\r\n                    {\r\n                    }\r\n                }\r\n            }\r\n            ":"\r\n            部分类外部\r\n            {\r\n                部分级别的内部\r\n                {\r\n                    公共void方法（）\r\n                    {\r\n                    }\r\n                }\r\n            }\r\n            \r\n","\r\n            Defines a set of helper methods to classify Unicode characters.\r\n            ":"\r\n            定义一组辅助方法来对Unicode字符进行分类。\r\n            \r\n","The name of a class.":"班级的名称。\r\n","The type of the nodes being replaced.":"替换节点的类型。\r\n","\r\n            byte marker bits for uint encoded in 2 bytes.\r\n            ":"\r\n            UINT的字节标记位编码为2个字节。\r\n            \r\n","The type of the items tracked by this table":"该表跟踪的项目的类型\r\n","\r\n            Maps an immutable array to another immutable array.\r\n            ":"\r\n            将不变的阵列映射到另一个不变的阵列。\r\n            \r\n","\r\n            Enforces that the calling thread has access to the script engine.\r\n            ":"\r\n            强制执行调用线程可以访问脚本引擎。\r\n            \r\n","\r\n            Removes trailing directory separator characters\r\n            ":"\r\n            删除尾随目录分离器字符\r\n            \r\n","\r\n            The basic block to branch to if the top of the ":"\r\n            如果要分支的基本块\r\n"," with in implicit rethrown exception.\r\n            The destination basic block is null for this branch.\r\n            ":" 与隐性重新归为异常。\r\n            目的地基本块对于此分支为null。\r\n            \r\n","\r\n            The full string representation of the nodes and tokens in this list including the first node or token's leading trivia \r\n            and the last node or token's trailing trivia.\r\n            ":"\r\n            此列表中节点和令牌的完整字符串表示形式，包括第一个节点或令牌领先的琐事\r\n            还有最后一个节点或令牌的拖延琐事。\r\n            \r\n"," is optional. If the call is\r\n             omitted, the object will not be returned to the pool. The behavior of this type if ":" 是可选的。如果电话是\r\n             省略，该对象不会返回池。这种类型的行为如果\r\n","\r\n            Recursively push nexted values onto the stack for visiting\r\n            ":"\r\n            递归将接下来的值推到堆栈上以进行访问\r\n            \r\n","\r\n            Used to decode signatures of local constants returned by SymReader.\r\n            ":"\r\n            用于解码Symreader返回的本地常数的签名。\r\n            \r\n","\r\n            The underlying node wrapped by the supplied ":"\r\n            所提供的基础节点\r\n","\r\n            This is basically a lossy cache of strings that is searchable by\r\n            strings, string sub ranges, character array ranges or string-builder.\r\n            ":"\r\n            这基本上是一个有损的字符串缓存，可以通过\r\n            字符串，字符串子范围，字符阵列范围或字符串构建器。\r\n            \r\n"," to cancel.":" 取消。\r\n",". Once a\r\n            load operation has completed successfully, subsequent requests that resolve to the same\r\n            URI are expected to return the same ":"。一旦\r\n            负载操作已成功完成，随后的请求解析为相同\r\n            预计URI将返回相同的\r\n","\r\n            Called when the walker visits a token.  This method may be overridden if subclasses want\r\n            to handle the token.  Overrides should call back into this base method if they want the \r\n            trivia of this token to be visited.\r\n            ":"\r\n            沃克访问令牌时打电话给。如果子类想要，可能会覆盖此方法\r\n            处理令牌。如果他们想要\r\n            这个代币的琐事将被访问。\r\n            \r\n","\r\n            Indicates the calling convention of an entry point.\r\n            ":"\r\n            指示入口点的呼叫约定。\r\n            \r\n",".\r\n            Null if ":"。\r\n            null if\r\n","A function mapping a node to its set of successors":"函数将节点映射到其一组后继器\r\n","\r\n            Minor subsystem version\r\n            ":"次要子系统版本\r\n            \r\n"," rather than using the value of ":" 而不是使用价值\r\n","\r\n            Represents the two parts of a symbol name option when the symbol name is tighted to some specific value.\r\n            This allows to link a value to a symbol while following the symbol's documentation ID format.\r\n            ":"\r\n            当将符号名称拧紧到某个特定值时，表示符号名称选项的两个部分。\r\n            这允许在遵循符号的文档ID格式时将值链接到符号。\r\n            \r\n","\r\n            The previous submission, if any, or null.\r\n            ":"\r\n            先前的提交（如果有）或null。\r\n            \r\n","\r\n            Specifies resource constraints for a V8 runtime.\r\n            ":"\r\n            为V8运行时指定资源约束。\r\n            \r\n"," if the compilation targets .NET Framework; otherwise ":"如果汇编目标.NET框架；否则\r\n","A SuppressionDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space.":"dustressionDeScriptor必须具有一个既不是空的也不是空字符串的ID，也必须仅包含白色空间的字符串。\r\n"," value is equal to the current ":" 值等于电流\r\n","\r\n            Comparing ":"\r\n            比较\r\n","Reference properties (extern aliases, type embedding, ":"参考属性（外部别名，类型嵌入，\r\n","\r\n            Represents a SizeOf expression.\r\n            ":"\r\n            表示一个尺寸表达式。\r\n            \r\n","\r\n            Helper structure to encapsulate/cache various information about metadata name of a type and \r\n            name resolution options.\r\n            Also, allows us to stop using strings in the APIs that accept only metadata names, \r\n            making usage of them less bug prone.\r\n            ":"\r\n            辅助/缓存的辅助结构有关类型的元数据名称的各种信息和\r\n            名称分辨率选项。\r\n            此外，允许我们停止使用仅接受元数据名称的API中的字符串，\r\n            使它们的使用量减少了容易发生的虫子。\r\n            \r\n",") of the assembly.\r\n            Shall only throw ":"）组件。\r\n            只能投掷\r\n","\r\n            Returns the offset in ":"\r\n            返回偏移\r\n","\r\n            Is this a symbol for a tuple .\r\n            ":"这是元组的象征。\r\n            \r\n","\r\n            The parsed representation of a source document.\r\n            ":"\r\n            源文档的解析表示。\r\n            \r\n","\r\n            Used for import strings, locals, and local constants.\r\n            ":"\r\n            用于进口字符串，当地人和本地常数。\r\n            \r\n","\r\n            Sets an element value in a dynamic host object that implements ":"\r\n            在实现的动态主机对象中设置元素值\r\n","\r\n            Provides a hash function for ":"\r\n            提供哈希功能\r\n","\r\n            Parses documentation comments as structured trivia, but do not report any diagnostics.\r\n            ":"\r\n            解析文档评论为结构化琐事，但没有报告任何诊断。\r\n            \r\n","\r\n            Diagnostic suppressed by this suppression.\r\n            ":"这种抑制作用抑制了诊断。\r\n            \r\n","A duplicate of the SymbolDisplayFormat, with an additional set of ":"SymboldisPlayFormat的重复，还有一组\r\n","Stream to which the compilation's debug info will be written.  Null to forego PDB generation.":"汇编的调试信息将被撰写的流。 null至Ferego PDB生成。\r\n","\r\n              Looks up a localized string similar to {0} must either be 'default' or have the same length as {1}..\r\n            ":"\r\n              查找类似于{0}的本地化字符串必须为'默认值'，或具有与{1} ..的长度相同的长度。\r\n            \r\n","\r\n            Event being bound.\r\n            ":"\r\n            事件被束缚。\r\n            \r\n","\r\n            Specifies that all long integers are to be marshaled as\r\n            ":"\r\n            指定所有长整数都应被编写为\r\n            \r\n","\r\n            The static local variable that is possibly initialized.\r\n            ":"\r\n            可能初始化的静态局部变量。\r\n            \r\n","\r\n            True if the DiagnosticInfo for this diagnostic requires (or required - this property\r\n            is immutable) resolution.\r\n            ":"\r\n            如果需要此诊断的诊断（或要求 - 此属性）\r\n            是不变的）解决方案。\r\n            \r\n","\r\n            Converts a sequence to an immutable array.\r\n            ":"\r\n            将序列转换为不变的阵列。\r\n            \r\n","\r\n            When this property is set to ":"\r\n            当此属性设置为\r\n","\r\n            Initializes a new V8 script engine instance with the specified resource constraints, options, and debug port.\r\n            ":"\r\n            用指定的资源约束，选项和调试端口初始化新的V8脚本引擎实例。\r\n            \r\n","\r\n            Errors encountered when trying to read the additional file. Always empty if\r\n            ":"\r\n            试图读取其他文件时遇到的错误。始终为空\r\n            \r\n","\r\n            Gets a value indicating whether the current object has a value.\r\n            ":"\r\n            获取一个指示当前对象是否具有值的值。\r\n            \r\n","\r\n            Creates an id string used by external documentation comment files to identify declarations\r\n            of types, namespaces, methods, properties, etc.\r\n            ":"\r\n            创建一个由外部文档使用的ID字符串来识别声明\r\n            类型，名称空间，方法，属性等\r\n            \r\n","A string specifying the document to be loaded and evaluated.":"指定要加载和评估文档的字符串。\r\n","\r\n            Includes the modifiers of the member.\r\n            For example, \"static readonly\" in C# or \"Shared ReadOnly\" in Visual Basic.\r\n            ":"\r\n            包括成员的修饰符。\r\n            例如，在Visual Basic中的C＃或“共享Readonly”中的“静态读取”。\r\n            \r\n","Type to search for field.":"输入以搜索字段。\r\n","\r\n            Returns true if the bag has any diagnostics with DefaultSeverity=Error. Does not consider warnings or informationals\r\n            or warnings promoted to error via /warnaserror.\r\n            ":"\r\n            如果袋有任何诊断，则返回true，defaultSeverity =错误。不考虑警告或信息\r\n            或警告通过 /warnaserror促进了错误。\r\n            \r\n","\r\n            Sets source server data blob (srcsvr stream).\r\n            ":"\r\n            设置源服务器数据BLOB（SRCSVR流）。\r\n            \r\n","\r\n            The underlying field\r\n            ":"\r\n            基础领域\r\n            \r\n","A host type collection: ":"主机类型集合：\r\n","\r\n            Gets a type by its full type name and cache it at the compilation level.\r\n            ":"\r\n            通过其完整类型的名称获取类型，并在编译级别缓存。\r\n            \r\n","The maximum value that a version component may have.":"版本组件可能具有的最大值。\r\n",".\r\n            Leaves the ":"。\r\n            离开\r\n","The equality comparer for values in the set.":"集合中值的平等比较。\r\n","\r\n            Used to match AssemblyRef with AssemblyDef.\r\n            ":"用于将assemblyref与assemblyDef匹配。\r\n            \r\n"," operator and VB 'AndAlso' operator.\r\n            ":" 操作员和VB'andolso'操作员。\r\n            \r\n","\r\n            The expression has not been analyzed, or the syntax is\r\n            not an expression (such as a statement).\r\n            ":"\r\n            该表达式尚未分析，或者语法为\r\n            不是表达式（例如语句）。\r\n            \r\n","\r\n            Sequence of absolute paths used to search for sources specified as #load directives.\r\n            ":"\r\n            绝对路径的顺序用于搜索指定为#load指令的源。\r\n            \r\n","\r\n            Slot index or -1 if not applicable.\r\n            ":"\r\n            插槽索引或-1（如果不适用）。\r\n            \r\n","\r\n            Removes a property from a dynamic host object that implements ":"\r\n            从动态主机对象中删除属性\r\n","\r\n            Represents structured trivia that contains skipped tokens. This is implemented by\r\n            ":"\r\n            代表包含跳过令牌的结​​构化琐事。这是由\r\n            \r\n",", you must\r\n            release all references to the script engine so the garbage collector can reclaim the\r\n            memory that the script engine was occupying.\r\n            ":"， 你必须\r\n            发布所有对脚本引擎的引用，以便垃圾收集器可以收回\r\n            脚本引擎正在占据的记忆。\r\n            \r\n","\r\n            The visibility has not been specified. Use the applicable default.\r\n            ":"\r\n            尚未指定可见性。使用适用的默认值。\r\n            \r\n"," to not emit any generated files.\r\n            ":" 不要发出任何生成的文件。\r\n            \r\n","\r\n             0 if the reference is equivalent to the definition.\r\n            -1 if version of the matched definition is lower than version of the reference, but the reference otherwise matches the definition.\r\n            +1 if version of the matched definition is higher than version of the reference, but the reference otherwise matches the definition.\r\n              \r\n            Undefined unless ":"\r\n             0如果引用等同于定义。\r\n            -1如果匹配定义的版本低于参考版本，但参考否则否则匹配定义。\r\n            +1如果匹配的定义版本高于参考版本，但参考否则否则与定义匹配。\r\n              \r\n            除非不确定\r\n","\r\n            Nullable warnings are enabled and will be reported by default.\r\n            ":"\r\n            启用了无效警告，默认情况下将报告。\r\n            \r\n","\r\n            True if the argument value must be included in the marshalled arguments passed to a remote callee only if it is different from the default value (if there is one).\r\n            ":"\r\n            正确，如果必须将参数值包含在传递给遥控器的编组参数中，则仅当其与默认值不同时（如果有一个）。\r\n            \r\n","The new nodes and tokens.":"新节点和令牌。\r\n"," and\r\n            the dispose ":" 和\r\n            处置\r\n","A wrapped generator that can be passed to a generator driver":"可以传递给发电机驱动程序的包装发电机\r\n","\r\n            Creates a new tree of nodes with the specified nodes, tokens or trivia replaced.\r\n            ":"\r\n            用指定的节点，令牌或琐事更换了一棵新的节点树。\r\n            \r\n","\r\n            Gets the symbol name. Returns the empty string if unnamed.\r\n            ":"\r\n            获取符号名称。如果未命名，则返回空字符串。\r\n            \r\n","\r\n            Indicates disposable locations that are not disposed.\r\n            ":"\r\n            表示未处理的一次性位置。\r\n            \r\n","\r\n            Catch clauses of the try.\r\n            ":"\r\n            捕捉尝试的条款。\r\n            \r\n","\r\n            Helper class to detect ":"\r\n            辅助课程检测\r\n","\r\n            If a debugger is attached, it will present the specified script code to the user as a\r\n            document with an automatically selected name. This document will not be discarded\r\n            after execution.\r\n            ":"\r\n            如果附加了调试器，它将将指定的脚本代码呈现给用户\r\n            具有自动选择名称的文档。该文档不会被丢弃\r\n            执行后。\r\n            \r\n","Abstract value of return value.":"回报值的抽象值。\r\n","\r\n            Gets or sets a semicolon-delimited list of supported file name extensions.\r\n            ":"\r\n            获取或设置一个被支持的文件名扩展名列表。\r\n            \r\n","The type to convert to a host type.":"转换为主机类型的类型。\r\n","\r\n            method, the type ":"\r\n            方法，类型\r\n","\r\n            Instance representing sealed custom attribute bag with no attributes.\r\n            ":"\r\n            代表没有属性的密封自定义属性袋的实例。\r\n            \r\n","\r\n            A managed executable specifically marked as 64-bit\r\n            ":"\r\n            专门标记为64位的托管执行\r\n            \r\n","\r\n            Gets all declaration symbols that match the declaration id string\r\n            ":"\r\n            获取与声明ID字符串匹配的所有声明符号\r\n            \r\n"," with the specified token replaced with a new token.\r\n            ":" 指定的令牌用新令牌代替。\r\n            \r\n"," to ensure sufficient stack while recursively visiting the operation tree.\r\n            ":" 为了确保足够的堆栈，同时递归访问操作树。\r\n            \r\n","\r\n            Represents a textual literal numeric, string, etc. expression.\r\n            ":"\r\n            代表文本文字数字，字符串等。\r\n            \r\n","\r\n            Gets the category of diagnostic. For diagnostics generated by the compiler, the category will be \"Compiler\".\r\n            ":"\r\n            获取诊断类别。对于编译器生成的诊断，该类别将是“编译器”。\r\n            \r\n","Invalid compilation options -- submission can't be signed.":"无效的汇编选项 - 不能签署提交。\r\n","\r\n            Map of serialized object's reference ids.  The object-reference-map uses reference equality\r\n            for performance.  While the string-reference-map uses value-equality for greater cache hits \r\n            and reuse.\r\n            \r\n            These are not readonly because they're structs and we mutate them.\r\n            \r\n            When we write out objects/strings we give each successive, unique, item a monotonically \r\n            increasing integral ID starting at 0.  I.e. the first object gets ID-0, the next gets \r\n            ID-1 and so on and so forth.  We do *not* include these IDs with the object when it is\r\n            written out.  We only include the ID if we hit the object *again* while writing.\r\n            \r\n            During reading, the reader knows to give each object it reads the same monotonically \r\n            increasing integral value.  i.e. the first object it reads is put into an array at position\r\n            0, the next at position 1, and so on.  Then, when the reader reads in an object-reference\r\n            it can just retrieved it directly from that array.\r\n            \r\n            In other words, writing and reading take advantage of the fact that they know they will\r\n            write and read objects in the exact same order.  So they only need the IDs for references\r\n            and not the objects themselves because the ID is inferred from the order the object is\r\n            written or read in.\r\n            ":"\r\n            序列化对象的参考ID的地图。对象参考映射使用参考平等\r\n            表演。当字符串参考映射使用值等于更大的缓存命中\r\n            并重复使用。\r\n            \r\n            这些不是因为它们的结构而被阅读，我们将它们变异。\r\n            \r\n            当我们写出对象/字符串时，我们将每个连续的，独特的项目单调地提供一个\r\n            从0开始增加积分ID。即第一个对象获得ID-0，下一个对象获取\r\n            ID-1等等。我们确实 *不 *将这些ID包含在对象时\r\n            写出。我们仅在写作时再次击中对象 *时，我们才包括ID。\r\n            \r\n            在阅读过程中，读者知道给出每个对象，它单调读取相同\r\n            增加积分价值。即它读取的第一个对象是将位于位置的数组\r\n            0，下一个位置1，依此类推。然后，当读者在对象参考中读取时\r\n            它可以直接从该数组中检索。\r\n            \r\n            换句话说，写作和阅读利用了他们知道他们会知道的事实\r\n            以完全相同的顺序编写和读取对象。因此，他们只需要参考的ID\r\n            而不是对象本身，因为从对象是从对象的顺序中推断出ID\r\n            写或阅读。\r\n            \r\n","The class identifier (CLSID) of the registered class to import.":"注册类的类标识符（CLSID）导入。\r\n"," instances generated for member and element reference operations.\r\n            ":"为成员和元素参考操作生成的实例。\r\n            \r\n","\r\n            Stream containing information linking the compilation to a source control.\r\n            ":"\r\n            流包含将汇编链接到源控件的信息。\r\n            \r\n","An optional cancellation token.":"可选取消令牌。\r\n","\r\n            The absolute span of this token in characters, including its leading and trailing trivia.\r\n            ":"\r\n            这个令牌的绝对跨度，包括其领先和尾随的琐事。\r\n            \r\n"," is equal to another.\r\n            ":" 等于另一个。\r\n            \r\n","Analyzer '{0}' contains a null descriptor in its 'SupportedDiagnostics'.":"分析仪'{0}'在其“支持诊断”中包含一个空描述符。\r\n","; otherwise 0.":";否则0。\r\n"," (explicit + implicit).\r\n             ":" （显式 +隐式）。\r\n             \r\n","Language specific representation for a compilation":"汇编的语言特定表示\r\n","'s Kind matches one of the operation kind values.":"的友善匹配操作类值之一。\r\n"," representing partial analysis state for the given event for the given analyzer.\r\n            ":" 代表给定分析仪给定事件的部分分析状态。\r\n            \r\n","\r\n            Enumerates the script object's property indices.\r\n            ":"\r\n            列举脚本对象的属性索引。\r\n            \r\n","\r\n            Represents a VB raise event statement.\r\n            ":"\r\n            代表VB提升事件声明。\r\n            \r\n","\r\n            String option to configure names of additional string formatting methods (separated by '|') for CA2241 (https://docs.microsoft.com/visualstudio/code-quality/ca2241).\r\n            Allowed method name formats:\r\n              1. Method name only (includes all methods with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format\r\n                 with an optional \"M:\" prefix.\r\n            ":"\r\n            为CA2241（https://docs.microsoft.com/visualstudio/code-quality/ca2241）配置其他字符串格式化方法的名称（由'|'分开）的字符串选项。\r\n            允许的方法名称格式：\r\n              1.仅方法名称（包括所有具有名称的方法，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format\r\n                 带有可选的“ M：”前缀。\r\n            \r\n","\r\n            Maps specified token to a source span.\r\n            ":"\r\n            指定令牌的映射到源跨度。\r\n            \r\n","\r\n            Reference to an instance of the containing type. Used for ":"引用包含类型的实例。用于\r\n","Analyzer to be checked for suppression.":"分析仪将被检查是否抑制。\r\n","A new, empty dictionary, suitable for use as the fully populated map.":"一个新的空词典，适合用作完全填充的地图。\r\n"," implementation allocates a ":" 实施分配a\r\n","\r\n              Looks up a localized string similar to PE image doesn't contain managed metadata..\r\n            ":"\r\n              查找类似于PE图像的本地化字符串不包含托管元数据。\r\n            \r\n"," and attach it to the given compilation. \r\n            ":" 并将其连接到给定的汇编。\r\n            \r\n","True if the diagnostic is enabled by default":"如果默认启用诊断，则为true\r\n"," is not recommended.\r\n            ":" 不建议。\r\n            \r\n","\r\n            The local variables of the method.\r\n            ":"\r\n            该方法的局部变量。\r\n            \r\n"," where the dot that starts an extension is, or -1 if the path doesn't have an extension.\r\n            ":" 启动扩展的点的位置是，如果路径没有扩展名，则-1。\r\n            \r\n","Submissions can reference symbols from previous submissions and their referenced assemblies, even\r\n            though those references are missing from ":"提交可以参考先前提交的符号及其引用的组件，甚至可以参考\r\n            虽然这些参考缺失了\r\n","\r\n            Compute the FNV-1a hash of a sequence of bytes and determines if the byte\r\n            sequence is valid ASCII and hence the hash code matches a char sequence\r\n            encoding the same text.\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            计算一个字节序列的FNV-1A哈希，并确定字节是否是否\r\n            序列是有效的ASCII，因此哈希代码与char序列匹配\r\n            编码相同的文本。\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","\r\n            Returns true if the given ":"\r\n            如果给定\r\n","\r\n            Returns the top-level nullability of the type arguments that have been substituted\r\n            for the type parameters. If nothing has been substituted for a given type parameter,\r\n            then ":"\r\n            返回已替换的类型参数的顶级无效性\r\n            对于类型参数。如果没有什么可以代替给定类型参数，\r\n            然后\r\n","\r\n            Attribute constructor used to specify automatic application of a diagnostic analyzer.\r\n            ":"\r\n            用于指定自动应用诊断分析仪的属性构造函数。\r\n            \r\n","\r\n            Type is a dummy type.\r\n            ":"\r\n            类型是虚拟类型。\r\n            \r\n","\r\n            Unique flow capture Id across interprocedural flow graph.\r\n            This type essentially wraps each ":"\r\n            跨副局流程图的独特流捕获ID。\r\n            这种类型本质上包裹着每种\r\n"," containing information about the primary source.":" 包含有关主要来源的信息。\r\n"," if there were no partial configs":" 如果没有部分配置\r\n","\r\n              Looks up a localized string similar to Value for argument '/shared:' must not be empty.\r\n            ":"\r\n              查找类似于参数的值的本地化字符串'/shared：'必须为空。\r\n            \r\n","\r\n            Represents an anonymous function operation.\r\n            ":"\r\n            代表匿名功能操作。\r\n            \r\n","\r\n            Symbol is a preprocessing/conditional compilation constant.\r\n            ":"\r\n            符号是预处理/条件汇编常数。\r\n            \r\n","\r\n            Valid values are 0, 512, 1024, 2048, 4096 and 8192.\r\n            If the value is 0 the file alignment is determined based upon the value of ":"\r\n            有效值为0、512、1024、2048、4096和8192。\r\n            如果值为0，则根据文件对齐的值\r\n",", or \"neutral\" (any casing) to represent ":"，或“中性”（任何壳体）代表\r\n","\r\n            Creates a new compilation without any metadata references.\r\n            ":"\r\n            创建一个新的汇编，而无需任何元数据参考。\r\n            \r\n","\r\n            Create a SuppressionDescriptor, which provides a localizable justification about a programmatic suppression of a ":"\r\n            创建一个suppressionDeScriptor，它为程序抑制提供了可本质的理由\r\n","\r\n            The name assigned to the destructor.\r\n            ":"\r\n            分配给灾难的名称。\r\n            \r\n","The result of the operation, which is usually a new dynamic host object.":"操作的结果，通常是新的动态主机对象。\r\n"," causes extension\r\n            methods to be excluded from property enumeration. This affects all host objects exposed\r\n            in the current script engine. Note that extension methods remain both retrievable and\r\n            invocable regardless of this property's value.\r\n            ":" 导致延伸\r\n            可以从财产枚举中排除的方法。这会影响暴露的所有主机对象\r\n            在当前的脚本引擎中。请注意，扩展方法既可以检索，又可以\r\n            不管该属性的价值如何。\r\n            \r\n","\r\n            Names of defined preprocessor symbols.\r\n            ":"\r\n            定义的预处理器符号的名称。\r\n            \r\n","\r\n            Represents an argument value that has been omitted in an invocation.\r\n            ":"\r\n            表示已在调用中省略的参数值。\r\n            \r\n"," if the lambda is static, or\r\n            ":" 如果lambda是静态的，或者\r\n            \r\n","Whether there are any less significant nonzero bits in the value":"该值中是否没有明显的非零位\r\n","\r\n            Symbol updated.\r\n            ":"\r\n            符号更新。\r\n            \r\n","\r\n            Indicates a C# foreach loop or a VB For Each loop.\r\n            ":"\r\n            指示每个循环的C＃foreach循环或VB。\r\n            \r\n"," keyword for ref-locals.\r\n            ":" Ref-Locals的关键字。\r\n            \r\n","\r\n            Gets the symbols captured from the enclosing function(s) by the given lambda or local function.\r\n            ":"\r\n            通过给定的lambda或本地函数从封闭功能中获取符号。\r\n            \r\n"," collection. There is a 1-to-1 mapping\r\n            where each entry is either the unwrapped incremental generator or a wrapped ":" 收藏。有一个1比1的映射\r\n            每个条目是未包装的增量发电机或包装的\r\n",".\r\n            Reports inconsistencies to the given diagnostic bag.\r\n            ":"。\r\n            报告给定诊断袋的不一致。\r\n            \r\n","\r\n            Individual variable declarations declared by this multiple declaration.\r\n            ":"\r\n            该多重声明声明的单个变量声明。\r\n            \r\n","\r\n            The original args minus the client args, if no errors were encountered.\r\n            ":"\r\n            如果没有遇到错误，则原始args减去了客户端的ARG。\r\n            \r\n","\r\n            Returns a value that is greater than ":"\r\n            返回一个大于\r\n"," for \"System.IAsyncDisposable\"\r\n            ":" 对于“ system.iasyncdisposable”\r\n            \r\n","\r\n            Marks the given event as fully analyzed for the unprocessed analyzers in the given analysisScope.\r\n            ":"\r\n            将给定的事件标记为给定分析中未加工的分析仪的完全分析。\r\n            \r\n","\r\n            Linked assembly names to be stored to native PDB (VB only).\r\n            ":"\r\n            链接的汇编名称要存储到本机PDB（仅VB）。\r\n            \r\n","\r\n            operator.\r\n            ":"\r\n            操作员。\r\n            \r\n"," is present in the set.\r\n            ":" 在集合中存在。\r\n            \r\n","\r\n            The size of mapped field data stream.\r\n            Aligned to ":"\r\n            映射字段数据流的大小。\r\n            对齐\r\n"," instance that was thrown by the generator, or ":" 发电机抛出的实例，或\r\n","\r\n            Manifest module.\r\n            ":"\r\n            清单模块。\r\n            \r\n","\r\n            Returns objects to the pool.\r\n            ":"\r\n            将对象返回池。\r\n            \r\n","\r\n            Gets a case-insensitive hash code for VB identifiers.\r\n            ":"\r\n            为VB标识符获取不敏感的哈希码。\r\n            \r\n","The host type for which to get the ":"主机类型\r\n","\r\n            extensions that otherwise interfere with some host object functionality. Virtual method\r\n            table patching is a very low-level mechanism with global effect. This option specifies\r\n            that virtual method table patching is not to be enabled on behalf of the current\r\n            ":"\r\n            否则会干扰某些主机对象功能的扩展。虚拟方法\r\n            表修补是一种非常低级的机制，具有全球效果。此选项指定\r\n            该虚拟方法表修补不代表当前\r\n            \r\n"," for the given compilation.\r\n            ":" 对于给定的汇编。\r\n            \r\n"," is null, empty or contains a NUL character.":" 为空，空或包含一个nul字符。\r\n","\r\n            Reference doesn't match definition.\r\n            ":"\r\n            参考不匹配定义。\r\n            \r\n","\r\n            Gets the modules in this assembly. (There must be at least one.) The first one is the main module\r\n            that holds the assembly manifest.\r\n            ":"\r\n            获取此组件中的模块。 （必须至少有一个。）第一个是主模块\r\n            这持有组装的清单。\r\n            \r\n"," with the specified\r\n             ":" 与指定的\r\n             \r\n","\r\n            Represents unknown loop kind.\r\n            ":"\r\n            代表未知循环类型。\r\n            \r\n","\r\n            A reference to the user defined type to which the variant values of all elements of the safe array must belong.\r\n            (The element type of a safe array is VARIANT. The tag fields will all be either VT_DISPATCH or VT_UNKNOWN or VT_RECORD.\r\n            The \"user defined sub type\" specifies the type of value the ppdispVal/ppunkVal/pvRecord fields of the element values may point to.)\r\n            ":"\r\n            对用户定义的类型的引用，安全数组所有元素的变体值都必须属于该类型。\r\n            （安全数组的元素类型是变体。标签字段将全部为vt_dispatch或vt_unknown或vt_record。\r\n            “用户定义的子类型”指定了元素值的ppdispval/ppunkval/pvrecord字段的值。）\r\n            \r\n","\r\n            Returns all diagnostics produced by compilation and by all ":"\r\n            返回通过编译和所有人产生的所有诊断\r\n"," does not exist or cannot be accessed.":" 不存在或无法访问。\r\n","\r\n             Compares ":"比较\r\n","\r\n            or less than\r\n            ":"\r\n            或少于\r\n            \r\n"," is required to enforce thread affinity.\r\n            ":" 是执行线程亲和力所必需的。\r\n            \r\n","\r\n            Fully qualified name of the containing namespace.\r\n            ":"\r\n            包含名称空间的完全合格名称。\r\n            \r\n","\r\n            If this is a partial method declaration without a body, and the method is\r\n            implemented with a body, returns that implementing definition.  Otherwise\r\n            null.\r\n            ":"\r\n            如果这是没有身体的部分方法声明，该方法是\r\n            用身体实施，返回该定义。否则\r\n            无效的。\r\n            \r\n","\r\n            Specifies that documents may be loaded from any location.\r\n            ":"\r\n            指定可以从任何位置加载文档。\r\n            \r\n",", if specified, is invoked as a final step before the\r\n            function exits.\r\n            ":"，如果指定，则将其作为最后一步\r\n            功能退出。\r\n            \r\n"," values \r\n            until they are actually needed.\r\n            ":" 值\r\n            直到实际需要。\r\n            \r\n"," is its simple name.\r\n            \r\n            Unless ":" 是它的简单名称。\r\n            \r\n            除非\r\n","\r\n            Get the warning level for warnings (e.g., 1 through 4 for C#). VB does not have warning\r\n            levels and always uses 1. Errors should return 0.\r\n            ":"\r\n            获取警告级别的警告级别（例如，C＃1至4）。 VB没有警告\r\n            级别并始终使用1.错误应返回0。\r\n            \r\n","\r\n            Only the initial baseline is created using this method; subsequent baselines are created\r\n            automatically when emitting the differences in subsequent compilations.\r\n            \r\n            When an active method (one for which a frame is allocated on a stack) is updated the values of its local variables need to be preserved.\r\n            The mapping of local variable names to their slots in the frame is not included in the metadata and thus needs to be provided by \r\n            ":"\r\n            仅使用此方法创建初始基线；随后创建了基线\r\n            在发出随后的汇编差异时自动。\r\n            \r\n            当有活动方法（将帧分配在堆栈上）更新时，需要保留其本地变量的值。\r\n            元数据中未包含将局部变量名称映射到框架中其插槽的映射，因此需要由\r\n            \r\n","\r\n            If a debugger is attached, it will present the specified script code to the user as a\r\n            document with an automatically selected name. This document will be discarded after\r\n            execution.\r\n            ":"\r\n            如果附加了调试器，它将将指定的脚本代码呈现给用户\r\n            具有自动选择名称的文档。此文档将在\r\n            执行。\r\n            \r\n","\r\n            Indicates disposable locations whose dispose state is unknown.\r\n            ":"\r\n            表示处置状态未知的可支配位置。\r\n            \r\n","\r\n            Includes only the name of the member.\r\n            ":"\r\n            仅包括成员的名称。\r\n            \r\n","A function that determines if the given ":"确定给定的功能\r\n","\r\n            Starts tracking file accesses, using the rooting marker in the response file provided.  To \r\n            automatically generate a response file given a rooting marker, call \r\n            FileTracker.CreateRootingMarkerResponseFile. \r\n            ":"\r\n            使用提供的响应文件中的rooting标记开始跟踪文件访问。至\r\n            自动生成一个给定加根标记的响应文件，调用\r\n            Filetracker.Creatorootingmarkersponsefile。\r\n            \r\n","\r\n            Specifies that support for ":"\r\n            指定支持\r\n","\r\n            as the target whose Instance is an ":"\r\n            作为实例的目标\r\n","If true the replaced trivia is elastic trivia.":"如果是元素，那么替代的琐事就是弹性琐事。\r\n"," \r\n            Set of IL offsets where await operators yield control\r\n             ":" \r\n            等待运营商产生控制的IL偏移集\r\n             \r\n"," and extension \".read\" logging the files read,\r\n            and second with path ":" 和扩展”。阅读“记录文件读取，\r\n            第二条路径\r\n","\r\n            True if the path is an absolute path (rooted to drive or network share)\r\n            ":"\r\n            如果路径是绝对路径（扎根于驱动或网络共享），则为true）\r\n            \r\n","Analyzer options.":"分析仪选项。\r\n","\r\n            The common name used for the F# language.\r\n            ":"\r\n            F＃语言使用的通用名称。\r\n            \r\n","TryCast":"尝试cast\r\n","\r\n            Copies all SyntaxAnnotations, if any, from this SyntaxNode instance and attaches them to a new instance based on ":"\r\n            从此语法诺德实例复制所有语法（如果有），并将它们连接到基于新实例的新实例\r\n","\r\n            Gets the default warning level for a diagnostic severity. Warning levels are used with the ":"\r\n            获得诊断严重程度的默认警告级别。警告级别用于\r\n"," for a span in a ":" 在一个\r\n","The method body errors for a syntax tree are not cached. The first time this method\r\n            is called, all method bodies are analyzed for diagnostics. Calling this a second time\r\n            will repeat this work.\r\n            ":"语法树的方法身体错误未缓存。第一次这个方法\r\n            被称为，分析所有方法的诊断物体。第二次称呼\r\n            会重复这项工作。\r\n            \r\n","\r\n            Returns the same type as this type but with the given nullable annotation.\r\n            ":"\r\n            返回与此类型相同的类型，但带有给定的无效注释。\r\n            \r\n","\r\n            If true, do not embed any Win32 manifest, including\r\n            one specified by ":"\r\n            如果是真的，请勿嵌入任何Win32表现，包括\r\n            一个指定\r\n"," that can be checked to see if the initialization should be cancelled.\r\n            ":" 可以检查一下是否应该取消初始化。\r\n            \r\n","s directly.\r\n            ":"直接。\r\n            \r\n","\r\n            Represents a break branch kind.\r\n            ":"\r\n            代表断裂分支。\r\n            \r\n","The set of analyzers to include in future analyses.":"将来分析中包括的一组分析仪。\r\n","\r\n            The compilation this model was obtained from.\r\n            ":"该模型的汇编是从中获得的。\r\n            \r\n","\r\n            Represents a reference to a parameter.\r\n            ":"\r\n            表示参数的引用。\r\n            \r\n"," is a type, this method does not find attributes\r\n            on its base types.\r\n            ":" 是一种类型，此方法找不到属性\r\n            在其基本类型上。\r\n            \r\n","\r\n            Returns true if the Unicode character can be a part of an identifier.\r\n            ":"\r\n            如果Unicode字符可以成为标识符的一部分，则返回true。\r\n            \r\n"," which contains all children of ":" 其中包含所有的孩子\r\n","\r\n            Current Usage: C# discard expressions\r\n            ":"\r\n            当前用法：C＃丢弃表达式\r\n            \r\n","\r\n            leaves the compiled script in an unusable state. After calling ":"\r\n            将编译的脚本留在无法使用的状态下。打电话后\r\n","\r\n            Checks if the given method matches Dispose method convention and can be recognized by \"using\".\r\n            ":"\r\n            检查给定方法是否匹配Dispose方法约定，并且可以通过“使用”识别。\r\n            \r\n","compilation end,":"汇编末端，\r\n","Float32Array":"float32array\r\n","\r\n            The overlap of the spans, or null if the overlap is empty.\r\n            ":"\r\n            跨度的重叠，如果重叠为空，则无效。\r\n            \r\n","\r\n            Simple diagnostics queue: maintains all diagnostics reported by all analyzers in a single queue.\r\n            ":"\r\n            简单诊断队列：维护所有分析仪在单个队列中报告的所有诊断。\r\n            \r\n",".ctor":".ctor\r\n"," is keyed by an ":" 被一个\r\n","\r\n             Gets the available named symbols in the context of the specified location and optional container. Only\r\n             symbols that are accessible and visible from the given location are returned.\r\n             ":"\r\n             在指定位置和可选容器的上下文中获取可用的命名符号。仅有的\r\n             从给定位置可访问和可见的符号将返回。\r\n             \r\n","\r\n            Indicates that the diagnostic is reported by the compiler.\r\n            ":"\r\n            表明诊断是由编译器报告的。\r\n            \r\n","\r\n            Gets the diagnostics produced during the analysis of method bodies and field initializers.\r\n            ":"\r\n            在分析方法和现场初始化器分析过程中产生的诊断。\r\n            \r\n"," which starts at position 0.\r\n            ":" 从位置0开始。\r\n            \r\n","Type parameter of the corresponding ":"相应的类型参数\r\n","\r\n            Initializes a new JScript engine instance with the specified programmatic\r\n            identifier, name, list of supported file name extensions, options, and synchronous\r\n            invoker.\r\n            ":"\r\n            用指定的程序化初始化新的JScript引擎实例\r\n            标识符，名称，支持的文件名扩展名，选项和同步\r\n            调用。\r\n            \r\n"," and returns the corresponding ":" 并返回相应的\r\n","\r\n            Provides a description about a programmatic suppression of a ":"\r\n            提供了有关程序抑制的描述\r\n","\r\n            Only types explicitly mentioned in \"Co-located core types\" spec \r\n            (https://github.com/dotnet/roslyn/blob/main/docs/compilers/Co-located%20core%20types.md)\r\n            can be in this enum.\r\n            The following things should be in sync:\r\n                1) SpecialType enum\r\n                2) names in SpecialTypes.EmittedNames array.\r\n            ":"\r\n            仅在“共同确定的核心类型”规范中明确提及的类型\r\n            （https://github.com/dotnet/roslyn/blob/main/docs/compilers/co-located%20Core%20Types.md）\r\n            可以在这个枚举中。\r\n            以下内容应该同步：\r\n                1）专业题词枚举\r\n                2）spreteipes.emittynames数组中的名称。\r\n            \r\n","Path of the file to which the compilation's debug info will be written.\r\n            Also embedded in the output file.  Null to forego PDB generation.\r\n            ":"编译调试信息将编写的文件的路径。\r\n            还嵌入到输出文件中。 null至Ferego PDB生成。\r\n            \r\n","\r\n            This class can be used in non-desktop environments such as server applications. An\r\n            implementation of ":"\r\n            该类可用于非desktop环境（例如服务器应用程序）。一个\r\n            实施\r\n"," has returned false will throw an ":" 返回错误的遗嘱\r\n","\r\n            The lifetime of a generator is controlled by the compiler.\r\n            State should not be stored directly on the generator, as there\r\n            is no guarantee that the same instance will be used on a \r\n            subsequent generation pass.\r\n            ":"\r\n            发电机的寿命由编译器控制。\r\n            状态不应直接存储在发电机上，因为\r\n            不能保证将在\r\n            随后的一代通行证。\r\n            \r\n","\r\n            Try to retrieve the public key from a crypto blob.\r\n            ":"\r\n            尝试从加密vlob中检索公共密钥。\r\n            \r\n","\r\n            Register an action to be executed at end of semantic analysis of an ":"\r\n            注册一个在语义分析结束时执行的操作\r\n","\r\n            The kind of metadata stored in this module. For example whether this module is an executable or a manifest resource file.\r\n            ":"\r\n            该模块中存储的那种元数据。例如，此模块是可执行的还是清单资源文件。\r\n            \r\n","\r\n            Assembly file path.\r\n            ":"\r\n            汇编文件路径。\r\n            \r\n",".\r\n                3. Diagnostic is not tagged with ":"。\r\n                3.诊断没有标记\r\n"," to register actions to be executed\r\n            at any of:\r\n            ":" 注册措施要执行\r\n            在任何一个：\r\n            \r\n"," object representing the parsed command line.":" 代表解析命令行的对象。\r\n","A unique identifier for the diagnostic. For example, code analysis diagnostic ID \"CA1001\".":"诊断的唯一标识符。例如，代码分析诊断ID“ CA1001”。\r\n","\r\n            Creates a new node from this node with the leading trivia removed.\r\n            ":"从该节点中创建一个新的节点，并删除了领先的琐事。\r\n            \r\n","\r\n            Count of registered symbol end actions.\r\n            ":"\r\n            注册符号最终动作的计数。\r\n            \r\n","The list of changes may be different than the original changes that produced\r\n            this tree.":"更改列表可能与产生的原始更改不同\r\n            这棵树。\r\n","Hash algorithm used to calculate document checksum.":"哈希算法用于计算文档校验和。\r\n","The source to retrieve outputs for":"检索输出的来源\r\n","\r\n            Creates a new V8 script engine instance with the specified name, options, and debug port.\r\n            ":"\r\n            使用指定名称，选项和调试端口创建一个新的V8脚本引擎实例。\r\n            \r\n"," in C# code, and ":" 在C＃代码中，以及\r\n","\r\n            Specifies whether the compilation should be deterministic.\r\n            ":"\r\n            指定汇编是否应确定性。\r\n            \r\n","The documentation member ID of the item to fetch.":"该项目的文档成员ID要获取。\r\n","\r\n            The first node in the list.\r\n            ":"\r\n            列表中的第一个节点。\r\n            \r\n","The checksum algorithm to use.":"要使用的校验和算法。\r\n",") are assumed to be in\r\n            bytes rather than MiB. For example, the values 16 and 16777216 both specify a limit\r\n            of 16 MiB.\r\n            ":"）假定在\r\n            字节而不是MIB。例如，值16和16777216都指定了一个限制\r\n            16 MIB。\r\n            \r\n","the bit following the least-significant bit":"遵循最不重要的位\r\n","\r\n            Returns unique Guid for this delta, or default(Guid)\r\n            if full metadata.\r\n            ":"\r\n            返回此三角洲或默认值（GUID）的唯一GUID\r\n            如果完全元数据。\r\n            \r\n"," = true.\r\n            Otherwise, returns null.\r\n            ":" = true。\r\n            否则，返回null。\r\n            \r\n","s about a code block.\r\n            ":"大约一个代码块。\r\n            \r\n","\r\n            Represents default case in C# or Case Else in VB.\r\n            ":"\r\n            代表C＃中的默认情况或VB中的其他情况。\r\n            \r\n","\r\n            With collection initializer.\r\n            ":"\r\n            带有收集初始化器。\r\n            \r\n","\r\n            The version of this compiler with commit hash, used in logo and /version output.\r\n            ":"\r\n            该编译器的版本具有COMPL HASH，用于徽标和 /版本输出中。\r\n            \r\n","The character position for determining the enclosing declaration scope and\r\n            accessibility.":"确定封闭声明范围的字符位置和\r\n            可访问性。\r\n","\r\n            Gets a value that indicates whether script code execution had started before the current exception was thrown.\r\n            ":"\r\n            获取一个值，该值指示脚本代码执行是否已在抛出当前异常之前开始。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid characters in assembly culture name.\r\n            ":"\r\n              在汇编文化名称中查找类似于无效字符的本地化字符串。\r\n            \r\n","\r\n            Handler kind for this SEH info\r\n            ":"\r\n            此SEH信息的处理程序类型\r\n            \r\n","\r\n            Creates a shallow copy of this object.\r\n            ":"\r\n            创建此对象的浅副本。\r\n            \r\n","\r\n            A localizable format message string, which can be passed as the first argument to ":"\r\n            可本质的格式消息字符串，可以将其作为第一个参数传递给\r\n",", this method returns the method symbol which \r\n            matches the expectedParameterTypesInOrder parameter requirement\r\n            ":"，此方法返回方法符号\r\n            匹配预期的Parametertypesinorder参数要求\r\n            \r\n"," if not available.\r\n            ":" 如果没有。\r\n            \r\n","\r\n            Determines whether this trivia is a descendant of a structured trivia.\r\n            ":"\r\n            确定这种琐事是否是结构化琐事的后代。\r\n            \r\n","\r\n            The event that has been specialized to obtain this event. When the containing type is an instance of type which is itself a specialized member (i.e. it is a nested\r\n            type of a generic type instance), then the unspecialized member refers to a member from the unspecialized containing type. (I.e. the unspecialized member always\r\n            corresponds to a definition that is not obtained via specialization.)\r\n            ":"\r\n            专门用于获得此事件的活动。当包含类型是类型的实例时，它本身就是一个专业成员（即它是嵌套的\r\n            类型的通用类型实例），然后，无专业成员是指未涉及类型的成员。 （即始终不专业成员\r\n            对应于未通过专业获得的定义。）\r\n            \r\n","The type of the first parameter of the bound action.":"绑定动作的第一个参数的类型。\r\n","\r\n            Creates a new token from this token with the leading trivia specified..\r\n            ":"用指定的领先的琐事从这个令牌中创建一个新的令牌。\r\n            \r\n","\r\n            Returns true if this method returns by reference.\r\n            ":"\r\n            如果此方法通过参考返回，则返回true。\r\n            \r\n","\r\n             A releaser for a pooled delegate.\r\n             ":"\r\n             合并代表的发行版。\r\n             \r\n","True if we need to track out-of-proc, false if inproc tracking is OK":"是的，如果我们需要跟踪传播外，请false如果inproc跟踪还可以\r\n","\r\n            Zero or more methods defined by this type.\r\n            ":"\r\n            零或更多方法由这种类型定义。\r\n            \r\n","\r\n            Adds a fully-qualified path to the Logger for a written file.\r\n            Semantics are undefined after a call to ":"为书面文件添加了完全合格的路径。\r\n            语义是在打电话后不确定的\r\n","'start' must not be negative":"“开始”一定不能负面\r\n","\r\n            Syntax diagnostics reported by the ":"\r\n            语法诊断是由\r\n","\r\n            Executes all ":"\r\n            执行全部\r\n"," If true then the trees are equivalent if the contained nodes and tokens declaring\r\n            metadata visible symbolic information are equivalent, ignoring any differences of nodes inside method bodies\r\n            or initializer expressions, otherwise all nodes and tokens must be equivalent. \r\n            ":" 如果为true，则树是等效的，如果包含的节点和代币声明\r\n            元数据可见的符号信息是等效的，忽略了方法内部节点的任何差异\r\n            或初始器表达式，否则所有节点和令牌都必须等效。\r\n            \r\n","\r\n            Gets a provider for analyzer options\r\n            ":"\r\n            获得分析仪选项的提供商\r\n            \r\n","\r\n            Return tokens for all updated or added types.\r\n            ":"\r\n            所有更新或添加类型的返回令牌。\r\n            \r\n","Can't create a metadata reference to an assembly without location.":"无法在没有位置的情况下创建对组件的元数据引用。\r\n","\r\n            Arms of the switch expression.\r\n            ":"\r\n            开关表达式的臂。\r\n            \r\n","An array of the rooting markers that were removed.":"删除的生根标记的数组。\r\n","\r\n            Current usage:\r\n             (1) C# method invocation expression.\r\n             (2) VB method invocation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃方法调用表达式。\r\n             （2）VB方法调用表达式。\r\n            \r\n","\r\n            Locate the node or token that is a child of the given ":"\r\n            找到给定的孩子的节点或令牌\r\n","State is undefined.":"状态不确定。\r\n","\r\n            Returns a constructed type given its type arguments.\r\n            ":"\r\n            返回给定类型参数的构造类型。\r\n            \r\n","\r\n            Specifies that automatic sample collection is to be enabled.\r\n            ":"\r\n            指定要启用自动样本收集。\r\n            \r\n","\r\n            Assume that 3 WORDs preceded this string and that they began 32-bit aligned.\r\n            Given the string length compute the number of bytes that should be written to end\r\n            the buffer on a 32-bit boundary":"\r\n            假设3个单词在此字符串之前，他们开始32位。\r\n            给定字符串长度计算应写入的字节数\r\n            32位边界上的缓冲区\r\n","\r\n            Calls the visitor.Visit(T) method where T is the most derived object model node interface type implemented by the concrete type\r\n            of the object implementing IDoubleDispatcher. The dispatch method does not invoke Dispatch on any child objects. If child traversal\r\n            is desired, the implementations of the Visit methods should do the subsequent dispatching.\r\n            ":"\r\n            调用visitor.visit（t）方法，其中t是由混凝土类型实现的最派生的对象模型节点接口类型\r\n            实现idubledisPatcher的对象。调度方法不会在任何子对象上调用调度。如果儿童遍历\r\n            需要，访问方法的实现应进行后续派遣。\r\n            \r\n","Add":"添加\r\n","\r\n            Locals declared within the switch operation with scope spanning across all ":"\r\n            当地人在开关操作中声明，范围跨越所有\r\n","The number of bytes to read from the buffer.":"从缓冲区读取的字节数。\r\n","\r\n            Closes a local scope previously open using ":"\r\n            关闭以前使用的本地范围\r\n","\r\n            Current usage:\r\n             (1) C# null-coalescing expression \"Value ?? WhenNull\".\r\n             (2) VB binary conditional expression \"If(Value, WhenNull)\".\r\n            ":"\r\n            当前用法：\r\n             （1）c＃null-coalesating表达式“值？何时null”。\r\n             （2）Vb二进制条件表达“ if（值，nnull）”。\r\n            \r\n","\r\n            The type of edit.\r\n            ":"\r\n            编辑的类型。\r\n            \r\n","\r\n            Identities of referenced assemblies (those that are or will be emitted to metadata).\r\n            ":"\r\n            引用组件的身份（将或将发射到元数据）的身份。\r\n            \r\n","The existing map which may be null or a ConcurrentDictionary.":"现有的地图可能为null或同意。\r\n","\r\n            Indicates that the diagnostic is not configurable, i.e. it cannot be suppressed or filtered or have its severity changed.\r\n            ":"\r\n            表示诊断不可构型，即不能抑制或过滤或更改其严重性。\r\n            \r\n"," will implement this interface.\r\n            \r\n             This interface provides a common way to both easily find the root of a ":" 将实现此界面。\r\n            \r\n             该界面提供了一种通用方法，可以轻松找到一个\r\n","\r\n            Sequence of absolute paths used to search for references.\r\n            ":"\r\n            绝对路径的顺序用于搜索参考。\r\n            \r\n","\r\n            Base class for csc.exe, csi.exe, vbc.exe and vbi.exe implementations.\r\n            ":"\r\n            csc.exe，csi.exe，vbc.exe和vbi.exe实现的基类。\r\n            \r\n"," objects describing standalone modules referenced by the compilation.\r\n             ":" 描述汇编引用的独立模块的对象。\r\n             \r\n","\r\n            Gets a new instance of analysis data that should be passed as initial analysis data\r\n            for interprocedural analysis.\r\n            The default implementation returns cloned CurrentAnalysisData.\r\n            ":"\r\n            获取一个新的分析数据实例，该数据应作为初始分析数据传递\r\n            用于脑外交分析。\r\n            默认实现返回克隆的CurrentAnalysisdata。\r\n            \r\n","\r\n            A character value encoded as 2 bytes.\r\n            ":"\r\n            字符值编码为2个字节。\r\n            \r\n"," is not a PE image.":" 不是PE图像。\r\n","Text for equivalent .editorconfig":"等效.editorconfig的文字\r\n","\r\n            Returns true if the namespace scope for this method should be forwarded to another method.\r\n            Returns non-null ":"\r\n            如果应将此方法的名称空间范围转发到另一种方法，则返回true。\r\n            返回非编号\r\n","\r\n            Represents an initialization of a local variable.\r\n            ":"\r\n            代表局部变量的初始化。\r\n            \r\n","\r\n            The contents of the AssemblySignatureKeyAttribute\r\n            ":"\r\n            汇编符号的内容\r\n            \r\n","\r\n            Skip interprocedural analysis for source method invocations, except for lambda and location function invocations,\r\n            which are always analyzed in a context sensitive fashion.\r\n            All the analysis data for invocation receiver and arguments is conservatively reset at call sites.\r\n            Produces least precise results from amongst the possible interprocedural modes, but is the most performant mode.\r\n            ":"\r\n            除了lambda和位置功能调用外\r\n            总是以上下文敏感的方式对其进行分析。\r\n            调用接收器和参数的所有分析数据在呼叫站点中保守地重置。\r\n            从可能的概要术模式中产生最不精确的结果，但是最性能的模式。\r\n            \r\n","\r\n            Writes a reference to a heap (heap index) or a table (row id).\r\n            ":"\r\n            写对堆（堆索引）或表（行ID）的引用。\r\n            \r\n","\r\n            Returns a list which contains all elements of ":"\r\n            返回包含所有元素的列表\r\n","\r\n            Handles storage of items referenced via tokens in metadata (strings or Symbols).\r\n            When items are stored they are uniquely \"associated\" with fake token, which is basically \r\n            a sequential number.\r\n            IL gen will use these fake tokens during codegen and later, when actual token values are known\r\n            the method bodies will be patched.\r\n            To support these two scenarios we need two maps - Item-->uint, and uint-->Item.  (the second is really just a list).\r\n            This map supports tokens of type ":"\r\n            处理通过元数据（字符串或符号）中令牌引用的项目的存储。\r\n            当物品存储时，它们与假令牌“相关”是唯一的，这基本上是\r\n            顺序数。\r\n            il gen将在Codegen期间和后来使用这些假令牌，然后在已知的实际令牌值时使用\r\n            方法主体将被修补。\r\n            为了支持这两种情况，我们需要两个地图 - 项目 - > uint和uint-> item。 （第二个实际上只是列表）。\r\n            该地图支持类型的令牌\r\n","\r\n            Provides a default ":"\r\n            提供默认值\r\n","\r\n              Looks up a localized string similar to Non-reported diagnostic with ID '{0}' cannot be suppressed..\r\n            ":"\r\n              查找类似于ID'{0}'的非报告诊断类似的本地化字符串。\r\n            \r\n"," is case sensitive or not depending on the target language.\r\n            ":" 对案例敏感或不取决于目标语言。\r\n            \r\n","Returns true if decoded data were stored into the bag on this thread.":"如果将解码的数据存储在此线程的袋子中，则返回true。\r\n","\r\n            Method is an event add.\r\n            ":"\r\n            方法是事件添加。\r\n            \r\n"," tree\r\n            visiting each IOperation and its child IOperation nodes in depth-first order. Returns null.\r\n            ":" 树\r\n            访问每个偶然的及其子女的ioperation节点。返回null。\r\n            \r\n","Enum type giving the syntax node kinds of the source language for which the action applies.":"枚举类型提供了应用程序应用的语法节点类型。\r\n","\r\n              Looks up a localized string similar to Reference resolver should return readable non-null stream..\r\n            ":"\r\n              查找类似于参考解析器的本地化字符串应返回可读的非循环流。\r\n            \r\n",").\r\n            Empty alias list is considered to be the same as a list containing \"global\", since in both cases C# allows unqualified access to the symbols.\r\n            ":"）。\r\n            空的别名列表被认为与包含“全局”的列表相同，因为在这两种情况下，C＃都允许对符号的不合格访问。\r\n            \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledFunction(arg => arg.self.IsSomething(arg.x), (self: this, x), out Func<bool> predicate);\r\n             RunWithPredicate(predicate);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooledFunction（arg => arg.self.issomething（arg.x），（self：this，x），out func <bool> predicate）;\r\n             runwithPredicate（谓词）;\r\n             \r\n","Operation representing the lambda or local function.":"代表Lambda或本地功能的操作。\r\n","\r\n            Destination basic block of this branch.\r\n            ":"\r\n            该分支的目标基本块。\r\n            \r\n","\r\n            An optional set of name-value pairs by means of which the analyzer that creates the diagnostic\r\n            can convey more detailed information to the fixer. If null, ":"\r\n            一组可选的名称值对，通过其创建诊断的分析仪\r\n            可以将更详细的信息传达给修复程序。如果无效，\r\n","\r\n            All member declarations within the declaration.\r\n            ":"\r\n            声明中的所有成员声明。\r\n            \r\n","The base directory used for qualifying file locations.":"用于合格文件位置的基本目录。\r\n","\r\n            Returns true if there are any actions that need to run on executable code.\r\n            ":"\r\n            如果需要在可执行代码上运行任何操作，则返回true。\r\n            \r\n","The file path to load the rule set":"加载规则集的文件路径\r\n"," is an identifier name syntax node, return the ":" 是标识符名称语法节点，返回\r\n","The full path to the dependency file about to be written to the compacted TLog":"将要写入压实的TLOG的依赖项文件的完整路径\r\n"," is default value.":" 是默认值。\r\n"," returns true. The module symbol might not be available anymore, \r\n            for example, if the location is serialized and deserialized.\r\n            ":" 返回真实。模块符号可能不再可用，\r\n            例如，如果该位置被序列化并进行了序列化。\r\n            \r\n","\r\n            Resolves assembly strong name key file path.\r\n            ":"\r\n            解决汇编强名称密钥文件路径。\r\n            \r\n","The TaskLoggingHelper used to log the nonexistent files.":"TaskLoggingHelper用于记录不存在的文件。\r\n"," has type ":" 有类型\r\n","\r\n            Represents additional info needed by async method implementation methods \r\n            (MoveNext methods) to properly emit necessary PDB data for async debugging.\r\n            ":"\r\n            表示ASYNC方法实现方法所需的其他信息\r\n            （MoveNext方法）正确发射必要的PDB数据以进行异步调试。\r\n            \r\n","\r\n            Records if this state map is for generated code, which can have differing semantics in some cases\r\n            ":"\r\n            记录该状态图是否用于生成的代码，在某些情况下可能具有不同的语义\r\n            \r\n","\r\n            Creates a copy of the SymbolDisplayFormat but with replaced ":"\r\n            创建SymboldisPlayFormat的副本，但更换了\r\n","\r\n            The Assembly that contains this module. If this module is main module then this returns this.\r\n            ":"\r\n            包含此模块的组件。如果此模块是主模块，则将返回此。\r\n            \r\n","\r\n            Conversion associated with ":"\r\n            相关的转换\r\n","\r\n            Executes the syntax tree actions on the given syntax tree.\r\n            ":"\r\n            在给定语法树上执行语法树操作。\r\n            \r\n","\r\n            The list of all interfaces of which this type is a declared subtype, excluding this type\r\n            itself. This includes all declared base interfaces, all declared base interfaces of base\r\n            types, and all declared base interfaces of those results (recursively). This also is the effective\r\n            interface set of a type parameter. Each result\r\n            appears exactly once in the list. This list is topologically sorted by the inheritance\r\n            relationship: if interface type A extends interface type B, then A precedes B in the\r\n            list. This is not quite the same as \"all interfaces of which this type is a proper\r\n            subtype\" because it does not take into account variance: AllInterfaces for\r\n            ":"此类型的所有接口的列表是声明的亚型，不包括此类型\r\n            本身。这包括所有声明的基本接口，所有声明为基础的基本接口\r\n            类型，所有这些结果的基本接口（递归）。这也是有效的\r\n            类型参数的接口集。每个结果\r\n            完全出现在列表中。此列表在拓扑上被继承分类\r\n            关系：如果接口类型A扩展了接口类型B，则A在BE中的B之前\r\n            列表。这与“这种类型的所有接口”不完全相同\r\n            子类型“因为它不考虑差异：\r\n            \r\n","\r\n              Looks up a localized string similar to Argument cannot be empty..\r\n            ":"\r\n              查找类似于参数的本地化字符串不能为空。\r\n            \r\n","\r\n            Executes the given ":"\r\n            执行给定\r\n","\r\n            Information about an assembly, used as an input for the Binder class.\r\n            ":"\r\n            有关组件的信息，用作粘合剂类的输入。\r\n            \r\n","\r\n            Constructor to be invoked on the created instance.\r\n            ":"\r\n            要在创建实例上调用的构造函数。\r\n            \r\n","\r\n             Gets an ":"\r\n             得到一个\r\n","\r\n            Shows only the name of the symbol.\r\n            ":"\r\n            仅显示符号的名称。\r\n            \r\n","\r\n            Handles loading analyzer assemblies and their dependencies.\r\n            \r\n            Before an analyzer assembly is loaded with ":"\r\n            处理加载分析仪组件及其依赖项。\r\n            \r\n            在加载分析仪组件之前\r\n"," doesn't check for invalid path characters.":" 不检查无效的路径字符。\r\n","\r\n            Exact (unaligned) heap sizes.\r\n            ":"\r\n            精确（未对准）堆尺寸。\r\n            \r\n","\r\n            Encoding of the file that the ":"\r\n            文件编码\r\n","\r\n            e.g. with a ":"\r\n            例如与\r\n","\r\n            class and uses it to create and populate an instance.\r\n            It assumes that an instance of ":"\r\n            类并使用它来创建和填充一个实例。\r\n            它假设一个实例\r\n","The set of analyzers to include in the analysis":"一组分析仪包括在分析中\r\n","\r\n            Represents a TypeOf expression.\r\n            ":"\r\n            代表一种类型的表达式。\r\n            \r\n","\r\n            Returns the first token in the list.\r\n            ":"\r\n            返回列表中的第一个令牌。\r\n            \r\n","true if the identifiers should be considered the same.":"如果要将标识符视为相同，则为是真的。\r\n","\r\n            Context for a symbol start action to analyze a symbol and its members.\r\n            A symbol start/end action can use a ":"\r\n            符号启动操作的上下文来分析符号及其成员。\r\n            符号开始/结束操作可以使用\r\n","\r\n             int x = 3;\r\n             RunWithActionCallback((a, b, c) => this.DoSomething(a, b, c, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithactionCallback（（（a，b，c）=> this.dosothing（a，b，c，x））;\r\n             \r\n",",\r\n            or contains a single state when ":"，，，，\r\n            或包含一个单个状态时\r\n"," that serializes objects to a byte stream.\r\n            ":" 将对象序列到字节流。\r\n            \r\n","System.Int32":"System.int32\r\n","\r\n            A class that provides constants for common language names.\r\n            ":"\r\n            为通用语言名称提供常数的类。\r\n            \r\n","\r\n            An unique identifier for the suppression.\r\n            ":"\r\n            抑制的唯一标识符。\r\n            \r\n","\r\n            The UInt32 value 8\r\n            ":"\r\n            UINT32值8\r\n            \r\n","\r\n            Creates a list of trivia.\r\n            ":"\r\n            创建琐事列表。\r\n            \r\n","The sequence of nodes and tokens":"节点和令牌的序列\r\n","\r\n            Operation visitor to flow the abstract dataflow analysis values for ":"\r\n            操作访问者流动抽象数据流分析值\r\n"," is not supported.\r\n            ":" 不支持。\r\n            \r\n","\r\n            Produces the filtering action for the diagnostic based on the options passed in.\r\n            ":"\r\n            根据所传递的选项为诊断生成过滤动作。\r\n            \r\n","\r\n            Imports a host type by name from the specified assembly.\r\n            ":"\r\n            从指定的汇编中导入命名的主机类型。\r\n            \r\n","\r\n            Returns a new tree whose root and options are as specified and other properties are copied from the current tree.\r\n            ":"\r\n            返回一棵新树，其根和选项按指定，并从当前树复制其他属性。\r\n            \r\n","Cancellation token to abort analysis.":"取消令牌以中止分析。\r\n",".\r\n            The result of the entire expression is ":"。\r\n            整个表达的结果是\r\n"," representing partial analysis state for the given symbol end actions for the given analyzer.\r\n            ":" 代表给定分析仪给定符号最终动作的部分分析状态。\r\n            \r\n","\r\n            Two type or method instances are compatible only if they have exactly the same type argument for this parameter.\r\n            ":"\r\n            仅当两个类型或方法实例与此参数具有完全相同的类型参数时，它们才兼容。\r\n            \r\n","\r\n            Represents a dynamic access to a member of a class, struct, or module.\r\n            ":"\r\n            代表对类，结构或模块成员的动态访问。\r\n            \r\n",", optionally scoped to a ":"，可选地范围\r\n","\r\n            The strong name key associated with the identity of this assembly. \r\n            This contains the contents of the user-supplied key file exactly as extracted.\r\n            ":"\r\n            与此组件的身份相关的强名称密钥。\r\n            这完全包含用户提供的密钥文件的内容，完全如提取所述。\r\n            \r\n","A filter for selecting the types to add.":"用于选择要添加类型的过滤器。\r\n","\r\n            The number of required parameters of the signature.\r\n            ":"\r\n            签名的必需参数数量。\r\n            \r\n","\r\n            Kind of a synthesized local variable.\r\n            ":"\r\n            一种合成的局部变量。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# array element reference expression.\r\n             (2) VB array element reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃数组元素参考表达式。\r\n             （2）VB数组元素参考表达式。\r\n            \r\n","A format message string, which can be passed as the first argument to ":"格式消息字符串，可以将其作为第一个参数传递给\r\n"," in a thread-safe manner.\r\n            ":" 以线程安全的方式。\r\n            \r\n","Language name.":"语言名称。\r\n","\r\n            Indicates the approximate number of executable statements/lines in code.\r\n            The count is based on the executable ":"\r\n            指示代码中可执行语句/行的大约数量。\r\n            计数基于可执行\r\n","\r\n            and therefore accessible only within the same assembly, but ClearScript 5.5.3 and\r\n            earlier permitted access to the public properties of an object even if its type was\r\n            internal. Newer versions strictly enforce ":"\r\n            因此，仅在同一组件中访问，但清除订阅5.5.3和\r\n            即使对象的类型为\r\n            内部的。较新版本严格执行\r\n","\r\n            Suppress a diagnostic.\r\n            ":"\r\n            抑制诊断。\r\n            \r\n","An identifier for the document.":"文档的标识符。\r\n","\r\n            Determines whether the object has the specified named member.\r\n            ":"\r\n            确定对象是否具有指定的命名成员。\r\n            \r\n","'s Kind matches one of the ":"的友善与其中之一相匹配\r\n","\r\n            Underlying string which is the source of this ":"\r\n            基础字符串是此的来源\r\n","\r\n            Represents a span of text in a source code file in terms of file name, line number, and offset within line.\r\n            However, the file is actually whatever was passed in when asked to parse; there may not really be a file.\r\n            ":"\r\n            用文件名，行号和行中的偏移表示源代码文件中的文本跨度。\r\n            但是，该文件实际上是当被要求解析时所传递的内容。可能真的没有文件。\r\n            \r\n","\r\n            Represents the VB 'Like' operator.\r\n            ":"\r\n            代表VB“喜欢”操作员。\r\n            \r\n","The dependency to remove.":"删除的依赖性。\r\n"," over a ":" 在...之上\r\n",".\r\n            3) 1, otherwise.\r\n            ":"。\r\n            3）1，否则。\r\n            \r\n","\r\n            Error code.\r\n            ":"\r\n            错误代码。\r\n            \r\n","\r\n            Invoke this method at completion of event processing for the given analysis scope.\r\n            It updates the analysis state of this event for each analyzer and if the event has been fully processed for all analyzers, then removes it from our event cache.\r\n            ":"\r\n            为给定的分析范围完成事件处理时调用此方法。\r\n            它更新每个分析仪的该事件的分析状态，如果为所有分析仪进行了充分处理该事件，则将其从我们的事件缓存中删除。\r\n            \r\n","\r\n            Unique Guid for this delta, or default(Guid)\r\n            if full metadata.\r\n            ":"\r\n            该三角洲或默认值（GUID）的唯一GUID\r\n            如果完全元数据。\r\n            \r\n","\r\n            Identifies the version of the CLR that is required to load this module or assembly.\r\n            ":"\r\n            标识加载此模块或汇编所需的CLR版本。\r\n            \r\n"," and uninitialized ":" 和非初始化\r\n","The response file path.":"响应文件路径。\r\n","\r\n            If this method can be applied to an object, returns the top-level nullability of the object it is applied to.\r\n            ":"\r\n            如果可以将此方法应用于对象，请返回其应用于对象的顶级删除性。\r\n            \r\n","\r\n            Represents the portion of a ":"\r\n            代表一个\r\n",". Thereafter,\r\n            the collection is cached.\r\n            ":"。此后，\r\n            该系列被缓存。\r\n            \r\n","Example descriptor for rule CA1001:\r\n                internal static DiagnosticDescriptor Rule = new DiagnosticDescriptor(RuleId,\r\n                    new LocalizableResourceString(nameof(FxCopRulesResources.TypesThatOwnDisposableFieldsShouldBeDisposable), FxCopRulesResources.ResourceManager, typeof(FxCopRulesResources)),\r\n                    new LocalizableResourceString(nameof(FxCopRulesResources.TypeOwnsDisposableFieldButIsNotDisposable), FxCopRulesResources.ResourceManager, typeof(FxCopRulesResources)),\r\n                    FxCopDiagnosticCategory.Design,\r\n                    DiagnosticSeverity.Warning,\r\n                    isEnabledByDefault: true,\r\n                    helpLinkUri: \"http://msdn.microsoft.com/library/ms182172.aspx\",\r\n                    customTags: DiagnosticCustomTags.Microsoft);\r\n            ":"规则CA1001的示例描述符：\r\n                内部静态DiagnosticDescriptor规则=新的DiagnosticDescriptor（RuleId，\r\n                    新的localizablereSourcestring（nameof（fxcoprulesresources.typesthatownowndisposablefieldsshouldsshouldsposabledisposable），fxcoprulesources.resourcemanager，typeof（fxccoprulesresources），），），），），），），）\r\n                    新的localizablereSourcestring（nameof（fxcoprulesresources.typeownsdisposablefieldbutisnotdisposable），fxcoprulesoursources.resourcemanager，typeof（fxcoprulesources），），），），），）\r\n                    fxcopdiagnosticCategory.design，\r\n                    诊断性服务。\r\n                    Isenabledbydefault：true，\r\n                    Helplinkuri：“ http：//msdn.microsoft.com/library/ms182172.aspx”，\r\n                    contultags：diagnosticcustomtags.microsoft）;\r\n            \r\n","\r\n            Return the index of the first difference between\r\n            the two strings, or -1 if the strings are the same.\r\n            ":"返回第一个区别的索引\r\n            两个字符串，或-1如果字符串相同。\r\n            \r\n","Argument corresponding to the parameter.":"与参数相对应的参数。\r\n"," was added. false if it was already present.":" 加入。错误，如果已经存在。\r\n"," to propagate the exception if the operation was cancelled.":" 如果取消操作，则传播异常。\r\n"," is called\r\n            and its result is captured in this map.\r\n            The map also stores failures - the reference is null if the assembly of the given identity is not found by the resolver.\r\n            This is important to maintain consistency, especially across multiple submissions (e.g. the reference is not found during compilation of the first submission\r\n            but then it is available when the second submission is compiled).\r\n            ":" 叫做\r\n            并在此地图中捕获其结果。\r\n            该地图还存储故障 - 如果解析器找不到给定身份的组装，则参考为null。\r\n            这对于保持一致性很重要，尤其是在多个提交中（例如，在第一次提交的汇编过程中找不到参考\r\n            但是，当第二次提交被编译时可以使用）。\r\n            \r\n","\r\n            Load the IncludedAll from the XML node\r\n            ":"\r\n            从XML节点加载包含\r\n            \r\n","\r\n            get the green node at the specific slot\r\n            ":"\r\n            在特定插槽处获取绿色节点\r\n            \r\n","\r\n            Determine if custom attribute matches the target attribute.\r\n            ":"\r\n            确定自定义属性是否匹配目标属性。\r\n            \r\n","\r\n            WARN: This is a test hook - do not take a dependency on this.\r\n            ":"\r\n            WARN：这是一个测试钩 - 不要对此依赖。\r\n            \r\n","\r\n            Represents the C# 'false' operator and VB 'IsFalse' operator.\r\n            ":"\r\n            代表C＃'False'运算符和VB'Isfalse'运算符。\r\n            \r\n","If parsing succeeds, the parsed version. Otherwise a version that represents as much of the input as could be parsed successfully.":"如果解析成功，则解析版本。否则，可以成功解析的代表输入尽可能多的版本。\r\n","\r\n            Reads the data pointed to by the specified Debug Directory entry and interprets them as PDB Checksum entry.\r\n            ":"\r\n            读取指定的调试目录条目指向的数据，并将其解释为PDB校验和条目。\r\n            \r\n","\r\n              Looks up a localized string similar to Reported diagnostic has an ID '{0}', which only a compiler should be reporting..\r\n            ":"\r\n              查找类似于报告诊断的本地化字符串具有ID'{0}'，只有编译器才能报告。\r\n            \r\n","\r\n            When emitting metadata-only assemblies this returns null even if ":"\r\n            发射仅元数据的组装时，即使\r\n"," generated for error cases.\r\n            ":" 生成错误情况。\r\n            \r\n"," is always null.":" 总是无效的。\r\n","s, returns\r\n            the actual ":"S，返回\r\n            实际上\r\n","Value to emit in the attributes field in the PDB.":"在PDB中的属性字段中发射的值。\r\n","\r\n            Parse a string representing a VB import statement.\r\n            ":"\r\n            解析代表VB导入语句的字符串。\r\n            \r\n","Assembly portability policy, usually provided through an app.config file.":"汇编可移植性策略，通常是通过app.config文件提供的。\r\n","\r\n            A reference to the nested type that has been specialized to obtain this nested type reference. When the containing type is an instance of type which is itself a specialized member (i.e. it is a nested\r\n            type of a generic type instance), then the unspecialized member refers to a member from the unspecialized containing type. (I.e. the unspecialized member always\r\n            corresponds to a definition that is not obtained via specialization.)\r\n            ":"\r\n            对已经专门获得此嵌套类型参考的嵌套类型的引用。当包含类型是类型的实例时，它本身就是一个专业成员（即它是嵌套的\r\n            类型的通用类型实例），然后，无专业成员是指未涉及类型的成员。 （即始终不专业成员\r\n            对应于未通过专业获得的定义。）\r\n            \r\n","The new node to use in the new tree in place of the old node.":"在新树中使用的新节点代替旧节点。\r\n","\r\n            This type is used to hold a partially-parsed string representation of a  \r\n            floating point number.  The number is stored in the following form:  \r\n             ":"\r\n            此类型用于保存A的部分优先字符串表示形式\r\n            浮点数。该数字以以下形式存储：\r\n             \r\n","\r\n            Created to capture the step value of a VB for loop.\r\n            ":"\r\n            为捕获循环的VB的步长而创建。\r\n            \r\n","\r\n            Tries to add an element to the tail of the queue.  This method will return false if the queue\r\n            is completed.\r\n            ":"\r\n            试图在队列的尾部添加一个元素。如果队列，此方法将返回false\r\n            完成了。\r\n            \r\n","The stream doesn't contain a well formed XML.":"该流不包含形成良好的XML。\r\n","\r\n            Gets a task whose result is the element at the head of the queue. If the queue\r\n            is empty, the returned task waits for an element to be enqueued. If ":"\r\n            获取一个任务，其结果是队列头部的元素。如果队列\r\n            是空的，返回的任务等待着元素被征入。如果\r\n"," using given file resolver and metadata provider.\r\n            If a non-null diagnostic bag ":" 使用给定的文件解析器和元数据提供商。\r\n            如果一个非无效诊断袋\r\n","\r\n            The metadata reader.\r\n            ":"\r\n            元数据读者。\r\n            \r\n","\r\n            The settings that determine how extension methods are displayed.\r\n            ":"\r\n            确定如何显示扩展方法的设置。\r\n            \r\n","\r\n            Used in C# for spans inside of ":"\r\n            在C＃中用于跨度\r\n","\r\n            Represents the C# '=' operator and VB 'Is' operator and '=' operator for non-object typed operands.\r\n            ":"\r\n            代表C＃'='operator和vb'是“运算符”和“非对象”打字操作数的'='运算符。\r\n            \r\n","\r\n            Represents a dynamically bound expression that can have argument names or refkinds.\r\n            ":"\r\n            代表一个动态绑定的表达式，可以具有参数名称或refkinds。\r\n            \r\n","\r\n            Enables or disables ":"\r\n            启用或禁用\r\n","\r\n            True if this token has annotations of the specified annotation kinds.\r\n            ":"\r\n            如果该令牌具有指定注释类型的注释，则是的。\r\n            \r\n","The type of the input":"输入的类型\r\n","\r\n            Get an optional argument name for a named argument to the given ":"\r\n            获取给定参数的可选参数名称\r\n","\r\n            Version of the SARIF format used in the error log.\r\n            ":"\r\n            错误日志中使用的SARIF格式的版本。\r\n            \r\n","\r\n            Creates a delegate that invokes a script function.\r\n            ":"\r\n            创建一个调用脚本函数的委托。\r\n            \r\n"," as it mutates the ":" 当它突变\r\n"," to be reported.":" 待报道。\r\n","\r\n            Delegate to compute string hash consistent with value of keyHash.\r\n            ":"\r\n            委托计算字符串哈希与keyhash的值一致。\r\n            \r\n"," is a host type, ":" 是主机类型，\r\n"," of operations that are executed while using disposable ":" 使用一次性时执行的操作\r\n","\r\n            Attempts to compute or get the cached value provided by the given ":"试图计算或获得给定的缓存值\r\n","\r\n            A type definition that is a member of another type definition.\r\n            ":"\r\n            类型定义是其他类型定义的成员。\r\n            \r\n"," hash of the uncrompressed bytes\r\n            that's saved to the PDB.\r\n            ":" 无压缩字节的哈希\r\n            这保存到了PDB。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified resource constraints, options, and debug port.\r\n            ":"\r\n            用指定的资源约束，选项和调试端口初始化新的V8运行时实例。\r\n            \r\n","\r\n            The name assigned to the OnesComplement operator.\r\n            ":"\r\n            分配给OneScomplement操作员的名称。\r\n            \r\n","\r\n            Top-level named types defined in source.\r\n            ":"\r\n            源中定义的顶级命名类型。\r\n            \r\n",",\r\n             and taking other debugging attributes into consideration.\r\n            \r\n             By default both entry points in an executable program (":"，，，，\r\n             并考虑其他调试属性。\r\n            \r\n             默认情况下，可执行程序中的两个输入点（\r\n"," for the body of the anonymous function is available from \r\n            the enclosing ":" 对于匿名功能的主体可从\r\n            封闭\r\n","Remarks":"评论\r\n","\r\n            Creates and loads the rule set from a file\r\n            ":"\r\n            从文件创建并加载规则集\r\n            \r\n","\r\n            Attempts to get the type by the full type name.\r\n            ":"\r\n            尝试通过完整类型名称获取该类型。\r\n            \r\n","\r\n            Enforces that the calling thread has access to the current script engine.\r\n            ":"\r\n            强制执行调用线程可以访问当前脚本引擎。\r\n            \r\n","\r\n            Gets or sets an optional source map URI for the document.\r\n            ":"\r\n            获取或设置文档的可选源地图URI。\r\n            \r\n"," keyword before the first parameter of an extension method in C#. \r\n            ":" 关键字在C＃中的扩展方法的第一个参数之前。\r\n            \r\n","\r\n            We need to store reference to the module metadata to keep the metadata alive while \r\n            symbols have reference to PEModule.\r\n            ":"\r\n            我们需要存储对模块元数据的引用，以使元数据保持活力\r\n            符号引用了Pemodule。\r\n            \r\n"," to get a semantic model, but instead always creates a new semantic model.\r\n            ":" 要获得语义模型，但总是创建一个新的语义模型。\r\n            \r\n","The array of integers which must be sorted in ascending order.":"必须按升序排序的整数数组。\r\n","\r\n            This field determines the size of the struct \r\n            (16 bytes on 32-bit platforms, 24 bytes on 64-bit platforms).\r\n            ":"\r\n            该字段确定结构的大小\r\n            （32位平台上的16个字节，64位平台上的24个字节）。\r\n            \r\n","\r\n            Returns zero or more local (block) scopes into which the CLR IL operations in the given method body is organized.\r\n            ":"\r\n            返回零或更多局部（块）示波器，其中组织了给定方法主体中的CLR IL操作。\r\n            \r\n","\r\n            Return the 1-based index of the signature index, adding\r\n            the signature to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回签名索引的1基索引，添加\r\n            如果丢失了这一代的索引的签名。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","A sequence of nodes to insert into the tree immediately before the specified node.":"一系列节点序列在指定节点之前立即插入树。\r\n","\r\n            or represents a location created for a constructor parameter whose type indicates dispose ownership transfer.\r\n            ":"\r\n            或代表为构造函数参数创建的位置，该参数表示处置所有权转让。\r\n            \r\n","\r\n            The name assigned to the delegate ":"\r\n            分配给委托的名称\r\n"," if this is a 'lifted' increment operator.  When there\r\n            is an operator that is defined to work on a value type, 'lifted' operators are\r\n            created to work on the ":" 如果这是一个“提升”增量操作员。当有\r\n            是定义用于在价值类型上的操作员，“提升”操作员是\r\n            创建的是在\r\n","\r\n            Optional list of comma separate operations to execute at loop bottom for VB.\r\n            This list is always empty for C#.\r\n            ":"\r\n            可选的逗号单独操作列表以在VB的循环底部执行。\r\n            此列表始终为C＃空。\r\n            \r\n"," \r\n            at the same time is mapped to a ":" \r\n            同时映射到\r\n","\r\n            Used to determine if two ":"\r\n            用于确定是否两个\r\n","\r\n            Gets the available base type members in the context of the specified location.  Akin to\r\n            calling ":"\r\n            在指定位置的上下文中获取可用的基本类型成员。类似于\r\n            打电话\r\n","True if there are no unsuppressed errors (i.e., no errors which fail compilation).":"如果没有未抑制的错误（即没有失败汇编的错误），则为正确。\r\n","\r\n            The name assigned to the UnaryPlus operator.\r\n            ":"\r\n            分配给Unaryplus运算符的名称。\r\n            \r\n","\r\n            V8 supports one script debugger per runtime. If script debugging has been enabled in\r\n            the current runtime, additional script engine instances cannot disable it or change its\r\n            TCP port, nor can they enable script debugging on a different port.\r\n            ":"\r\n            V8每个运行时支持一个脚本调试器。如果脚本调试已在\r\n            当前的运行时，其他脚本引擎实例无法禁用它或更改其\r\n            TCP端口，他们也无法在其他端口上启用脚本调试。\r\n            \r\n"," and selected at\r\n            runtime if ":" 并选择\r\n            运行时如果\r\n","\r\n            The ID of the hash algorithm used.\r\n            ":"\r\n            使用的哈希算法的ID。\r\n            \r\n","The top-level nullability to use for formatting.":"用于格式化的顶级无效性。\r\n","\r\n            Expression to be evaluated if the conditional instance is non null.\r\n            ":"\r\n            如果条件实例为非零，则要评估的表达式。\r\n            \r\n","\r\n            to access the context information of a ":"\r\n            访问一个上下文信息\r\n","\r\n            A function that for a method handle returns Edit and Continue debug information emitted by the compiler into the PDB.\r\n            The function shall throw ":"\r\n            对于方法句柄，返回编辑并继续编译器发出的调试信息的函数。\r\n            功能应投掷\r\n"," currently being visited\r\n            ":" 目前正在访问\r\n            \r\n","\r\n            Context passed to a source generator when it has opted-in to PostInitialization via ":"\r\n            当它选择通过\r\n","\r\n            Report a diagnostic for the given ":"\r\n            报告给定的诊断\r\n","\r\n            Parent namespace name length plus the dot.\r\n            ":"\r\n            父名称空间长度加上点。\r\n            \r\n","\r\n            Executes a compiled script.\r\n            ":"\r\n            执行编译脚本。\r\n            \r\n","\r\n            Only import public and protected symbols.\r\n            ":"\r\n            仅导入公共和受保护的符号。\r\n            \r\n","\r\n            Local variable that stores the current state of the state machine while MoveNext method is executing.\r\n            Used to avoid race conditions due to multiple reads from the lifted state.\r\n            ":"\r\n            MoveNext方法执行时存储状态计算机的当前状态的本地变量。\r\n            用于避免由于升起状态的多次读取而避免种族条件。\r\n            \r\n","\r\n            Read a Int16 value from the stream. This value must have been written using ":"\r\n            从流中读取INT16值。该值必须使用\r\n","\r\n            The name as present directly in the section specification of the editorconfig file.\r\n            ":"\r\n            直接在editorconfig文件的部分规范中存在的名称。\r\n            \r\n","\r\n            CustomAttributes point to their target via the Parent column so we cannot simply output new rows\r\n            in the delta or we would end up with duplicates, but we also don't want to do complex logic to determine\r\n            which attributes have changes, so we just emit them all.\r\n            This means our logic for emitting CustomAttributes is to update any existing rows, either from the original\r\n            compilation or subsequent deltas, and only add more if we need to. The EncLog table is the thing that tells\r\n            the runtime which row a CustomAttributes row is (ie, new or existing)\r\n            ":"\r\n            CustomAttributes通过父列指向其目标，因此我们不能简单地输出新行\r\n            在三角洲，否则我们最终会重复，但我们也不想做复杂的逻辑来确定\r\n            哪些属性具有更改，因此我们只是散发出所有属性。\r\n            这意味着我们发射自定义属性的逻辑是更新任何现有行，要么是从原始行中更新\r\n            汇编或后续的三角洲，只有在需要时添加更多。封装表是告诉的东西\r\n            自定义行为行的运行时间是（即新的或现有的）\r\n            \r\n","\r\n            The SyntaxTree that contains this token.\r\n            ":"\r\n            包含这个令牌的语法。\r\n            \r\n","\r\n            Returns the number of elements in a sequence.\r\n            ":"\r\n            返回序列中的元素数量。\r\n            \r\n","An object that represents the underlying unmanaged COM object.":"代表基础非托管对象的对象。\r\n","\r\n            Creates a new node identical to this node with the specified annotations removed.\r\n            ":"\r\n            创建一个与该节点相同的新节点，并删除了指定的注释。\r\n            \r\n","\r\n            Creates a new generator state that contains an exception and the associated diagnostic\r\n            ":"\r\n            创建一个包含异常和相关诊断的新发电机状态\r\n            \r\n","Optional arguments for property access.":"属性访问的可选论点。\r\n",", all\r\n            paths stored in the properties of this class are resolved and\r\n            absolute. This is the directory that relative paths specified on\r\n            command line were resolved against.\r\n            ":"， 全部\r\n            已解决此类属性中存储的路径已解决，并\r\n            绝对。这是相对路径在\r\n            命令行已解决。\r\n            \r\n","\r\n            Returns the arity of this method, or the number of type parameters it takes.\r\n            A non-generic method has zero arity.\r\n            ":"\r\n            返回此方法的敏锐度或所采用的类型参数数量。\r\n            一种非生成方法的Arity为零。\r\n            \r\n","The type name part of the split name.":"拆分名称的类型名称部分。\r\n","\r\n            Used to compare ":"\r\n            用于比较\r\n","\r\n            Copies bytes from the specified byte array into the ":"\r\n            从指定字节数组中的副本字节到\r\n","s directly.\r\n            \r\n            An ":"直接。\r\n            \r\n            一个\r\n","\r\n            Merges synthesized members generated during lowering of the current compilation with aggregate synthesized members \r\n            from all previous source generations (gen >= 1).\r\n            ":"\r\n            合并在降低当前汇编期间生成的合成成员与汇总合成成员\r\n            从所有先前的源代（gen> = 1）中。\r\n            \r\n","\r\n            Gets the first SyntaxNodeOrToken structure from this list.\r\n            ":"\r\n            从此列表中获取第一个语法诺言式结构。\r\n            \r\n","An identifier for the diagnostic. For diagnostics generated by the compiler, this will be a numeric code with a prefix such as \"CS1001\".":"诊断标识符。对于编译器生成的诊断，这将是具有前缀“ CS1001”的前缀的数字代码。\r\n"," is to improve performance by avoiding walking the entire IOperation parent for non-initializer cases.\r\n            ":" 是通过避免在非企业案例的整个偶然父母方面走动，以提高性能。\r\n            \r\n","GetEnumerator":"GetEnumerator\r\n","\r\n            Properties of a C# double.\r\n            ":"\r\n            c＃double的属性。\r\n            \r\n","This function is being called only in the context of sequence point creation and therefore interprets the \r\n            LineVisibility accordingly (BeforeFirstRemappingDirective -> Visible).":"仅在序列创建的上下文中调用此功能，因此可以解释\r\n            相应的线路效率（firstremapping -diractive-->可见）。\r\n","\r\n            Creates a copy of this object.\r\n            ":"\r\n            创建此对象的副本。\r\n            \r\n","\r\n            Creates a COM/ActiveX object on the specified server and exposes it to script code. The\r\n            registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            在指定的服务器上创建COM/ActiveX对象，并将其公开为脚本代码。这\r\n            注册类由程序化标识符（ProgID）指定。\r\n            \r\n","\r\n            Context for suppressing analyzer and/or compiler non-error diagnostics reported for the compilation.\r\n            ":"\r\n            抑制分析仪和/或编译器非错误诊断的上下文报道了用于编译的上下文。\r\n            \r\n","\r\n            Determines if two instances of ":"\r\n            确定两个实例是否\r\n","\r\n            Gets the symbol associated with this display part, if there is one.\r\n            For example, the ":"\r\n            如果有一个，请获取与此显示部分关联的符号。\r\n            例如，\r\n","\r\n            Options specifying how sections of the PE image are read from the stream.\r\n            Unless ":"\r\n            选项指定如何从流中读取PE图像的部分。\r\n            除非\r\n","\r\n            The handle of the first method of the type.\r\n            ":"\r\n            类型的第一种方法的手柄。\r\n            \r\n","promises":"承诺\r\n","\r\n            Only an attribute type was valid in the given location, but the candidate symbol was\r\n            of the wrong kind.\r\n            ":"\r\n            在给定位置中只有属性类型有效，但是候选符号是\r\n            错误的。\r\n            \r\n","The first token in the list.":"列表中的第一个令牌。\r\n","\r\n            Used in C# and VB for spans that are inside of #line hidden (C#) or outside of #ExternalSource (VB) \r\n            directives\r\n            ":"\r\n            在#line隐藏（C＃）或#ExternAlsource（VB）外部的跨度（VB）中用于c＃和vb中的跨度\r\n            指令\r\n            \r\n"," of another anonymous function or a query clause of the same kind [2], \r\n            returns the body of the [1] that positionally corresponds to the specified ":" 同一类型的另一个匿名函数或一个查询子句[2]，\r\n            返回位置对应于指定的[1]的主体\r\n","Delegate to determine if the given analyzer is compiler analyzer. \r\n            We need to special case the compiler analyzer at few places for performance reasons.":"委托确定给定的分析仪是否是编译器分析仪。\r\n            出于绩效原因，我们需要在几个地方进行特殊案例编译器分析仪。\r\n","\r\n            This only applies if this INamedTypeSymbol has TypeKind TypeKind.Error.\r\n            If not, an empty ImmutableArray is returned.\r\n            ":"\r\n            这仅在此InamedTypeSymbol具有typekind typekind.error时才适用。\r\n            如果没有，将返回空的Immutablearray。\r\n            \r\n","\r\n            A DiagnosticInfo object has information about a diagnostic, but without any attached location information.\r\n            ":"\r\n            诊断对象具有有关诊断的信息，但没有任何附加的位置信息。\r\n            \r\n","\r\n            Register an action to be executed at completion of semantic analysis of an ":"\r\n            注册一个措施将在完成的语义分析时执行\r\n","If any changes overlap other changes.":"如果任何更改重叠其他更改。\r\n"," and its members with an appropriate Kind.\r\n            ":" 及其成员具有适当的形式。\r\n            \r\n"," using given file resolver and metadata provider.\r\n            ":" 使用给定的文件解析器和元数据提供商。\r\n            \r\n","\r\n            Zero or more used namespaces. These correspond to using directives in C# or Imports syntax in VB.\r\n            Multiple invocations return the same array instance.\r\n            ":"\r\n            零或更多使用的名称空间。这些对应于VB中使用C＃或导入语法中的指令。\r\n            多个调用返回相同的数组实例。\r\n            \r\n"," instances return ":" 实例返回\r\n","The generators to run":"运行的发电机\r\n","\r\n            Information decoded from early well-known custom attributes applied on a type.\r\n            ":"\r\n            从应用于类型的早期众所周知的自定义属性解码的信息。\r\n            \r\n","An error occurred while reading or writing a file.":"阅读或编写文件时发生错误。\r\n","\r\n            x64 compiles the assembly to be run by the 64-bit common language runtime on a computer that supports the AMD64 or EM64T instruction set.\r\n            ":"\r\n            X64编译由支持AMD64或EM64T指令集的计算机上的64位通用语言运行时运行的组件。\r\n            \r\n"," but optimized for command\r\n            consoles. The specified command must be limited to a single expression or statement.\r\n            Script engines can override this method to customize command execution as well as the\r\n            process of converting the result to a string for console output.\r\n            ":" 但对命令进行了优化\r\n            控制台。指定的命令必须仅限于单个表达式或语句。\r\n            脚本引擎可以覆盖此方法以自定义命令执行以及\r\n            将结果转换为主机输出的字符串的过程。\r\n            \r\n","\r\n            A type or method instance will match another instance if it has a type for this parameter that is the same or a subtype of the type the\r\n            other instance has for this parameter.\r\n            ":"\r\n            如果类型或方法实例将其匹配另一个实例，则该实例具有此参数的类型，该参数是相同的或类型的子类型\r\n            其他实例具有此参数。\r\n            \r\n","\r\n            Represents a token in the syntax tree. This is the language agnostic equivalent of ":"\r\n            代表语法树中的令牌。这是语言不可知论的\r\n","Reference assembly identity.":"参考组装身份。\r\n","\r\n            Some script languages expect every subroutine call to return a value. When script code\r\n            written in such a language invokes a host method that explicitly returns no value (such as\r\n            a C# ":"\r\n            一些脚本语言期望每个子例程呼叫都返回值。当脚本代码时\r\n            用这种语言编写的调用一种主机方法，该方法明确返回没有值（例如\r\n            A C＃\r\n"," called for every syntax node in the compilation.\r\n            \r\n            The ":" 要求编译中的每个语法节点。\r\n            \r\n            这\r\n","\r\n            Create telemetry info for a specific analyzer, such as count of registered actions, the total execution time, etc.\r\n            ":"\r\n            为特定分析仪创建遥测信息，例如注册操作计数，总执行时间等。\r\n            \r\n","\r\n            The directory the editorconfig was contained in, with all directory separators\r\n            replaced with '/'.\r\n            ":"\r\n            EditorConfig包含的目录，所有目录分离器\r\n            替换为'/'。\r\n            \r\n"," can't be normalized. The resulting path doesn't need to exist.":" 不能归一化。结果路径不需要存在。\r\n","\r\n            Contains the core execution logic for callbacks into analyzers.\r\n            ":"\r\n            将回调的核心执行逻辑包含到分析仪中。\r\n            \r\n","\r\n            The length of the text of the syntax tree.\r\n            ":"\r\n            语法树的文本长度。\r\n            \r\n","\r\n            Compares the content with content of another ":"\r\n            将内容与另一个内容进行比较\r\n"," that can be recycled via an object pool.\r\n            ":" 可以通过对象池回收。\r\n            \r\n","\r\n            Exception that was thrown while loading the analyzer. May be null.\r\n            ":"\r\n            加载分析仪时抛出的例外。可能是无效的。\r\n            \r\n","\r\n            If someone need to create a private pool\r\n            ":"\r\n            如果有人需要创建一个私人游泳池\r\n            \r\n","\r\n            Zero or more properties defined by this type.\r\n            ":"\r\n            零或更多属性由此类型定义。\r\n            \r\n","\r\n            C++ member unmanaged method (non-vararg) calling convention. The callee cleans the stack and the this pointer is pushed on the stack last.\r\n            ":"\r\n            C ++成员非管理方法（非VARARG）调用约定。 Callee清洁堆栈，最后将该指针推到堆栈上。\r\n            \r\n","\r\n              Looks up a localized string similar to Tuples must have at least two elements..\r\n            ":"\r\n              查找类似于元组的局部字符串必须至少具有两个元素。\r\n            \r\n"," has been processed,\r\n            indicating all relevant analyzers have executed on the entire compilation.\r\n            ":" 已经处理过，\r\n            指示所有相关分析仪都在整个汇编中执行。\r\n            \r\n","\r\n            Value to be converted.\r\n            ":"\r\n            值要转换。\r\n            \r\n","\r\n            Returns whether this namespace is the unnamed, global namespace that is \r\n            at the root of all namespaces.\r\n            ":"\r\n            返回此名称空间是否是未命名的全局名称空间\r\n            在所有名称空间的根部。\r\n            \r\n","\r\n            Gets all trivia with the specified annotation.\r\n            ":"\r\n            用指定的注释获得所有琐事。\r\n            \r\n","\r\n            If this is a speculative semantic model, returns the original position at which the speculative model was created.\r\n            Otherwise, returns 0.\r\n            ":"\r\n            如果这是一个投机性语义模型，请返回创建投机模型的原始位置。\r\n            否则，返回0。\r\n            \r\n","\r\n            Formats the names of all types and namespaces in a fully qualified style (including the global alias).\r\n            ":"\r\n            格式化所有类型和名称空间的名称，以完全合格的样式（包括全局别名）。\r\n            \r\n","\r\n            The type of the local.\r\n            ":"\r\n            本地的类型。\r\n            \r\n","\r\n            Type parameter in a ":"\r\n            键入参数\r\n","\r\n            Resolve assembly references against assemblies described by provided AssemblyData objects. \r\n            In other words, match assembly identities returned by AssemblyReferences property against \r\n            assemblies described by provided AssemblyData objects.\r\n            ":"\r\n            解析针对提供的汇编对象所描述的组件的组件参考。\r\n            换句话说，匹配汇编身份由AssemblyReferences属性返回\r\n            由提供的汇编对象描述的组件。\r\n            \r\n","\r\n            Binder to bind early well-known attributes.\r\n            ":"\r\n            粘合剂结合早期众所周知的属性。\r\n            \r\n","\r\n            Returns a constructed method given its type arguments and type argument nullable annotations.\r\n            ":"\r\n            返回一个构造的方法，给定其类型的参数和类型参数无效的注释。\r\n            \r\n","Returns a boolean indicating whether this span is considered hidden or not.":"返回布尔值，指示该跨度是否被视为隐藏。\r\n","MethodDef token of the target method.":"目标方法的methodDef令牌。\r\n","\r\n            Instance receiver. In VB, this can be null.\r\n            ":"\r\n            实例接收器。在VB中，这可能是无效的。\r\n            \r\n","\r\n              Looks up a localized string similar to Warning: Could not enable multicore JIT due to exception: {0}..\r\n            ":"\r\n              查找类似于警告的本地化字符串：由于例外：{0}。\r\n            \r\n"," to indicate flow transfer to the end of program execution.\r\n            The destination basic block is null for this branch.\r\n            ":" 指示流到程序执行结束的流动传输。\r\n            目的地基本块对于此分支为null。\r\n            \r\n","ECMA-335":"ECMA-335\r\n","\r\n            The list of trivia that appear after this token in the source code and are attached to this token or any of\r\n            its descendants.\r\n            ":"\r\n            源代码中此令牌之后出现的琐事列表，并附加到该令牌或任何一个\r\n            它的后代。\r\n            \r\n","\r\n            Returns memory usage information.\r\n            ":"\r\n            返回内存使用信息。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer '{0}' contains a null descriptor in its 'SupportedDiagnostics'..\r\n            ":"\r\n              查找类似于分析仪'{0}'的局部字符串，其中包含一个空的描述符在其“支持的诊断”中。\r\n            \r\n","The operand appearing on the right side of the operator.":"操作数出现在操作员的右侧。\r\n",".\r\n            See https://github.com/dotnet/roslyn/issues/27356.\r\n            This implementation works around that by permitting symbols from previous submissions as well.":"。\r\n            请参阅https://github.com/dotnet/roslyn/issues/27356。\r\n            通过允许先前提交的符号，该实现涉及该实现。\r\n","A language keyword.":"语言关键字。\r\n","Stream must support read and seek operations.":"流必须支持阅读和寻求操作。\r\n","\r\n            Determines whether this node or any of its descendant nodes, tokens or trivia have any diagnostics on them. \r\n            ":"\r\n            确定该节点或其任何后代节点，令牌或琐事是否有任何诊断。\r\n            \r\n","\r\n            Add multiple diagnostics to the bag.\r\n            ":"\r\n            在袋子中添加多个诊断。\r\n            \r\n","\r\n              Looks up a localized string similar to 'start' must not be negative.\r\n            ":"\r\n              查找类似于“开始”的本地化字符串不得为负面。\r\n            \r\n","Sequence of file paths.":"文件路径序列。\r\n","\r\n            Creates the blob to be saved to the PDB.\r\n            ":"\r\n            创建要保存到PDB的斑点。\r\n            \r\n"," for entity copy values and\r\n            the predicated copy values based on true/false runtime values of predicated entities.\r\n            ":" 对于实体复制值和\r\n            基于预测实体的真/错误运行时值的预测复制值。\r\n            \r\n","\r\n            Tries to executes compilation actions or compilation end actions.\r\n            ":"\r\n            试图执行汇编操作或汇编最终操作。\r\n            \r\n","length of content from ":"内容长度来自\r\n","The offset within the view of the first byte to copy.":"在第一个复制字节的视图中的偏移。\r\n","\r\n            Gets the node's hit count.\r\n            ":"\r\n            获取节点的热门计数。\r\n            \r\n","\r\n            Struct containing information about a source declaration.\r\n            ":"\r\n            结构包含有关源声明的信息。\r\n            \r\n","\r\n            Compares scopes by their start (ascending) and then size (descending).\r\n            ":"\r\n            比较范围的启动（上升）然后大小（下降）。\r\n            \r\n","\r\n            Default analysis mode for generated code.\r\n            ":"\r\n            生成代码的默认分析模式。\r\n            \r\n","\r\n            Represents a constituent interpolation part of an interpolated string operation.\r\n            ":"\r\n            代表插值字符串操作的组成插值部分。\r\n            \r\n","The size of the metadata block.":"元数据块的大小。\r\n","\r\n            Read a Int32 value from the stream. This value must have been written using ":"\r\n            从流中读取INT32值。该值必须使用\r\n","\r\n            assuming the length of bytes submitted began on a 32-bit boundary,\r\n            round up this length as necessary so that it ends at a 32-bit boundary.\r\n            ":"\r\n            假设提交的字节长度开始在32位边界上开始\r\n            必要时汇总此长度，以使其在32位边界结束。\r\n            \r\n","\r\n            Modifies the set of allowed values for a type, or the semantics of operations allowed on those values. \r\n            Custom modifiers are not associated directly with types, but rather with typed storage locations for values.\r\n            ":"\r\n            修改类型的允许值集或这些值允许的操作语义。\r\n            自定义修饰符与类型直接相关，而与键入的存储位置有关。\r\n            \r\n"," both return true. However, for an unconstrained type\r\n            parameter, ":" 两者都返回true。但是，对于不受约束的类型\r\n            范围，\r\n","\r\n            The name assigned to the Decrement operator.\r\n            ":"\r\n            分配给减少操作员的名称。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# return statement and yield statement.\r\n             (2) VB Return statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃返回语句和收益率语句。\r\n             （2）VB返回语句。\r\n            \r\n"," returns\r\n            ":" 返回\r\n            \r\n","\r\n            Represents a tuple expression.\r\n            ":"\r\n            代表元组表达。\r\n            \r\n","\r\n            Represents a C# 'for' loop statement.\r\n            ":"\r\n            代表'循环语句的c＃'。\r\n            \r\n","\r\n              Looks up a localized string similar to Windows PDB writer doesn't support deterministic compilation -- could not find Microsoft.DiaSymReader.Native.{0}.dll.\r\n            ":"\r\n              查找类似于Windows PDB Writer的本地化字符串不支持确定性汇编 - 找不到Microsoft.diasymreader.native。{0} .dll。\r\n            \r\n","\r\n            Name of the module.\r\n            ":"\r\n            模块的名称。\r\n            \r\n","A position in the source code (context).":"源代码（上下文）中的位置。\r\n","\r\n              Looks up a localized string similar to A DiagnosticDescriptor must have an Id that is neither null nor an empty string nor a string that only contains white space..\r\n            ":"\r\n              查找类似于DiagnosticDeScriptor的本地化字符串，必须具有一个既不是空的也不是空字符串的ID，也必须仅包含白色空间的字符串。\r\n            \r\n","\r\n            Represents a preprocessing conditional compilation symbol.\r\n            ":"\r\n            表示预处理条件汇编符号。\r\n            \r\n"," is either a lambda syntax (":" 是lambda语法（\r\n","\r\n            Underlying expression.\r\n            ":"\r\n            基础表达。\r\n            \r\n"," implementation associated with the current script engine.\r\n            ":" 与当前脚本引擎关联的实现。\r\n            \r\n","\r\n            A helper class that contains a topological sort algorithm.\r\n            ":"\r\n            包含拓扑排序算法的辅助类别。\r\n            \r\n","\r\n            Only specified if ":"仅指定时\r\n",", the initializer may be located\r\n            in the parent operation. Call ":"，初始化器可能位于\r\n            在父行动中。称呼\r\n","\r\n            The source text to embed in the PDB. (If any, otherwise default.)\r\n            ":"\r\n            嵌入PDB的源文本。 （如果有的话，否则默认。）\r\n            \r\n"," is null; a combined path, otherwise.":" 为null;组合路径，否则。\r\n","\r\n            Represents text to be embedded in a PDB.\r\n            ":"\r\n            表示要嵌入PDB中的文本。\r\n            \r\n","\r\n            Flags that determine marshalling behavior.\r\n            ":"\r\n            决定编组行为的标志。\r\n            \r\n","\r\n            Determines whether any of this token's trivia is structured.\r\n            ":"\r\n            确定这个令牌的琐事是否是结构化的。\r\n            \r\n","\r\n            An object specifying which parameters should not be applied to how generic symbols will be formatted.\r\n            ":"\r\n            指定哪些参数不应应用于如何格式的对象。\r\n            \r\n","\r\n            Provides the implementation of Equals. Equals will provide a default value\r\n            if this method throws an exception.\r\n            ":"\r\n            提供平等的实现。平等将提供默认值\r\n            如果此方法引发异常。\r\n            \r\n","\r\n            Returns 0 for path \".foo\".\r\n            Returns -1 for path \"foo.\".\r\n            ":"\r\n            返回0的路径“ .foo”。\r\n            返回-1的路径“ foo。”。\r\n            \r\n","\r\n            Get unary operation kind independent of data type.\r\n            ":"\r\n            独立于数据类型获取单一操作类型。\r\n            \r\n","\r\n            The type of the property. \r\n            ":"\r\n            属性的类型。\r\n            \r\n","\r\n            Optional serialized local signature.\r\n            ":"\r\n            可选的序列化局部签名。\r\n            \r\n","\r\n            Returns true if this symbols is a type. If it is not a type, it must be a namespace.\r\n            ":"\r\n            如果此符号是一种类型，则返回true。如果不是类型，则必须是名称空间。\r\n            \r\n","\r\n              Looks up a localized string similar to assembly.\r\n            ":"\r\n              查找类似于汇编的局部字符串。\r\n            \r\n","\r\n            Creates a new V8 script engine instance.\r\n            ":"\r\n            创建一个新的V8脚本引擎实例。\r\n            \r\n"," is not a valid kind.\r\n            ":" 不是一种有效的种类。\r\n            \r\n","\r\n              Looks up a localized string similar to Output kind not supported..\r\n            ":"\r\n              查找类似于不支持输出类似的本地化字符串。\r\n            \r\n","\r\n            Scope for setting up analyzers for an entire session, capable of retrieving the actions.\r\n            ":"\r\n            为整个会话设置分析仪的范围，能够检索动作。\r\n            \r\n","\r\n            A string.\r\n            ":"\r\n            字符串。\r\n            \r\n","\r\n            Create a CachingLookup.\r\n            ":"\r\n            创建一个cachinglookup。\r\n            \r\n","\r\n            The compilation object is an immutable representation of a single invocation of the\r\n            compiler. Although immutable, a compilation is also on-demand, and will realize and cache\r\n            data as necessary. A compilation can produce a new compilation from existing compilation\r\n            with the application of small deltas. In many cases, it is more efficient than creating a\r\n            new compilation from scratch, as the new compilation can reuse information from the old\r\n            compilation.\r\n            ":"\r\n            汇编对象是单个调用的不变表示\r\n            编译器。虽然不变，但也是按需进行的，并且会意识到并缓存\r\n            必要的数据。汇编可以从现有汇编中产生新的汇编\r\n            使用小三角洲的应用。在许多情况下，它比创建一个\r\n            从头开始的新汇编，因为新汇编可以重复使用旧的信息\r\n            汇编。\r\n            \r\n","Action to be executed at completion of semantic analysis of an ":"完成在完成语义分析时要执行的措施\r\n","\r\n            Checks if a given symbol implements an interface member or overrides an implementation of an interface member.\r\n            ":"\r\n            检查给定符号是否实现接口成员或覆盖接口成员的实现。\r\n            \r\n","The new character to combine":"结合新角色\r\n","\r\n            Determines whether this node represents a structured trivia.\r\n            ":"\r\n            确定该节点是否代表结构化琐事。\r\n            \r\n","true if successful; false if not successful due to cycles in the graph":"如果成功的话是真的；由于图中的循环而不成功的假\r\n","\r\n            Lazily populated dictionary indicating whether a source file is a generated code file or not - we populate it lazily to avoid realizing all syntax trees in the compilation upfront.\r\n            ":"\r\n            懒惰的字典指示源文件是否是生成的代码文件 - 我们懒洋洋地填充它，以避免预先实现编译中的所有语法树。\r\n            \r\n","\r\n            Mark the compilation assembly as fully signed, but only sign with the public key.\r\n            ":"\r\n            将编译组件标记为完全签名，但仅使用公共密钥签名。\r\n            \r\n","\r\n             The assembly table feature is only available on .NET Framework. This property has no\r\n             effect on other platforms.\r\n             ":"\r\n             组装表功能仅在.NET框架上可用。该属性没有\r\n             对其他平台的影响。\r\n             \r\n","The root path for Tracker.exe.  Overrides the toolType if specified.":"tracker.exe的根路径。如果指定，则覆盖工具类型。\r\n","\r\n            Loads a document.\r\n            ":"\r\n            加载文档。\r\n            \r\n","s in a ":"s\r\n","\r\n            We use the following heuristic to determine if a method is a collection add method:\r\n            1. Method's enclosing type implements any of the given ":"\r\n            我们使用以下启发式来确定方法是否是收集方法：\r\n            1.方法的封闭类型实现了任何一个给定的\r\n","\r\n            Dynamically or late bound expression.\r\n            ":"\r\n            动态或晚期的表达。\r\n            \r\n","\r\n            True if this operation has no IOperation API support, i.e. ":"\r\n            如果此操作没有ioperation API支持，则是的，即\r\n"," set if cancellation is expected.":" 设置如果预期取消。\r\n","\r\n            Used for logging compiler diagnostics to a stream in the standardized SARIF\r\n            (Static Analysis Results Interchange Format) v2.1.0 format.\r\n            http://docs.oasis-open.org/sarif/sarif/v2.1.0/sarif-v2.1.0.html\r\n            ":"\r\n            用于记录编译器诊断到标准化SARIF中的流\r\n            （静态分析结果互换格式）v2.1.0格式。\r\n            http://docs.oasis-open.org/sarif/sarif/v2.1.0/sarif-v2.1.0.html\r\n            \r\n"," containing information about the output.":" 包含有关输出的信息。\r\n","\r\n            Method is a property set.\r\n            ":"\r\n            方法是属性集。\r\n            \r\n","\r\n            Base directory to resolve CWD-relative paths against if ":"\r\n            根据if解析CWD相对路径的基目录 \r\n","\r\n             Called when the ":"\r\n             在\r\n","\r\n            \r\n            If ":"\r\n            \r\n            如果\r\n","Typically for the default values of parameters and the constant values of fields.":"通常，对于参数的默认值和字段的常数值。\r\n","s about code within a ":"关于代码\r\n","\r\n            A reference to generic method instantiated with a list of type arguments.\r\n            ":"\r\n            对类型参数列表实例化的通用方法的引用。\r\n            \r\n","\r\n            Gets the hit count for the script line.\r\n            ":"\r\n            获取脚本行的热门计数。\r\n            \r\n","\r\n            The name assigned to the Increment operator.\r\n            ":"\r\n            分配给增量操作员的名称。\r\n            \r\n","\r\n            Produces an instance.\r\n            ":"\r\n            产生一个实例。\r\n            \r\n"," is false and the map is not needed or \r\n            the source of the current method is the same as the source of the previous method.\r\n            ":" 是错误的，不需要地图或\r\n            当前方法的来源与先前方法的来源相同。\r\n            \r\n","\r\n            Resolves a missing assembly reference.\r\n            ":"\r\n            解决缺失的组件参考。\r\n            \r\n"," message using the optional ":" 使用可选的消息\r\n"," the default constructor for a class or struct that is created if one is not provided, ":" 如果不提供一个类别的类或结构的默认构造函数，则\r\n","Invalid data.":"无效数据。\r\n","A string containing the document's contents.":"包含文档内容的字符串。\r\n","\r\n            Connects the host event source to the specified script handler function.\r\n            ":"\r\n            将主机事件源连接到指定的脚本处理程序功能。\r\n            \r\n"," with the specified element removed.\r\n            ":" 删除了指定元素。\r\n            \r\n","\r\n            The name assigned to the BitwiseOr operator.\r\n            ":"\r\n            分配给BitWiseor操作员的名称。\r\n            \r\n","\r\n            Determines other characteristics of how symbols are displayed.\r\n            ":"\r\n            确定如何显示符号的其他特征。\r\n            \r\n"," \r\n            passed to the compilation that contains the tree understand it.\r\n            \r\n            Clients must also not assume that the values of this property are unique\r\n            within a Compilation.\r\n            \r\n            The path is used as follows:\r\n               - When debug information is emitted, this path is embedded in the debug information.\r\n               - When resolving and normalizing relative paths in #r, #load, #line/#ExternalSource, \r\n                 #pragma checksum, #ExternalChecksum directives, XML doc comment include elements, etc.\r\n            ":" \r\n            传递给包含树的汇编，理解它。\r\n            \r\n            客户还必须不假定此属性的值是唯一的\r\n            在汇编中。\r\n            \r\n            该路径如下：\r\n                - 当发出调试信息时，此路径嵌入在调试信息中。\r\n                - 在#r，#load，＃line/＃externalsource中解决和标准化相对路径时，\r\n                 #pragma checksum，#externalchecksum指令，XML doc评论包括元素等。\r\n            \r\n","\r\n            Determines if the symbol might contain extension methods. \r\n            If false, the symbol does not contain extension methods. \r\n            ":"\r\n            确定符号是否包含扩展方法。\r\n            如果为false，则该符号不包含扩展方法。\r\n            \r\n","\r\n            Gets or sets the cancellation token registration.\r\n            ":"获取或设置取消令牌注册。\r\n            \r\n","\r\n            A UInt64 value encoded as 8 bytes.\r\n            ":"\r\n            UINT64值编码为8个字节。\r\n            \r\n","Normalized path, or null if the file can't be resolved.":"归一化路径，如果无法解析文件，则为空。\r\n","\r\n            Get the source compilation backing this assembly, if one exists.\r\n            Returns null otherwise.\r\n            ":"\r\n            如果存在，请获取源汇编，以备份此组件。\r\n            否则返回null。\r\n            \r\n","\r\n            Creates a new token from this token with the leading and trailing trivia from the specified token.\r\n            ":"\r\n            从这个代币中创建一个新的令牌，并从指定的令牌中带有领先和尾随的琐事。\r\n            \r\n"," registered during Initialize are invoked only once per-compilation per-analyzer and analyzer options.\r\n            ":" 初始化期间注册的人每分析仪和分析仪选项仅调用一次。\r\n            \r\n","\r\n            C# only. Specifies local scopes for state machine hoisted local variables.\r\n            ":"\r\n            仅C＃。指定状态机吊装本地变量的本地范围。\r\n            \r\n","\r\n            Finishes filter condition (and starts actual handler portion of the handler).\r\n            Returns the last block of the condition.\r\n            ":"\r\n            完成过滤条件（并启动处理程序的实际处理程序部分）。\r\n            返回条件的最后一个块。\r\n            \r\n","\r\n            Resets all the analysis data for all ":"\r\n            重置所有分析数据\r\n","\r\n            An object specifying which parameters should not be applied to how members will be formatted.\r\n            ":"\r\n            指定哪些参数不应应用于将如何格式化的对象。\r\n            \r\n","\r\n            Categorized diagnostics queue: maintains separate set of simple diagnostic queues for local semantic, local syntax and non-local diagnostics for every analyzer.\r\n            ":"\r\n            分类的诊断队列：为每个分析仪的本地语义，本地语法和非本地诊断，维护单独的简单诊断队列。\r\n            \r\n","\r\n            Relational operator used to compare the switch value with the case value.\r\n            ":"\r\n            关系运算符用于将开关值与案例值进行比较。\r\n            \r\n","\r\n            Returns false if the event has already been processed for the analyzer OR is currently being processed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已经为分析仪处理事件或目前正在另一项任务处理该事件，则返回false。\r\n            如果是真的，那么它将返回一个非编号\r\n","s that are l-value captures.\r\n            ":"S是L值捕获的。\r\n            \r\n","\r\n            Writes a Byte value to the stream.\r\n            ":"\r\n            将字节值写入流。\r\n            \r\n","\r\n            Represents a value on #String heap that has not been serialized yet.\r\n            ":"\r\n            代表#String堆的价值，尚未序列化。\r\n            \r\n","\r\n            Symbol is a range variable of a query expression.\r\n            ":"\r\n            符号是查询表达式的范围变量。\r\n            \r\n","\r\n            Referenced event.\r\n            ":"\r\n            引用事件。\r\n            \r\n","\r\n            The set of other assemblies the use site will depend upon, excluding a core library.\r\n            Empty if ":"\r\n            使用网站的其他组件集将取决于不包括核心库。\r\n            如果是空的\r\n"," or modules.\r\n             ":" 或模块。\r\n             \r\n","\r\n            The unique key assigned to the given descriptor.\r\n            ":"\r\n            分配给给定描述符的唯一键。\r\n            \r\n","\r\n            Represents a C# or VB member initializer expression within an object initializer expression.\r\n            ":"\r\n            代表对象初始化器表达式中的C＃或VB成员初始化器表达式。\r\n            \r\n","Like":"喜欢\r\n","\r\n            Field alignment (PackingSize field in metadata).\r\n            ":"\r\n            现场对齐（元数据中的包装字段）。\r\n            \r\n","Symbol event to be analyzed.":"要分析的符号事件。\r\n","\r\n            The set of return statements found within a region.\r\n            ":"\r\n            在区域内发现的一组返回语句。\r\n            \r\n","\r\n            This exists for short-circuiting purposes. Use ":"\r\n            这是出于短路的目的而存在的。利用\r\n","\r\n            Holds input nodes that are shared between generators and always exist\r\n            ":"\r\n            保存发电机之间共享并始终存在的输入节点\r\n            \r\n","\r\n            Returns the RefKind of the property.\r\n            ":"\r\n            返回该物业的备受量。\r\n            \r\n","A reference to the module metadata.":"对模块元数据的引用。\r\n","\r\n            Trims all '.' and whitespace from the end of the path\r\n            ":"\r\n            修剪所有'。和从路径尽头的空格\r\n            \r\n","Reference identity.":"参考身份。\r\n","\r\n            A source text created by an ":"\r\n            由\r\n",",\r\n            such as method body, field/property/constructor/parameter initializer(s), attributes, etc.\r\n            ":"，，，，\r\n            例如方法主体，字段/属性/构造函数/参数初始化器，属性等。\r\n            \r\n","\r\n            A representation of a string of characters that requires O(1) extra space to concatenate two ropes.\r\n            ":"\r\n            一串字符串的表示，需要o（1）额外的空间才能连接两条绳索。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# typeof expression.\r\n             (2) VB GetType expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃类型表达式。\r\n             （2）VB GetType表达式。\r\n            \r\n","\r\n            Returns true if the conversion is an nullable conversion.\r\n            ":"\r\n            如果转换为无效的转换，则返回true。\r\n            \r\n"," host type.\r\n            ":" 主机类型。\r\n            \r\n",")\r\n             are the same method (Main). A non-executable program has no entry point. Runtimes that implement a custom loader may specify debug entry-point\r\n             to force the debugger to skip over complex custom loader logic executing at the beginning of the .exe and thus improve debugging experience.\r\n            \r\n             Unlike ordinary entry-point which is limited to a non-generic static method of specific signature, there are no restrictions on the ":"）\r\n             是相同的方法（主要）。一个非执行程序没有切入点。实现自定义加载程序的Runtimes可以指定调试入口点\r\n             迫使调试器在.EXE开头跳过复杂的自定义加载程序逻辑执行，从而改善了调试体验。\r\n            \r\n             与普通的入口点不同，该入口处仅限于非类别的特定签名静态方法，没有任何限制\r\n","\r\n            Specifies that managed arrays that are passed or returned to script code are to be\r\n            converted to script arrays and marshaled as variants of type ":"\r\n            指定传递或返回到脚本代码的托管阵列将是\r\n            转换为脚本阵列并将其称为类型的变体\r\n"," again.\r\n             ":" 再次。\r\n             \r\n","\r\n            True if the pattern is of a form that accepts null.\r\n            For example, in C# the pattern `var x` will match a null input,\r\n            while the pattern `string x` will not.\r\n            ":"\r\n            如果模式是一种接受null的形式，则为正确。\r\n            例如，在c＃中，模式`var x`将匹配一个null输入，\r\n            而模式`字符串x`不会。\r\n            \r\n","\r\n            Returns true if a diagnostic is not configurable, i.e. cannot be suppressed or filtered or have its severity changed.\r\n            For example, compiler errors are always non-configurable.\r\n            ":"\r\n            如果诊断不可配置，则返回为true，即不能抑制或过滤或更改其严重性。\r\n            例如，编译器错误始终是不可配合的。\r\n            \r\n","\r\n            Local id, or ":"\r\n            本地ID或\r\n","\r\n            Map from analyzers to their ":"\r\n            从分析仪到他们的地图\r\n","The name of a query range variable..":"查询范围变量的名称..\r\n"," into its enclosing region and free it.\r\n            ":" 进入其封闭区域并释放它。\r\n            \r\n","\r\n            Number of slots reserved for hoisted local variables.\r\n            ":"\r\n            为吊装局部变量保留的插槽数量。\r\n            \r\n","A new byte array containing a copy of the view's contents.":"一个新的字节数组，其中包含视图内容的副本。\r\n","\r\n            Represents a V8 CPU profile.\r\n            ":"\r\n            表示V8 CPU配置文件。\r\n            \r\n","\r\n              Looks up a localized string similar to Return type can't be void, by-ref or open generic type.\r\n            ":"\r\n              查找类似于返回类型的本地化字符串不能无效，by-ref或打开通用类型。\r\n            \r\n","\r\n            Represents a switch expression.\r\n            ":"\r\n            表示开关表达式。\r\n            \r\n","\r\n            Aliases for the metadata reference. Empty if the reference has no aliases.\r\n            ":"\r\n            元数据参考的别名。如果参考没有别名，则为空。\r\n            \r\n","\r\n            The symbol from the later compilation, or null if the edit represents a deletion.\r\n            ":"\r\n            以后的汇编中的符号，如果编辑表示删除，则为null。\r\n            \r\n","An error occurred while reading the file.":"读取文件时发生错误。\r\n","\r\n            Shows only the name of the local.\r\n            For example, \"x\".\r\n            ":"\r\n            仅显示本地的名称。\r\n            例如，“ x”。\r\n            \r\n","\r\n            Checks options passed to submission compilation constructor.\r\n            Throws an exception if the options are not applicable to submissions.\r\n            ":"\r\n            检查选项传递给提交汇编构造函数。\r\n            如果选项不适用于提交，则引发异常。\r\n            \r\n","\r\n            Implemented by an entity that is always a member of a particular parameter list, such as an IParameterDefinition.\r\n            Provides a way to determine the position where the entity appears in the parameter list.\r\n            ":"\r\n            由始终是特定参数列表的成员的实体实施，例如iParameterDefinition。\r\n            提供一种方法来确定实体出现在参数列表中的位置。\r\n            \r\n","The custom attribute's type name in metadata format (case sensitive)":"自定义属性的类型名称中的元数据格式（情况敏感）\r\n","true if match is found":"如果发现匹配\r\n","\r\n            This method checks that the specified files exist. During the scan the\r\n            most recent file write time of all the outputs is remembered. It will be\r\n            the basis for up to date comparisons.\r\n            ":"\r\n            此方法检查指定的文件是否存在。在扫描期间\r\n            记住所有输出的最新文件写入时间。这将是\r\n            最新比较的基础。\r\n            \r\n","\r\n            ITaskItem array of primary sources.\r\n            ":"\r\n            主要来源的ITASCITEM数组。\r\n            \r\n","Number.MAX_SAFE_INTEGER":"number.max_safe_integer\r\n","\r\n            Regions entered if this branch is taken.\r\n            Ordered from the outermost region to the innermost region.\r\n            ":"\r\n            如果采用此分支，则输入区域。\r\n            从最外面的地区订购到最内向区域。\r\n            \r\n","\r\n            for use with script code currently running on the calling thread.\r\n            ":"\r\n            与当前在调用线程上运行的脚本代码一起使用。\r\n            \r\n","\r\n            Non-source files on which we need to perform analysis.\r\n            ":"\r\n            我们需要执行分析的非源文件。\r\n            \r\n","\r\n            Some streams are easily represented as byte arrays.\r\n            ":"\r\n            一些流很容易表示为字节数组。\r\n            \r\n","\r\n            The full name of a global implicit class (script class). This class implicitly encapsulates top-level statements, \r\n            type declarations, and member declarations. Could be a namespace qualified name.\r\n            ":"\r\n            全局隐式类（脚本类）的全名。该类隐含地封装了顶级语句，\r\n            类型声明和会员声明。可能是名称空间合格的名称。\r\n            \r\n"," means AnyCPU.\r\n            ":" 表示Anycpu。\r\n            \r\n","\r\n            Gets a detailed error message if one is available, ":"\r\n            如果有可用，获取详细的错误消息，\r\n","Task type.":"任务类型。\r\n","[i].":"[一世]。\r\n","\r\n            The byte alignment that values of the given type ought to have. Must be a power of 2. If zero, the alignment is decided at runtime.\r\n            ":"\r\n            给定类型值的字节对齐应该具有。必须是2的功率。如果零，则在运行时确定对齐。\r\n            \r\n","\r\n            Converts an object to a host object with the specified type restriction, for use with\r\n            script code currently running on the calling thread.\r\n            ":"\r\n            将对象转换为具有指定类型限制的主机对象，以供\r\n            脚本代码当前在调用线程上运行。\r\n            \r\n",",\r\n            even if the declaration group only declares 1 variable.\r\n            ":"，，，，\r\n            即使声明组仅声明1个变量。\r\n            \r\n"," if both lists not equal, else ":" 如果两个列表不等，否则\r\n","\r\n            An array of tokens for type constraints. Null reference if none.\r\n            ":"\r\n            类型约束的代币数组。 null引用如果没有。\r\n            \r\n","\r\n            Checksum algorithm name.\r\n            ":"\r\n            校验和算法名称。\r\n            \r\n","\r\n            Accessibility modifiers are controlled separately by ":"\r\n            可访问性修饰符由\r\n","\r\n            Discards all cached documents.\r\n            ":"\r\n            丢弃所有缓存的文件。\r\n            \r\n","\r\n            The member being matched in a property subpattern.  This can be a ":"\r\n            成员在属性子图案中匹配。这可以是\r\n","\r\n            Constructor initializer, if any.\r\n            ":"\r\n            构造函数初始化器（如果有）。\r\n            \r\n","Error reading from stream.":"从流读取错误。\r\n","\r\n            The type of argument value that corresponds to this parameter.\r\n            ":"\r\n            与此参数相对应的参数值类型。\r\n            \r\n","\r\n            Check compilation options and create ":"\r\n            检查汇编选项并创建\r\n","\r\n            Gets the variable initialzer for the given ":"\r\n            获取给定的变量初始化镜\r\n","\r\n            The member is visible only within its own type and any subtypes.\r\n            ":"\r\n            该成员仅在其自己的类型和任何子类型中可见。\r\n            \r\n","\r\n            An identifier provided by the generator that identifies the added ":"\r\n            发电机提供的标识符，标识添加的\r\n","\r\n            This class provides simple properties for determining whether the current platform is Windows or Unix-based.\r\n            We intentionally do not use System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(...) because\r\n            it incorrectly reports 'true' for 'Windows' in desktop builds running on Unix-based platforms via Mono.\r\n            ":"\r\n            此类提供了简单的属性，用于确定当前平台是基于Windows还是基于UNIX的平台。\r\n            我们故意不使用system.runtime.interopservices.runtimeinformation.isosplatform（...），因为\r\n            它错误地报告了桌面中的“ Windows”的“ true”，该台式机通过Mono在基于UNIX的平台上运行。\r\n            \r\n","\r\n            Symbol of the anonymous function. \r\n            ":"\r\n            匿名函数的象征。\r\n            \r\n","\r\n            Return true if the bag is completely empty - not even containing void diagnostics.\r\n            ":"如果包完全空，则返回true  - 甚至不包含void诊断。\r\n            \r\n","\r\n            Acquires an element referencer method for a given array type\r\n            ":"\r\n            获取给定数组类型的元素引用方法\r\n            \r\n","\r\n            The new script engine instance shares the V8 runtime with other instances created by\r\n            this method and any of its overloads.\r\n            ":"\r\n            新的脚本引擎实例与其他实例共享V8运行时\r\n            此方法及其任何过载。\r\n            \r\n",", returns the effective diagnostics after applying the below filters:\r\n            1) ":"，在应用以下过滤器后返回有效的诊断：\r\n            1）\r\n","\r\n            Returns a new INamedTypeSymbol with the given element types and (optional) element names.\r\n            ":"\r\n            返回具有给定元素类型和（可选）元素名称的新的InamedTypeSymbol。\r\n            \r\n","The concatenation of the parts into a single string.":"零件将零件串联成一个字符串。\r\n","\r\n            This class captures information about beginning of stack frame\r\n            and corresponding ":"\r\n            此类捕获有关堆栈框架开始的信息\r\n            并对应\r\n","Scripting.Dictionary":"脚本\r\n","\r\n            Represents a default value operation.\r\n            ":"\r\n            表示默认值操作。\r\n            \r\n","The nodes or tokens to add.":"节点或令牌要添加。\r\n",".\r\n            For a conditional access operation of the form ":"。\r\n            对于表单的有条件访问操作\r\n","\r\n            Create BitArray with at least the specified number of bits.\r\n            ":"\r\n            至少使用指定数量的位创建BitArray。\r\n            \r\n","\r\n            Token to check for requested cancellation of the analysis.\r\n            ":"\r\n            令牌以检查要求取消分析的要求。\r\n            \r\n","\r\n            Dynamically or late bound operation.\r\n            ":"\r\n            动态或晚期操作。\r\n            \r\n","\r\n            Get whether the given tree is generated.\r\n            ":"\r\n            获取是否生成给定的树。\r\n            \r\n","\r\n            Returns whether this built-in operator checks for integer overflow.\r\n            ":"\r\n            返回该内置操作员是否检查整数溢出。\r\n            \r\n","\r\n            The error code, as an integer.\r\n            ":"\r\n            错误代码，作为整数。\r\n            \r\n",", if non-null, is evaluated after the ":"，如果非无效，请在\r\n","\r\n            Includes parameter names in symbol descriptions.\r\n            ":"\r\n            在符号描述中包括参数名称。\r\n            \r\n","\r\n            Loads and compiles a script document, consuming previously generated cache data.\r\n            ":"\r\n            加载和编译脚本文档，消耗先前生成的缓存数据。\r\n            \r\n","\r\n            Creates a new generator state that contains information, constant trees and an execution pipeline\r\n            ":"\r\n            创建一个新的发电机状态，其中包含信息，恒定树和执行管道\r\n            \r\n","\r\n            Returns empty sequence if there are no line mapping directives in the tree.\r\n            Otherwise, returns a sequence of pairs of spans: each describing a mapping of a span of the tree between two consecutive #line directives.\r\n            If the first directive is not on the first line the first pair describes mapping of the span preceding the first directive.\r\n            The last pair of the sequence describes mapping of the span following the last #line directive.\r\n            ":"\r\n            如果树中没有行映射指令，则返回空序列。\r\n            否则，返回一对跨度的顺序：每个描述两个连续#line指令之间的树跨度的映射。\r\n            如果第一个指令不在第一行上，则第一对描述了第一个指令之前的跨度映射。\r\n            序列的最后一对描述了最后一个#line指令之后的跨度映射。\r\n            \r\n","\r\n            Arguments are passed in registers when possible. This calling convention is not yet supported.\r\n            ":"\r\n            可能会在可能的情况下通过寄存器传递。该呼叫惯例尚未支持。\r\n            \r\n","\r\n            Designates specified method as an entry point.\r\n            ":"\r\n            将指定方法指定为入口点。\r\n            \r\n"," operator and for VB's ":" 操作员和VB\r\n","\r\n            True if this type is known to be a value type. It is never the case that\r\n            ":"\r\n            如果已知该类型是值类型，则为正确。从来没有这样\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# dynamic indexer access expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃动态索引访问表达式。\r\n            \r\n","Optional arguments for formatting the localizable resource string.":"用于格式化本地化资源字符串的可选参数。\r\n","\r\n            Represents additional info needed by iterator method implementation methods \r\n            (MoveNext methods) to properly emit necessary PDB data for iterator debugging.\r\n            ":"\r\n            表示迭代方法实现方法所需的其他信息\r\n            （MoveNext方法）正确地发射了必要的PDB数据以进行迭代调试。\r\n            \r\n","\r\n            Same operation as ":"\r\n            与\r\n","\r\n            Delegate to emit string hash\r\n            ":"\r\n            委托发出字符串哈希\r\n            \r\n","\r\n            The index of the attribute in the list of attributes to decode.\r\n            ":"\r\n            属性列表中的属性索引列表中的属性列表。\r\n            \r\n","\r\n            Gets the script engine that owns the object.\r\n            ":"\r\n            获取拥有对象的脚本引擎。\r\n            \r\n","\r\n            Checks if the method is an accessor for a property.\r\n            ":"\r\n            检查该方法是否是属性的访问者。\r\n            \r\n","\r\n            Kind of conversion.\r\n            ":"\r\n            有点转换。\r\n            \r\n","\r\n            Returns a sequence of all blobs that represent the content of the builder.\r\n            ":"\r\n            返回代表构建器内容的所有斑点的序列。\r\n            \r\n","\r\n            Represents the current state of a generator\r\n            ":"\r\n            代表发电机的当前状态\r\n            \r\n","\r\n            Represents a coalesce operation with two operands:\r\n            (1) ":"\r\n            代表与两个操作数的结合操作：\r\n            （1）\r\n","\r\n            Represents that an intermediate result is being captured.\r\n            This node is produced only as part of a ":"\r\n            表示正在捕获中间结果。\r\n            该节点仅作为一个\r\n","\r\n            Do a pass to eliminate blocks without statements that can be merged with predecessor(s) and\r\n            to eliminate regions that can be merged with parents.\r\n            ":"\r\n            执行通过可以与前身合并的陈述，以消除块\r\n            消除可以与父母合并的地区。\r\n            \r\n","\r\n            Report a diagnostic as an error.  \r\n            ":"\r\n            将诊断作为错误报告。\r\n            \r\n","The new token.":"新的令牌。\r\n","\r\n            Loads and executes a document with the specified category.\r\n            ":"加载并执行具有指定类别的文档。\r\n            \r\n","\r\n            Represents an operation that gets ":"代表一个获取的操作\r\n","catch":"抓住\r\n","\r\n              Current usage:\r\n              (1) C# negated pattern.\r\n            ":"\r\n              当前用法：\r\n              （1）C＃否定模式。\r\n            \r\n","\r\n            Count of effective lines of code for computation of maintainability index.\r\n            ":"\r\n            计算可维护性指数的有效代码线计数。\r\n            \r\n","Predicate to check the ":"谓词检查\r\n","The root path for the file.  Overrides the toolType if specified.":"文件的根路径。如果指定，则覆盖工具类型。\r\n","\r\n            Represents a method to be called when a document is loaded.\r\n            ":"\r\n            代表加载文档时要调用的方法。\r\n            \r\n","\r\n            Indicate what kinds of declaration symbols will be included\r\n            ":"\r\n            指示将包括哪些声明符号\r\n            \r\n"," as a normal generic type, rather than with\r\n            the special question mark syntax.\r\n            ":"作为普通的通用类型，而不是\r\n            特殊的问号语法。\r\n            \r\n","\r\n            Implementation of SourceText based on a ":"\r\n            基于一个\r\n"," disqualifies the\r\n            current type as a static holder class; otherwise ":"取消资格\r\n            当前类型为静态持有人类；否则\r\n","\r\n            Contains meta-information for a document.\r\n            ":"\r\n            包含文档的元信息。\r\n            \r\n","The return value type.":"返回值类型。\r\n","\r\n            The candidate symbol must be an instance variable, but was used as static, or the\r\n            reverse. \r\n            ":"\r\n            候选符号必须是实例变量，但被用作静态或\r\n            撤销。\r\n            \r\n","\r\n            A record of the assemblies referenced by a module (their identities, symbols, and unification).\r\n            ":"\r\n            由模块引用的组件记录（其身份，符号和统一）。\r\n            \r\n","\r\n            Returns whether nullable warnings are enabled.\r\n            ":"\r\n            返回是否启用了无效警告。\r\n            \r\n"," keyword on methods, properties/indexers, and events due to the keyword\r\n            changing the ":" 有关关键字的方法，属性/索引器和事件的关键字\r\n            更改\r\n","\r\n            Append '!' to non-nullable reference types.\r\n            Note this causes SymbolDisplay to pull on IsNullable and therefore NonNullTypes,\r\n            so don't use this option in binding, in order to avoid cycles.\r\n            ":"\r\n            附加'！'到不可用的参考类型。\r\n            请注意，这会导致symboldisplay启用，因此可以否认，因此是非杀伤的，\r\n            因此，不要在绑定中使用此选项，以避免循环。\r\n            \r\n","\r\n            This is done after serializing method debug info to ensure that we embed all requested\r\n            text even if there are no correspodning sequence points.\r\n            ":"\r\n            这是在序列化方法调试信息之后完成的，以确保我们嵌入所有请求\r\n            文本即使没有相关序列点。\r\n            \r\n","\r\n            Initializes a new host type collection with selected types from one or more assemblies.\r\n            ":"\r\n            初始化一个或多个组件中的选择类型的新主机类型集合。\r\n            \r\n","\r\n            Determines whether this node has the specific annotation.\r\n            ":"\r\n            确定该节点是否具有特定的注释。\r\n            \r\n",", \r\n             other than ":"，，，，\r\n             以外\r\n","\r\n            Populate EncLog table.\r\n            ":"\r\n            填充封装表。\r\n            \r\n","The name of a field or local constant.":"字段或本地常数的名称。\r\n","\r\n              Looks up a localized string similar to event.\r\n            ":"\r\n              查找类似于事件的本地化字符串。\r\n            \r\n","\r\n            Gets the symbol associated with a declaration syntax node.\r\n            ":"\r\n            获取与声明语法节点关联的符号。\r\n            \r\n","\r\n            Gets all the source generators defined in this assembly reference.\r\n            ":"\r\n            获取本汇编参考中定义的所有源生成器。\r\n            \r\n","\r\n            Creates a copy of the SymbolDisplayFormat but with an additional set of ":"\r\n            创建SymboldisPlayFormat的副本，但还有一组\r\n","\r\n            True if we need to perform only syntax analysis for a single source or additional file.\r\n            ":"\r\n            是的，如果我们只需要对单个源或其他文件执行语法分析。\r\n            \r\n","\r\n            Split a string, based on whether \"splitHere\" returned true on each character.\r\n            ":"\r\n            根据“ splithere”是否返回每个字符上的“ splithere”。\r\n            \r\n","\r\n            Returns true if this field represents a tuple element which was given an explicit name.\r\n            ":"\r\n            如果此字段代表一个元组元素，则返回true。\r\n            \r\n","\r\n            Try parse subsystem version in \"x.y\" format. Note, no spaces are allowed in string representation.\r\n            ":"\r\n            尝试“ X.Y”格式中的解析子系统版本。注意，字符串表示中不允许空格。\r\n            \r\n","Specifies whether to search the specified ":"指定是否搜索指定的\r\n","\r\n            Expression that is conditionally accessed.\r\n            ":"\r\n            有条件访问的表达式。\r\n            \r\n","\r\n            The simple name has to be non-empty.\r\n            A partially specified version might be missing build and/or revision number. The default value for these is 65535.\r\n            The default culture is neutral (":"\r\n            简单的名称必须是非空的。\r\n            部分指定的版本可能缺少构建和/或修订号。这些的默认值为65535。\r\n            默认文化是中性的（\r\n","\r\n            Source basic block of this branch.\r\n            ":"\r\n            该分支的基本块。\r\n            \r\n","\r\n            Get the import strings for a given method, following forward pointers as necessary.\r\n            ":"\r\n            获取给定方法的导入字符串，根据需要遵循向前指针。\r\n            \r\n","If the sequence is null, this will throw ":"如果序列为null，这将抛出\r\n","Position in the stream of 16 zero bytes to be replaced by a Guid":"位于16个零字节的流中，将由GUID替换\r\n","\r\n            Zero or more fields defined by this type.\r\n            ":"\r\n            零或多个字段由此类型定义。\r\n            \r\n","\r\n            The language name that this node is syntax of.\r\n            ":"\r\n            该节点是语法的语言名称。\r\n            \r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n            specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n            accessible. \r\n            \r\n            Labels are not considered (see ":"“位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n            指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n            无障碍。\r\n            \r\n            标签不考虑（请参阅\r\n"," is null and the edit isn't an ":" 是空的，编辑不是\r\n"," property used in a pattern-based Index or Range indexer.\r\n            ":" 在基于模式的索引或范围索引器中使用的属性。\r\n            \r\n","), unless the\r\n            operation has been cancelled. The exception is never caught.\r\n            ":"），除非\r\n            操作已被取消。这个例外从未被抓住。\r\n            \r\n","\r\n            Symbol is an assembly.\r\n            ":"\r\n            符号是一个组件。\r\n            \r\n","\r\n            An Implementation only source output, registered via ":"\r\n            仅实现源输出，通过\r\n","\r\n            An id used to match references to the same intermediate result.\r\n            ":"\r\n            用于将引用与同一中间结果匹配的ID。\r\n            \r\n","Symbol actions to be executed.":"要执行的符号操作。\r\n","\r\n            Returns true and handle of the method definition\r\n            if the method definition is recognized. Otherwise returns false.\r\n            The index is into the full metadata.\r\n            ":"\r\n            返回真实和处理方法定义\r\n            如果识别方法定义。否则返回false。\r\n            该索引进入了完整的元数据。\r\n            \r\n","\r\n            Absolute path of the output directory.\r\n            ":"\r\n            输出目录的绝对路径。\r\n            \r\n","\r\n            Handle of the custom attribute.\r\n            ":"\r\n            自定义属性的句柄。\r\n            \r\n"," is true.\r\n            If the path is not mapped ":" 是真的。\r\n            如果路径未映射\r\n"," has been completed with all compilation events, then it waits for\r\n            ":" 已经完成了所有汇编事件，然后等待\r\n            \r\n","\r\n            Encapsulates information about regions of ":"\r\n            封装有关区域的信息\r\n","\r\n            The signature indices to be emitted, in row order. These\r\n            are just the signature indices from the current generation.\r\n            ":"\r\n            签名索引以行顺序排列。这些\r\n            只是当前一代的签名指数。\r\n            \r\n","\r\n            Rewrite any block marked as BlockedByFinally as an \"infinite loop\".\r\n            ":"\r\n            重写任何标记为“无限循环”的块。\r\n            \r\n","\r\n            Gets the profile's starting timestamp in microseconds.\r\n            ":"\r\n            在微秒中获取配置文件的启动时间戳。\r\n            \r\n","The programmatic identifier (ProgID) of the VBScript engine class.":"VBScript引擎类的程序化标识符（Progid）。\r\n","Script Object":"脚本对象\r\n","\r\n            Gets the count of registered actions for the analyzer.\r\n            ":"\r\n            获取分析仪的注册操作计数。\r\n            \r\n","\r\n            A simple, forward-only JSON writer to avoid adding dependencies to the compiler.\r\n            Used to generate /errorlogger output.\r\n            \r\n            Does not guarantee well-formed JSON if misused. It is the caller's responsibility \r\n            to balance array/object start/end, to only write key-value pairs to objects and\r\n            elements to arrays, etc.\r\n            \r\n            Takes ownership of the given ":"\r\n            一个简单的，仅向前的JSON作家，避免将依赖项添加到编译器中。\r\n            用于生成 /错误记录器输出。\r\n            \r\n            如果被滥用，不能保证形成良好的JSON。这是呼叫者的责任\r\n            平衡数组/对象启动/结束，仅将键值对写入对象和\r\n            数组的元素，等等。\r\n            \r\n            拥有给定的所有权\r\n","\r\n            Pattern.\r\n            ":"\r\n            图案。\r\n            \r\n"," expose\r\n                    properties with numeric names that match their valid indices. This includes\r\n                    one-dimensional host arrays and other collections. Multidimensional host arrays\r\n                    do not expose functional indexers; you must use\r\n                    ":" 暴露\r\n                    具有匹配其有效索引的数字名称的属性。这包括\r\n                    一维主机阵列和其他集合。多维主机阵列\r\n                    不要露出功能索引；您必须使用\r\n                    \r\n"," returns null for the given ":" 返回给定的零\r\n","\r\n            The UInt32 value 0\r\n            ":"\r\n            UINT32值0\r\n            \r\n","\r\n            An enumerated value that identifies whether this type is an array, pointer, enum, and so on.\r\n            ":"\r\n            列出的值，该值确定此类型是否为数组，指针，枚举等。\r\n            \r\n","\r\n            The set of assemblies the use site will depend upon, excluding assembly for core library.\r\n            Empty or null if ":"\r\n            组件集将取决于使用网站，不包括核心库的组件。\r\n            空或空的\r\n","The nodes to be replaced; descendants of the root node.":"节点要替换；根节点的后代。\r\n","\r\n            The underlying node if this ":"\r\n            基础节点如果这个\r\n","\r\n            Type's kind is undefined.\r\n            ":"\r\n            类型的种类不确定。\r\n            \r\n","The script function for which to create a delegate.":"为其创建委托的脚本函数。\r\n","\r\n            This field can only be read. Initialization takes place in a constructor.\r\n            ":"\r\n            该字段只能读取。初始化发生在构造函数中。\r\n            \r\n"," contains a property with the specified name.\r\n            ":" 包含带有指定名称的属性。\r\n            \r\n","\r\n            Represents a collection element initializer.\r\n            ":"\r\n            代表集合元素初始化器。\r\n            \r\n","\r\n            Awaited operation.\r\n            ":"\r\n            等待的操作。\r\n            \r\n","\r\n            Serves as hash function for ":"\r\n            充当哈希功能\r\n","Module copy can't be used to create an assembly metadata.":"模块副本不能用于创建汇编元数据。\r\n","Single variable declaration to retrieve initializer for.":"单个变量声明以检索初始化器。\r\n","\r\n            Method is a property get.\r\n            ":"\r\n            方法是属性获取。\r\n            \r\n","An ImmutableArray containing all the types that are members of this symbol with the given name and arity.\r\n            If this symbol has no type members with this name and arity,\r\n            returns an empty ImmutableArray. Never returns null.":"一个不可或缺的名称和arity的符号成员的immutablearray。\r\n            如果此符号没有此名称和arity的类型成员，\r\n            返回一个空的Immutablearray。永远不会返回零。\r\n","\r\n            An unsigned 8 bit integer.\r\n            ":"\r\n            一个未签名的8位整数。\r\n            \r\n","\r\n            Used to represent state of processing of a ":"\r\n            用于表示处理状态\r\n","The string to combine":"组合的字符串\r\n","\r\n            Returns a constructed method given its type arguments.\r\n            ":"\r\n            返回给定类型参数的构造方法。\r\n            \r\n","\r\n            This function converts ":"\r\n            此函数转换\r\n",".\r\n            This may be a subset of the full set of reported diagnostics, as an optimization for\r\n            supporting incremental and partial analysis scenarios.\r\n            A diagnostic is considered suppressible by a DiagnosticSuppressor if *all* of the following conditions are met:\r\n                1. Diagnostic is not already suppressed in source via pragma/suppress message attribute.\r\n                2. Diagnostic's ":"。\r\n            这可能是全套报告诊断的子集，以优化\r\n            支持增量和部分分析方案。\r\n            如果满足以下所有 *，则诊断抑制器认为可以抑制诊断：\r\n                1.诊断尚未通过pragma/抑制消息属性在源中抑制。\r\n                2.诊断\r\n","\r\n            Specifies how this parameter is marshalled when it is accessed from unmanaged code.\r\n            ":"\r\n            指定该参数是如何从非管理代码访问的。\r\n            \r\n","\r\n            Cache for the wildcard matching algorithm. The current implementation can be slow so we want to make sure that once a match is performed we save its result.\r\n            ":"\r\n            通配符匹配算法的缓存。当前的实现可能会很慢，因此我们要确保一旦执行匹配项，就可以保存其结果。\r\n            \r\n","\r\n            Local variable that holds a pinned handle of a string passed to a fixed statement (C#).\r\n            ":"\r\n            将固定的字符串固定的句柄传递到固定语句（C＃）的固定句柄。\r\n            \r\n","Symbol whose actions are to be executed.":"符号将执行其动作。\r\n","\r\n            Loop control variable refers to the operation for declaring a new local variable or reference an existing variable or an expression.\r\n            ":"\r\n            循环控制变量是指声明新的本地变量或引用现有变量或表达式的操作。\r\n            \r\n"," with the specified tokens added to the end.\r\n            ":" 随着指定的令牌添加到末尾。\r\n            \r\n",". This instance will have its \r\n            ":"。此实例将具有其\r\n            \r\n","The diagnostic that should be added to the compilation":"应添加到编译中的诊断\r\n","An object that enforces thread affinity for the instance.":"为实例实施线程亲和力的对象。\r\n"," will not include ":" 不会包括\r\n","\r\n            Creates a new tree of nodes with the specified old token replaced with new tokens.\r\n            ":"\r\n            创建一棵新的节点树，指定的旧令牌被新令牌代替。\r\n            \r\n","\r\n            Type is a type parameter.\r\n            ":"\r\n            类型是类型参数。\r\n            \r\n","\r\n            Adds types from an assembly to a host type collection. The assembly is specified by name.\r\n            ":"\r\n            将从程序集添加到主机类型集合。大会按名称指定。\r\n            \r\n","\r\n            Scope for setting up analyzers for an operation block, automatically associating actions with analyzers.\r\n            ":"\r\n            用于设置操作块的分析仪的范围，将动作与分析仪自动关联。\r\n            \r\n",") is considered skipped.\r\n            ":"）被认为是跳过的。\r\n            \r\n","\r\n            The type of the return value of this visitor's Visit method.\r\n            ":"\r\n            此访问者访问方法的返回值的类型。\r\n            \r\n","If the encoded local variable type is invalid.":"如果编码的本地变量类型无效。\r\n","\r\n            Indicates whether the callee calls the SetLastError Win32 API function before returning from the attributed method.\r\n            ":"\r\n            指示Callee是否在从属性方法返回之前调用SetLasterRor Win32 API函数。\r\n            \r\n"," and its members.\r\n            A symbol end action reports ":" 及其成员。\r\n            符号最终动作报告\r\n","\r\n            Represents the C# '~' operator.\r\n            ":"\r\n            代表C＃'〜'操作员。\r\n            \r\n","\r\n            Allows script code to handle host exceptions.\r\n            ":"\r\n            允许脚本代码处理主机异常。\r\n            \r\n","\r\n            Because this method must semantically bind all method bodies and initializers to check\r\n            for diagnostics, it may take a significant amount of time. Unlike\r\n            GetDeclarationDiagnostics, diagnostics for method bodies and initializers are not\r\n            cached, any semantic information used to obtain the diagnostics is discarded.\r\n            ":"\r\n            因为此方法必须在语义上绑定所有方法物体和初始化器以检查\r\n            对于诊断，可能需要大量时间。与众不同\r\n            GetDeclarationDiagnostics，方法身体的诊断和初始化器不是\r\n            缓存，丢弃了用于获得诊断的任何语义信息。\r\n            \r\n","The rule action":"规则行动\r\n","\r\n            Produce constructed type symbol.\r\n            ":"\r\n            产生构造的类型符号。\r\n            \r\n","\r\n            and the incremental parser is able to take the node from the original tree and use it in its entirety in the\r\n            new tree.  In this case, the ":"\r\n            增量解析器能够从原始树中获取节点，并在其中完整地使用它\r\n            新树。在这种情况下，\r\n","\r\n            Indicates a conditional branch from a ":"\r\n            指示一个条件分支\r\n"," refers\r\n            to a generic type, the corresponding object will be invocable with type arguments to\r\n            yield a specific type.\r\n            ":" 指\r\n            对于通用类型，相应的对象将与类型的参数无关\r\n            产生特定类型。\r\n            \r\n","\r\n            This class provides simple properties for determining whether the current platform is Windows or Unix-based.\r\n            We intentionally do not use System.Runtime.InteropServices.RuntimeInformation.IsOSPlatfrom(...) because\r\n            it incorrectly reports 'true' for 'Windows' in desktop builds running on Unix-based platforms via Mono.\r\n            ":"\r\n            此类提供了简单的属性，用于确定当前平台是基于Windows还是基于UNIX的平台。\r\n            我们故意不使用system.runtime.interopservices.runtimeinformation.isosplatfrom（...），因为\r\n            它错误地报告了桌面中的“ Windows”的“ true”，该台式机通过Mono在基于UNIX的平台上运行。\r\n            \r\n","Optional path that describes the location of the metadata. The file doesn't need to exist on disk. The path is opaque to the compiler.":"描述元数据位置的可选路径。该文件不需要在磁盘上存在。该路径对编译器是不透明的。\r\n","\r\n            Represents a reference to a field.\r\n            ":"\r\n            代表对字段的引用。\r\n            \r\n","\r\n            Events queue for analyzer execution.\r\n            ":"\r\n            事件队列分析仪执行。\r\n            \r\n","default(SyntaxToken)":"默认（Syntaxtoken）\r\n"," if this location was created through an interprocedural method invocation, i.e. ":" 如果该位置是通过爆发方法调用创建的，即\r\n","An optional driver that should be cached, if not already found in the cache":"如果在缓存中尚未发现的话，应该缓存的可选驱动程序\r\n","If the decoded text contains at least two consecutive NUL\r\n            characters, then an ":"如果解码文本至少包含两个连续的NUL\r\n            角色，然后\r\n","\r\n            Collects a sample in all CPU profiles active in the V8 runtime.\r\n            ":"\r\n            在V8运行时活跃的所有CPU配置文件中收集样本。\r\n            \r\n","\r\n            Called before generation occurs. A generator can use the ":"\r\n            在发电前调用。发电机可以使用\r\n","\r\n            Gets the line span including the line break.\r\n            ":"\r\n            获取线跨度，包括线路断路。\r\n            \r\n","\r\n            Returns false if the local variable wasn't declared as \"const\", or constant value was omitted or erroneous.\r\n            True otherwise.\r\n            ":"\r\n            返回false如果局部变量未声明为“ const”，或者省略了常数值或错误。\r\n            否则否则。\r\n            \r\n","\r\n            Defines extension methods for use with all script engines.\r\n            ":"\r\n            定义用于与所有脚本引擎一起使用的扩展方法。\r\n            \r\n","\r\n            Should only accept multi-dimensional arrays.\r\n            Should return null in case of error.\r\n            ":"\r\n            只能接受多维阵列。\r\n            如果发生错误，应返回null。\r\n            \r\n","\r\n            Whether diagnostics suppressed in source, i.e. ":"\r\n            是否抑制了来源的诊断，即\r\n","\r\n            Custom modifiers associated with the ref modifier, or an empty array if there are none.\r\n            ":"\r\n            与Ref修饰符关联的自定义修饰符，如果没有，则为空数组。\r\n            \r\n"," serve different purposes. An analyzer reference may not\r\n            have a path, but it always has an ID. Further, two analyzer references with different paths may\r\n            represent two copies of the same analyzer, in which case the IDs should also be the same.\r\n            ":" 提供不同的目的。分析仪参考可能不会\r\n            有一条路径，但它总是具有ID。此外，两个具有不同路径的分析仪参考可能\r\n            表示同一分析仪的两个副本，在这种情况下，ID也应相同。\r\n            \r\n","\r\n            Interrupts script execution and causes the script engine to throw an exception.\r\n            ":"\r\n            中断脚本执行并导致脚本引擎引发异常。\r\n            \r\n","\r\n            Kind of the clause.\r\n            ":"\r\n            那种条款。\r\n            \r\n","\r\n            Represents an operation with a label.\r\n            ":"\r\n            代表带有标签的操作。\r\n            \r\n",",\r\n            so that we can do custom marshalling of ":"，，，，\r\n            这样我们就可以自定义编组\r\n","undefined":"不明确的\r\n","\r\n            The parameters of this property. If this property has no parameters, returns\r\n            an empty list. Parameters are only present on indexers, or on some properties\r\n            imported from a COM interface.\r\n            ":"\r\n            该属性的参数。如果此属性没有参数，请返回\r\n            一个空列表。参数仅存在于索引器或某些属性上\r\n            从COM接口导入。\r\n            \r\n","\r\n            A list of named byte sequences persisted with the assembly and used during execution, typically via .NET Framework helper classes.\r\n            ":"\r\n            命名字节序列的列表持续使用，并在执行过程中使用，通常通过.NET Framework Helper类。\r\n            \r\n","Text.":"文本。\r\n","\r\n              Looks up a localized string similar to Parameter '{0}' must be a symbol from this compilation or some referenced assembly..\r\n            ":"\r\n              查找类似于参数'{0}'的本地化字符串必须是本汇编或某些引用汇编的符号。\r\n            \r\n","The sequence to map":"映射的序列\r\n","\r\n            Current usage:\r\n             (1) C# type parameter object creation expression.\r\n             (2) VB type parameter object creation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃类型参数对象创建表达式。\r\n             （2）VB类型参数对象创建表达式。\r\n            \r\n","\r\n            \".ctor\" instead of \"Foo\"\r\n            ":"\r\n            “ .ctor”而不是“ foo”\r\n            \r\n","\r\n            Indicates a \"value\" parameter.\r\n            ":"\r\n            指示一个“值”参数。\r\n            \r\n"," of each node will be the same, though \r\n            they could have different parents, and may occur at different positions in their respective trees.  If two nodes are\r\n            incrementally identical, all children of each node will be incrementally identical as well.\r\n            ":" 每个节点的中都相同\r\n            他们可能有不同的父母，并且可能在各自树木的不同位置发生。如果两个节点是\r\n            逐步相同，每个节点的所有子女也将逐渐相同。\r\n            \r\n","The result of the cast.":"演员的结果。\r\n"," as the single argument.\r\n            ":" 作为单个参数。\r\n            \r\n","\r\n            If we have a circular reference the bound references can't be shared with other compilations.\r\n            ":"\r\n            如果我们有循环引用，则无法与其他汇编共享绑定的引用。\r\n            \r\n"," will overflow if ":" 如果溢出\r\n","\r\n            The Microsoft CLR requires that {namespace} + \".\" + {name} fit in MAX_CLASS_NAME \r\n            (even though the name and namespace are stored separately in the Microsoft\r\n            implementation).  Note that the namespace name of a nested type is always blank\r\n            (since comes from the container).\r\n            ":"\r\n            Microsoft CLR要求{命名空间} +“。” + {名称} fit Max_class_name中\r\n            （即使名称和名称空间分别存储在Microsoft中\r\n            执行）。请注意，嵌套类型的名称名称始终为空白\r\n            （因为来自容器）。\r\n            \r\n","The corresponding operation or ":"相应的操作或\r\n","The index of the token to remove.":"令牌的索引要删除。\r\n","The formatter; or null to use the default formatter.":"格式化；或null使用默认格式。\r\n","The stream containing encoded text.":"包含编码文本的流。\r\n","\r\n            Represents an initialization of a parameter at the point of declaration.\r\n            ":"\r\n            表示在声明点上的参数初始化。\r\n            \r\n","\r\n            The method specs to be emitted, in row order. These\r\n            are just the method specs from the current generation.\r\n            ":"该方法规格要以行顺序排列。这些\r\n            只是当前一代的方法规格。\r\n            \r\n","\r\n            Whether this for each loop is asynchronous.\r\n            Always false for VB.\r\n            ":"\r\n            对于每个循环是否异步。\r\n            始终为VB。\r\n            \r\n","\r\n            A function that for a method handle returns the signature of its local variables.\r\n            The function shall throw ":"\r\n            用于方法句柄的函数返回其本地变量的签名。\r\n            功能应投掷\r\n","\r\n            Analysis context for execution of ":"\r\n            执行的分析上下文\r\n"," creating this suppression.\r\n            ":" 创造这种抑制。\r\n            \r\n","\r\n            The type arguments that were used to instantiate this.GenericMethod in order to create this method.\r\n            ":"\r\n            为了创建此方法，用于实例化此的类型参数。\r\n            \r\n","import.meta":"import.meta\r\n","\r\n            Creates a new list with the specified nodes added to the end.\r\n            ":"\r\n            创建一个新列表，其中添加到末尾的指定节点。\r\n            \r\n","The conditional expression to evaluate.":"有条件的表达来评估。\r\n","\r\n            Creates a new list with the element at specified index removed.\r\n            ":"\r\n            使用已指定索引的元素创建一个新列表。\r\n            \r\n","\r\n            Returns true if this symbol was automatically created by the compiler, and does not have\r\n            an explicit corresponding source code declaration. \r\n            ":"\r\n            如果该符号是由编译器自动创建的，则返回true，并且没有\r\n            明确的相应源代码声明。\r\n            \r\n","\r\n            The 'set' accessor of the property, or null if the property is read-only.\r\n            ":"\r\n            该属性的“集合”登录器，或者如果属性是仅读取的。\r\n            \r\n","\r\n            Get the diagnostic category for the given diagnostic code.\r\n            Default category is ":"\r\n            获取给定诊断代码的诊断类别。\r\n            默认类别是\r\n","\r\n            Gets the available named static member symbols in the context of the specified location and optional container.\r\n            Only members that are accessible and visible from the given location are returned.\r\n            \r\n            Non-reduced extension methods are considered, since they are static methods.\r\n            ":"\r\n            在指定位置和可选容器的上下文中获取可用的静态成员符号。\r\n            仅返回从给定位置可访问和可见的成员。\r\n            \r\n            由于它们是静态方法，因此考虑了未还原的扩展方法。\r\n            \r\n","\r\n            The type definition at the 0-based index into the full set. Deltas\r\n            are only required to support indexing into current generation.\r\n            ":"全套基于0的索引处的类型定义。三角洲\r\n            仅需要支持索引到当前一代。\r\n            \r\n","\r\n            Specifies that the script engine is to perform automatic conversion between\r\n            .NET ":"\r\n            指定脚本引擎要在\r\n            。网\r\n","\r\n            Create a simple language specific diagnostic with no location for given info.\r\n            ":"\r\n            创建一个简单的语言特定诊断，没有给定信息的位置。\r\n            \r\n","The parameters on indexer accessor methods (not on the indexer itself).":"索引器访问器方法上的参数（不是在索引本身上）​​。\r\n","\r\n            64-bit native executable \r\n            ":"\r\n            64位本地可执行文件\r\n            \r\n","\r\n            Determines whether this trivia has any diagnostics on it. If this trivia is a structured trivia then the\r\n            returned value will indicate whether this trivia or any of its descendant nodes, tokens or trivia have any\r\n            diagnostics on them.\r\n            ":"\r\n            确定此琐事是否有任何诊断。如果这个琐事是一个结构化的琐事，那么\r\n            返回的值将指示这个琐事或其任何后代节点，令牌或琐事是否有任何\r\n            他们的诊断。\r\n            \r\n","\r\n            Count of registered operation block start actions.\r\n            ":"\r\n            注册操作块启动操作的计数。\r\n            \r\n","The new nodes.":"新节点。\r\n","\r\n            Allows top-level statements, declarations, and optional trailing expression. \r\n            Used for parsing .csx/.vbx and interactive submissions.\r\n            ":"\r\n            允许顶级语句，声明和可选的尾随表达式。\r\n            用于解析.csx/.vbx和交互式提交。\r\n            \r\n",".\r\n            In JScript it appears as a value that is equal to, but not strictly equal to,\r\n            ":"。\r\n            在JScript中，它看起来是一个等于但不等于，\r\n            \r\n","\r\n            Returns the minor value of the domain.\r\n            ":"\r\n            返回域的次要值。\r\n            \r\n","\r\n            The common name used for the C# language.\r\n            ":"\r\n            C＃语言使用的通用名称。\r\n            \r\n","\r\n            Returns the string representation of the nodes and tokens in this list, not including the first node or token's leading trivia \r\n            and the last node or token's trailing trivia.\r\n            ":"\r\n            返回此列表中节点和令牌的字符串表示形式，不包括第一个节点或令牌的领先琐事\r\n            还有最后一个节点或令牌的拖延琐事。\r\n            \r\n","\r\n            Strip off *, &, and [].\r\n            ":"\r\n            脱掉 *，＆和[]。\r\n            \r\n","\r\n            This contains the patterns contained within a deconstruction or positional subpattern.\r\n            ":"\r\n            这包含解构或位置子图中包含的模式。\r\n            \r\n","\r\n            Host type collections provide convenient scriptable access to all the types defined in one\r\n            or more host assemblies. They are hierarchical collections where leaf nodes represent types\r\n            and parent nodes represent namespaces. For example, if an assembly contains a type named\r\n            \"Acme.Gadgets.Button\", the corresponding collection will have a property named \"Acme\" whose\r\n            value is an object with a property named \"Gadgets\" whose value is an object with a property\r\n            named \"Button\" whose value represents the ":"\r\n            主机类型集合提供了方便的脚本访问权限\r\n            或更多主机组件。它们是分层集合，其中叶节点代表类型\r\n            和父节点代表名称空间。例如，如果一个组件包含一个名称的类型\r\n            “ acme.gadgets.button”，相应的收藏将有一个名为“ Acme”的属性\r\n            值是一个具有名为“小工具”的属性的对象，其值是具有属性的对象\r\n            命名为“按钮”，其值代表\r\n","\r\n            Creates a compiled script, generating cache data for accelerated recompilation.\r\n            ":"\r\n            创建一个编译的脚本，生成用于加速重编译的缓存数据。\r\n            \r\n","The string representation of this trivia.":"这个琐事的字符串表示。\r\n","\r\n            Gets the decoded well-known attribute data (except the early data) in the bag. \r\n            ":"\r\n            获取袋子中的解码众所周知的属性数据（早期数据除外）。\r\n            \r\n","\r\n            Gets a list of all the diagnostics in either the sub tree that has this node as its root or\r\n            associated with this token and its related trivia. \r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            在具有该节点作为root或\r\n            与该令牌及其相关的琐事相关联。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            Determines the kind of interprocedural dataflow analysis to perform for method invocations.\r\n            ":"\r\n            确定用于方法调用的概要数据流分析的类型。\r\n            \r\n","\r\n            include namespace symbols\r\n            ":"\r\n            包括名称空间符号\r\n            \r\n","\r\n            Modules the ":"\r\n            模块\r\n","\r\n            The index from the parent's children list of this node.\r\n            ":"\r\n            该节点的父母子女列表中的索引。\r\n            \r\n","If one of the files is not an assembly or is somehow corrupted.":"如果其中一个文件不是程序集或以某种方式损坏。\r\n","The declaration errors for a syntax tree are cached. The first time this method\r\n            is called, all declarations are analyzed for diagnostics. Calling this a second time\r\n            will return the cached diagnostics.\r\n            ":"语法树的声明错误被缓存。第一次这个方法\r\n            称为，所有声明均已分析以进行诊断。第二次称呼\r\n            将返回缓存的诊断。\r\n            \r\n","\r\n            Should only accept multi-dimensional arrays.\r\n            ":"\r\n            只能接受多维阵列。\r\n            \r\n","\r\n            There's always at least one entry (for the global namespace).\r\n            Exposed for ":"\r\n            总有至少一个条目（对于全球名称空间）。\r\n            暴露于\r\n","\r\n            If bitmap is not null, each bit indicates whether a TypeDef \r\n            with corresponding RowId has been checked if it is a NoPia \r\n            local type. If the bit is 1, local type will have an entry \r\n            in m_lazyTypeDefToTypeIdentifierMap.\r\n            ":"\r\n            如果位图不是null，则每个位指示typedef是否表示\r\n            与相应的rowID已检查是否是NOPIA\r\n            本地类型。如果位是1，本地类型将有一个条目\r\n            在m_lazytypedeftotype typeIdentifiermap中。\r\n            \r\n","\r\n              Looks up a localized string similar to Feature 'Flow-Analysis' is disabled..\r\n            ":"\r\n              查找类似于功能“流分析”的局部字符串。\r\n            \r\n","\r\n            Opens the analyzer dll with the metadata reader and builds a map of language -> analyzer type names.\r\n            ":"\r\n            用元数据读取器打开分析仪DLL，并构建语言图 - > Analyzer类型名称。\r\n            \r\n","\r\n            No algorithm specified.\r\n            ":"\r\n            未指定算法。\r\n            \r\n","\r\n            Combines an absolute path with a relative.\r\n            ":"\r\n            将绝对路径与相对路径相结合。\r\n            \r\n","\r\n            Temps - do not have identity. They are borrowed and returned to the free list.\r\n                Typical use is a scratch temporary or spilling storage.\r\n            ":"\r\n            温度 - 没有身份。他们被借来并返回免费列表。\r\n                典型的用途是刮擦临时或溢出的存储空间。\r\n            \r\n","\r\n            Local that stores an expression value which needs to be spilled.\r\n            Such a local arises from the translation of an await or switch expression,\r\n            and might be hoisted to an async state machine if it remains alive\r\n            after an await expression.\r\n            ":"\r\n            存储需要溢出的表达值的本地。\r\n            这样的局部是源于等待或开关表达式的翻译，\r\n            如果它仍然活着，可能会悬挂到异步状态机器\r\n            等待表达之后。\r\n            \r\n","\r\n            Tool name used, along with assembly version, for error logging.\r\n            ":"\r\n            使用的工具名称以及汇编版本用于错误记录。\r\n            \r\n","\r\n            Given the full path to an assembly on disk, loads and returns the\r\n            corresponding ":"\r\n            给定磁盘上的组件的完整途径，加载并返回\r\n            相应的\r\n"," causes instance methods to be excluded from\r\n            property enumeration. This affects all host objects exposed in the current script\r\n            engine. Note that instance methods remain both retrievable and invocable regardless of\r\n            this property's value.\r\n            ":" 导致实例方法被排除在外\r\n            财产枚举。这会影响当前脚本中暴露的所有主机对象\r\n            引擎。请注意，实例方法仍然可以检索和不可接免\r\n            此属性的价值。\r\n            \r\n","\r\n            An empty set of changes.\r\n            ":"\r\n            一组空的更改。\r\n            \r\n","\r\n            A binder that gathers type/reader mappings during object writing\r\n            ":"在对象写入过程中收集类型/读取器映射的粘合剂\r\n            \r\n","\r\n            Read all analyzer config files from the given paths.\r\n            ":"\r\n            从给定路径读取所有分析仪配置文件。\r\n            \r\n","We're trying to add the containing namespace of this type to the string heap.":"我们正在尝试将此类型的包含名称空间添加到字符串堆中。\r\n","\r\n            Gets a SyntaxReference for a specified syntax node. SyntaxReferences can be used to\r\n            regain access to a syntax node without keeping the entire tree and source text in\r\n            memory.\r\n            ":"\r\n            获取指定语法节点的语法rreference。语法介绍可用于\r\n            重新获得对语法节点的访问，而无需保留整个树和源文本\r\n            记忆。\r\n            \r\n","\r\n            Abstract PointsTo value for an ":"\r\n            抽象点的值\r\n","File content or null on failure.":"文件内容或失败时null。\r\n","\r\n            The assembly reference.\r\n            ":"\r\n            组装参考。\r\n            \r\n","\r\n            An absolute combined path, or null if ":"\r\n            绝对组合路径，如果为null \r\n","\r\n            Returns false if the declaration has already been processed for the analyzer OR is currently being processed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已经为分析仪处理声明，或者目前正在另一项任务处理该声明，则返回错误。\r\n            如果是真的，那么它将返回一个非编号\r\n","Type associated with the slot.":"与插槽关联的类型。\r\n","An optional initial value for the variable.":"变量的可选初始值。\r\n","\r\n            Constructs an ":"\r\n            构建\r\n","\r\n            An IErrorTypeSymbol is used when the compiler cannot determine a symbol object to return because\r\n            of an error. For example, if a field is declared \"Goo x;\", and the type \"Goo\" cannot be\r\n            found, an IErrorTypeSymbol is returned when asking the field \"x\" what it's type is.\r\n            ":"\r\n            当编译器无法确定要返回的符号对象时，请使用ieRrortyPesymbol\r\n            错误。例如，如果字段声明为“ goo x;”，而类型“ goo”不能为\r\n            发现，当询问字段“ x”字段时，将返回一个iErrortypesymbol。\r\n            \r\n","Symbol scope to store the analyzer actions.":"符号范围存储分析仪操作。\r\n","Whether or not the default value is allowed.":"是否允许默认值。\r\n"," from rule ID to ":" 从规则ID到\r\n"," the source sequence contains less then ":" 源序列少于\r\n"," and available for semantic analysis as part of the ":" 并作为语义分析作为一部分\r\n","Assembly symbols for references of the current compilation.":"当前汇编引用的组装符号。\r\n","\r\n            The index of the node in this list, or -1 if the node is not in the list.\r\n            ":"\r\n            该列表中节点的索引，如果节点不在列表中，则-1。\r\n            \r\n","Compilation event for semantic model analysis.":"语义模型分析的汇编事件。\r\n"," or ":"或者\r\n","Analyzer '{0}' contains a null descriptor in its 'SupportedSuppressions'.":"分析仪'{0}'在其“支持的抑制”中包含一个空描述符。\r\n","\r\n            Represents an empty statement.\r\n            ":"\r\n            代表一个空语句。\r\n            \r\n","\r\n            Returns the display name of the assembly identity.\r\n            ":"\r\n            返回汇编身份的显示名称。\r\n            \r\n","The node to be replaced; a descendant of the root node.":"要替换的节点；根节点的后代。\r\n"," from analyzing the given additional ":" 通过分析给定的其他\r\n","\r\n            Returns the display name of the current instance.\r\n            ":"返回当前实例的显示名称。\r\n            \r\n","\r\n            Pool of ":"\r\n            池\r\n","\r\n            An array with length encoded as compressed uint\r\n            ":"\r\n            一个长度编码为压缩UINT的数组\r\n            \r\n","DisposeAsync":"disposeasync\r\n","\r\n            // create and populate an array of strings\r\n            var StringT = host.type(\"System.String\");\r\n            var array = host.newArr(StringT, 3);\r\n            array.SetValue(\"first\", 0);\r\n            array.SetValue(\"second\", 1);\r\n            array.SetValue(\"third\", 2);\r\n            // import LINQ extensions\r\n            var EnumerableT = host.type(\"System.Linq.Enumerable\", \"System.Core\");\r\n            // use LINQ to create an array of modified strings\r\n            var selector = host.func(StringT, 1, function (value) { return value.toUpperCase(); });\r\n            array = array.Select(selector).ToArray();\r\n            ":"\r\n            //创建并填充一系列字符串\r\n            var stringt = host.type（“ system.string”）;\r\n            var array = host.newarr（Stringt，3）;\r\n            array.setValue（“ first”，0）;\r\n            array.setValue（“第二”，1）;\r\n            array.setValue（“第三”，2）;\r\n            //导入LINQ扩展\r\n            var enumerablet = host.type（“ system.linq.edumable”，“ system.core”）;\r\n            //使用Linq创建一系列修改的字符串\r\n            var selector = host.func（stringt，1，function（value）{return value.touppercase（）;}）;\r\n            array = array.Select（selector）.toArray（）;\r\n            \r\n","\r\n            Full width of the trailing trivia of this token.\r\n            ":"\r\n            这个代币的尾随琐事的全宽度。\r\n            \r\n","\r\n            Used when we see a branch, but label is not yet marked.\r\n            ":"\r\n            当我们看到分支时使用，但尚未标记标签。\r\n            \r\n","\r\n            When constructing this type, there may have been symbols that seemed to\r\n            be what the user intended, but were unsuitable. For example, a type might have been\r\n            inaccessible, or ambiguous. This property returns the possible symbols that the user\r\n            might have intended. It will return no symbols if no possible symbols were found.\r\n            See the CandidateReason property to understand why the symbols were unsuitable.\r\n            ":"\r\n            在构造这种类型时，似乎有符号\r\n            是用户想要的，但不合适。例如，一种类型可能是\r\n            无法访问或模棱两可。此属性返回用户的可能符号\r\n            可能打算了。如果找不到可能的符号，它将不会返回符号。\r\n            请参阅候选季节的财产，以了解为什么这些符号不合适。\r\n            \r\n","\r\n            Names of types or namespaces (separated by '|'), such that the type or type's namespace doesn't count in the inheritance hierarchy tree.\r\n            Configurable rules: CA1501 (https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1501)\r\n            Allowed name formats:\r\n              1. Type or namespace name (includes all types with the name, regardless of the containing type or namespace and all types whose namespace contains the name)\r\n              2. Type or namespace name ending with a wildcard symbol (includes all types whose name starts with the given name, regardless of the containing type or namespace\r\n                 and all types whose namespace contains the name)\r\n              3. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format with an optional \"T:\" prefix for types or \"N:\" prefix for namespaces. (includes all types with the exact type match or the exact containing namespace match)\r\n              4. Fully qualified type or namespace name with an optional \"T:\" prefix for type or \"N:\" prefix for namespace and ending with the wildcard symbol (includes all types whose fully qualified name starts with the given suffix)\r\n            ":"\r\n            类型或名称空间的名称（由'|'隔开），因此类型或类型的名称空间不计数继承层次结构树。\r\n            可配置规则：CA1501（https://docs.microsoft.com/en-us/visalstudio/code-quality/ca1501）\r\n            允许的名称格式：\r\n              1.类型或名称空间名称（包括包含类型或名称空间的所有类型，以及所有命名空间包含名称的类型）\r\n              2.类型或名称名称以通配符符号结尾（包括所有名称以给定名称开头的类型，无论包含类型或名称空间如何\r\n                 以及所有名称空间的类型）\r\n              3.符号文档ID格式中的完全合格的名称：https：//github.com/dotnet/csharplang/blob/blob/master/master/spec/documentation-comments.md#id-string-format，带有可选的“ t：” t：命名空间的类型或“ n：”前缀。 （包括所有具有确切类型匹配的类型或包含精确的名称空间匹配的类型）\r\n              4.具有可选的“ t：”的完全合格类型或名称名称，类型为“ t：n：”名称空间的前缀，并以通配符符号结束（包括所有完全合格名称以给定后缀开始的类型）\r\n            \r\n"," \r\n            to create an ":"创建一个\r\n"," object to create multiple references allows for sharing data across these references.\r\n            ":" 创建多个参考的对象允许在这些引用中共享数据。\r\n            \r\n","\r\n            Returns true if these two tokens are considered \"incrementally identical\".  An incrementally identical token\r\n            occurs when a ":"\r\n            如果这两个令牌被认为是“逐渐相同的”，则返回为true。渐进的令牌\r\n            发生在a时\r\n","\r\n            Specifies which kind keywords should be included when displaying symbols.\r\n            ":"\r\n            指定显示符号时应包含哪些类似关键字。\r\n            \r\n"," of each token will be the same, though \r\n            they could have different parents, and may occur at different positions in the respective trees.  If two tokens are\r\n            incrementally identical, all trivial of each node will be incrementally identical as well.\r\n            ":" 每个令牌的都一样\r\n            他们可能有不同的父母，并且可能发生在各个树木中的不同位置。如果两个令牌是\r\n            逐步相同，每个节点的所有微不足道也将逐渐相同。\r\n            \r\n","\r\n            Checks that the specified name is a valid metadata String and a file name.\r\n            The specification isn't entirely consistent and complete but it mentions:\r\n            \r\n            22.19.2: \"Name shall index a non-empty string in the String heap. It shall be in the format {filename}.{extension} (e.g., 'goo.dll', but not 'c:\\utils\\goo.dll').\"\r\n            22.30.2: \"The format of Name is {file name}.{file extension} with no path or drive letter; on POSIX-compliant systems Name contains no colon, no forward-slash, no backslash.\"\r\n                     As Microsoft specific constraint.\r\n            \r\n            A reasonable restriction seems to be a valid UTF8 non-empty string that doesn't contain '\\0', '\\', '/', ':' characters.\r\n            ":"\r\n            检查指定名称是有效的元数据字符串和文件名。\r\n            该规范不是完全一致和完整的，但它提到了：\r\n            \r\n            22.19.2：“名称应在字符串堆中索引一个非空字符串。它应为格式{filename}。{extension}（例如，'goo.dll'，但不是'c：\\ utils \\ goo。 dll'）。”\r\n            22.30.2：“名称的格式为{文件名}。\r\n                     作为Microsoft特定约束。\r\n            \r\n            合理的限制似乎是一个有效的UTF8非空字符串，不包含'\\ 0'，'\\'，'/'，'：'字符。\r\n            \r\n","The trivia element to remove.":"要删除的琐事元素。\r\n","Win32 resources, assumed to be in COFF object format, are missing one or both of sections '.rsrc$01' and '.rsrc$02'":"Win32资源假定为Coff对象格式，缺少一个或两个部分'.RSRC $ 01'和'.RSRC $ 02'\r\n"," of the location(s).\r\n            ":" 位置的位置。\r\n            \r\n","An optional hyperlink that provides more detailed information regarding the diagnostic.":"可选的超链接，可提供有关诊断的更详细信息。\r\n","\r\n            This class is a duplicate from \"https://github.com/dotnet/reactive/blob/master/Rx.NET/Source/src/System.Reactive/Unit.cs\r\n            ":"\r\n            此课程是从“ https://github.com/dotnet/reactive/blob/master/rx.net/source/src/src/system.reactive/unit.cs\r\n            \r\n","\r\n            The original definition of the event. If the event is constructed from another\r\n            symbol by type substitution, OriginalDefinition gets the original symbol, as it was \r\n            defined in source or metadata.\r\n            ":"\r\n            事件的原始定义。如果事件是从另一个事件构建的\r\n            按类型替代的符号，原始定义获得原始符号，因为它是\r\n            在源或元数据中定义。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer.\r\n            ":"\r\n              查找类似于分析仪的局部字符串。\r\n            \r\n"," instance with the specified name.\r\n            ":" 带有指定名称的实例。\r\n            \r\n","\r\n            Gets a value indicating whether the analyzer supports concurrent execution.\r\n            ":"\r\n            获取一个值，指示分析仪是否支持并发执行。\r\n            \r\n","\r\n            Creates an empty host object.\r\n            ":"\r\n            创建一个空的主机对象。\r\n            \r\n","\r\n            Only types explicitly mentioned in \"Co-located core types\" spec \r\n            (https://github.com/dotnet/roslyn/blob/master/docs/compilers/Co-located%20core%20types.md)\r\n            can be in this enum.\r\n            The following things should be in sync:\r\n                1) SpecialType enum\r\n                2) names in SpecialTypes.EmittedNames array.\r\n            ":"\r\n            仅在“共同确定的核心类型”规范中明确提及的类型\r\n            （https://github.com/dotnet/roslyn/blob/master/docs/compilers/co-located%20Core%20Types.md）\r\n            可以在这个枚举中。\r\n            以下内容应该同步：\r\n                1）专业题词枚举\r\n                2）spreteipes.emittynames数组中的名称。\r\n            \r\n",", respectively.\r\n            ":"， 分别。\r\n            \r\n","\r\n            Escapes identifiers that are also keywords.\r\n            For example, \"@true\" instead of \"true\" in C# or\r\n            \"[True]\" instead of \"True\" in Visual Basic.\r\n            ":"\r\n            逃脱也是关键字的标识符。\r\n            例如，“ @true”而不是C＃或\r\n            “ [true]”而不是在Visual Basic中的“ true”。\r\n            \r\n","\r\n            Incrementally identical tokens can also appear within the same syntax tree, or syntax trees that did not arise\r\n            from ":"\r\n            增量相同的令牌也可以出现在同一语法树中，也可以出现不出现的语法树\r\n            从\r\n","\r\n            Name of the primary module, or null if a default name should be used.\r\n            ":"\r\n            主模块的名称，如果使用默认名称，则为null。\r\n            \r\n","Action to be executed for a code block.":"为代码块执行的操作。\r\n","The added entry. If there was a race, and another thread beat this one, then this returns the previously added entry.":"添加的条目。如果有一场比赛，另一个线程击败了这场比赛，则返回先前添加的条目。\r\n","A sequence of tokens to insert into the tree immediately after the specified token.":"指定令牌后立即插入树中的一系列令牌。\r\n","s about code blocks. \r\n            ":"S关于代码块。\r\n            \r\n","\r\n            Returns true for 'init' set accessors, and false otherwise.\r\n            ":"\r\n            返回“ Init”设置访问者的返回，否则为false。\r\n            \r\n"," during construction.\r\n            ":" 在施工期间。\r\n            \r\n","\r\n            Represents a creation of an instance of a NoPia interface, i.e. new I(), where I is an embedded NoPia interface.\r\n            ":"\r\n            表示NOPIA接口的实例的创建，即新的I（），其中I是嵌入式NOPIA接口。\r\n            \r\n","True if the name is too long.":"如果名称太长，则为是真的。\r\n","\r\n            Manifest module image.\r\n            ":"\r\n            清单模块图像。\r\n            \r\n","\r\n            Enables or disables the use of reflection-based method binding as a fallback.\r\n            ":"\r\n            启用或禁用基于反射的方法绑定作为后备。\r\n            \r\n","\r\n            Fallback encoding that is lazily retrieved if needed. If ":"\r\n            如果需要，可以懒惰地检索到编码的后备。如果\r\n","\r\n            Current usage:\r\n             (1) C# this or base expression.\r\n             (2) VB Me, MyClass, or MyBase expression.\r\n             (3) C# object or collection initializers.\r\n             (4) VB With statements, object or collection initializers.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃或基本表达式。\r\n             （2）VB我，myclass或mybase表达。\r\n             （3）C＃对象或集合初始化器。\r\n             （4）带有语句，对象或收集初始化器的VB。\r\n            \r\n","\r\n            Gets a list of text changes that when applied to the old tree produce this tree.\r\n            ":"\r\n            获取一个文本更改列表，当应用于旧树时，会产生这棵树。\r\n            \r\n","\r\n            Represents an operation to stop or suspend execution of code.\r\n            ":"\r\n            代表停止或暂停执行代码的操作。\r\n            \r\n","Method symbol for the lambda or local function.":"LAMBDA或本地功能的方法符号。\r\n","\r\n            The member is visible only to the compiler producing its assembly.\r\n            ":"\r\n            该成员仅对生产其组装的编译器可见。\r\n            \r\n","\r\n            The number of generic parameters of the method. Zero if the referenced method is not generic.\r\n            ":"\r\n            该方法的通用参数数量。零，如果引用方法不通用。\r\n            \r\n","Action to be executed for a document's ":"要执行文档的行动\r\n"," populated with ":" 填充\r\n","\r\n            Helper for RsaCryptoServiceProvider.ExportParameters()\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            ":"\r\n            rsacryptoserviceprovider.exportparameters（）的助手\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            \r\n","\r\n            Fully qualified namespace name.\r\n            ":"\r\n            完全合格的名称空间名称。\r\n            \r\n"," objects and JavaScript\r\n            ":" 对象和JavaScript\r\n            \r\n","\r\n            Reads all bytes from the current postion of the given stream to its end.\r\n            ":"\r\n            读取从当前流的字段到其结束的所有字节。\r\n            \r\n","\r\n            Signals that no further elements will be enqueued.  All outstanding and future\r\n            Dequeue Task will be cancelled.\r\n            ":"\r\n            信号表明将不会出现进一步的元素。所有杰出和未来\r\n            Dequeue任务将被取消。\r\n            \r\n","\r\n            Gets the root node of the syntax tree, causing computation if necessary.\r\n            ":"\r\n            获取语​​法树的根节点，如有必要，导致计算。\r\n            \r\n","\r\n            Compilation being analyzed.\r\n            ":"\r\n            分析汇编。\r\n            \r\n","\r\n            Returns a string representation of the current ":"\r\n            返回当前的字符串表示\r\n","\r\n            Clears all the elements from the set.\r\n            ":"\r\n            清除集合中的所有元素。\r\n            \r\n","\r\n            Local functions declared within the region.\r\n            ":"\r\n            该区域内声明的本地功能。\r\n            \r\n"," and uses it to create\r\n            an array of strings.\r\n            It assumes that an instance of ":" 并使用它来创建\r\n            一系列字符串。\r\n            它假设一个实例\r\n","Sequence points may be optimized away. As a result it might not be possible to place or hit a breakpoint.":"序列可以优化。结果，可能不可能放置或达到断点。\r\n","\r\n            The boolean value char.\r\n            ":"\r\n            布尔值char。\r\n            \r\n","\r\n            Copies all SyntaxAnnotations, if any, from this SyntaxTrivia instance and attaches them to a new instance based on ":"从此语法实例复制所有语法（如果有），并将它们附加到基于新实例上\r\n"," is \r\n            absolute (e.g. \"C:\\abc\", \"\\\\machine\\share\\abc\"), \r\n            relative to the current root (e.g. \"\\abc\"), \r\n            or relative to a drive directory (e.g. \"C:abc\\def\").\r\n            ":" 是 \r\n            绝对（例如\"C:\\abc\"，\"\\\\机器\\共享\\abc\"）, \r\n            相对于当前根（例如\"\\abc\"）, \r\n            或相对于驱动器目录（例如\"C:abc\\def\"）。\r\n            \r\n","\r\n            Returns a cloned CurrentAnalysisData, trimmed down to only have key-value pairs for the given ":"\r\n            返回一个克隆的电流分析数据，修剪为仅具有给定的键值对\r\n","\r\n            Returns an empty array if the input array is null (default)\r\n            ":"\r\n            如果输入数组为null，则返回一个空数组（默认）\r\n            \r\n","\r\n            to check in all locations. It is only possible to have initializers in both locations in VB invalid code scenarios.\r\n            ":"\r\n            检查所有位置。只有在VB无效的代码方案中的两个位置中都有初始化器。\r\n            \r\n","\r\n            Symbol is an array type.\r\n            ":"\r\n            符号是数组类型。\r\n            \r\n","\r\n            Used in VB for spans inside of a \"#ExternalSource\" directive that followed a hidden span\r\n            ":"\r\n            在VB中用于跨越隐藏跨度的“ #ExternAlsource”指令内的跨度\r\n            \r\n","An optional context callback for the requested document.":"请求的文档的可选上下文回调。\r\n","The trivia to replace the element with.":"用。\r\n"," instances, V8ScriptEngine instances do not have\r\n            thread affinity. The underlying script engine is not thread-safe, however, so this class\r\n            uses internal locks to automatically serialize all script code execution for a given\r\n            instance. Script delegates and event handlers are invoked on the calling thread without\r\n            marshaling.\r\n            ":"实例，v8script Engine实例没有\r\n            线程亲和力。但是，基础脚本引擎不是线程安全的，所以此类\r\n            使用内部锁来自动序列化给定的所有脚本代码执行\r\n            实例。脚本代表和事件处理程序在没有的通话线程上被调用\r\n            安排。\r\n            \r\n","\r\n            Boolean option to configure if single letter type parameter names are not flagged for CA1715 (https://docs.microsoft.com/visualstudio/code-quality/ca1715).\r\n            ":"\r\n            布尔值选项是否为CA1715（https://docs.microsoft.com/visualstudio/code-quality/ca1715）标记单个字母类型参数名称。\r\n            \r\n"," method that is synthesized in a record.\r\n            ":" 记录中合成的方法。\r\n            \r\n","\r\n            Value to be evaluated if ":"\r\n            值得评估的价值\r\n","\r\n            Options to configure analyzer execution within ":"\r\n            配置分析仪执行的选项\r\n","\r\n            Identifies the kind of the operation.\r\n            ":"\r\n            识别操作的种类。\r\n            \r\n","\r\n            Enumerates all referenced assemblies and their aliases.\r\n            ":"\r\n            列举所有引用的集会及其别名。\r\n            \r\n","\r\n            Returns false if the tree has already been processed for the analyzer OR is currently being processed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已经为分析仪处理了树或当前正在处理另一个任务，则返回false。\r\n            如果是真的，那么它将返回一个非编号\r\n","completion of semantic analysis of an operation.":"完成操作的语义分析。\r\n","\r\n            Body of the anonymous function.\r\n            ":"\r\n            匿名功能的主体。\r\n            \r\n","\r\n            PermissionSetAttribute needs fixup when it contains an assignment to the 'File' property as a single named attribute argument.\r\n            Fixup performed is ported from SecurityAttributes::FixUpPermissionSetAttribute at ndp\\clr\\src\\vm\\securityattributes.cpp.\r\n            It involves following steps:\r\n            1) Verifying that the specified file name resolves to a valid path: This is done during binding.\r\n            2) Reading the contents of the file into a byte array.\r\n            3) Convert each byte in the file content into two bytes containing hexadecimal characters (see method ":"\r\n            PermissionsetAttribute需求Fixup在将“文件”属性分配为单个命名属性参数时。\r\n            执行的FIXUP是从NDP \\ Clr \\ src \\ vm \\ securityAttributes.cpp的SecurityAttributes :: fixuppermissionsetattribute移植的。\r\n            它涉及以下步骤：\r\n            1）验证指定的文件名是否解析为有效的路径：这是在绑定期间完成的。\r\n            2）将文件的内容读为字节数组。\r\n            3）将文件内容中的每个字节转换为包含十六进制字符的两个字节（请参阅方法\r\n","\r\n            Returns a list of the changed regions between this tree and the specified tree. The list is conservative for\r\n            performance reasons. It may return larger regions than what has actually changed.\r\n            ":"\r\n            返回该树和指定树之间更改区域的列表。该清单是保守的\r\n            绩效原因。它可能返回比实际变化的更大区域。\r\n            \r\n","\r\n            Returns true if this special member symbol named \"Empty\", such that one of the following is true:\r\n             1. It is a static method with no parameters or\r\n             2. It is a static readonly property or\r\n             3. It is static readonly field\r\n            and symbol's containing type is a special type or derives from or is same as the type of the field/property/method return.\r\n            For example:\r\n             1. class SomeType { static readonly SomeType Empty; }\r\n             2. class SomeType { static readonly SomeType Empty { get; } }\r\n             3. class SomeType { static SomeType Empty(); }\r\n            ":"\r\n            如果此特殊成员符号为“空”，则返回true，以便以下一个是正确的：\r\n             1.这是一个没有参数的静态方法或\r\n             2.它是一个静态可读属性或\r\n             3.这是静态的Readonly字段\r\n            符号包含类型是特殊类型或衍生或与字段/属性/方法返回的类型相同。\r\n            例如：\r\n             1.类the tory stype {静态读取home hey stype; }\r\n             2.类the toype stype {static proadonly wory stype空{get; }}}\r\n             3.类the wordy stype {static fore stype empty（）; }\r\n            \r\n","\r\n            Gets or sets a value indicating whether the asynchronous state machine typically completes synchronously.\r\n            ":"\r\n            获取或设置一个值，以指示异步状态机通常同步完成。\r\n            \r\n","\r\n            In C#, include the numeric code point before character literals.\r\n            ":"\r\n            在C＃中，在字符文字之前包含数字代码点。\r\n            \r\n","\r\n            The generic parameter definitions to be emitted, in row order. These\r\n            are just the generic parameter definitions from the current generation.\r\n            ":"\r\n            以排顺序排放的通用参数定义。这些\r\n            只是当前一代的通用参数定义。\r\n            \r\n"," should not be called explicitly.":" 不应明确称为。\r\n","\r\n            Creates a COM/ActiveX object on the specified server and exposes it to script code with\r\n            the specified options. The registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            在指定的服务器上创建一个com/activex对象，并将其暴露于脚本代码\r\n            指定的选项。注册类由类标识符（CLSID）指定。\r\n            \r\n","\r\n            where both a.dll and b.dll reference x.dll, which is present only in dir2. Let's assume the resolver first \r\n            attempts to resolve \"x\" referenced from \"dir1\\a.dll\". The resolver may fail to find the dependency if it only\r\n            looks up the directory containing the referencing assembly (dir1). If we recorded and this failure immediately\r\n            we would not call the resolver to resolve \"x\" within the context of \"dir2\\b.dll\" (or any other referencing assembly). \r\n            \r\n            This behavior would ensure consistency and if the types from x.dll do leak thru to the script compilation, but it \r\n            would result in a missing assembly error. By recording the failure after all resolution attempts are complete\r\n            we also achieve a consistent behavior but are able to bind the reference to \"x.dll\". Besides, this approach\r\n            also avoids dependency on the order in which we evaluate the assembly references in the scenario above.\r\n            In general, the result of the resolution may still depend on the order of #r - if there are different assemblies \r\n            of the same identity in different directories.\r\n            ":"\r\n            a.dll和b.dll参考X.dll，仅在dir2中存在。让我们首先假设解析器\r\n            尝试从“ dir1 \\ a.dll”中引用的“ x”。解析器可能仅找到依赖项\r\n            查找包含参考组件（DIR1）的目录。如果我们记录并立即失败\r\n            我们不会在“ dir2 \\ b.dll”（或任何其他引用组件）的上下文中称呼解析器来解决“ x”。\r\n            \r\n            此行为将确保一致性以及X.dll的类型是否确实泄漏到脚本汇编，但是\r\n            将导致丢失的组件错误。通过记录所有分辨率尝试完成后的故障\r\n            我们还达到了一致的行为，但能够将引用与“ x.dll”结合。此外，这种方法\r\n            还避免依赖我们评估上面方案中的组装参考的顺序。\r\n            通常，分辨率的结果仍可能取决于#R的顺序 - 如果有不同的组件\r\n            不同目录中相同的身份。\r\n            \r\n","s used for analyzer execution.\r\n            ":"S用于分析仪执行。\r\n            \r\n","\r\n            Analyzer are read from the file, owned by the reference, and doesn't change \r\n            since the reference is accessed until the reference object is garbage collected.\r\n            \r\n            If you need to manage the lifetime of the analyzer reference (and the file stream) explicitly use ":"\r\n            分析仪是从文件中读取的，由参考所有，并且不会更改\r\n            由于访问引用，直到收集参考对象为止。\r\n            \r\n            如果您需要管理分析仪参考（和文件流）的寿命，则明确使用\r\n","\r\n            Uses keywords for predefined types. \r\n            For example, \"int\" instead of \"System.Int32\" in C#\r\n            or \"Integer\" instead of \"System.Integer\" in Visual Basic.\r\n            ":"\r\n            将关键字用于预定义的类型。\r\n            例如，c＃中的“ int”而不是“ system.int32”\r\n            或在Visual Basic中而不是“整数”而不是“ System.Integer”。\r\n            \r\n","Dispose(Boolean)":"处置（布尔）\r\n","\r\n            Returns custom modifiers for the type argument that has been substituted for the type parameter. \r\n            The modifiers correspond to the type argument at the same ordinal within the ":"\r\n            返回已替换为类型参数的类型参数的自定义修饰符。\r\n            修饰符对应于在同一序中的类型参数\r\n","\r\n            Compute a deterministic Guid and timestamp based on the contents of the stream, and replace\r\n            the 16 zero bytes at the given position and one or two 4-byte values with that computed Guid and timestamp.\r\n            ":"\r\n            根据流的内容计算确定性的GUID和时间戳，然后替换\r\n            在给定位置处的16个零字节和一个或两个4字节值，该值带有计算的GUID和时间戳。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Int32\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toInt32(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.int32”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.toint32（42））;\r\n            \r\n","The amount of shift":"轮班量\r\n","\r\n            An unsigned 32 bit integer.\r\n            ":"\r\n            一个未签名的32位整数。\r\n            \r\n","\r\n            False to close the stream upon disposal of the metadata (the responsibility for disposal of the stream is transferred upon entry of the constructor\r\n            unless the arguments given are invalid).\r\n            ":"\r\n            错误的元数据处置时关闭流（处置流的责任是在构造师进入时转移的\r\n            除非给出的论点无效）。\r\n            \r\n"," produced by all ":" 由所有人产生\r\n","\r\n            Current usage:\r\n             (1) C# method reference expression.\r\n             (2) VB method reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃方法参考表达式。\r\n             （2）VB方法参考表达式。\r\n            \r\n","The rooting marker to put in the response file.":"要放入响应文件的生根标记。\r\n","\r\n            Count of registered operation actions.\r\n            ":"\r\n            注册操作的计数。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# parameter reference expression.\r\n             (2) VB parameter reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃参数参考表达式。\r\n             （2）VB参数参考表达式。\r\n            \r\n","\r\n            Returns the type arguments that have been substituted for the type parameters. \r\n            If nothing has been substituted for a give type parameters,\r\n            then the type parameter itself is consider the type argument.\r\n            ":"\r\n            返回已替换为类型参数的类型参数。\r\n            如果什么都没有代替给出类型参数，\r\n            然后，类型参数本身为类型参数。\r\n            \r\n","\r\n            Convert a string to lower case per Unicode\r\n            ":"\r\n            将字符串转换为每个Unicode的较低情况\r\n            \r\n"," if the information can't be read for the specified method.\r\n            This exception and ":" 如果无法阅读有关指定方法的信息。\r\n            这个例外和\r\n","\r\n            Is type initialized anytime before first access to static field\r\n            ":"是在首次访问静态字段之前随时随地的类型初始化\r\n            \r\n","\r\n            Returns the overlap with the given span, or null if there is no overlap.\r\n            ":"\r\n            返回与给定跨度的重叠，或者如果没有重叠，则返回null。\r\n            \r\n","\r\n            An alias for the global namespace of the assembly.\r\n            ":"\r\n            大会全球名称空间的别名。\r\n            \r\n","\r\n            True if this reference is also the declaration site of this variable. This is true in out variable declarations\r\n            and in deconstruction operations where a new variable is being declared.\r\n            ":"\r\n            如果此引用也是此变量的声明站点，则为true。在OUT变量声明中是正确的\r\n            在解构操作中，正在声明新变量。\r\n            \r\n","\r\n            Implements a few file name utilities that are needed by the compiler.\r\n            In general the compiler is not supposed to understand the format of the paths.\r\n            In rare cases it needs to check if a string is a valid file name or change the extension \r\n            (embedded resources, netmodules, output name).\r\n            The APIs are intentionally limited to cover just these rare cases. Do not add more APIs.\r\n            ":"\r\n            实现编译器所需的一些文件名实用程序。\r\n            通常，编译器不应该理解路径的格式。\r\n            在极少数情况下，它需要检查字符串是有效的文件名还是更改扩展名\r\n            （嵌入式资源，NetModules，输出名称）。\r\n            API有意限制仅涵盖这些极少数情况。不要添加更多的API。\r\n            \r\n","\r\n            Symbol that represents an error \r\n            ":"\r\n            代表错误的符号\r\n            \r\n","\r\n            The full name of a type that declares static Main method. Must be a valid non-generic namespace-qualified name.\r\n            Null if any static Main method is a candidate for an entry point.\r\n            ":"\r\n            声明静态主方法的类型的全名。必须是有效的非生成名称空间合格名称。\r\n            null如果任何静态主方法是入口点的候选者。\r\n            \r\n","\r\n            The name of a type synthesized for a top-level statements entry point method.\r\n            ":"\r\n            为顶级语句入口点方法合成的类型的名称。\r\n            \r\n","Normalized path.":"归一化路径。\r\n","\r\n            Subtract one from the index (for the manifest module) to find the corresponding elements\r\n            of ":"\r\n            从索引（对于清单模块）中减去一个，以找到相应的元素\r\n            的\r\n","\r\n            Returns true if this is a SemanticModel that ignores accessibility rules when answering semantic questions.\r\n            ":"\r\n            如果这是一个语义模型，则返回true，它在回答语义问题时会忽略可访问性规则。\r\n            \r\n","String representation of the current ":"电流的字符串表示\r\n"," if this is a local constant, short-lived temp variable, \r\n            or we are not emitting local variable ids (release builds).\r\n            ":" 如果这是局部常数，短寿命的温度变量，\r\n            否则我们没有发出本地变量ID（发布构建）。\r\n            \r\n","\r\n            For example, ":"\r\n            例如，\r\n","\r\n            If not specified the file name of the source module with an extension changed to \"pdb\" is used.\r\n            ":"\r\n            如果未指定，则使用将扩展名更改为“ PDB”的源模块的文件名。\r\n            \r\n","A new host variable of the specified type.":"指定类型的新主机变量。\r\n","\r\n            Returns 0 for path \".goo\".\r\n            Returns -1 for path \"goo.\".\r\n            ":"\r\n            返回0的路径“ .goo”。\r\n            返回-1的路径“ Goo”。\r\n            \r\n","\r\n            To get the effective severity of the diagnostic, use ":"\r\n            要获得诊断的有效严重性，请使用\r\n","\r\n            Represents a constituent interpolation part of an interpolated string expression.\r\n            ":"\r\n            代表插值字符串表达式的组成插值部分。\r\n            \r\n","\r\n            The 'get' accessor of the property, or null if the property is write-only.\r\n            ":"\r\n            该属性的“获取”登录器，或者如果属性为仅写的，则null。\r\n            \r\n","\r\n            Gets all attributes directly applied to the type or inherited from a base type.\r\n            ":"\r\n            获取直接应用于类型或从基本类型继承的所有属性。\r\n            \r\n","\r\n            Symbol is deleted.\r\n            ":"\r\n            符号已删除。\r\n            \r\n","The FNV-1a hash code of ":"FNV-1A哈希守则\r\n","\r\n            Provides a description about a ":"\r\n            提供了有关\r\n","\r\n            An unmodified type reference.\r\n            ":"\r\n            未修改的类型参考。\r\n            \r\n","\r\n              Indicates that ":"\r\n              表示这\r\n","The token to be replaced; descendants of the root node.":"要替换的令牌；根节点的后代。\r\n","The character position of the token relative to the beginning of the file.":"令牌相对于文件开始的角色位置。\r\n","\r\n            Parses range defined by the following grammar.\r\n            ":"\r\n            解析范围由以下语法定义。\r\n            \r\n","\r\n            as pointed to by given reference type ":"如给定的参考类型所指向\r\n"," from the metadata of the module before editing\r\n            and from a function that maps from a method to an array of local names. \r\n            ":"编辑之前，来自模块的元数据\r\n            以及从方法映射到局部名称数组的函数。\r\n            \r\n","\r\n            Returns the text representation of the value of the token. For example, if the token represents an integer\r\n            literal, then this property would return a string representing the integer.\r\n            ":"\r\n            返回令牌值的文本表示。例如，如果令牌代表整数\r\n            字面意思，然后该属性将返回代表整数的字符串。\r\n            \r\n","\r\n            True if differences in return type (or value parameter for setter) should be treated as significant.\r\n            ":"\r\n            如果返回类型的差异（或设置器的值参数）应视为显着，则为正确。\r\n            \r\n","\r\n            Get the cached entry for the given tlog set, if the table is out of date it is removed from the cache\r\n            ":"\r\n            获取给定TLOG集的缓存条目，如果表不在日期，则将其从缓存中删除\r\n            \r\n","The object to cast to the specified host type.":"要投放指定主机类型的对象。\r\n","\r\n            Exception reported when PDB write operation fails.\r\n            ":"\r\n            当PDB写操作失败时报告了例外。\r\n            \r\n"," nodes that are still not fully designed and hence need a backdoor to stitch the child IOperation nodes to the entire IOperation tree.\r\n            ":" 仍未完全设计的节点，因此需要一个后门将孩子的ioperation节点缝合到整个ioperation树上。\r\n            \r\n","A value that selects options for the operation.":"一个选择操作选项的值。\r\n","\r\n            All directives are kept\r\n            ":"\r\n            所有指示都保留\r\n            \r\n","\r\n            Represents a VB Stop statement.\r\n            ":"\r\n            代表VB停止语句。\r\n            \r\n","The location of this syntax reference.":"此语法参考的位置。\r\n","\r\n              Looks up a localized string similar to field.\r\n            ":"\r\n              查找类似于字段的本地化字符串。\r\n            \r\n","\r\n            Represents a field in a class, struct or enum.\r\n            ":"\r\n            代表类，结构或枚举中的字段。\r\n            \r\n","\r\n            Marker interface for analysis results from execution of ":"\r\n            用于分析结果的标记接口执行\r\n","The token to replace.":"代币更换。\r\n","\r\n            Count of registered compilation actions.\r\n            ":"\r\n            注册汇编措施的计数。\r\n            \r\n","\r\n            Gets all tokens with the specified annotation.\r\n            ":"\r\n            用指定的注释获取所有令牌。\r\n            \r\n","\r\n            An unknown severity diagnostic is something whose severity has not yet been determined.\r\n            ":"\r\n            尚未确定严重性的严重性诊断。\r\n            \r\n","Effective severity of the diagnostic.":"诊断的有效严重程度。\r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Single\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toSingle(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.single”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.Add（host.Tosingle（42））;\r\n            \r\n","\r\n            Writes the full text of this node or token to the specified TextWriter.\r\n            ":"\r\n            将此节点的全文或令牌写给指定的文本作者。\r\n            \r\n","\r\n            The actual number of bytes read can be fewer than the number of bytes requested \r\n            if an error occurs or if the end of the stream is reached during the read operation.\r\n            ":"\r\n            实际读取的字节数可能少于请求的字节数\r\n            如果发生错误或在读取操作期间达到流的末端。\r\n            \r\n"," is true a version with values up to the first invalid character set. Otherwise a version with all parts set to zero.\r\n            If ":" 是True的版本，具有值，直到第一个无效的字符集。否则，所有零件设置为零的版本。\r\n            如果\r\n","\r\n            Describes the kind of real signing that is being done during Emit. In the case of public signing\r\n            this value will be ":"\r\n            描述在发射过程中正在完成的真实签名。如果是公共签名\r\n            这个值将是\r\n","The exponent":"指数\r\n","\r\n            Returns an ExceptionHandlerRegion for each exception handler clause\r\n            beneath the root scope. Each ExceptionHandlerRegion indicates the type\r\n            of clause (catch or finally) and the bounds of the try block and clause block.\r\n            ":"\r\n            返回每个异常处理程序子句的例外设施区域\r\n            在根部范围之下。每个例外HandlerRegion指示类型\r\n            子句（捕获或最后）以及try块和子句块的边界。\r\n            \r\n","\r\n            Implements compressed unsigned integer encoding as defined by ECMA-335-II chapter 23.2: Blobs and signatures.\r\n            ":"\r\n            通过ECMA-335-II第23.2章定义的压缩无符号整数编码：斑点和签名。\r\n            \r\n","\r\n            Returns type symbols for top-level (non-nested) types forwarded by this assembly.\r\n            ":"\r\n            返回该组件转发的顶级（非巢）类型的返回类型符号。\r\n            \r\n","\r\n            Drops blocks that are not reachable\r\n            Returns true if any blocks were dropped\r\n            ":"\r\n            滴不到的块\r\n            如果丢弃了任何块，则返回真实\r\n            \r\n","\r\n            Creates a new node from this node with both the leading and trailing trivia of the specified node.\r\n            ":"\r\n            从该节点创建一个新的节点，并具有指定节点的前导和尾随琐事。\r\n            \r\n","\r\n            The name assigned to the Modulus operator.\r\n            ":"\r\n            分配给模量运算符的名称。\r\n            \r\n","\r\n            Gets a value indicating whether the queue has completed.\r\n            ":"\r\n            获取一个指示队列是否已完成的值。\r\n            \r\n","\r\n            Gets a list of all the trivia (both leading and trailing) for this token.\r\n            ":"\r\n            获得这个令牌的所有琐事（既领先和尾随）的清单。\r\n            \r\n","\r\n            Gets the root node of the syntax tree asynchronously.\r\n            ":"\r\n            异步获取语法树的根节点。\r\n            \r\n","\r\n            Map from (symbol, analyzer) to count of its member symbols whose symbol declared events are not yet processed.\r\n            ":"从（符号，分析仪）到其成员符号的计数，其符号声明事件尚未处理。\r\n            \r\n","\r\n            Represents either a namespace or a type.\r\n            ":"\r\n            代表名称空间或类型。\r\n            \r\n","\r\n            Locals declared within the loop Condition and are in scope throughout the ":"\r\n            当地人在循环条件下声明，并在整个范围内处于范围\r\n","\r\n            collection will contain a single diagnostic indicating that the generator failed.\r\n            ":"\r\n            收集将包含一个诊断，表明发电机失败。\r\n            \r\n","\r\n            Find a ":"\r\n            找到\r\n","A reference to the host variable that can be passed as an ":"对主机变量的引用，可以通过\r\n","If you're looking for null, you should be looking at ":"如果您正在寻找零，则应该查看\r\n","\r\n            Represents a type other than an array, a pointer, a type parameter.\r\n            ":"代表数组，指针，类型参数以外的类型。\r\n            \r\n","An optional longer localizable description for the diagnostic.":"可选的诊断更长的可本质描述。\r\n","\r\n            A reference to a string with the id encoded as 1 byte.\r\n            ":"\r\n            对字符串的引用，该字符串编码为1个字节。\r\n            \r\n","\r\n            Scope for analyzer execution.\r\n            This scope could either be the entire compilation for all analyzers (command line build) or\r\n            could be scoped to a specific tree/span and/or a subset of analyzers (CompilationWithAnalyzers).\r\n            ":"\r\n            分析仪执行范围。\r\n            此范围可能是所有分析仪（命令行构建）或\r\n            可以将分析仪的特定树/跨度和/或子集（汇编WithAnalyzers）范围范围内。\r\n            \r\n","\r\n            Parses .RES a file into its constituent resource elements.\r\n            Mostly translated from cvtres.cpp.\r\n            ":"\r\n            解析文件中的构成资源元素。\r\n            主要由cvtres.cpp翻译。\r\n            \r\n"," doesn't correspond to any defined document.":" 与任何定义的文档不符。\r\n","Argument to be post-processed.":"要进行后处理的论点。\r\n","\r\n            Given a position in the SyntaxTree for this SemanticModel returns the innermost Symbol\r\n            that the position is considered inside of.\r\n            ":"\r\n            在该语义模型的语法中给定一个位置，返回最内向的符号\r\n            该位置被认为是内部的。\r\n            \r\n","\r\n            Value to be captured.\r\n            ":"\r\n            值要捕获。\r\n            \r\n","True if the accessor signature is appropriate for the containing event.":"如果登录器签名适合包含事件，则为true。\r\n","\r\n            Used to generate unique names for per-assembly directories. Should be updated with ":"\r\n            用于生成每个组件目录的唯一名称。应该更新\r\n","\r\n            Indicates an \"in\" parameter.\r\n            ":"\r\n            指示一个“ in”参数。\r\n            \r\n","The type of executable the wrapped tool is":"可执行器的类型包装工具为\r\n",">\r\n        ":">\r\n        \r\n","\r\n            Attribute constructor used to specify the attached class is a source generator and indicate which language(s) it supports.\r\n            ":"\r\n            用于指定附件类的属性构造函数是源生成器，并指示其支持的语言。\r\n            \r\n","\r\n            System documents take precedence over loaded documents. Once this method is invoked,\r\n            document access using this configuration will always map the combination of\r\n            ":"\r\n            系统文档优先于加载文档。调用此方法后，\r\n            使用此配置的文档访问将始终映射\r\n            \r\n","\r\n            Create a new syntax tree based off this tree using a new source text.\r\n            \r\n            If the new source text is a minor change from the current source text an incremental\r\n            parse will occur reusing most of the current syntax tree internal data.  Otherwise, a\r\n            full parse will occur using the new source text.\r\n            ":"\r\n            使用新的源文本创建基于此树的新语法树。\r\n            \r\n            如果新源文本与当前源文本相比是较小的更改\r\n            解析将重复使用当前的大多数语法树内部数据。否则，\r\n            完整的解析将使用新的源文本进行。\r\n            \r\n"," the \"value\" parameter for a property setter, ":" 属性设置器的“值”参数，\r\n","Optional custom tags for the diagnostic. See ":"诊断的可选自定义标签。看\r\n","\r\n            Returns whether this method is generic; i.e., does it have any type parameters?\r\n            ":"\r\n            返回该方法是否是通用的；即，它有任何类型的参数吗？\r\n            \r\n","\r\n            replaces branches with more compact code if possible.\r\n            * same branch as in the next     ===> nop\r\n            * branch to the next block       ===> nop\r\n            * branch to ret block            ===> ret\r\n            * cond branch over uncond branch ===> flip condition, skip next block\r\n            * cond branch to equivalent      ===> pop args + nop\r\n            ":"\r\n            如果可能的话，用更多紧凑的代码代替分支。\r\n            *与下一个分支相同的分支===> nop\r\n            *分支到下一个块===> nop\r\n            *分支为ret块===> ret\r\n            * cond分支在uncond branch ===>翻转条件下，跳过下一个块\r\n            * cond分支到等效===> pop args + nop\r\n            \r\n","\r\n            Returns the type symbol that this type was constructed from. This type symbol\r\n            has the same containing type (if any), but has type arguments that are the same\r\n            as the type parameters (although its containing type might not).\r\n            ":"\r\n            返回此类型的构造的类型符号。此类型符号\r\n            具有相同的包含类型（如果有），但具有相同的类型参数\r\n            作为类型参数（尽管其包含类型可能没有）。\r\n            \r\n","\r\n            Result from execution of ":"\r\n            执行\r\n"," directive\r\n            ":" 指示\r\n            \r\n"," for the operation block containing the ":" 对于包含的操作块\r\n","The SymWriter implementation is not available or failed to load.":"对符号的实施不可用或无法加载。\r\n"," is taken.\r\n            ":" 被带走。\r\n            \r\n","\r\n            Creates a delegate that invokes a script function and returns a value of the specified type.\r\n            ":"\r\n            创建一个调用脚本函数并返回指定类型的值的委托。\r\n            \r\n","\r\n            because it saves another read to ":"\r\n            因为它保存了另一个阅读\r\n"," is nullable, then conversion is applied to an \r\n            unwrapped ":" 无效，然后将转换应用于\r\n            解开\r\n","\r\n            Called when the compiler needs to read the documentation for the reference. \r\n            This method can be called multiple times from different threads.  The result of one of the calls\r\n            is cached on the reference object.\r\n            ":"\r\n            当编译器需要读取文档以进行参考时，请调用。\r\n            该方法可以从不同的线程多次调用。其中一个电话的结果\r\n            被缓存在参考对象上。\r\n            \r\n","\r\n            An object specifying parameters that should not be applied when formatting symbols belonging to locals.\r\n            ":"\r\n            指定属于当地人的格式化符号时不应应用的对象。\r\n            \r\n","The target offset. Must be between 0 and ":"目标偏移。必须在0到\r\n","\r\n            Gets the name of a symbol as it appears in metadata. Most of the time, this\r\n            is the same as the Name property, with the following exceptions:\r\n            ":"\r\n            获取出现在元数据中的符号的名称。大多数时候，这个\r\n            与名称属性相同，但有以下例外：\r\n            \r\n","\r\n            Except for paths stored in ":"\r\n            除了存储在\r\n",", you\r\n            must release all references to the compiled script so the garbage collector can reclaim\r\n            the memory that the compiled script was occupying.\r\n            ":"， 你\r\n            必须发布对编译脚本的所有引用，以便垃圾收集器可以回收\r\n            编译脚本的记忆正在占据。\r\n            \r\n","\r\n            Get all the members of this symbol that are types that have a particular name, of any arity.\r\n            ":"\r\n            获取该符号的所有成员，这些成员是具有特定名称的类型。\r\n            \r\n",".\r\n            This conversion is bidirectional and lossy. A ":"。\r\n            这种转换是双向的和有损的。一个\r\n","\r\n            Note that since a compilation is immutable, the act of creating a driver and attaching it produces\r\n            a new compilation. Any further actions on the compilation should use the new compilation.\r\n            ":"\r\n            请注意，由于汇编是不可变的，因此创建驱动程序并将其附加的行为产生的行为\r\n            新的汇编。关于汇编的任何进一步操作都应使用新的汇编。\r\n            \r\n","\r\n            Represents result of checking whether the ":"\r\n            表示检查是否是否\r\n","\r\n            Standalone modules referenced by the compilation (doesn't include the manifest module of the compilation).\r\n            ":"\r\n            汇编引用的独立模块（不包括汇编的清单模块）。\r\n            \r\n","Flag indicating if the syntax tree being analyzed is generated code.":"指示是否正在分析语法树的标志是生成代码。\r\n","\r\n            A rope that wraps a simple string.\r\n            ":"\r\n            包裹简单字符串的绳索。\r\n            \r\n","The symbol declared by the node or null if the node is not a declaration.":"如果节点不是声明，则由节点或null声明的符号。\r\n","\r\n            True if the given symbol end analysis is complete for the given analyzer.\r\n            ":"\r\n            如果给定的分析仪完成给定的符号端分析，则为正确。\r\n            \r\n","\r\n            Parts of the assembly identity that were specified in the display name, \r\n            or 0 if the parsing failed.\r\n            ":"\r\n            显示名称中指定的汇编身份的一部分，\r\n            或0如果解析失败。\r\n            \r\n",". This has yield break semantics.":"。这具有突破性的语义。\r\n"," if this is a 'lifted' binary operator.  When there is an\r\n            operator that is defined to work on a value type, 'lifted' operators are\r\n            created to work on the ":" 如果这是一个“提起”的二进制操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            TODO: Revert this reflection based workaround once we move to Microsoft.CodeAnalysis version 3.0\r\n            ":"\r\n            TODO：一旦我们移至Microsoft.Codeanalysis 3.0，恢复了基于反射的解决方法\r\n            \r\n","\r\n            Omits parameters from symbol descriptions.\r\n            ":"\r\n            从符号描述中省略参数。\r\n            \r\n","A strongly typed flag set containing the specified flags.":"一个包含指定标志的强大标志集。\r\n","\r\n            A globally unique persistent identifier for this module.\r\n            ":"\r\n            该模块的全球唯一持久标识符。\r\n            \r\n","Indicates whether to binding the expression as a full expressions,\r\n            or as a type or namespace. If SpeculativeBindingOption.BindAsTypeOrNamespace is supplied, then\r\n            expression should derive from TypeSyntax.":"指示是否将表达式绑定为完整表达式，\r\n            或类型或名称空间。如果提供了猜测bindingoption.bindastypeornamespace，则\r\n            表达应源自型号。\r\n","\r\n            Performs dynamic instantiation.\r\n            ":"\r\n            执行动态实例化。\r\n            \r\n","\r\n            A program location in an XML file.\r\n            ":"\r\n            XML文件中的程序位置。\r\n            \r\n","\r\n            Represents a namespace.\r\n            ":"\r\n            代表一个名称空间。\r\n            \r\n","\r\n            The top-level nullability of the discarded value.\r\n            ":"\r\n            废弃值的最高级别无效性。\r\n            \r\n","A new delegate that invokes the specified script function.":"调用指定脚本功能的新委托。\r\n","\r\n            Not applicable.\r\n            ":"\r\n            不适用。\r\n            \r\n","\r\n            Region representing erroneous block of code that is unreachable from the entry block.\r\n            ":"\r\n            代表错误的代码块的区域是无法从入口块中进行的。\r\n            \r\n","\r\n            Puts local constant into current scope.\r\n            ":"\r\n            将局部常数放入当前范围。\r\n            \r\n","\r\n            A symbol representing a discarded value, e.g. a symbol in the result of\r\n            GetSymbolInfo for `_` in `M(out _)` or `(x, _) = e`.\r\n            ":"\r\n            代表废弃值的符号，例如一个符号\r\n            在`_ m（out _）或`（x，_）= e`中的_'getymbolinfo。\r\n            \r\n","A structure containing meta-information for the document.":"包含文档元信息的结构。\r\n","\r\n            Delegate which is invoked when an analyzer throws an exception.\r\n            Delegate can do custom tasks such as report the given analyzer exception diagnostic, report a non-fatal watson for the exception, etc.\r\n            ":"\r\n            当分析仪抛出异常时，将调用的委托。\r\n            委托可以执行自定义任务，例如报告给定的分析仪例外诊断，报告异常的非致命Watson等。\r\n            \r\n","\r\n            Includes identities of references passed in the compilation constructor\r\n            as well as those specified via directives in source code.\r\n            ":"\r\n            包括在编译构造器中通过的参考的身份\r\n            以及通过源代码中指令指定的那些。\r\n            \r\n","\r\n            An object reference with the id encoded as 4 bytes.\r\n            ":"\r\n            具有编码为4个字节的ID的对象引用。\r\n            \r\n","A syntax node that represents a name. This syntax\r\n            node need not and typically does not appear in the source code referred to by the\r\n            SemanticModel instance.":"代表名称的语法节点。这个语法\r\n            节点无需，通常不会出现在该源代码中\r\n            Semanticmodel实例。\r\n"," operation to be executed when the ":" 当操作要执行时\r\n","\r\n            Warning report option for each warning.\r\n            ":"\r\n            每个警告的警告报告选项。\r\n            \r\n","\r\n            Copies elements from the typed array into the specified array.\r\n            ":"\r\n            从键入数组中的副本元素到指定的数组中。\r\n            \r\n","\r\n            Represents the C# '^' operator.\r\n            ":"\r\n            代表C＃'^'运算符。\r\n            \r\n","\r\n            Returns a value indicating whether the specified type implements both the\r\n            equality and inequality operators.\r\n            ":"\r\n            返回一个值，指示指定类型是否实现\r\n            平等和不平等运营商。\r\n            \r\n","\r\n            For testing purposes only!!!\r\n            ":"\r\n            仅用于测试目的！！！\r\n            \r\n","\r\n            Represents a constituent part of an interpolated string.\r\n            ":"\r\n            代表插值字符串的组成部分。\r\n            \r\n"," associated with the current script engine.\r\n            ":" 与当前脚本引擎相关联。\r\n            \r\n","\r\n            Determines if a custom attribute matches a namespace and name.\r\n            ":"\r\n            确定自定义属性是否匹配名称空间和名称。\r\n            \r\n"," corresponding\r\n            to it.\r\n            ":" 相应的\r\n            对此。\r\n            \r\n","\r\n            True if the given symbol declaration is fully analyzed for the given analyzer.\r\n            ":"\r\n            如果给定的分析仪对给定的符号声明进行了充分的分析，则是正确的。\r\n            \r\n","\r\n            An abstract domain implementation for analyses that store dictionary typed data along with predicated data.\r\n            ":"\r\n            用于存储字典键入数据以及预测数据的分析的抽象域实现。\r\n            \r\n","true if the map is fully populated.":"如果地图完全填充，则为正确。\r\n","\r\n            Initializes a new Windows Script engine instance with the specified list of supported file name extensions and synchronous invoker.\r\n            ":"\r\n            初始化一个新的Windows脚本引擎实例，其中指定的文件名称扩展名和同步调用列表。\r\n            \r\n","\r\n            Gets the location in terms of path, line and column.\r\n            ":"\r\n            从路径，线路和列中获取位置。\r\n            \r\n","\r\n            Omits the type parameter list entirely.\r\n            ":"\r\n            完全省略了类型参数列表。\r\n            \r\n","\r\n            Combines TranslateSpan and IsHiddenPosition to not search the entries twice when emitting sequence points\r\n            ":"\r\n            结合translatespan和ishidendPosition在发射序列点时不搜索两次条目\r\n            \r\n"," which returns the object to the delegate pool.":" 将对象返回到委托池。\r\n","\r\n            Body of the try, over which the handlers are active.\r\n            ":"\r\n            试图的主体，处理程序处于活动状态。\r\n            \r\n","\r\n            An optional set of custom tags for the diagnostic. See ":"\r\n            可选的诊断自定义标签。看\r\n","The path to a file such as a source file or additional file. Must be non-null.":"文件的路径，例如源文件或其他文件。必须是非记器。\r\n","\r\n            Creates a new options instance with the specified source code kind.\r\n            ":"\r\n            使用指定的源代码类型创建一个新的选项实例。\r\n            \r\n"," structure on the right side of the inequality operator.":" 不等式操作员右侧的结构。\r\n","\r\n              Looks up a localized string similar to File size exceeds maximum allowed size of a valid metadata file..\r\n            ":"\r\n              查找类似于文件大小的本地化字符串超过有效元数据文件的最大允许大小。\r\n            \r\n","\r\n            Create a SequencePointList with the raw sequence points from an ArrayBuilder.\r\n            A linked list of instances for each syntax tree is created (almost always of length one).\r\n            ":"使用阵列构造器的原始序列点创建一个序列列表。\r\n            创建了每个语法树的实例链接列表（几乎总是长一个）。\r\n            \r\n","\r\n            Symbol is a property.\r\n            ":"\r\n            符号是属性。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified old token replaced with a new token.\r\n            ":"\r\n            创建一棵新的节点树，指定的旧令牌用新的令牌代替。\r\n            \r\n","\r\n            Defines document attributes.\r\n            ":"\r\n            定义文档属性。\r\n            \r\n","\r\n            Returns SyntaxTree that owns the node. If the node does not belong to a tree then\r\n            one will be generated.\r\n            ":"\r\n            返回拥有节点的语法。如果节点不属于树，则\r\n            将生成一个。\r\n            \r\n","' parameter followed by a ":"'参数，然后是\r\n","\r\n            Decode text from a byte array.\r\n            ":"\r\n            从字节数组解码文本。\r\n            \r\n","\r\n            Optional combined logical condition that accounts for all ":"\r\n            可选的组合逻辑条件\r\n","\r\n            Value to be thrown.\r\n            ":"\r\n            要投掷的价值。\r\n            \r\n","\r\n            Release a local slot by its symbol.\r\n            Slot is not associated with symbol after this.\r\n            ":"\r\n            通过其符号释放本地插槽。\r\n            此后，插槽与符号无关。\r\n            \r\n","\r\n            Gets the operation corresponding to the expression or statement syntax node.\r\n            ":"\r\n            获取对应于表达式或语句语法节点的操作。\r\n            \r\n"," in the compilation before generation runs\r\n            ":" 在一代人运行之前的汇编中\r\n            \r\n","\r\n            Formats a symbol description as in a Visual Basic compiler error message.\r\n            ":"\r\n            格式化一个符号描述，如视觉基本编译器错误消息。\r\n            \r\n","\r\n            Whether or not this parent node wants its child SyntaxList node to be \r\n            converted to a Weak-SyntaxList when creating the red-node equivalent.\r\n            For example, in C# the statements of a Block-Node that is parented by a \r\n            MethodDeclaration will be held weakly.\r\n            ":"\r\n            这个父节点是否希望其子句法节点为\r\n            创建红节点等效时，转换为弱辅助列表。\r\n            例如，在C＃中\r\n            方法传播将弱地进行。\r\n            \r\n","\r\n            Represents a pattern with a constant value.\r\n            ":"\r\n            表示具有恒定值的模式。\r\n            \r\n","An optional hyperlink that provides a more detailed description regarding the diagnostic.":"可选的超链接，可提供有关诊断的更详细说明。\r\n","\r\n            The member references to be emitted, in row order. These\r\n            are just the member references from the current generation.\r\n            ":"\r\n            成员参考将按排顺序排放。这些\r\n            只是当前一代的成员参考。\r\n            \r\n","The size of the image pointed to by ":"图像的大小指向\r\n",").\r\n            \r\n             Non-reduced extension methods are considered regardless of the value of ":"）。\r\n            \r\n             无论价值如何\r\n","\r\n            Input nodes are the 'root' nodes in the graph, and get their values from the inputs of the driver state table\r\n            ":"\r\n            输入节点是图中的“ root”节点，并从驱动程序状态表的输入中获取其值\r\n            \r\n","\r\n            Function returning a stream of the resource content (used to calculate hash).\r\n            ":"\r\n            返回资源内容流的功能（用于计算哈希）。\r\n            \r\n","\r\n            Get all the members of this symbol that are types that have a particular name and arity\r\n            ":"\r\n            获取该符号的所有成员，这些成员是具有特定名称和敏锐的类型\r\n            \r\n","\r\n            Index into assembly definition list.\r\n            Undefined unless ":"\r\n            索引到汇编定义列表。\r\n            除非不确定\r\n","\r\n            Optional list of comma separated next variables at loop bottom.\r\n            ":"\r\n            可选的逗号列表在循环底部分开的下一个变量。\r\n            \r\n","\r\n            It is unknown if the ":"\r\n            未知是否\r\n","\r\n            Checks if the method is a property getter.\r\n            ":"\r\n            检查该方法是否是属性Getter。\r\n            \r\n","The byte array from which to copy the bytes.":"复制字节的字节数组。\r\n","\r\n            Convert given parameters to the indices to the given method's parameter list.\r\n            ":"\r\n            将给定的参数转换为索引到给定方法的参数列表。\r\n            \r\n","\r\n            Returns the reporting state for the supplied diagnostic id at the supplied position\r\n            in the associated syntax tree.\r\n            ":"\r\n            返回提供职位的提供诊断ID的报告状态\r\n            在关联的语法树中。\r\n            \r\n","\r\n            Type definitions containing any changes (includes added types).\r\n            ":"\r\n            包含任何更改的类型定义（包括添加类型）。\r\n            \r\n","\r\n            The symbol from the earlier compilation, or null if the edit represents an addition.\r\n            ":"\r\n            较早汇编中的符号，如果编辑表示添加，则为null。\r\n            \r\n","\r\n            Optional map from points to values of tasks to the underlying abstract value returned by the task.\r\n            Awaiting the task produces the task wrapped value from this map.\r\n            ":"\r\n            可选地图从任务的点到任务的基础抽象值。\r\n            等待任务会从此地图中产生任务包装值。\r\n            \r\n",". The value specified is not going to \r\n            affect correctness of analysis performed by compilers because all members needed for correctness \r\n            are going to be imported regardless. This setting can force compilation to import members that it \r\n            normally doesn't.\r\n            ":"。指定的值不会\r\n            影响编译器执行的分析的正确性，因为所有成员都需要正确性\r\n            无论如何都将被进口。此设置可以迫使汇编以导入成员\r\n            通常不会。\r\n            \r\n","\r\n            Indicates an \"out\" parameter.\r\n            ":"\r\n            指示一个“输出”参数。\r\n            \r\n","\r\n            Parses documentation comments as structured trivia and report diagnostics.\r\n            ":"\r\n            解析文档评论为结构化琐事并报告诊断。\r\n            \r\n","\r\n            Aliases that should be applied recursively to all dependent assemblies. \r\n            Empty array means {\"global\"} (all namespaces and types in the global namespace of the assembly are accessible without qualification).\r\n            Null if not applicable (the reference only has simple aliases).\r\n            ":"\r\n            应递归应用于所有依赖组件的别名。\r\n            空数组表示{“ global”}（在没有资格的情况下，可以访问汇编全局名称空间中的所有名称空间和类型）。\r\n            null如果不适用（参考只有简单的别名）。\r\n            \r\n"," if one was allocated to\r\n            track ":" 如果分配给\r\n            追踪\r\n","\r\n            The existence of a conversion does not necessarily imply that the conversion is valid.\r\n            For example, an ambiguous user-defined conversion may exist but may not be valid.\r\n            ":"\r\n            转换的存在并不一定意味着转换是有效的。\r\n            例如，可能存在模棱两可的用户定义转换，但可能无效。\r\n            \r\n","\r\n            Called when the walker visits a trivia syntax.  This method may be overridden if\r\n            subclasses want to handle the token.  Overrides should call back into this base method if\r\n            they want the children of this trivia syntax to be visited.\r\n            ":"\r\n            沃克访问琐事语法时称呼。如果此方法可能被覆盖\r\n            子类希望处理令牌。如果覆盖应返回此基础方法\r\n            他们希望访问这种琐事语法的孩子。\r\n            \r\n","The public key or public key token of the assembly.":"大会的公钥或公钥令牌。\r\n","Invalid module name specified in metadata module '{0}': '{1}'":"元数据模块中指定的无效模块名称'{0}'：'{1}'\r\n"," when a contextual keyword is used in a place in the syntax that gives it\r\n            its keyword meaning.\r\n            ":" 当上下文关键字在语法中的某个地方使用\r\n            它的关键字含义。\r\n            \r\n","\r\n            as the given ":"\r\n            作为给定的\r\n","\r\n            Represents the result of a host method that returns no value.\r\n            ":"\r\n            表示没有返回值的主机方法的结果。\r\n            \r\n","\r\n            Initializes a new JScript engine instance with the specified name and options.\r\n            ":"\r\n            初始化具有指定名称和选项的新JScript引擎实例。\r\n            \r\n"," and the bottom condition is ignored and exposed by this property.\r\n            This property should be null for all non-error cases.\r\n            ":" 底部条件被此属性忽略和暴露。\r\n            对于所有非纠正案件，该属性均应为无效。\r\n            \r\n"," when predicate is just a simple string check.  ":" 当谓词只是一个简单的字符串检查。\r\n","\r\n            The image kind (assembly or module) the reference refers to.\r\n            ":"\r\n            图像类（组件或模块）引用是指。\r\n            \r\n"," is constructed from\r\n            ":" 是由\r\n            \r\n","\r\n            Creates a new token from this token without leading or trailing trivia.\r\n            ":"\r\n            从这个令牌中创建一个新的令牌，而无需引导或拖延琐事。\r\n            \r\n","The names of the assemblies that contain the types with which to initialize the collection.":"包含用于初始化集合的类型的组件的名称。\r\n","\r\n            A set of additional non-code text files that can be used by analyzers.\r\n            ":"\r\n            一组分析仪可以使用的其他非代码文本文件。\r\n            \r\n","\r\n            C/C++ style calling convention for unmanaged methods. The call stack is cleaned up by the caller, \r\n            which makes this convention suitable for calling methods that accept extra arguments.\r\n            ":"\r\n            C/C ++样式的呼叫召集惯例。呼叫堆栈由呼叫者清理，\r\n            这使得适合接受额外论点的呼叫方法。\r\n            \r\n","\r\n            Releases unmanaged resources and performs other cleanup operations before the script engine is reclaimed by garbage collection.\r\n            ":"\r\n            在垃圾收集收回脚本引擎之前，释放了未管理的资源并执行其他清理操作。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# parameter initializer with equals value clause.\r\n             (2) VB parameter initializer with equals value clause.\r\n            ":"\r\n            当前用法：\r\n             （1）具有等值子句的C＃参数初始化器。\r\n             （2）具有等值子句的VB参数初始化器。\r\n            \r\n","\r\n            Represents a catch clause.\r\n            ":"\r\n            代表捕获子句。\r\n            \r\n","\r\n            Returns true if the bag has any diagnostics with effective Severity=Error. Also returns true for warnings or informationals\r\n            or warnings promoted to error via /warnaserror which are not suppressed.\r\n            ":"\r\n            如果包具有有效严重性=错误的任何诊断，则返回true。还可以返回警告或信息词\r\n            或警告通过 /warnaserror促进了错误的错误。\r\n            \r\n","\r\n            Abstract null value for ":"\r\n            抽象的零值\r\n","\r\n            Syntax that was analyzed to produce the operation.\r\n            ":"\r\n            分析以产生操作的语法。\r\n            \r\n","s that the entity or the operation can point to and the ":"实体或操作可以指向并\r\n","\r\n            Writes the full text of this trivia to the specified TextWriter.\r\n            ":"\r\n            将此琐事的全文写给指定的文本作者。\r\n            \r\n","\r\n            Compile a globbing character class of the form [...]. Returns true if\r\n            the character class was successfully compiled. False if there was a syntax\r\n            error. The starting character is expected to be directly after the '['.\r\n            ":"\r\n            编译形式的球形类别[...]。如果返回为true\r\n            角色类是成功编译的。错误如果有语法\r\n            错误。预计启动字符将直接在“ ['”之后。\r\n            \r\n","\r\n            The name of the culture to associate with the assembly. \r\n            Specify null, ":"\r\n            与集会交往的文化名称。\r\n            指定null，\r\n"," to expose a\r\n            ":" 暴露a\r\n            \r\n","\r\n            Context for a symbol action.\r\n            A symbol action can use a ":"\r\n            符号动作的上下文。\r\n            符号操作可以使用\r\n","\r\n            Gets or sets the maximum size of the document loader's cache.\r\n            ":"\r\n            获取或设置文档加载程序缓存的最大尺寸。\r\n            \r\n","Path of the file to which the compilation will be written.":"编译将要编写的文件的路径。\r\n","\r\n            Represents an object that enforces thread affinity for a Windows Script engine.\r\n            ":"\r\n            代表一个对Windows脚本引擎的线程亲和力的对象。\r\n            \r\n","\r\n            True if \"symbol is accessible, false otherwise.":"\r\n            true如果“可以访问符号，则为false否则。\r\n",", which tracks if the current data is for a reachable code path based on the predicate analysis.\r\n            Predicate analysis data is used to improve the preciseness of analysis when we can apply the ":"，它可以根据谓词分析跟踪当前数据是否适用于可及的代码路径。\r\n            谓词分析数据用于提高分析的准确性，当我们应用\r\n","\r\n            Class for emitting the switch jump table for switch statements with integral governing type\r\n            ":"\r\n            用于发射开关跳台的类，用于使用积分管理类型的开关语句\r\n            \r\n","\r\n            The following code defines a function that disposes an object if it implements\r\n            ":"\r\n            以下代码定义了一个函数，该函数如果对象实现了对象\r\n            \r\n","Edit and Continue is enabled.":"编辑并继续启用。\r\n","\r\n            A dynamic host object that implements ":"\r\n            实现的动态主机对象\r\n","\r\n            If a label points to a block that does nothing other than passing to block X,\r\n            replaces target label's block with block X.\r\n            ":"\r\n            如果标签指向一个块，除了传递到block x之外，没有其他作用，\r\n            用块X替换目标标签的块。\r\n            \r\n","\r\n              Looks up a localized string similar to A key in the pathMap is empty..\r\n            ":"\r\n              查找类似于Pathmap中的键的本地化字符串是空的。\r\n            \r\n","The script function that will handle the event.":"将处理事件的脚本功能。\r\n","\r\n            Attempts to start processing a compilation event for the given analyzer.\r\n            ":"\r\n            尝试开始处理给定分析仪的汇编事件。\r\n            \r\n","\r\n            A location of kind LocationKind.None. \r\n            ":"\r\n            Kind LocationKind的位置。\r\n            \r\n","\r\n            C# only. Indicates that per-module debug information (assembly reference aliases) is stored on another method, \r\n            whose token is specified.\r\n            ":"\r\n            仅C＃。指示每模块调试信息（汇编参考别名）存储在另一种方法上，\r\n            指定谁的令牌。\r\n            \r\n","\r\n            This method returns an empty string if the script engine is not executing script code.\r\n            The stack trace text format is defined by the script engine.\r\n            ":"\r\n            如果脚本引擎没有执行脚本代码，则此方法将返回一个空字符串。\r\n            堆栈跟踪文本格式由脚本引擎定义。\r\n            \r\n","\r\n            Disposes the writer.\r\n            ":"\r\n            处理作家。\r\n            \r\n"," property used in a ForEach statement.\r\n            ":" foreach语句中使用的属性。\r\n            \r\n","\r\n            Debug entry-point of the assembly. The method token is stored in the generated PDB stream.\r\n            \r\n            When a program launches with a debugger attached the debugger places the first breakpoint to the start of the debug entry-point method.\r\n            The CLR starts executing the static Main method of ":"\r\n            大会的调试入口点。方法令牌存储在生成的PDB流中。\r\n            \r\n            当程序启动带有调试器时，调试器将第一个断点放在调试入口点方法的开始。\r\n            CLR开始执行静态主方法\r\n","\r\n            Equivalent to a WindowsApplication, but with an extra bit set in the Portable Executable file\r\n            so that the application can only be run in an app container.\r\n            Also known as a \"Windows Store app\".\r\n            ":"\r\n            等效于WindowsApplication，但在便携式可执行文件中设置了额外的位置\r\n            因此，该应用程序只能在应用程序容器中运行。\r\n            也称为“ Windows Store应用程序”。\r\n            \r\n","\r\n            a simple Lisp-like immutable list.  Good to use when lists are always accessed from the head.\r\n            ":"\r\n            一个简单的类似LISP的不变列表。当始终从头部访问列表时，请使用良好的使用。\r\n            \r\n","\r\n            Determines whether this token is a descendant of a structured trivia.\r\n            ":"\r\n            确定该令牌是否是结构化琐事的后代。\r\n            \r\n"," method used in an await using statement.\r\n            ":" 等待使用语句中使用的方法。\r\n            \r\n","\r\n            Data encoding to use if the stream doesn't start with Byte Order Mark specifying the encoding.\r\n            ":"\r\n            如果流不在字节订单标记指定编码的字节订单标记，则使用的数据编码要使用。\r\n            \r\n","\r\n            Information that does not indicate a problem (i.e. not prescriptive).\r\n            ":"\r\n            没有表明问题的信息（即没有规定）。\r\n            \r\n","The concurrent map to augment.":"并发地图增强。\r\n","\r\n            The file might remain mapped (and read-locked) until this object is disposed.\r\n            The memory map is only created for large files. Small files are read into memory.\r\n            ":"\r\n            该文件可能会保持映射（并读取），直到处理该对象为止。\r\n            内存图仅是为大文件创建的。小文件被读取为内存。\r\n            \r\n"," with the contents of this file, or ":" 使用此文件的内容，或\r\n"," from this bag.\r\n            Return value of true doesn't guarantee that bound attributes or remaining decoded attribute data has also been initialized.\r\n            ":" 从这个袋子。\r\n            true的返回值不能保证绑定属性或剩余的解码属性数据也已初始化。\r\n            \r\n","\r\n            Signs the ":"\r\n            签名\r\n","The dynamic host object that provides the instantiation operation to perform.":"提供实例化操作的动态主机对象。\r\n","\r\n            True if the symbol is a source symbol added during EnC session. \r\n            The symbol may be declared in any source compilation in the current solution.\r\n            ":"\r\n            正确，如果该符号是ENC会话期间添加的源符号。\r\n            该符号可以在当前解决方案中的任何源汇编中声明。\r\n            \r\n","The trivia to insert before; a descendant of the root node.":"以前要插入的琐事；根节点的后代。\r\n","\r\n            Symbol is a method.\r\n            ":"\r\n            符号是一种方法。\r\n            \r\n","\r\n            Represents a case clause with range of values for comparison.\r\n            ":"\r\n            代表一个具有比较值范围的案例子句。\r\n            \r\n","\r\n            Returns true if the method should be imported. Returns false for private methods that are not\r\n            explicit interface implementations. For other methods, visibility and the value of\r\n            ":"\r\n            如果应导入该方法，则返回true。返回错误的私人方法\r\n            显式接口实现。对于其他方法，可见性和价值\r\n            \r\n","\r\n            Finds the node with the smallest ":"\r\n            找到最小的节点\r\n","\r\n            A fake containing assembly for an ErrorType object.\r\n            ":"一个伪造的错误对象包含汇编。\r\n            \r\n","True if the text can be passed to ":"如果文本可以传递给\r\n","using System.Linq\"":"使用system.linq”\r\n"," is null.\r\n            For reference types this checks if the ":" 一片空白。\r\n            对于参考类型，此检查是否\r\n","\r\n            True if this type has a non empty collection of SecurityAttributes or the System.Security.SuppressUnmanagedCodeSecurityAttribute.\r\n            ":"\r\n            如果此类型有非空的SecurityAttributes或System.Security.SuppressunManagedCodesecurityAttribute，则是正确的。\r\n            \r\n","\r\n            Initializer of the variable.\r\n            ":"\r\n            变量的初始化器。\r\n            \r\n","\r\n            The size of the optional header, which is required for executable files but not for object files. \r\n            This value should be zero for an object file. \r\n            ":"\r\n            可选标头的大小，这是可执行文件所需的，但对于对象文件而言不是所需的。\r\n            对于对象文件，此值应为零。\r\n            \r\n","\r\n            Workaround for https://github.com/dotnet/roslyn/issues/22736 (IPropertyReferenceExpressions in IAnonymousObjectCreationExpression are missing a receiver).\r\n            Gets the instance for the anonymous object being created that is being referenced by ":"\r\n            https://github.com/dotnet/roslyn/issues/22736的解决方法（IannymonymousobjectCreationexpression中的IpropertyReferexions缺少接收器）。\r\n            获取正在创建的匿名对象的实例\r\n"," of the constant, \r\n            or null if the type can't be determined (error).\r\n            ":"常数\r\n            或null如果无法确定类型（错误）。\r\n            \r\n","True if the reference name matches the definition identity.":"如果参考名称匹配定义身份，则为true。\r\n","\r\n            True if the string doesn't contain incomplete surrogates.\r\n            ":"\r\n            正确，如果字符串不包含不完整的替代物。\r\n            \r\n","\r\n            This form of signing occurs in memory using the ":"\r\n            这种签名形式使用\r\n","\r\n            Reprsents an empty statement.\r\n            ":"\r\n            代表一个空的语句。\r\n            \r\n"," provides a definition or value.\r\n            ":" 提供定义或价值。\r\n            \r\n","), contravariant (":"），违反（\r\n","\r\n            Gets a value that indicates whether the exception represents a fatal error.\r\n            ":"\r\n            获取一个指示异常是否表示致命错误的值。\r\n            \r\n"," of the document. A semantic model action\r\n            reports ":" 文档。语义模型动作\r\n            报告\r\n"," if the provided position is in a hidden region inaccessible to the user.\r\n            ":" 如果提供的位置是在隐藏的区域中无法访问的，则用户无法访问。\r\n            \r\n","The type symbol for the implementing type.":"实现类型的类型符号。\r\n","The output path to be removed":"要删除的输出路径\r\n","\r\n            Creates a compiled script.\r\n            ":"\r\n            创建一个编译的脚本。\r\n            \r\n",", the script engine replaces by-reference\r\n            arguments to script functions and delegates with host variables, allowing script code\r\n            to simulate output arguments if the script language does not support them natively.\r\n            ":"，脚本引擎取代了重音\r\n            脚本函数的论点和带有主机变量的委托，允许脚本代码\r\n            如果脚本语言不本地支持，则模拟输出参数。\r\n            \r\n","\r\n                Returns a value indicating whether at least one of the specified words occurs, using a case-insensitive ordinal comparison, within the specified text.\r\n            ":"\r\n                返回一个值，指示在指定的文本中使用对案例不敏感的序数比较，是否至少发生了指定单词之一。\r\n            \r\n"," argument can be a class identifier (CLSID) in standard\r\n            GUID format with braces (e.g., \"{0D43FE01-F093-11CF-8940-00A0C9054228}\").\r\n            ":" 参数可以是标准中的类标识符（CLSID）\r\n            带有牙套的GUID格式（例如，“ {0d43fe01-F093-11CF-8940-00A0C9054228}”）。\r\n            \r\n","\r\n            This method uses ":"\r\n            此方法使用\r\n","\r\n            Conversion is invalid.\r\n            ":"\r\n            转换无效。\r\n            \r\n","\r\n            An object specifying additional parameters on how parameters should be formatted.\r\n            ":"\r\n            指定有关如何格式化参数的其他参数的对象。\r\n            \r\n","\r\n            Optional format string of the interpolation.\r\n            ":"\r\n            插值的可选格式字符串。\r\n            \r\n"," are the same.\r\n            ":" 是相同的。\r\n            \r\n","\r\n            Argument was omitted in source but has a default value supplied automatically.\r\n            ":"\r\n            来源省略了参数，但自动提供了默认值。\r\n            \r\n"," to interrupt it.":" 打断它。\r\n","\r\n            Skips past a record.\r\n            ":"\r\n            跳过唱片。\r\n            \r\n","\r\n            The name usually (but not necessarily) includes an extension, e.g. \"MyModule.dll\".\r\n            \r\n            If ":"\r\n            该名称通常（但不一定）包括扩展名，例如“ mymodule.dll”。\r\n            \r\n            如果\r\n","\r\n            Disable analyzer action callbacks and diagnostic reporting for generated code.\r\n            Analyzer driver will not make callbacks into the analyzer for entities (source files, symbols, etc.) that it classifies as generated code.\r\n            Additionally, any diagnostic reported by the analyzer with location in generated code will not be reported.\r\n            ":"\r\n            禁用生成代码的分析仪操作回调和诊断报告。\r\n            Analyzer驱动程序不会将其归类为生成代码的实体（源文件，符号等）的分析仪进行回调。\r\n            此外，分析仪报告的任何诊断都不会报告生成代码中的位置。\r\n            \r\n","\r\n            Represents the compiler's analysis of whether an expression may be null\r\n            ":"\r\n            代表编译器对表达是否可能为null的分析\r\n            \r\n"," and\r\n               the value of each such key in ":" 和\r\n               每个这样的键的价值\r\n","\r\n            The current text instance.\r\n            ":"\r\n            当前的文本实例。\r\n            \r\n","\r\n            Tries to execute the additional file actions.\r\n            ":"\r\n            试图执行其他文件操作。\r\n            \r\n","\r\n            Loads and compiles a document with the specified category, generating cache data for accelerated recompilation.\r\n            ":"\r\n            加载并与指定类别一起编译文档，生成用于加速重新编译的缓存数据。\r\n            \r\n","\r\n              Looks up a localized string similar to interface.\r\n            ":"\r\n              查找类似于接口的本地化字符串。\r\n            \r\n"," is invoked only once per-analyzer.\r\n            3) ":" 仅调用一次每分析仪。\r\n            3）\r\n","False if the constant representation is too long (e.g. long string).":"false如果恒定表示太长（例如长字符串）。\r\n","\r\n            Gets the set of namespace names from this assembly.\r\n            ":"\r\n            从此组件中获取一组名称名称。\r\n            \r\n","\r\n            Gets the span.\r\n            ":"\r\n            获取跨度。\r\n            \r\n"," if there are no more words.\r\n            ":" 如果没有更多的话。\r\n            \r\n","\r\n            Deal with labeled blocks that were not added to the graph because labels were never found\r\n            ":"\r\n            处理未添加到图的标签块，因为从未找到标签\r\n            \r\n","\r\n            Returns the list of custom modifiers associated with the type reference.\r\n            ":"\r\n            返回与类型参考关联的自定义修饰符列表。\r\n            \r\n","\r\n            Expression of the interpolation.\r\n            ":"\r\n            插值的表达。\r\n            \r\n","\r\n            Creates a new compilation with the specified compilation options.\r\n            ":"\r\n            使用指定的汇编选项创建新的汇编。\r\n            \r\n","\r\n            Represents a range variable in a query expression.\r\n            ":"\r\n            表示查询表达式中的范围变量。\r\n            \r\n"," to perform a case-insensitive search, ":" 要执行不敏感的搜索，\r\n","\r\n            This option is used to help get build-to-build determinism even when the build\r\n            directory is different from one build to the next.  The prefix matching is case sensitive.\r\n            ":"\r\n            此选项用于帮助建立建立确定性，即使构建\r\n            目录从一个构建到另一个构建不同。前缀匹配对情况很敏感。\r\n            \r\n","\r\n            Body of the loop.\r\n            ":"\r\n            循环的主体。\r\n            \r\n","\r\n            The first event placed into a compilation's event queue.\r\n            ":"\r\n            第一个事件放入汇编的事件队列中。\r\n            \r\n","An identifier that can be used to reference this source text, must be unique within this generator":"可用于引用此源文本的标识符必须在此生成器中是唯一的\r\n","\r\n            The following code imports types from several core assemblies and uses\r\n            ":"\r\n            以下代码从几个核心组件中导入类型，并使用\r\n            \r\n","\r\n            Local variable that stores the enumerator instance (C#, VB).\r\n            ":"\r\n            存储枚举器实例（C＃，VB）的本地变量。\r\n            \r\n","The type of the node.":"节点的类型。\r\n","\r\n            Returns false if there are no more characters in the lex stream.\r\n            Otherwise, produces the next character in the stream and returns true.\r\n            ":"\r\n            如果LEX流中没有更多字符，则返回false。\r\n            否则，会在流中产生下一个字符并返回true。\r\n            \r\n","\r\n            Maps (containing syntax tree file name, reference string) of #r directive to a resolved metadata reference.\r\n            If multiple #r's in the same tree use the same value as a reference the resolved metadata reference is the same as well.\r\n            ":"\r\n            #R指令的地图（包含语法树文件名，参考字符串）到已解决的元数据参考。\r\n            如果同一树中的多个＃r使用与引用相同的值，则已解决的元数据参考也是相同的。\r\n            \r\n","\r\n            Bound attributes have been computed and stored on this bag.\r\n            ":"\r\n            绑定属性已计算并存储在此袋中。\r\n            \r\n","\r\n            Represents a lexical scope that declares imports.\r\n            ":"\r\n            代表声明进口的词汇范围。\r\n            \r\n","\r\n            Id/token of containing type, usually value from some enum.\r\n            For example from SpecialType enum.\r\n            I am not using SpecialType as the type for this field because\r\n            VB runtime types are not part of SpecialType.\r\n            \r\n            So, the implication is that any type ids we use outside of the SpecialType \r\n            (either for the VB runtime classes, or types like System.Task etc.) will need \r\n            to use IDs that are all mutually disjoint. \r\n            ":"\r\n            ID/token包含类型，通常从某些枚举中进行价值。\r\n            例如，来自专业典型枚举。\r\n            我不使用特色菜作为此字段的类型，因为\r\n            VB运行时类型不是专业类型的一部分。\r\n            \r\n            因此，含义是我们在专业类型之外使用的任何类型ID\r\n            （对于VB运行时类，或类型System.Task等类型）将需要\r\n            使用均无相关的ID。\r\n            \r\n","\r\n            Handles storage of items referenced via tokens in metadata (strings or Symbols).\r\n            When items are stored they are uniquely \"associated\" with fake token, which is basically \r\n            a sequential number.\r\n            IL gen will use these fake tokens during codegen and later, when actual token values are known\r\n            the method bodies will be patched.\r\n            To support these two scenarios we need two maps - Item-->uint, and uint-->Item.  (the second is really just a list).\r\n            ":"\r\n            处理通过元数据（字符串或符号）中令牌引用的项目的存储。\r\n            当物品存储时，它们与假令牌“相关”是唯一的，这基本上是\r\n            顺序数。\r\n            il gen将在Codegen期间和后来使用这些假令牌，然后在已知的实际令牌值时使用\r\n            方法主体将被修补。\r\n            为了支持这两种情况，我们需要两个地图 - 项目 - > uint和uint-> item。 （第二个实际上只是列表）。\r\n            \r\n","\r\n            Layout kind (Layout flags in metadata).\r\n            ":"\r\n            布局类（元数据中的布局标志）。\r\n            \r\n",".\r\n            - ":"。\r\n             - \r\n","\r\n            Determines whether this node or token has annotations of the specified kind.\r\n            ":"\r\n            确定该节点或令牌是否具有指定类型的注释。\r\n            \r\n","The power of two to multiply it by":"两者将其乘以\r\n","\r\n            Lazily populated dictionary from tree to analyzers that are suppressed on the entire tree.\r\n            ":"\r\n            从树到分析仪的懒惰的词典在整棵树上被抑制。\r\n            \r\n"," is returned for that type argument.\r\n            ":" 返回该类型参数。\r\n            \r\n","\r\n            Returns true if the reference was matched with the identity of the assembly being built.\r\n            ":"\r\n            如果将引用与正在构建的组件的身份匹配，则返回为TRUE。\r\n            \r\n","\r\n            Given a path to an assembly, finds the paths to all of its satellite\r\n            assemblies.\r\n            ":"\r\n            有了通往装配的途径，找到通往其所有卫星的途径\r\n            集会。\r\n            \r\n","\r\n            List of basic blocks which have a control flow branch (":"\r\n            具有控制流分支的基本块列表（\r\n","\r\n            Mapping of full name to ":"\r\n            将全名映射到\r\n"," in the compilation, along with a  \r\n            ":" 在汇编中，以及\r\n            \r\n",", or if parameterTypes or parameterRefKinds are default,\r\n            or if any of the types in parameterTypes are null.":"，或者如果参数型或参数refkinds默认为\r\n            或者，如果参数型中的任何类型为null。\r\n","\r\n            Returns true if the event is a WinRT type event.\r\n            ":"\r\n            如果事件是WinRT类型事件，则返回true。\r\n            \r\n","\r\n            Tries to execute code block actions for the given analyzer for the given declaration.\r\n            ":"\r\n            试图为给定的声明执行给定分析仪的代码块操作。\r\n            \r\n",".\r\n            Throws if no constructor argument exists or the argument cannot be converted to the type.\r\n            ":"。\r\n            如果不存在构造函数参数，则可以将参数转换为类型。\r\n            \r\n","\r\n            Gets the node's hit line collection.\r\n            ":"\r\n            获取节点的热门线系列。\r\n            \r\n","\r\n            Holds the current anonymous type instance being initialized if we're visiting an anonymous object initializer.\r\n            ":"\r\n            如果我们访问匿名对象初始化器，则保留当前的匿名类型实例。\r\n            \r\n"," reporting unreferenced ":" 报告未参考\r\n","\r\n            This function is overloaded with ":"\r\n            此功能超载\r\n"," within the region. \r\n            ":" 在区域内。\r\n            \r\n","\r\n            The name assigned to the Exponent operator.\r\n            ":"\r\n            分配给指数运算符的名称。\r\n            \r\n","\r\n            Imports a COM/ActiveX type from the specified server and exposes it to script code with\r\n            the specified options. The registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            从指定的服务器导入com/activex类型，并将其公开为脚本代码\r\n            指定的选项。注册类由程序化标识符（ProgID）指定。\r\n            \r\n"," property. Any information that was collected by the receiver can be\r\n            used to generate the final output.\r\n            \r\n            A new instance of ":" 财产。接收器收集的任何信息都可以是\r\n            用于生成最终输出。\r\n            \r\n            一个新实例\r\n","\r\n            Returns all top-level (not nested) types defined in the current module. \r\n            ":"\r\n            返回当前模块中定义的所有顶级（未嵌套）类型。\r\n            \r\n","\r\n            Adds selected types from an assembly to a host type collection.\r\n            ":"\r\n            从汇编中添加选定的类型到主机类型集合。\r\n            \r\n",", for a value type assignment operation.\r\n            This involves transfer of data for of all ":"，用于价值类型分配操作。\r\n            这涉及所有数据传输\r\n","\r\n            Parses an editor config file text located at the given path. No parsing\r\n            errors are reported. If any line contains a parse error, it is dropped.\r\n            ":"\r\n            解析位于给定路径上的编辑器配置文件文本。没有解析\r\n            报告错误。如果任何行包含解析错误，则将其删除。\r\n            \r\n","\r\n            Represents a C# return or a VB Return statement.\r\n            ":"\r\n            表示C＃返回或VB返回语句。\r\n            \r\n","\r\n            If the method is generic then this list contains the type parameters.\r\n            ":"\r\n            如果该方法是通用的，则此列表包含类型参数。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# null-coalescing assignment operation ":"\r\n            当前用法：\r\n             （1）C＃NULL-COALESCING分配操作\r\n"," argument selects the most recently created CPU profile.\r\n            ":" 参数选择最近创建的CPU配置文件。\r\n            \r\n"," on a basic block.\r\n            ":" 在基本块上。\r\n            \r\n","s for an ":"S\r\n","\r\n            if there are no attributes.\r\n            ":"\r\n            如果没有属性。\r\n            \r\n","\r\n            The alignment (in bytes) of sections when they are loaded into memory. \r\n            It must be greater than or equal to ":"\r\n            将截面的对齐（以字节）加载到内存中时。\r\n            它必须大于或等于\r\n","\r\n            Return tokens for all modified debuggable methods.\r\n            ":"\r\n            所有修改后的可辩论方法返回令牌。\r\n            \r\n","\r\n            An object specifying how generic symbols will be formatted.\r\n            ":"\r\n            指定如何格式化通用符号的对象。\r\n            \r\n"," is true, then it returns lowest descending node encompassing the given ":" 是真的，然后返回最低的降落节点包含给定的\r\n","\r\n            Casts an object to the specified host type.\r\n            ":"\r\n            将对象投入到指定的主机类型。\r\n            \r\n","\r\n            True if the child path is a child of the parent path.\r\n            ":"\r\n            如果儿童路径是父亲道路的孩子，则是真的。\r\n            \r\n","\r\n            True if and only if the conversion is indicated explicity by a cast operation in the source code.\r\n            ":"\r\n            当且仅当源代码中的铸件操作显示转换时，才是正确的。\r\n            \r\n","\r\n            Returns the token before this token in the syntax tree.\r\n            ":"\r\n            在语法树中的该令牌之前返回令牌。\r\n            \r\n","\r\n            Returns true if the parameter specifies a default value to be passed\r\n            when no value is provided as an argument to a call. The default value\r\n            can be obtained with the DefaultValue property.\r\n            ":"\r\n            如果参数指定要传递的默认值，则返回true\r\n            当不提供值作为呼叫的参数时。默认值\r\n            可以使用DefaultValue属性获得。\r\n            \r\n","\r\n            A binder that used a predetermine list of types and reader functions.\r\n            ":"\r\n            使用类型和读取器功能的预先确定列表的粘合剂。\r\n            \r\n","\r\n            True/False operator method used for short circuiting.\r\n            https://github.com/dotnet/roslyn/issues/27598 tracks exposing this information through public API\r\n            ":"\r\n            真/错误的操作员方法用于短路。\r\n            https://github.com/dotnet/roslyn/issues/27598跟踪通过公共API公开此信息\r\n            \r\n","\r\n            A set of helpers for extracting elements from metadata.\r\n            This type is not responsible for managing the underlying storage\r\n            backing the PE image.\r\n            ":"\r\n            一组用于从元数据中提取元素的帮助者。\r\n            这种类型不负责管理基础存储\r\n            支持PE图像。\r\n            \r\n","\r\n            Node value was updated.\r\n            ":"\r\n            节点值已更新。\r\n            \r\n","\r\n            Returns true if this is a unsuppressed diagnostic with an effective error severity.\r\n            ":"\r\n            如果这是具有有效误差严重性的不受干扰的诊断，则返回true。\r\n            \r\n","TypeDef handle of the implementing type.":"实施类型的Typedef句柄。\r\n","\r\n            Indicates that the diagnostic can be used for telemetry\r\n            ":"\r\n            表示诊断可用于遥测\r\n            \r\n",", either through caching the result or by using ":"，通过缓存结果或使用\r\n",",\r\n            so they can be reconstructed later by an ":"，，，，\r\n            因此，他们可以在以后重建\r\n","\r\n            Specifies that the script engine is to be given direct access to the exposed object if\r\n            possible. This option, when supported, suppresses marshaling and hands off the object\r\n            for script access without the host's involvement. It is currently supported only for\r\n            COM and ":"\r\n            指定脚本引擎应直接访问对暴露对象的直接访问\r\n            可能的。在支持时，此选项会抑制安排并移开物体\r\n            对于脚本访问，无主机的参与。目前仅支持\r\n            com和\r\n","\r\n            Extension methods associated with ConsList.\r\n            ":"\r\n            与共和党关联的扩展方法。\r\n            \r\n",") with aliases specified for an equivalent reference (":"）具有指定等效参考的别名（\r\n",", or #r directives.\r\n            ":"，或#R指令。\r\n            \r\n","\r\n               Looks up a localized string similar to Exception occurred with following context:\r\n            {0}.\r\n             ":"\r\n               查找类似于异常的本地化字符串，以下上下文：\r\n            {0}。\r\n             \r\n","\r\n            Current usage:\r\n             (1) C# query expression.\r\n             (2) VB query expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃查询表达式。\r\n             （2）VB查询表达式。\r\n            \r\n","\r\n            Search strategy is a simple linear probing which is chosen for it cache-friendliness.\r\n            Note that Free will try to store recycled objects close to the start thus statistically \r\n            reducing how far we will typically search.\r\n            ":"\r\n            搜索策略是一种简单的线性探测，为其选择了缓存友好性。\r\n            请注意，Free将尝试将回收的对象存储在距离附近的附近\r\n            降低我们通常会搜索的程度。\r\n            \r\n","An immutable copy of the contents of the sequence.":"序列内容的不变副本。\r\n","\r\n            A string that identifies what type of resource this is. Only valid if this.TypeId < 0.\r\n            ":"\r\n            标识哪种类型的资源的字符串。仅在此.Typeid <0时有效。\r\n            \r\n","\r\n            Creates a COM/ActiveX object of the specified type.\r\n            ":"\r\n            创建指定类型的com/activex对象。\r\n            \r\n","\r\n            Returns true if the conversion is an identity conversion.\r\n            ":"\r\n            如果转换是身份转换，则返回true。\r\n            \r\n","\r\n            A set of bits and bit ranges representing properties of the assembly. The value of ":"\r\n            一组代表组件属性的位和位范围。的价值\r\n","A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.":"与实例相关联的名称。当前，此名称仅在演示文稿上下文中用作标签，例如调试器用户界面。\r\n","\r\n            Backing implementation of ":"\r\n            支持实施\r\n","\r\n            Provides an in-memory ":"\r\n            提供内存\r\n","Path.":"小路。\r\n","\r\n            The last node in the list or default if the list is empty.\r\n            ":"\r\n            如果列表为空，则列表中的最后一个节点或默认值。\r\n            \r\n"," creation options.\r\n            ":" 创建选项。\r\n            \r\n","GetAwaiter":"Getawaiter\r\n",",\r\n            with a non-null ":"，，，，\r\n            与非挂钩\r\n"," to be tested,\r\n             2. ":" 要测试，\r\n             2。\r\n"," if the named member was found, ":" 如果找到了指定的成员，\r\n","\r\n            Referenced field.\r\n            ":"\r\n            引用字段。\r\n            \r\n","The node to remove.":"删除的节点。\r\n","\r\n            Arguments following a script file or separator \"--\". Null if the command line parser is not interactive.\r\n            ":"\r\n            脚本文件或分隔符的参数“  - ”。 null如果命令行解析器没有交互式。\r\n            \r\n","\r\n            Tries to execute the symbol end actions on the given namespace or type containing symbol for the process member symbol for the given analyzer.\r\n            ":"\r\n            试图在给定的名称空间上执行符号结束操作或给定分析仪的过程成员符号包含符号的类型。\r\n            \r\n"," is null the actual name written to metadata  \r\n            is derived from the name of the compilation (":" null是写给元数据的实际名称\r\n            是从汇编的名称中得出的（\r\n","\r\n            Copy of a value shared by one or more ":"\r\n            一个或多个共享价值的副本\r\n","\r\n            Synthesized local variables are either \r\n            1) Short-lived (temporary)\r\n               The lifespan of a temporary variable shall not cross a statement boundary (a PDB sequence point).\r\n               These variables are not tracked by EnC and don't have names. Only values less than 0 are considered\r\n               short-lived: new short-lived kinds should have a negative value.\r\n             \r\n            2) Long-lived\r\n               All variables whose lifespan might cross a statement boundary (include a PDB sequence point)\r\n               must be named in a build configuration that supports EnC. Some of them might need to be named in release, to support EE.\r\n               The kind of such local must be encoded in the name, so that we can retrieve it from debug metadata during EnC.\r\n            \r\n               The integer value of the kind must match corresponding Dev11/12 TEMP_KIND enum values for\r\n               compatibility with assemblies generated by the native compiler.\r\n            \r\n               Long-lived local variables must be assigned slots in source order.\r\n            ":"\r\n            合成的本地变量是\r\n            1）短暂的（临时）\r\n               临时变量的寿命不得越过语句边界（PDB序列点）。\r\n               这些变量不会通过enc跟踪，也没有名称。仅考虑小于0的值\r\n               短暂的：新的短寿命应该具有负值。\r\n             \r\n            2）长寿\r\n               所有寿命都可能越过语句边界的变量（包括一个PDB序列点）\r\n               必须在支持ENC的构建配置中命名。其中一些可能需要在发行版中命名，以支持EE。\r\n               这种本地的类型必须以名称编码，以便我们可以在ENC期间从Debug Metadata中检索它。\r\n            \r\n               类型的整数值必须匹配相应的dev11/12 temp_kind枚举值\r\n               与天然编译器生成的组件的兼容性。\r\n            \r\n               长寿命的本地变量必须按源顺序分配插槽。\r\n            \r\n","\r\n            Return a visitor for traversing all references to be emitted.\r\n            ":"\r\n            返回访客以遍历所有要发出的参考。\r\n            \r\n","Instance that that the method is invoked on, if any.":"实例说该方法被调用（如果有）。\r\n"," are mutually exclusive.\r\n            ":" 是互斥的。\r\n            \r\n","\r\n            The function groups types defined in the module by their fully-qualified namespace name.\r\n            The case-sensitivity of the grouping depends upon the provided StringComparer.\r\n            \r\n            The sequence is sorted by name by using provided comparer. Therefore, if there are multiple \r\n            groups for a namespace name (e.g. because they differ in case), the groups are going to be \r\n            adjacent to each other. \r\n            \r\n            Empty string is used as namespace name for types in the Global namespace. Therefore, all types \r\n            in the Global namespace, if any, should be in the first group (assuming a reasonable StringComparer).\r\n            ":"\r\n            功能组类型在模块中通过其完全合格的名称空间名称定义。\r\n            分组的病例敏感性取决于提供的StringComparer。\r\n            \r\n            该序列通过使用提供的比较来按名称对。因此，如果有多个\r\n            命名空间名称的组（例如，由于情况有所不同），这些组将是\r\n            彼此相邻。\r\n            \r\n            空字符串用作全局名称空间中类型的命名空间名称。因此，所有类型\r\n            在全局名称空间（如果有的话）中，应该在第一个组中（假设一个合理的字符串comparer）。\r\n            \r\n","\r\n            Value to test.\r\n            ":"\r\n            测试值。\r\n            \r\n","\r\n            Sequence of paths used to search for unqualified relative paths.\r\n            ":"\r\n            用于搜索非限定相对路径的路径序列。\r\n            \r\n","\r\n            Interprocedural analysis configuration parameters.\r\n            ":"\r\n            分解分析配置参数。\r\n            \r\n","\r\n            Stores the partial analysis state for operation block actions executed on the declaration.\r\n            ":"\r\n            存储在声明上执行的操作块操作的部分分析状态。\r\n            \r\n","\r\n            Kind of the synthetic local.\r\n            ":"\r\n            一种合成局部。\r\n            \r\n","Assembly signing not supported.":"组件签名不支持。\r\n","A MethodDef token or nil.":"MethodDef令牌或零。\r\n","\r\n            Temp variable created by the emitter.\r\n            ":"\r\n            发射极创建的温度变量。\r\n            \r\n","When set true, this will consider using outputs found in rooting markers that are composed of the sub-root.":"设置为true时，这将考虑使用由子根组成的生根标记中发现的输出。\r\n","\r\n            Represents an unrolled/lowered query operation.\r\n            For example, for a C# query expression \"from x in set where x.Name != null select x.Name\", the Operation tree has the following shape:\r\n              ITranslatedQueryExpression\r\n                IInvocationExpression ('Select' invocation for \"select x.Name\")\r\n                  IInvocationExpression ('Where' invocation for \"where x.Name != null\")\r\n                    IInvocationExpression ('From' invocation for \"from x in set\")\r\n            ":"\r\n            代表展开/降低的查询操作。\r\n            例如，对于c＃query表达式“ x in set where x.name！= null select x.name”，操作树具有以下形状：\r\n              itranslatedQuery表达\r\n                iinvocation expression（“选择x.name”的'选择'调用）\r\n                  iinvocation expression（'where'调用“ where x.name！= null”）\r\n                    IInvocationExpression ('From' invocation for \"from x in set\")\r\n            \r\n","Normalized XML document file path or null if not found.":"标准化XML文档文件路径或null（如果找不到）。\r\n","\r\n            The information is emitted to PDB in Custom Debug Information record for a method containing the lambda.\r\n            ":"\r\n            该信息将在包含lambda的方法的自定义调试信息记录中发射到PDB。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# property initializer with equals value clause.\r\n             (2) VB property initializer with equals value clause or AsNew clause. Multiple properties can be initialized with 'WithEvents' declaration with AsNew clause in VB.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃带有等价子句的属性初始化器。\r\n             （2）具有等价子句或ASNEW子句的VB属性初始化器。可以在VB中使用ASNEW子句的“ withest”声明初始化多个属性。\r\n            \r\n","Path: (0,0)-(5,6)":"路径：（0,0） - （5,6）\r\n","\r\n            An object reference with the id encode as 2 bytes.\r\n            ":"\r\n            具有ID编码为2个字节的对象引用。\r\n            \r\n"," keywords for ref-returning methods and properties/indexers.\r\n            Also includes the ":"用于参考方法和属性/索引器的关键字。\r\n            还包括\r\n","\r\n            Gets node at given node index. \r\n            This WILL force node creation if node has not yet been created.\r\n            ":"\r\n            在给定的节点索引处获取节点。\r\n            如果尚未创建节点，这将迫使节点创建。\r\n            \r\n","\r\n            Semantics associated with a ":"\r\n            与\r\n","\r\n            A method named CloseAsync that has no parameters and returns Task.\r\n            ":"\r\n            一个名为colleasync的方法，该方法没有参数并返回任务。\r\n            \r\n","\r\n            A type can me marked as a Windows runtime type in source by applying the WindowsRuntimeImportAttribute.\r\n            WindowsRuntimeImportAttribute is a pseudo custom attribute defined as an internal class in System.Runtime.InteropServices.WindowsRuntime namespace.\r\n            This is needed to mark Windows runtime types which are redefined in mscorlib.dll and System.Runtime.WindowsRuntime.dll.\r\n            These two assemblies are special as they implement the CLR's support for WinRT.\r\n            ":"\r\n            通过应用WindowsRuntimeImportAttribute，可以将我标记为Windows运行时类型的类型。\r\n            WindowsRuntimeImportAttribute是一种伪自定义属性，该属性定义为System.Runtime.InterOpservices.windowsruntime namespace中的内部类。\r\n            这是在mscorlib.dll和system.runtime.windowsruntime.dll中重新定义的Windows运行时类型所需的。\r\n            这两个组件是特殊的，因为它们实施了CLR对WINRT的支持。\r\n            \r\n"," falls completely within this span.\r\n            ":" 完全属于此跨度。\r\n            \r\n","\r\n            The default value is the name of the target type member. Note that this property has no\r\n            effect on the method binding algorithm. If a script-based call is bound to a method\r\n            that is exposed under a different name, it will be rejected even if an overload exists\r\n            that could receive the call.\r\n            ":"\r\n            默认值是目标类型成员的名称。请注意，此属性没有\r\n            对方法结合算法的影响。如果基于脚本的调用绑定到方法\r\n            它以不同的名称暴露，即使存在过载，它也会被拒绝\r\n            可以接到电话。\r\n            \r\n","\r\n            Returns the last trivia in the list.\r\n            ":"\r\n            返回列表中的最后一个琐事。\r\n            \r\n","\r\n            Zero or more named arguments that specify values for fields and properties of the attribute.\r\n            ":"\r\n            零或更多命名的参数，该参数指定属性的字段和属性值。\r\n            \r\n","\r\n            Root of this semantic model\r\n            ":"\r\n            这个语义模型的根\r\n            \r\n"," is set\r\n            to ":" 设置\r\n            至\r\n","\r\n            Gets the top-level nullability of the elements stored in the array. \r\n            ":"\r\n            获取存储在数组中的元素的顶级无效性。\r\n            \r\n","\r\n            Gets the diagnostics produced during the parsing stage.\r\n            ":"\r\n            获取在解析阶段产生的诊断。\r\n            \r\n","-1 if path is null.":"-1如果路径为空。\r\n","\r\n            The 'remove' accessor of the event.  Null only in error scenarios.\r\n            ":"\r\n            活动的“删除”登录器。仅在错误方案中null。\r\n            \r\n"," array containing the words to seek.\r\n            ":" 阵列包含要寻找的单词。\r\n            \r\n"," and a nullable flow state to a string representation.\r\n            ":" 以及一个可为字符串表示的无效流状态。\r\n            \r\n","\r\n            Classifies a conversion from ":"\r\n            从\r\n","\r\n            Initializes a new V8 script engine instance with the specified name.\r\n            ":"\r\n            用指定名称初始化新的V8脚本引擎实例。\r\n            \r\n","\r\n            Initializes a new writable ":"\r\n            初始化新的可写\r\n","\r\n            Not a primitive type.\r\n            ":"\r\n            不是原始类型。\r\n            \r\n","Contains the synthesized dynamic attributes of the local":"包含本地的合成动态属性\r\n"," tree\r\n            visiting each IOperation and its child IOperation nodes in depth-first order.\r\n            ":" 树\r\n            访问每个偶然的及其子女的ioperation节点。\r\n            \r\n","A rule object with data from the given XML node":"带有来自给定XML节点的数据的规则对象\r\n"," keyword before namespaces.\r\n            For example, \"namespace System\", rather than \"System\".\r\n            ":" 名称空间之前的关键字。\r\n            例如，“名称空间系统”，而不是“系统”。\r\n            \r\n","\r\n            Absolute path of the directory to place generated files in, or ":"\r\n            目录的绝对路径将生成的文件放入或\r\n","\r\n            The size of metadata stream (#- or #~). Aligned.\r\n            Aligned to ":"\r\n            元数据流的大小（＃ - 或＃〜）。对齐。\r\n            对齐\r\n","\r\n            An extra body for the local function, if both a block body and expression body are specified in source.\r\n            ":"\r\n            如果在源中指定了块主体和表达主体，则额外的局部功能。\r\n            \r\n","\r\n              Looks up a localized string similar to Type must be same as host object type of previous submission..\r\n            ":"\r\n              查找类似于类型的本地化字符串必须与以前提交的主机对象类型相同。\r\n            \r\n","\r\n            Local variable that stores the result of an await expression (the awaiter object).\r\n            The variable is assigned the result of a call to await-expression.GetAwaiter() and subsequently used \r\n            to check whether the task completed. Eventually the value is stored in an awaiter field.\r\n            \r\n            The value assigned to the variable needs to be preserved when remapping the IL offset from old method body \r\n            to new method body during EnC. If the awaiter expression is contained in an active statement and the \r\n            containing MoveNext method changes the debugger finds the next sequence point that follows the await expression \r\n            and transfers the execution to the new method version. This sequence point is placed by the compiler at \r\n            the immediately after the stloc instruction that stores the awaiter object to this variable.\r\n            The subsequent ldloc then restores it in the new method version.\r\n            \r\n            (VB, C#).\r\n            ":"\r\n            存储等待表达的结果（等待对象）的局部变量。\r\n            将变量分配给呼叫的结果等待expression.getawaiter（），然后使用\r\n            检查任务是否完成。最终，该值存储在等待的字段中。\r\n            \r\n            从旧方法主体重新映射IL偏移时，需要保留分配给变量的值\r\n            在ENC期间进入新方法主体。如果等待者的表达包含在主动语句中，并且\r\n            包含moveNEXT方法更改调试器发现下一个序列点，等待表达式\r\n            并将执行转移到新方法版本。该序列由编译器放置在\r\n            STLOC指令后的立即将等待员对象存储到此变量中。\r\n            然后，随后的LDLOC将其在新方法版本中还原。\r\n            \r\n            （VB，C＃）。\r\n            \r\n","The container to search for symbols within. If null then the enclosing declaration\r\n             scope around position is used.":"要搜索内部符号的容器。如果null，则封闭声明\r\n             使用位置周围的范围。\r\n","\r\n            We use this class so that we only allocate one object to support all continuations\r\n            required for cancellation handling, rather than a special closure and delegate for each one.\r\n            ":"\r\n            我们使用此课程，以便我们仅分配一个对象来支持所有连续性\r\n            取消处理所必需的，而不是为每个人的特殊关闭和委托。\r\n            \r\n",", we will have\r\n                 3 ":"， 我们将有\r\n                 3\r\n","\r\n            Adds a type to a host type collection.\r\n            ":"\r\n            将类型添加到主机类型集合中。\r\n            \r\n","\r\n            A collection of utility method for consuming custom debug info from a PDB.\r\n            ":"\r\n            用于消费PDB自定义调试信息的实用方法集合。\r\n            \r\n","EndInvoke":"终结\r\n","\r\n            Determines whether this token or any of its descendant trivia have any diagnostics on them. \r\n            ":"\r\n            确定该令牌或其任何后代琐事是否对其有任何诊断。\r\n            \r\n",", provided cancellation is expected per the previous\r\n             paragraph.":"，前面预计会取消\r\n             段落。\r\n","\r\n            Returns the number of elements in the given enumerable. A null enumerable is allowed and results in 0.\r\n            ":"\r\n            返回给定的枚举中的元素数量。允许枚举零，并导致0。\r\n            \r\n","\r\n            Determines whether the supplied ":"\r\n            确定是否提供\r\n","\r\n              Looks up a localized string similar to element is expected.\r\n            ":"\r\n              查找与元素类似的本地化字符串。\r\n            \r\n","\r\n            Indicates that the implementing type can be serialized via ":"\r\n            表示可以通过\r\n"," should be computed for the returned declaration infos.\r\n            If false, then ":" 应计算返回的声明信息。\r\n            如果是错误的，则\r\n"," the \"this\" parameter for non-static methods, ":" 非静态方法的“此”参数，\r\n","The document URI.":"文档URI。\r\n","\r\n            Specifies defaults for how type members are to be exposed to script code.\r\n            ":"\r\n            指定类型成员如何暴露于脚本代码的默认值。\r\n            \r\n","\r\n            \r\n            Note that any sources added during PostInitialization ":"\r\n            \r\n            请注意，在原始化期间添加的任何来源\r\n","The name of the dll that will do the tracking":"DLL的名称将进行跟踪\r\n","\r\n            List of member or collection initializer expressions in the object initializer, if any.\r\n            ":"\r\n            对象初始化器中的成员或集合初始化器表达式列表（如果有）。\r\n            \r\n","\r\n            Options specified for the analysis.\r\n            ":"\r\n            指定用于分析的选项。\r\n            \r\n","s that were \"merged\" to a single referenced assembly\r\n            associated with a key in the map.\r\n            The keys are a subset of keys from ":"s“合并”到一个引用的组件\r\n            与地图中的键关联。\r\n            钥匙是键的子集\r\n","\r\n            Returns the string representation of the tokens in this list, not including \r\n            the first token's leading trivia and the last token's trailing trivia.\r\n            ":"\r\n            返回此列表中令牌的字符串表示形式，不包括\r\n            第一个代币的主要琐事和最后一个令牌的拖尾琐事。\r\n            \r\n","\r\n            Dynamically indexed expression.\r\n            ":"\r\n            动态索引表达。\r\n            \r\n"," set,\r\n            i.e. ":" 放，\r\n            IE。\r\n"," during the generation pass this result represents.\r\n            ":" 在一代中，该结果代表。\r\n            \r\n","\r\n            None\r\n            ":"\r\n            没有任何\r\n            \r\n","\r\n            Aggregated copy analysis data tracked by ":"\r\n            汇总副本分析数据由\r\n"," are caught and converted to an emit diagnostic. Other exceptions are passed through.\r\n            ":"被捕获并转换为发射诊断。其他例外情况通过。\r\n            \r\n","\r\n            Analyze data-flow within a part of a method body. \r\n            ":"\r\n            在方法主体的一部分内分析数据流。\r\n            \r\n","\r\n              Looks up a localized string similar to Reported diagnostic has an ID '{0}', which is not a valid identifier..\r\n            ":"\r\n              查找类似于报告诊断的本地化字符串具有ID'{0}'，这不是有效的标识符。\r\n            \r\n","\r\n            This is the 'internal' representation of the ":"\r\n            这是\r\n","The length of any detected byte order marks.":"任何检测到的字节顺序标记的长度。\r\n","\r\n            True when the assembly contains a ":"\r\n            当组件包含一个\r\n","\r\n            The full paths to included files, or an empty array if there were errors.\r\n            ":"\r\n            包含文件的完整路径，如果有错误，则为空数组。\r\n            \r\n","\r\n            For information about the mapping between host members and script-callable properties\r\n            and methods, see\r\n            ":"\r\n            有关主机成员与脚本可爱属性之间映射的信息\r\n            和方法，请参阅\r\n            \r\n",".\r\n            Otherwise, it returns the outermost node encompassing the given ":"。\r\n            否则，它返回包含给定的最外面节点\r\n","\r\n            PERF: Cache from operation roots to their corresponding ":"\r\n            perf：从操作根到相应的缓存\r\n","the least-significant bit of the representable value":"代表值的最不重要的位\r\n"," objects for operations, symbol declarations, etc.\r\n            This factory also tracks analysis entities that share the same instance location (e.g. value type members).\r\n            NOTE: This factory must only be used from within an ":" 操作的对象，符号声明等。\r\n            该工厂还跟踪共享相同实例位置的分析实体（例如价值类型成员）。\r\n            注意：该工厂必须仅在\r\n","promise":"承诺\r\n","\r\n            Returns whether nullable annotations are enabled.\r\n            ":"\r\n            返回是否启用了无效的注释。\r\n            \r\n","\r\n            This form of signing occurs using the ":"\r\n            这种签名形式是使用\r\n","\r\n            Writes a Int16 value to the stream.\r\n            ":"\r\n            将INT16值写入流。\r\n            \r\n","\r\n            Represents the specialized property definition.\r\n            ":"\r\n            代表专业属性定义。\r\n            \r\n"," that was produced from parsing the ":" 这是通过解析\r\n","\r\n            Specifies that smart source document management is to be disabled. This option is\r\n            ignored if ":"\r\n            指定智能源文档管理将被禁用。此选项是\r\n            如果忽略了\r\n","\r\n            If the diagnostic was suppressed by an attribute, then returns that attribute.\r\n            Otherwise, returns null.\r\n            ":"\r\n            如果诊断被属性抑制，则返回该属性。\r\n            否则，返回null。\r\n            \r\n","\r\n            Interprocedural analysis predicate to decide whether interprocedural analysis can be skipped.\r\n            ":"\r\n            概要分析谓词决定是否可以跳过概要分析。\r\n            \r\n","The encoding to use if an encoding cannot be determined from the byte order mark.":"如果无法从字节顺序标记确定编码，则使用的编码。\r\n","\r\n            Return a task that completes when the driver is done producing diagnostics.\r\n            ":"\r\n            返回驱动程序完成诊断后完成的任务。\r\n            \r\n","\r\n            Returns the experimental features.\r\n            ":"\r\n            返回实验特征。\r\n            \r\n","\r\n            Represents an implicit/explicit reference to an instance.\r\n            ":"\r\n            表示对实例的隐式/明确引用。\r\n            \r\n","Indicates if resolved \"Target\" argument is in Roslyn's ":"指示罗斯林的解决“目标”论点是否存在\r\n","\r\n            Suppose {S -> {A, B, D}, T -> {E, F}} are all synthesized members in previous generations,\r\n            and {S' -> {A', B', C}, U -> {G, H}} members are generated in the current compilation.\r\n            \r\n            Where X matches X' via this matcher, i.e. X' is from the new compilation and \r\n            represents the same metadata entity as X in the previous compilation.\r\n            \r\n            Then the resulting collection shall have the following entries:\r\n            {S' -> {A', B', C, D}, U -> {G, H}, T -> {E, F}}\r\n            ":"\r\n            假设{s-> {a，b，d}，t-> {e，f}}都是上一代合成成员，\r\n            和{s' - > {a'，b'，c}，u-> {g，h}}成员在当前汇编中生成。\r\n            \r\n            其中x通过此匹配器匹配x'，即x'来自新汇编，\r\n            在上一个汇编中代表与x相同的元数据实体。\r\n            \r\n            然后由此产生的收集应有以下条目：\r\n            {s' - > {a'，b'，c，d}，u-> {g，h}，t-> {e，f}}\r\n            \r\n","The promise to convert to a task.":"承诺转换为任务。\r\n","\r\n            Checks if the given method implements ":"\r\n            检查给定方法是否实施\r\n"," for the\r\n            namespace or type referenced by the alias.\r\n            ":" 为了\r\n            别名引用的名称空间或类型。\r\n            \r\n","\r\n            with newer values from ":"\r\n            来自较新的值\r\n"," is its simple name.\r\n            \r\n             Unless ":" 是它的简单名称。\r\n            \r\n             除非\r\n","\r\n            Lazily populated dictionary from symbol to a bool indicating if it is a generated code symbol.\r\n            ":"\r\n            懒惰的字典从符号到布尔，指示它是生成的代码符号。\r\n            \r\n"," in the compilation\r\n            ":" 在汇编中\r\n            \r\n","The name of an enum member.":"枚举成员的名称。\r\n","\r\n            This field is static (shared by all instances of its declaring type).\r\n            ":"\r\n            该字段是静态的（由其声明类型的所有实例共享）。\r\n            \r\n","\r\n            Child operations.\r\n            ":"\r\n            儿童手术。\r\n            \r\n","\r\n            During script execution the script engine periodically invokes this callback to\r\n            determine whether it should continue. If the callback returns ":"\r\n            在脚本执行期间，脚本引擎定期调用此回调为\r\n            确定是否应该继续。如果回调返回\r\n","\r\n            There are a few different reasons the expression could\r\n            have not been analyzed:\r\n                1) The symbol producing the expression comes from\r\n                   a method that has not been annotated, such as\r\n                   invoking a C# 7.3 or earlier method, or a\r\n                   method in this compilation that is in a disabled\r\n                   context.\r\n                2) Nullable is completely disabled in this\r\n                   compilation.\r\n            ":"\r\n            表达可能有几种不同的原因\r\n            尚未分析：\r\n                1）产生表达的符号来自\r\n                   一种尚未注释的方法，例如\r\n                   调用C＃7.3或更早的方法或\r\n                   该汇编中的方法是禁用的\r\n                   语境。\r\n                2）无效的情况是完全禁用的\r\n                   汇编。\r\n            \r\n","\r\n            in non-error cases, or an ":"\r\n            在非错误案件中或\r\n","event":"事件\r\n","\r\n            Determines whether an object is a host type. This version is invoked if the specified\r\n            object can be used as a type argument.\r\n            ":"\r\n            确定对象是否是主机类型。如果指定了此版本\r\n            对象可以用作类型参数。\r\n            \r\n","Use in an exception filter to report a non-fatal error (by calling ":"在异常过滤器中使用非致命错误（通过调用\r\n","\r\n            Gets the script exception that caused the current exception to be thrown, or ":"\r\n            获取导致当前异常的脚本例外，或\r\n","someExpr?.Member":"someexpr？.Member\r\n","\r\n            When passed to a Windows Script engine, an instance of this class is marshaled as an empty\r\n            variant of type ":"\r\n            当传递给Windows脚本引擎时，该类的实例被称为空\r\n            类型的变体\r\n","The array to transform":"要转换的阵列\r\n","\r\n            Primitive type of the switch key\r\n            ":"\r\n            开关键的原始类型\r\n            \r\n"," if multiple files have the\r\n            ":" 如果多个文件具有\r\n            \r\n","\r\n            Track and report missing dispose violations on all paths (non-exception and exception paths).\r\n            Do not flag use of non-recommended dispose patterns that may cause\r\n            potential dispose leaks.\r\n            ":"\r\n            跟踪和报告缺少所有路径上的处置违规行为（非检查和异常路径）。\r\n            请勿标记使用可能导致的非推荐的处置模式\r\n            潜在处理泄漏。\r\n            \r\n","\r\n            Returns a new INamedTypeSymbol with the given element types and\r\n            (optional) element names, locations, and nullable annotations.\r\n            ":"\r\n            返回具有给定元素类型的新的InamedTypeSymbol，\r\n            （可选）元素名称，位置和无效注释。\r\n            \r\n","The FNV-1a hash code of the substring beginning at ":"substring的FNV-1A哈希代码从\r\n","\r\n            Assumes ":"\r\n            假设\r\n","\r\n            The kind of metadata a PE file image contains.\r\n            ":"\r\n            PE文件图像包含的元数据类型。\r\n            \r\n","\r\n            Name of the native entry point or null if not specified (the effective name is the same as the name of the target method).\r\n            ":"\r\n            如果未指定本机入口点或null的名称（有效名称与目标方法的名称相同）。\r\n            \r\n","\r\n            In the compiler layer, always prefer ":"\r\n            在编译器层中，总是喜欢\r\n","\r\n            Information associated with method body of a state machine MoveNext method.\r\n            ":"\r\n            与状态机的方法相关的信息MoveNext方法。\r\n            \r\n","\r\n            Returns true and the 1-based index of the type definition\r\n            if the type definition is recognized. Otherwise returns false.\r\n            The index is into the full metadata.\r\n            ":"\r\n            返回true和类型定义的基于1的索引\r\n            如果识别类型定义。否则返回false。\r\n            该索引进入了完整的元数据。\r\n            \r\n","s used by the stack spilling, etc. \r\n            Do not create instances of this type manually, use ":"S堆栈溢出，等等。\r\n            不要手动创建此类型的实例，请使用\r\n","\r\n            Represents an initialization for an object or collection creation.\r\n            ":"\r\n            代表对象或集合创建的初始化。\r\n            \r\n","\r\n            Mark current IL position with a label\r\n            ":"\r\n            用标签标记当前IL位置\r\n            \r\n","\r\n            Formats a symbol description as in a C# compiler error message.\r\n            ":"\r\n            格式化一个符号描述，如C＃编译器错误消息中的格式。\r\n            \r\n","\r\n            Gets all the diagnostics reported by the given ":"\r\n            获取给定的所有诊断\r\n","\r\n            Represents an expression operating on a type.\r\n            ":"\r\n            表示在类型上运行的表达式。\r\n            \r\n","\r\n            Ordinal (":"\r\n            顺序（\r\n","\r\n            Type is an interface.\r\n            ":"\r\n            类型是接口。\r\n            \r\n"," that descends an entire ":" 降下了整个\r\n","\r\n            If IsFixedSizeBuffer is true, the value between brackets in the fixed-size-buffer declaration.\r\n            If IsFixedSizeBuffer is false or there is an error (such as a bad constant value in source), FixedSize is 0.\r\n            Note that for fixed-size buffer declaration, this.Type will be a pointer type, of which\r\n            the pointed-to type will be the declared element type of the fixed-size buffer.\r\n            ":"\r\n            如果iSfixedSizeBuffer为True，则固定大小 - 缓冲器声明中的括号之间的值。\r\n            如果IsfixedSizeBuffer是错误的或存在错误（例如源中的不良常数值），则固定尺寸为0。\r\n            请注意，对于固定尺寸的缓冲区声明，此.Type将是指指针类型\r\n            指向类型将是固定尺寸缓冲区的声明元素类型。\r\n            \r\n"," structures.\r\n            ":" 结构。\r\n            \r\n","\r\n            Load the included rule set from the XML node\r\n            ":"\r\n            从XML节点加载随附的规则集\r\n            \r\n",". For example, compiler warning Id \"CS0649\".":"。例如，编译器警告ID“ CS0649”。\r\n","\r\n            Add method invoked on collection. Might be null for dynamic invocation.\r\n            ":"\r\n            添加在集合上调用的方法。对于动态调用可能是无效的。\r\n            \r\n","\r\n            Gets all annotations of the specified annotation kind.\r\n            ":"\r\n            获取指定注释类型的所有注释。\r\n            \r\n","\r\n            Creates a suppression of a ":"\r\n            抑制\r\n","The imported host type.":"导入的主机类型。\r\n","\r\n            Get the instance constructors for this type.\r\n            ":"\r\n            获取此类型的实例构造函数。\r\n            \r\n","\r\n            Determines if two FileLinePositionSpan objects are equal.\r\n            ":"\r\n            确定两个FilelinePositionSpan对象是否相等。\r\n            \r\n","true if parsed successfully, false otherwise":"如果成功解析，则为false，否则\r\n","\r\n            Context passed to an incremental generator when it has registered an output via ":"\r\n            上下文传递给增量发电机，当时它已经注册了输出\r\n","\r\n            Property initializers.\r\n            Each initializer is an ":"\r\n            属性初始化器。\r\n            每个初始化器是一个\r\n","\r\n            In some script languages the distinction between statements and expressions is\r\n            significant but ambiguous for certain syntactic elements. This method always\r\n            interprets the specified script code as an expression.\r\n            ":"\r\n            在某些脚本语言中，语句和表达式之间的区别是\r\n            对于某些句法元素而言，重要但模棱两可。总是这个方法\r\n            将指定的脚本代码解释为表达式。\r\n            \r\n","\r\n             and by all compilations created from it via calls to With- factory methods on ":"\r\n             并且通过通过调用与工厂方法的呼叫创建的所有汇编\r\n","\r\n            Loop continue label.\r\n            ":"\r\n            循环继续标签。\r\n            \r\n","\r\n            Options to the ":"\r\n            选项\r\n","\r\n            An integer tag that identifies what type of resource this is. If the value is less than 0, this.TypeName should be used instead.\r\n            ":"\r\n            一个整数标签，标识这是什么类型的资源。如果值小于0，则应使用此.Typename。\r\n            \r\n"," operator for non-object typed operands.\r\n            ":" 非对象打字操作数的操作员。\r\n            \r\n","Embedding PDB is not allowed when emitting metadata.":"发射元数据时不允许嵌入PDB。\r\n","\r\n            Version of the module content.\r\n            ":"\r\n            模块内容的版本。\r\n            \r\n","\r\n            Includes the name of the type containing the member.\r\n            ":"\r\n            包括包含成员的类型的名称。\r\n            \r\n","\r\n            A declarative specification of a security action applied to a set of permissions. Used by the CLR loader to enforce security restrictions.\r\n            Each security attribute represents a serialized permission or permission set for a specified security action.\r\n            The union of the security attributes with identical security action, define the permission set to which the security action applies.\r\n            ":"\r\n            适用于一组许可的安全措施的声明规范。由CLR加载程序使用来强制安全限制。\r\n            每个安全属性代表指定安全措施的序列化权限或权限集。\r\n            安全属性与相同的安全措施的联合，定义安全诉讼适用的权限集。\r\n            \r\n","\r\n            Determines where this trivia has annotations of the specified annotation kind.\r\n            ":"\r\n            确定该琐事在何处具有指定注释类型的注释。\r\n            \r\n","\r\n            Length of the fully-qualified name of this namespace.\r\n            ":"\r\n            该名称空间的完全合格名称的长度。\r\n            \r\n"," with yield break semantics.":" 带有屈服的语义。\r\n","\r\n            Current usage:\r\n             (1) C# switch section for one or more case clause and set of statements to execute.\r\n             (2) VB case block with a case statement for one or more case clause and set of statements to execute.\r\n            ":"\r\n            当前用法：\r\n             （1）一个或多个案例子句的C＃切换部分以及要执行的语句集。\r\n             （2）带有一个或多个案例子句的案例语句的VB案例块以及要执行的一组语句。\r\n            \r\n","\r\n            The original, non-standardized version of the SARIF format.\r\n            ":"\r\n            SARIF格式的原始非标准版本。\r\n            \r\n","\r\n              Current usage:\r\n              (1) C# type pattern.\r\n            ":"\r\n              当前用法：\r\n              （1）C＃类型模式。\r\n            \r\n","\r\n            Value to be unconditionally evaluated.\r\n            ":"\r\n            价值将无条件评估。\r\n            \r\n",".\r\n            When no global level is explicitly set, we use a heuristic:\r\n             ":"。\r\n            当没有明确设置全球层面时，我们会使用启发式方法：\r\n             \r\n","\r\n            A method named Close on a type that implements ":"\r\n            一种在实现的类型上命名的方法\r\n","\r\n            Metadata header size.\r\n            Includes:\r\n            - metadata storage signature\r\n            - storage header\r\n            - stream headers\r\n            ":"\r\n            元数据标头尺寸。\r\n            包括：\r\n             - 元数据存储签名\r\n             - 存储标头\r\n             - 流媒体\r\n            \r\n","\r\n            Represents a set of rules as specified in a ruleset file.\r\n            ":"\r\n            表示规则集文件中指定的一组规则。\r\n            \r\n","Object.GetHashCode":"object.gethashcode\r\n","\r\n            Represents an if statement in C# or an If statement in VB.\r\n            ":"\r\n            表示C＃中的IF语句或VB中的IF语句。\r\n            \r\n","\r\n            The name assigned to the Concatenate operator.\r\n            ":"\r\n            分配给连接操作员的名称。\r\n            \r\n","\r\n            Indicates if we this visitor needs to analyze predicates of conditions.\r\n            ":"\r\n            指示我们是否需要分析条件的谓词。\r\n            \r\n"," APIs. This is the default \r\n            form of signing and will be used when a strong name key is provided in a file on disk.\r\n            ":" 蜜蜂。这是默认\r\n            签名形式，将在磁盘上的文件中提供强名称密钥时使用。\r\n            \r\n","\r\n            This class is used to store the module serialization properties for a compilation.\r\n            ":"\r\n            该类用于存储模块序列化属性以进行编译。\r\n            \r\n","\r\n            Checks if the first module has a single row in Assembly table and that all other modules have none.\r\n            ":"\r\n            检查第一个模块是否在汇编表中有一行，并且所有其他模块都没有。\r\n            \r\n","\r\n            The node that contains the underlying node or token in its Children collection.\r\n            ":"\r\n            在其子女收藏中包含基础节点或令牌的节点。\r\n            \r\n"," if the node contains no hit lines.\r\n            ":" 如果该节点不包含命中线。\r\n            \r\n","If this is not a reduced extension method.":"如果这不是减少的扩展方法。\r\n"," state object to track partial analysis.\r\n            ":" 跟踪部分分析的状态对象。\r\n            \r\n","\r\n            Attribute constructor used to specify the attached class is a source generator that provides CSharp sources.\r\n            ":"\r\n            用于指定附件类的属性构造函数是提供CSHARP源的源生成器。\r\n            \r\n","\r\n            Create metadata module from a raw memory pointer to metadata directory of a PE image or .cormeta section of an object file.\r\n            Only manifest modules are currently supported.\r\n            ":"\r\n            创建从原始内存指针到对象文件的PE图像或.cormeta部分的元数据目录的元数据模块。\r\n            当前仅支持清单模块。\r\n            \r\n"," after\r\n            ":" 后\r\n            \r\n","\r\n            Statement executed if the condition is false.\r\n            ":"\r\n            如果条件为错误，则执行语句。\r\n            \r\n","\r\n            Given a node that represents a variable declaration, lambda or a closure scope return the position to be used to calculate \r\n            the node's syntax offset with respect to its containing member.\r\n            ":"\r\n            给定一个表示变量声明的节点，lambda或闭合范围返回要计算的位置\r\n            节点的语法相对于其包含成员的语法偏移。\r\n            \r\n","Extension Method":"扩展方法\r\n"," is allowed.\r\n            ":" 被允许。\r\n            \r\n","\r\n            Expression of the statement.\r\n            ":"\r\n            陈述的表达。\r\n            \r\n","\r\n            The wall clock time that this generator pass took to execute.\r\n            ":"\r\n            该发电机通行证执行的壁时钟时间。\r\n            \r\n","\r\n            Includes parameter default values in symbol descriptions.\r\n            ":"\r\n            在符号描述中包括参数默认值。\r\n            \r\n","\r\n            The path is treated as an opaque string, i.e. a case-sensitive hash is calculated.\r\n            ":"\r\n            该路径被视为不透明的字符串，即计算出病例敏感的哈希。\r\n            \r\n","\r\n            non-negative: Index into the array of all (explicitly and implicitly) referenced assemblies.\r\n            negative: ExplicitlyReferencedAssemblies.Count + RelativeAssemblyIndex is an index into the array of assemblies.\r\n            ":"\r\n            非负：索引到所有（明确和隐式）参考组件的数组中。\r\n            负面：equicatlyRefercrededAssemblies.Count + RelativeAsseMblyIndex是组件阵列的索引。\r\n            \r\n","Any diagnostics that were produced during generation":"世代生产的任何诊断\r\n","\r\n            Used to distinguish cases when attribute is applied with null value and when attribute is not applied.\r\n            For some well-known attributes, the latter case will return string stored in ":"\r\n            用于区分情况时，将属性应用于零值以及不应用属性时。\r\n            对于一些众所周知的属性，后一种情况将返回存储在\r\n"," we combine those files and treat them as a single \r\n            'logical' global config file. This type represents that combined file. \r\n            ":" 我们将这些文件结合在一起，将它们视为单个\r\n            “逻辑”全局配置文件。此类型表示该组合文件。\r\n            \r\n","\r\n            Append \"[Missing]\" to missing Metadata types (for testing).\r\n            ":"\r\n            将“ [缺失]”附加到缺少元数据类型（用于测试）上。\r\n            \r\n","\r\n            Cache of additional analyzer actions to be executed per symbol per analyzer, which are registered in symbol start actions.\r\n            We cache the tuple:\r\n              1. myActions: analyzer actions registered in the symbol start actions of containing namespace/type, which are to be executed for this symbol\r\n              2. childActions: analyzer actions registered in this symbol's start actions, which are to be executed for member symbols.\r\n            ":"\r\n            每个分析仪将执行的其他分析仪的缓存，这些操作将在符号启动操作中注册。\r\n            我们缓存元组：\r\n              1. Myactions：在包含名称空间/类型的符号启动操作中注册的分析仪操作，该符号将执行此符号\r\n              2.育儿：在此符号的启动操作中注册的分析仪操作，该操作应为成员符号执行。\r\n            \r\n"," will delay the creation\r\n            of the PE / PDB file until the compiler determines the compilation has succeeded.  This prevents\r\n            the compiler from deleting output from the previous compilation when a new compilation \r\n            fails. The ":" 会延迟创作\r\n            PE / PDB文件直到编译器确定编译成功。这可以防止\r\n            新汇编时，从上次汇编中删除输出的编译器\r\n            失败。这\r\n","\r\n            Represents a script object.\r\n            ":"\r\n            代表脚本对象。\r\n            \r\n","The second symbol to compare":"比较的第二个符号\r\n","\r\n            The file path of the ruleset file.\r\n            ":"\r\n            规则集文件的文件路径。\r\n            \r\n","\r\n            Gets the profile's ending timestamp in microseconds.\r\n            ":"\r\n            在微秒中获取配置文件的结尾时间戳。\r\n            \r\n"," represents a public key.":" 代表一个公钥。\r\n"," is lesser than or equals the value in ":" 比少或等于\r\n","\r\n            Maximum value of the case range.\r\n            ":"\r\n            案例范围的最大值。\r\n            \r\n","\r\n            Only defined if no errors were encountered.\r\n            The value to the '/keepalive' argument if one was specified, null otherwise.\r\n            ":"\r\n            仅当未遇到错误时定义。\r\n            如果指定了“/keepalive”参数的值，则否则为null。\r\n            \r\n","\r\n            The string representation of the nodes and tokens in this list, not including the first node or token's leading trivia \r\n            and the last node or token's trailing trivia.\r\n            ":"\r\n            此列表中节点和令牌的字符串表示形式，不包括第一个节点或令牌的领先琐事\r\n            还有最后一个节点或令牌的拖延琐事。\r\n            \r\n","\r\n            The base type for diagnostic suppressors that can programmatically suppress analyzer and/or compiler non-error diagnostics.\r\n            ":"\r\n            可以编程抑制分析仪和/或编译器非错误诊断的诊断抑制器的基本类型。\r\n            \r\n","\r\n            Task to compute HostCompilationStartAnalysisScope for per-compilation analyzer actions, i.e. AnalyzerActions registered by analyzer's CompilationStartActions.\r\n            ":"\r\n            计算每批准分析仪操作的hostCompilationStartanalysisscope，即分析仪的汇编策略注册的分析操作。\r\n            \r\n","Identity of the assembly reference that couldn't be resolved against metadata references explicitly specified to in the compilation.":"对于在编译中明确指定的元数据参考文献无法解决的组装参考的标识。\r\n",". Such a delegate is often useful in strongly typed contexts\r\n            because of\r\n            ":"。这样的代表通常在强烈键入的环境中很有用\r\n            因为\r\n            \r\n"," and creates a matcher that\r\n            matches the the given language. Returns null if the section name is\r\n            invalid.\r\n            ":" 并创建一个匹配项\r\n            匹配给定语言。返回null如果部分名称为\r\n            无效的。\r\n            \r\n"," is relative.\r\n            If ":" 是相对的。\r\n            如果\r\n",", or\r\n            - a ":"， 或者\r\n            - 一个\r\n","\r\n            Always false for VB events.\r\n            ":"\r\n            对于VB事件总是错误的。\r\n            \r\n","\r\n            Output parameter, never null:\r\n            A sequence with information about namespaces immediately contained within this namespace.\r\n            For each pair:\r\n              Key - contains simple name of a child namespace.\r\n              Value – contains a sequence similar to the one passed to this function, but\r\n                      calculated for the child namespace. \r\n            ":"\r\n            输出参数，永不零：\r\n            该命名空间中立即包含的有关名称空间的信息的序列。\r\n            每对：\r\n              键 - 包含儿童名称空间的简单名称。\r\n              值 - 包含一个类似于传递到此函数的序列，但是\r\n                      为子名称空间计算。\r\n            \r\n"," for System.Threading.Tasks.ValueTask/>\r\n            ":" 对于system.threading.tasks.valuetask/>\r\n            \r\n","\r\n            Current interprocedural operation call stack.\r\n            ":"\r\n            当前的外域操作呼叫堆栈。\r\n            \r\n","\r\n            Represents a C# or VB statement that consists solely of an expression.\r\n            ":"\r\n            代表仅由表达式组成的C＃或VB语句。\r\n            \r\n","The bytes, if available.":"字节，如果可用。\r\n","An optional name that specifies the server on which to create the object.":"一个可选的名称，该名称指定要在其上创建对象的服务器。\r\n","\r\n                    The ClearScript library supports dynamic C#-like type inference when invoking\r\n                    generic methods. However, some methods require explicit type arguments. To call\r\n                    such a method from script code, you must place the required number of\r\n                    ":"\r\n                    clearscript库在调用时支持动态C＃类型推理\r\n                    通用方法。但是，某些方法需要明确的类型参数。打电话\r\n                    从脚本代码中的这种方法，您必须放置所需的数量\r\n                    \r\n"," grouped by ":" 由\r\n","\r\n            Represents the results of running a generation pass over a set of ":"\r\n            代表运行一代通过的结果\r\n","\r\n            Local function symbol.\r\n            ":"\r\n            本地功能符号。\r\n            \r\n","\r\n            If this method can be applied to an object, returns the type of object it is applied to.\r\n            ":"\r\n            如果可以将此方法应用于对象，请返回其应用于对象的类型。\r\n            \r\n","\r\n            The types that were directly specified as constraints on the type parameter.\r\n            ":"\r\n            直接指定为类型参数的约束的类型。\r\n            \r\n","\r\n            Indicates the exact number of lines in source code file.\r\n            ":"\r\n            指示源代码文件中的确切行数。\r\n            \r\n"," is a null reference,\r\n            for nullable types this checks if the ":" 是一个零参考，\r\n            对于无效类型，请检查是否\r\n","\r\n            Exposes a host type to script code. The type is specified by type name and assembly name.\r\n            ":"\r\n            将主机类型公开为脚本代码。该类型由类型名称和汇编名称指定。\r\n            \r\n"," that can be checked to see if the PostInitialization should be cancelled.\r\n            ":" 可以检查一下以查看是否应取消后原始化。\r\n            \r\n","\r\n            Tolerate errors, producing a PE stream and a success result even in the presence of (some) errors. \r\n            ":"\r\n            容忍错误，即使存在（某些）错误，也会产生PE流和成功结果。\r\n            \r\n","\r\n            Gets the node within the subtree corresponding to the original tracked node.\r\n            Use TrackNodes to start tracking nodes.\r\n            ":"\r\n            获取与原始跟踪节点相对应的子树中的节点。\r\n            使用踪迹开始跟踪节点。\r\n            \r\n","VT_DISPATCH":"vt_dispatch\r\n","The length of valid data in the buffer.":"缓冲区中有效数据的长度。\r\n","\r\n            Determines whether the specified value is ":"\r\n            确定指定值是\r\n","The runtime assembly.":"运行时组件。\r\n","\r\n            Fetches a documentation comment for the given member ID.\r\n            ":"\r\n            获取给定成员ID的文档评论。\r\n            \r\n","\r\n            Returns the name with which the assembly should be output\r\n            ":"\r\n            返回应输出组件的名称\r\n            \r\n","A reference to the host variable that can be passed as a ":"对主机变量的引用，可以通过\r\n","\r\n            get the green node at the given slot\r\n            ":"\r\n            在给定的插槽处获取绿色节点\r\n            \r\n"," to add source to":" 将源添加到\r\n","The nodes to insert.":"节点要插入。\r\n"," that can provide semantic information about the ":" 可以提供有关的语义信息\r\n","\r\n            Returns true if the parameter is optional.\r\n            ":"\r\n            如果参数是可选的，则返回true。\r\n            \r\n"," is a predicate operation used in a condition.\r\n            ":" 是条件中使用的谓词操作。\r\n            \r\n"," is evaluated for null. If it is null, ":" 评估为null。如果是空的，\r\n","\r\n            Kind of unary operator\r\n            ":"\r\n            一种单一操作员\r\n            \r\n","The name of the assembly that contains the type to expose.":"包含要暴露类型的组件的名称。\r\n","\r\n              Looks up a localized string similar to Missing argument for '/keepalive' option..\r\n            ":"\r\n              查找类似于“/keetalive”选项的缺少参数的本地化字符串。\r\n            \r\n","\r\n            Full path of a log of file paths accessed by the compiler, or null if file logging should be suppressed.\r\n            ":"\r\n            编译器访问的文件路径日志的完整路径，或null如果应抑制文件记录。\r\n            \r\n","\r\n            Represents a logical location of the analyzer reference, not the content of the reference. \r\n            The content might change in time. A snapshot is taken when the compiler queries the reference for its analyzers.\r\n            ":"\r\n            代表分析仪参考的逻辑位置，而不是参考的内容。\r\n            内容可能会随时间变化。当编译器向其分析仪查询参考时，会拍摄快照。\r\n            \r\n","\r\n            Report declaration diagnostics and compile and synthesize method bodies.\r\n            ":"\r\n            报告声明诊断，并编译和合成方法主体。\r\n            \r\n","\r\n            Specifies the options for how generics are displayed in the description of a symbol.\r\n            ":"\r\n            指定在符号描述中显示仿制药的选项。\r\n            \r\n","\r\n            Lock for all data in this type.\r\n            ":"\r\n            锁定此类型中的所有数据。\r\n            \r\n","\r\n            The hash of the document content.\r\n            ":"\r\n            文档内容的哈希。\r\n            \r\n","\r\n            True if the method can only be overridden when it is also accessible. \r\n            ":"\r\n            如果方法也可以访问时，则只有该方法才能被覆盖。\r\n            \r\n","The result value.":"结果值。\r\n","\r\n            Specifies that script code is to have read-only access to the type member. This setting\r\n            only affects fields and writable properties.\r\n            ":"\r\n            指定脚本代码将仅读取对类型成员的访问。此设置\r\n            仅影响字段和可写的特性。\r\n            \r\n","\r\n            An index of the AssemblyData object in the input array. AssemblySymbol instance should \r\n            be checked for suitability against assembly described by that object, taking into account \r\n            assemblies described by other AssemblyData objects in the input array.\r\n            ":"\r\n            输入数组中的汇编对象的索引。 assemblysymbol实例应该\r\n            考虑到该物体描述的大会的适用性，请考虑\r\n            输入数组中其他汇编对象描述的组件。\r\n            \r\n","\r\n            Represents a creation of anonymous object.\r\n            ":"\r\n            代表匿名对象的创建。\r\n            \r\n","\r\n            True if the compilation has a reference that refers back to the assembly being compiled.\r\n            ":"\r\n            如果汇编的参考文献是指为组装汇编，则为true。\r\n            \r\n",". Such a\r\n            delegate is often useful in strongly typed contexts because of\r\n            ":"。这样的\r\n            代表通常在强烈键入的环境中很有用\r\n            \r\n","\r\n            Releases all resources used by the script engine.\r\n            ":"\r\n            释放脚本引擎使用的所有资源。\r\n            \r\n","\r\n            Attempts to start processing a symbol declaration for the given analyzer's syntax node and code block actions.\r\n            ":"\r\n            尝试开始处理给定分析仪的语法节点和代码块操作的符号声明。\r\n            \r\n","\r\n            Local declarations contained within the block.\r\n            ":"\r\n            块中包含的本地声明。\r\n            \r\n","The parent of this ruleset include":"此规则集的父母包括\r\n","The result if parsing was successful.":"结果如果解析成功。\r\n"," with the specified trivia inserted at the index.\r\n            ":" 指定的琐事插入索引。\r\n            \r\n","\r\n            Size of an object of this type. In bytes. If zero, the size is unspecified and will be determined at runtime.\r\n            ":"\r\n            此类对象的大小。在字节中。如果零，则大小未指定，并将在运行时确定。\r\n            \r\n","\r\n            For dispose analysis, we want to perform an optimistic points to analysis as we assume a disposable field is not likely to be re-assigned to a separate object in helper method invocations in Dispose.\r\n            For value content analysis, we want to perform a pessimistic points to analysis to be conservative and avoid missing out true violations.\r\n            ":"\r\n            对于处置分析，我们希望对分析执行一个乐观的点，因为我们假设一个可支配字段不太可能在处置中的辅助方法调用中重新分配给单独的对象。\r\n            对于价值内容分析，我们希望执行悲观的要点来分析以保持保守，并避免错过真正的违规行为。\r\n            \r\n"," if a URI was not specified at instantiation time.\r\n            ":" 如果在实例化时未指定URI。\r\n            \r\n"," to the specified\r\n            document, bypassing the configuration's document loader.\r\n            ":" 到指定的\r\n            文档，绕过配置的文档加载程序。\r\n            \r\n","The compilation whose references are being resolved.":"参考正在解决的汇编。\r\n","\r\n            An object specifying parameters that should not be applied when formatting parameters.\r\n            ":"\r\n            格式化参数时不应应用的对象指定参数。\r\n            \r\n"," items in the collection\r\n            ":" 集合中的项目\r\n            \r\n","The variable may or may not contain instances of a non-literal.":"该变量可能包含非文字的实例。\r\n","\r\n            The exception that is thrown when an error occurs during script execution or script object access.\r\n            ":"\r\n            当脚本执行或脚本对象访问期间发生错误时，抛出的异常。\r\n            \r\n","\r\n             int x = 3;\r\n             RunWithPredicate((a, b, c) => this.IsSomething(a, b, c, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithPredicate（（（a，b，c）=> this.issomething（a，b，c，x））;\r\n             \r\n"," is taken or not.\r\n            For non-conditional branches, this value is used to represent the return or throw value associated\r\n            with the ":" 是否被带走。\r\n            对于非条件分支，此值用于表示返回或投掷相关的值\r\n            与\r\n","\r\n            Implements the operator ==.\r\n            ":"\r\n            实现操作员==。\r\n            \r\n","\r\n            Gets the entry with the largest position less than or equal to supplied position.\r\n            ":"\r\n            获得最大位置的入口，小于或等于提供的位置。\r\n            \r\n","\r\n            Global warning report option\r\n            ":"\r\n            全球警告报告选项\r\n            \r\n","\r\n            Gets the text of the source document asynchronously.\r\n            ":"\r\n            不同步地获取源文档的文本。\r\n            \r\n","\r\n            Defines the max length for lambda/local function method call chain (call stack size) for interprocedural analysis.\r\n            This is done for performance reasons for analyzing methods with extremely large call trees.\r\n            ":"\r\n            定义lambda/局部功能方法的最大长度调用链（调用堆栈大小）进行概要分析。\r\n            这是出于表现原因而进行的，以分析非常大的呼叫树的方法。\r\n            \r\n","\r\n            Get diagnostic severity setting for a given diagnostic identifier in a given tree.\r\n            ":"\r\n            在给定的树上获得给定诊断标识符的诊断严重程度设置。\r\n            \r\n","\r\n            Remove the specified ouput from the dependency graph for the given source file\r\n            ":"\r\n            从给定源文件的依赖关系图中删除指定的ouput\r\n            \r\n","\r\n            Enum representing the current state of attribute binding/decoding for a corresponding CustomAttributeBag.\r\n            ":"\r\n            代表相应的自定义tributebag的属性绑定/解码的当前状态的枚举。\r\n            \r\n","Span to get declarations.":"跨越声明。\r\n","The delegate's return value type.":"代表的退货价值类型。\r\n","\r\n            Return full metadata handle of the module reference, adding\r\n            the reference to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回模块参考的完整元数据句柄，添加\r\n            如果丢失了这一代的索引的引用。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n                Returns the words contained in the specified text, delimiting based on the specified options.\r\n            ":"\r\n                返回指定文本中包含的单词，根据指定选项进行划界。\r\n            \r\n","\r\n            Specifies how the return value is marshalled when the method is called from unmanaged code.\r\n            ":"\r\n            指定在未托管代码调用该方法时如何编辑返回值。\r\n            \r\n","\r\n            Get the culture specific text of the message.\r\n            ":"\r\n            获取消息的文化特定文本。\r\n            \r\n"," that are derived\r\n            from the source document content, and which can be computed asynchronously.\r\n            ":" 得出\r\n            从源文档内容，可以异步计算出来。\r\n            \r\n","\r\n            Populate EventMap table.\r\n            ":"\r\n            填充事件图表。\r\n            \r\n","Formatting rules - null implies ":"格式规则 - 无效\r\n","One language to which the generator applies.":"发电机应用的一种语言。\r\n","\r\n            This class contains utility functions to encapsulate launching and logging for the Tracker\r\n            ":"\r\n            此类包含实用程序功能，以封装跟踪器的启动和记录\r\n            \r\n","\r\n            The time for the oldest file we have seen\r\n            ":"\r\n            我们看到的最古老的文件的时间\r\n            \r\n"," is exposed under\r\n            the name \"host\"\r\n            (see ":" 暴露在下\r\n            名称“主持人”\r\n            （看\r\n","The value to shift":"转移的价值\r\n",", \r\n            immediately terminates the process without running any pending ":"，，，，\r\n            立即终止该过程而无需进行任何待处理\r\n","\r\n            Get all the errors within the syntax tree associated with this object. Includes errors\r\n            involving compiling method bodies or initializers, in addition to the errors returned by\r\n            GetDeclarationDiagnostics.\r\n            ":"\r\n            在与此对象关联的语法树中获取所有错误。包括错误\r\n            除了返回的错误外，还涉及编译方法的身体或初始化器\r\n            getDeclarationDiagnostics。\r\n            \r\n","\r\n            Note that we do not store the token directly, we just store enough information to reconstruct it.\r\n            This allows us to reuse nodeOrToken as a token's parent.\r\n            ":"\r\n            请注意，我们不直接存储令牌，我们只是存储足够的信息来重建它。\r\n            这使我们可以将NodeOrtoken重复使用为代币的父母。\r\n            \r\n","\r\n            Gets a value indicating whether the symbol is sealed.\r\n            ":"\r\n            获取一个指示符号是否密封的值。\r\n            \r\n","\r\n            Defines options for creating a V8 CPU profile.\r\n            ":"\r\n            定义创建V8 CPU配置文件的选项。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified old node replaced with a new node.\r\n            ":"\r\n            创建一个新的节点树，指定的旧节点被新节点替换。\r\n            \r\n","\r\n            Current evaluation stack depth.\r\n            ":"\r\n            当前评估堆栈深度。\r\n            \r\n","\r\n            The candidate symbol must be a WithEvents member, but it was not. \r\n            ":"\r\n            候选符号必须是事件成员，但事实并非如此。\r\n            \r\n","\r\n            Initializes a new host type collection with types from one or more assemblies.\r\n            ":"\r\n            初始化一个新的主机类型集合，其中一个或多个组件的类型。\r\n            \r\n",". \r\n            \r\n            Source locations can also be provided through ":"。\r\n            \r\n            源位置也可以通过\r\n","The unbound action delegate.":"无限动作代表。\r\n","\r\n              Looks up a localized string similar to Invalid public key token..\r\n            ":"\r\n              查找类似于无效的公钥令牌的本地化字符串。\r\n            \r\n","Reference identity to resolve.":"参考身份以解决。\r\n","\r\n            The first standardized version of the SARIF format.\r\n            ":"\r\n            SARIF格式的第一个标准化版本。\r\n            \r\n","\r\n            Base class for all the predicated analysis data.\r\n            It tracks ":"\r\n            所有谓语分析数据的基类。\r\n            它跟踪\r\n","Note that any of the child operation nodes may be null.":"请注意，任何儿童操作节点都可能为null。\r\n","\r\n            Realizes the array and disposes the builder in one operation.\r\n            ":"\r\n            意识到阵列并在一个操作中处理构建器。\r\n            \r\n","\r\n             Enables or disables assembly table usage.\r\n             ":"\r\n             启用或禁用组装表用法。\r\n             \r\n","\r\n            Source names may have to be shorter still to accommodate mangling.\r\n            Used for event names, field names, property names, field names, method def names,\r\n            member ref names, type def (full) names, type ref (full) names, exported type\r\n            (full) names, parameter names, manifest resource names, and unmanaged method names\r\n            (ImplMap table).\r\n            \r\n            See CLI Part II, section 22.\r\n            ":"\r\n            源名称可能必须较短才能容纳混乱。\r\n            用于事件名称，字段名称，属性名称，字段名称，方法def名称，\r\n            成员参考名称，类型def（完整）名称，类型ref（完整）名称，导出类型\r\n            （完整）名称，参数名称，清单资源名称和不受管理的方法名称\r\n            （Inglmap表）。\r\n            \r\n            参见CLI第二部分，第22节。\r\n            \r\n","\r\n            Right operand.\r\n            ":"\r\n            正确的操作数。\r\n            \r\n","Matching assembly ref token or nil (0)":"匹配的组件参考令牌或零（0）\r\n","\r\n            Determines whether this node or token (or any sub node, token or trivia) as annotations.\r\n            ":"\r\n            确定该节点或令牌（或任何子节点，令牌或琐事）是注释。\r\n            \r\n","\r\n            Context for a compilation action or compilation end action.\r\n            A compilation action or compilation end action can use a ":"\r\n            汇编行动或汇编最终动作的上下文。\r\n            汇编操作或汇编最终操作可以使用\r\n","\r\n            A managed executable without a specified bitness\r\n            ":"\r\n            无指定位的托管执行\r\n            \r\n","\r\n            Returns true if any branches were optimized (that does not include shortening)\r\n            We need this because optimizing a branch may result in unreachable code that needs to be eliminated.\r\n            \r\n            === Example:\r\n            \r\n            x = 1;\r\n            \r\n            if (blah)\r\n            {\r\n                global = 1;\r\n            }\r\n            else\r\n            {\r\n                throw null;\r\n            }\r\n            \r\n            return x;\r\n            \r\n            === rewrites into\r\n            \r\n            push 1;\r\n            \r\n            if (blah)\r\n            {\r\n                global = 1;\r\n                ret; \r\n            }\r\n            else\r\n            {\r\n                throw null;\r\n            }\r\n            \r\n            // this ret unreachable now! \r\n            // even worse - empty stack is assumed thus the ret is illegal.\r\n            ret;    \r\n            \r\n            ":"\r\n            如果优化了任何分支（不包括缩短），则返回为TRUE\r\n            我们需要这一点，因为优化分支机构可能会导致无法消除的代码。\r\n            \r\n            ===示例：\r\n            \r\n            x = 1;\r\n            \r\n            如果（等等）\r\n            {\r\n                全局= 1;\r\n            }\r\n            别的\r\n            {\r\n                扔空；\r\n            }\r\n            \r\n            返回x;\r\n            \r\n            ===重写\r\n            \r\n            推1;\r\n            \r\n            如果（等等）\r\n            {\r\n                全局= 1;\r\n                ret;\r\n            }\r\n            别的\r\n            {\r\n                扔空；\r\n            }\r\n            \r\n            //现在无法实现这个问题！\r\n            //更糟糕的是 - 假定空堆栈，因此RET是非法的。\r\n            ret;\r\n            \r\n            \r\n","\r\n            Creates a new list with the specified node added to the end.\r\n            ":"\r\n            创建一个新列表，其中指定的节点添加到末尾。\r\n            \r\n","The target AssemblySymbol instance.":"目标组件符号实例。\r\n","Type must be same as host object type of previous submission.":"类型必须与先前提交的主机对象类型相同。\r\n","True if the resource is public.":"如果资源是公开的，则为是真的。\r\n","\r\n            An expression that can be represented directly in metadata.\r\n            ":"\r\n            可以直接在元数据中表示的表达式。\r\n            \r\n","\r\n            Result of binding an AssemblyRef to an AssemblyDef. \r\n            ":"\r\n            将汇编与汇编绑定绑定的结果。\r\n            \r\n","\r\n            Gets the numeric identifier of the document containing the node's script function.\r\n            ":"\r\n            获取包含节点脚本函数的文档的数字标识符。\r\n            \r\n","\r\n            The nullable analysis feature is disabled.\r\n            ":"\r\n            无效的分析功能被禁用。\r\n            \r\n","\r\n            Current usage: C# discard pattern\r\n            ":"\r\n            当前用法：C＃丢弃模式\r\n            \r\n","The current trivia syntax that the walker is visiting.":"沃克正在访问的当前琐事语法。\r\n","\r\n            Compilation events corresponding to source tree, that are not completely processed for all analyzers.\r\n            Events are dropped as and when they are fully processed by all analyzers.\r\n            ":"\r\n            与源树相对应的汇编事件，这些事件并未完全处理所有分析仪。\r\n            当所有分析仪全面处理事件时，事件被删除。\r\n            \r\n","The argument to pass to the unbound function delegate.":"传递到未结合函数委托的论点。\r\n","\r\n            The absolute span of this node in characters, not including its leading and trailing trivia.\r\n            ":"\r\n            该节点在字符中的绝对跨度，不包括其领先和尾随的琐事。\r\n            \r\n"," that represents them.\r\n            ":" 代表他们。\r\n            \r\n","\r\n            Guard associated with the pattern case clause.\r\n            ":"\r\n            与模式案例子句相关的后卫。\r\n            \r\n"," if successful.":" 如果成功。\r\n","\r\n            Write tracking logs for all contexts and threads. \r\n            ":"\r\n            为所有上下文和线程编写跟踪日志。\r\n            \r\n",". If an exception is thrown, it is caught and passed to\r\n            ":"。如果抛出了例外，则将其捕获并传递给\r\n            \r\n","\r\n            An .exe with an entry point but no console.\r\n            ":"\r\n            带有入口点但没有控制台的.exe。\r\n            \r\n","\r\n            NOTE: Concurrent Adding to the bag is supported, but concurrent Clearing is not.\r\n                  If one thread adds to the bug while another clears it, the scenario is \r\n                  broken and we cannot do anything about it here.\r\n        ":"\r\n            注意：同时添加袋子是支持的，但并非清除却不是。\r\n                  如果一个线程在错误清除时添加到错误，则场景为\r\n                  破碎了，我们在这里无法做任何事情。\r\n        \r\n","The trivia element to replace.":"要替换的琐事元素。\r\n"," instances return \"vbs\" for this property.\r\n            ":" 实例返回此属性的“ VBS”。\r\n            \r\n","\r\n            Returns a NamespaceSymbol representing the global (root) namespace, with\r\n            module extent, that can be used to browse all of the symbols defined in this module.\r\n            ":"\r\n            返回代表全局（root）名称空间的名称pacesembol，带有\r\n            模块范围，可用于浏览本模块中定义的所有符号。\r\n            \r\n","\r\n            Kinds of synthetic local references.\r\n            ":"\r\n            合成的本地参考。\r\n            \r\n","\r\n            The candidate symbol existed, but was not allowed to be referenced. For example, the\r\n            \"get_XXX\" method used to implement a property named \"XXX\" may not be directly\r\n            referenced. Similarly, the type \"System.Void\" can not be directly referenced.\r\n            Also occurs if \"this\" is used in a context (static method or field initializer)\r\n            where \"this\" is not available.\r\n            ":"\r\n            候选符号存在，但不允许引用。例如，\r\n            用于实现名为“ xxx”属性的“ get_xxx”方法可能不是直接的\r\n            引用。同样，不能直接引用“系统。void”类型。\r\n            如果在上下文中使用“此”（静态方法或字段初始器），也会发生。\r\n            没有“此”的地方。\r\n            \r\n","\r\n            If this field represents a tuple element, returns a corresponding default element field.\r\n            Otherwise returns null.\r\n            ":"\r\n            如果此字段代表元组元素，请返回相应的默认元素字段。\r\n            否则返回null。\r\n            \r\n","\r\n            Converts a symbol to an array of string parts, each of which has a kind. Useful\r\n            for colorizing the display string.\r\n            ":"\r\n            将符号转换为一组串件，每个零件都有一种。有用\r\n            用于着色显示字符串。\r\n            \r\n","\r\n            The new references.\r\n            ":"\r\n            新参考。\r\n            \r\n","IList>int>":"ilist> int>\r\n","\r\n            Executes script code with an associated document name.\r\n            ":"\r\n            用关联的文档名称执行脚本代码。\r\n            \r\n",",\r\n            which can be created using ":"，，，，\r\n            可以使用\r\n","\r\n            For testing. Very expensive.\r\n            ":"\r\n            用于检测。非常贵。\r\n            \r\n","\r\n            The value of the argument.\r\n            ":"参数的价值。\r\n            \r\n","The type whose members are to be made accessible from script code.":"可以从脚本代码访问其成员的类型。\r\n","\r\n            Gets the sample's timestamp in microseconds.\r\n            ":"\r\n            在微秒中获取样品的时间戳。\r\n            \r\n","The count of elements to copy.":"要复制的元素计数。\r\n"," is empty or contains a module that doesn't own its image (was created via ":" 是空的或包含一个不拥有其图像的模块（是通过\r\n","Token allowing cancellation of request.":"令牌允许取消请求。\r\n","\r\n            Abstract analysis domain for a ":"\r\n            抽象分析域\r\n"," for this syntax node. CommonSyntaxReferences can be used to\r\n            regain access to a syntax node without keeping the entire tree and source text in\r\n            memory.\r\n            ":" 对于此语法节点。 CommonSyntaxReferences可以用来\r\n            重新获得对语法节点的访问，而无需保留整个树和源文本\r\n            记忆。\r\n            \r\n","\r\n            Returns true if this is a bool returning static method whose name starts with \"IsNull\"\r\n            with a single parameter whose type is not a value type.\r\n            For example, \"static bool string.IsNullOrEmpty()\"\r\n            ":"\r\n            如果这是一个布尔返回静态方法，则返回true，其名称以“ isnull”开头\r\n            使用单个参数，其类型不是值类型。\r\n            例如，“ static bool string.isnullortement（）”\r\n            \r\n"," if this assignment contains a 'lifted' binary operation.\r\n            ":" 如果此作业包含“抬高”二进制操作。\r\n            \r\n","\r\n            Underlying stream\r\n            ":"\r\n            基础流\r\n            \r\n","Cannot serialize type '{0}'.":"不能序列化类型'{0}'。\r\n","\r\n            Returns true if the nested type should be imported. \r\n            ":"\r\n            如果应导入嵌套类型，则返回true。\r\n            \r\n","\r\n            Operation producing a value to be locked.\r\n            ":"\r\n            操作产生要锁定的值。\r\n            \r\n","\r\n            Create a new instance of this diagnostic with the suppression info changed.\r\n            ":"\r\n            创建此诊断的新实例，并更改了抑制信息。\r\n            \r\n","\r\n            Invariant.\r\n            ":"\r\n            不变。\r\n            \r\n","\r\n            An attribute that is placed on each method with a 'methodimpl\" aka \".override\" in metadata.\r\n            ":"\r\n            在元数据中使用“ methodimpl”。\r\n            \r\n","\r\n              Looks up a localized string similar to Analyzer attempted to register an 'async' action, which is not supported..\r\n            ":"查找类似于试图注册“异步”操作的分析仪类似的本地化字符串，该操作不支持。\r\n            \r\n","The metadata name of generic types includes the \"`1\", \"`2\" etc. suffix that\r\n            indicates the number of type parameters (it does not include, however, names of\r\n            containing types or namespaces). ":"通用类型的元数据名称包括“ 1”，'2“等。后缀\r\n            指示类型参数的数量（不包括\r\n            包含类型或名称空间）。\r\n","\r\n            Given a filename (currently only Tracker.exe and FileTracker.dll are supported), return \r\n            the path to that file. \r\n            ":"\r\n            给定文件名（当前仅支持tracker.exe和filetracker.dll），返回\r\n            该文件的路径。\r\n            \r\n","\r\n            Represents an operation that creates a pointer value by taking the address of a reference.\r\n            ":"\r\n            代表一个操作，该操作通过获取参考的地址来创建指针值。\r\n            \r\n","\r\n              Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have one or more invalid relocation header values..\r\n            ":"\r\n              查找类似于Win32资源的本地化字符串，假定为Coff对象格式，具有一个或多个无效的重置标头值。\r\n            \r\n","\r\n            This is set for metadata symbols, as follows:\r\n            ":"\r\n            这是为元数据符号设置的，如下：\r\n            \r\n","\r\n            Invokes a global function or procedure.\r\n            ":"\r\n            调用全局功能或过程。\r\n            \r\n","\r\n            Return the name of the field if the field is an explicitly named tuple element.\r\n            Otherwise returns null.\r\n            ":"\r\n            如果字段是明确命名的元组元素，则返回字段的名称。\r\n            否则返回null。\r\n            \r\n"," object is kept alive by the ":" 物体被活着\r\n","One language to which the analyzer applies.":"分析仪适用的一种语言。\r\n","Type of the source array items":"源数组项目的类型\r\n","\r\n            Custom attributes associated with the method's return value.\r\n            ":"\r\n            与方法的返回值关联的自定义属性。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid data at offset {0}: {1}{2}*{3}{4}.\r\n            ":"\r\n              在偏移{0}时查找类似于无效数据的本地化字符串：{1} {2}*{3} {4}。\r\n            \r\n","\r\n              Looks up a localized string similar to Metadata PE stream should not be given when emitting metadata only..\r\n            ":"\r\n              查找类似于元数据PE流的局部弦，仅在发射元数据时就不应给出。\r\n            \r\n"," for this generator, which can be used to create an instance of an ":" 对于该生成器，可用于创建一个实例\r\n","\r\n            Determines how local variables are displayed.\r\n            ":"\r\n            确定如何显示本地变量。\r\n            \r\n","\r\n            Gets the symbol overridden by the given ":"\r\n            得到给定的符号\r\n","\r\n            Copies a given count of elements into the given array at specified offsets.\r\n            ":"\r\n            将给定的元素计数复制到指定偏​​移处的给定数组中。\r\n            \r\n","\r\n            This method can be called safely from any thread.\r\n            ":"\r\n            该方法可以从任何线程安全地调用。\r\n            \r\n","Consider (reduced) extension methods.":"考虑（减少）扩展方法。\r\n","\r\n            Represents a C# switch expression.\r\n            ":"\r\n            表示C＃开关表达式。\r\n            \r\n","The node to format.":"格式的节点。\r\n","\r\n            Simple check of up to date state according to the tracking data and the UpToDateCheckType.\r\n            Note: No tracking log compaction will take place when using this overload\r\n            ":"\r\n            根据跟踪数据和uptodatechecktype简单检查最新状态。\r\n            注意：使用此过载时不会进行跟踪日志压实\r\n            \r\n","\r\n            This function is provided for script languages that do not support external\r\n            instantiation. It creates an object that supports dynamic property addition and\r\n            removal. The host can manipulate it via the ":"\r\n            此功能是为不支持外部支持的脚本语言提供的\r\n            实例化。它创建一个支持动态属性添加的对象，并且\r\n            移动。主人可以通过\r\n","\r\n            Copy of a reference shared by one or more ":"\r\n            一个或多个共享的参考的副本\r\n","\r\n            Get a localizable message format string for the given diagnostic code.\r\n            ":"\r\n            为给定的诊断代码获取可本质的消息格式字符串。\r\n            \r\n","\r\n            The 1-based index of the first field of the type.\r\n            ":"\r\n            类型的第一个字段的1个基索引。\r\n            \r\n"," methods in anonymous types ":" 匿名类型的方法\r\n","\r\n            Indicates locations that are not disposable, e.g. value types, constants, etc.\r\n            ":"\r\n            指示不可一次性的位置，例如价值类型，常数等。\r\n            \r\n","\r\n            True if the loop test executes at the top of the loop; false if the loop test executes at the bottom of the loop.\r\n            ":"\r\n            如果循环测试在循环的顶部执行，则为thy； false如果循环测试在循环的底部执行。\r\n            \r\n","\r\n            Represents a standalone VB query Aggregate operation with more than one item in Into clause.\r\n            ":"\r\n            代表独立的VB查询聚合操作，其中有多个项目中的子句。\r\n            \r\n","\r\n            Creates a new compilation without any syntax trees. Preserves metadata info for use with\r\n            trees added later.\r\n            ":"\r\n            创建一个没有任何语法树的新汇编。保存元数据信息可用于\r\n            树稍后添加。\r\n            \r\n"," that represents the connection.":" 代表连接。\r\n",", this operation is used as the InstanceReceiver for the right operation ":"，此操作用作正确操作的InstanceReceiver\r\n","\r\n            Indicates a \"ref\" parameter.\r\n            ":"\r\n            指示“ REF”参数。\r\n            \r\n"," and\r\n            is the root operation, i.e. ":" 和\r\n            是根操作，即\r\n","\r\n            Local declarations contained within the ":"\r\n            本地声明中包含\r\n","VT_CY":"vt_cy\r\n"," or null, if none is found.":" 或null，如果找不到。\r\n"," if the specified span falls completely within this span, otherwise ":" 如果指定的跨度完全落在此跨度之内，则\r\n","Yields resolved metadata references or ":"收益已解决的元数据参考或\r\n","\r\n            Analyzers corresponding to this analysis result.\r\n            ":"\r\n            与此分析结果相对应的分析仪。\r\n            \r\n","\r\n            Writes any value (primitive or object graph) to the stream.\r\n            ":"\r\n            将任何值（原始或对象图）写入流。\r\n            \r\n","\r\n            Represents an increment expression.\r\n            ":"\r\n            表示增量表达式。\r\n            \r\n","\r\n            Exposes a host type to script code with a default name and the specified options.\r\n            ":"\r\n            用默认名称和指定的选项将主机类型公开为脚本代码。\r\n            \r\n"," to get more detailed information.\r\n            ":" 获取更多详细信息。\r\n            \r\n","\r\n            Read a Double value from the stream. This value must have been written using ":"\r\n            从流中读取双重值。该值必须使用\r\n","\r\n            A reference to the unit that defines the referenced type.\r\n            ":"\r\n            对定义引用类型的单元的引用。\r\n            \r\n","\r\n            Returns the type symbol for a forwarded type based its canonical CLR metadata name.\r\n            The name should refer to a non-nested type. If type with this name is not forwarded,\r\n            null is returned.\r\n            ":"\r\n            返回基于转发类型的类型符号，其规范CLR元数据名称。\r\n            该名称应指无巢类型。如果没有转发此名称的类型，\r\n            null返回。\r\n            \r\n","The error to attach to this node":"附加到此节点的错误\r\n","\r\n            Acquires an array constructor for a given array type\r\n            ":"\r\n            获取给定数组类型的数组构造函数\r\n            \r\n","\r\n            This attribute is applicable to events, fields, methods, properties, and nested types. Note\r\n            that it has no effect on the method binding algorithm. If a script-based call is bound to a\r\n            method that is blocked by this attribute, it will be rejected even if an overload exists\r\n            that could receive the call.\r\n            ":"此属性适用于事件，字段，方法，属性和嵌套类型。笔记\r\n            它对方法结合算法没有影响。如果基于脚本的呼叫绑定到\r\n            该属性阻止的方法，即使存在过载，它也会被拒绝\r\n            可以接到电话。\r\n            \r\n","This object disposes ":"此对象处置\r\n",". There cannot\r\n             be initializers in both locations except in invalid code scenarios.\r\n             In C#, this node will never have an initializer.\r\n             This corresponds to the VariableDeclarationSyntax in C#, and the VariableDeclaratorSyntax in Visual Basic.\r\n            \r\n             This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n             change it in the future.\r\n             ":"。不能\r\n             在两个位置的初始化器除外，在无效的代码方案中。\r\n             在C＃中，此节点永远不会具有初始化器。\r\n             这对应于C＃中的variabledeclarationsyntax，以及Visual Basic中的variabledeclaratorsyntax。\r\n            \r\n             该界面保留用于通过其关联的API实现。我们保留权利\r\n             将来更改它。\r\n             \r\n"," instances are equal according to the rules of this comparer\r\n            ":" 根据此比较的规则，实例是平等的\r\n            \r\n","\r\n            Gets the sample's node within the profile's call tree.\r\n            ":"\r\n            在配置文件的调用树中获取样本节点。\r\n            \r\n"," registered by the Initialize invocation.\r\n            Use ":" 由初始化调用注册。\r\n            利用\r\n","Path of the source file that contains the ":"包含源文件的路径\r\n"," can record any information about the nodes visited. \r\n            During ":" 可以记录有关访问的节点的任何信息。\r\n            期间\r\n","\r\n            Current usage:\r\n             (1) C# field, property, parameter or local variable initializer.\r\n             (2) VB field(s), property, parameter or local variable initializer.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃字段，属性，参数或局部变量初始化器。\r\n             （2）VB字段（S），属性，参数或局部变量初始化器。\r\n            \r\n","\r\n            Represents a switch case section with one or more case clauses to match and one or more operations to execute within the section.\r\n            ":"\r\n            代表一个或多个案例条款以匹配的开关案例部分，并在本节内执行一个或多个操作。\r\n            \r\n","\r\n            Primary method that flows analysis data through the given statement.\r\n            ":"\r\n            通过给定语句流动分析数据的主要方法。\r\n            \r\n","\r\n            Label associated with the case clause.\r\n            ":"\r\n            与案例子句关联的标签。\r\n            \r\n","\r\n            Deep clone given IOperation\r\n            ":"\r\n            深克隆给定\r\n            \r\n","\r\n            Retrieves the original referenced syntax node.  \r\n            This action may cause a parse to happen to recover the syntax node.\r\n            ":"\r\n            检索原始引用的语法节点。\r\n            此操作可能导致解析碰到恢复语法节点。\r\n            \r\n","\r\n              Looks up a localized string similar to The diagnostic '{0}' was given an invalid severity '{1}' in the analyzer config file at '{2}'..\r\n            ":"查找类似于诊断'{0}'的本地化字符串在'{2}\r\n            \r\n","\r\n            Assembly reference aliases (C# only).\r\n            ":"\r\n            组装参考别名（仅C＃）。\r\n            \r\n"," added by the generator, along with the parsed representation of that text in ":" 由发电机添加，以及该文本的解析表示\r\n","\r\n            Determine if this node is structurally equivalent to another.\r\n            ":"\r\n            确定该节点在结构上是否等同于另一个。\r\n            \r\n","\r\n            The type arguments that were used to instantiate this.GenericType in order to create this type.\r\n            ":"\r\n            用于实例化此类型的类型参数以创建此类型。\r\n            \r\n","\r\n            If true, prints the full path of the file containing errors or\r\n            warnings in diagnostics.\r\n            ":"\r\n            如果为true，请打印包含错误或\r\n            诊断警告。\r\n            \r\n","\r\n            Current state of analysis.\r\n            ":"\r\n            当前的分析状态。\r\n            \r\n","\r\n            Performs validation of options compatibilities and generates diagnostics if needed\r\n            ":"\r\n            执行选项兼容性的验证，并在需要时生成诊断\r\n            \r\n","\r\n            Type operand.\r\n            ":"\r\n            类型操作数。\r\n            \r\n","\r\n            The list of trivia that appears after this node in the source code and are attached to a token that is a\r\n            descendant of this node.\r\n            ":"\r\n            该节点在源代码中出现的琐事列表，并将其附加到令牌上\r\n            该节点的后代。\r\n            \r\n","\r\n              Looks up a localized string similar to Arguments to '/keepalive' option below -1 are invalid..\r\n            ":"\r\n              在-1下方查找类似于“/keepalive”选项的参数的本地化字符串无效。\r\n            \r\n","\r\n            If this is a partial method implementation part, returns the corresponding\r\n            definition part.  Otherwise null.\r\n            ":"\r\n            如果这是部分方法实现部分，请返回相应的\r\n            定义部分。否则为空。\r\n            \r\n","\r\n            This interface models the metadata representation of a type.\r\n            ":"\r\n            该接口建模类型的元数据表示。\r\n            \r\n","\r\n            Creates a compiled script, consuming previously generated cache data.\r\n            ":"\r\n            创建一个编译的脚本，消耗先前生成的缓存数据。\r\n            \r\n"," is wrapping a token.\r\n            ":" 正在包裹一个令牌。\r\n            \r\n"," for the module.":" 对于模块。\r\n","The nodes to add.":"节点要添加。\r\n","\r\n            Result value of the enclosing switch expression when this arm matches.\r\n            ":"\r\n            当该手臂匹配时，封闭开关表达式的结果值。\r\n            \r\n","If the encoded argument type is invalid.":"如果编码的参数类型无效。\r\n",", the script\r\n            engine terminates script execution and throws an exception.\r\n            ":"， 剧本\r\n            引擎终止脚本执行并引发异常。\r\n            \r\n","\r\n            The nullable analysis feature is fully enabled.\r\n            ":"\r\n            无效的分析功能已完全启用。\r\n            \r\n","\r\n            Represents a global field in symbol table.\r\n            ":"\r\n            代表符号表中的全局字段。\r\n            \r\n","\r\n            Should return null in case of error.\r\n            ":"\r\n            如果发生错误，应返回null。\r\n            \r\n"," if this is a 'lifted' unary operator.  When there is an \r\n            operator that is defined to work on a value type, 'lifted' operators are \r\n            created to work on the ":" 如果这是一个“抬起”的单一操作员。当有一个\r\n            定义用于在价值类型上的操作员，“升起”的操作员是\r\n            创建的是在\r\n","\r\n            A map from syntax node in the later compilation to syntax node in the previous compilation, \r\n            or null if ":"\r\n            从以后的汇编中的语法节点到上一个汇编中语法节点的映射，\r\n            或null如果\r\n","\r\n            Current usage:\r\n             (1) VB ReDim statement.\r\n            ":"\r\n            当前用法：\r\n             （1）VB Redim语句。\r\n            \r\n","\r\n            Represents a connection between a host event source and a script handler function.\r\n            ":"\r\n            表示主机事件源和脚本处理程序功能之间的连接。\r\n            \r\n","\r\n            Attempts to find a driver based on ":"\r\n            尝试根据\r\n","\r\n            Return true if the compilation contains any code or types.\r\n            ":"\r\n            如果汇编包含任何代码或类型，则返回true。\r\n            \r\n","Annotations to be removed from the new node.":"从新节点中删除的注释。\r\n","\r\n            Creates a new options instance with the specified diagnostic-specific options.\r\n            ":"\r\n            使用指定的诊断特定选项创建一个新的选项实例。\r\n            \r\n","\r\n            Realizes method body.\r\n            No more data can be added to the builder after this call.\r\n            ":"\r\n            实现方法主体。\r\n            此通话后，不再将更多数据添加到构建器中。\r\n            \r\n","\r\n            Write one entry in the \"Debug Directory (Image Only)\"\r\n            See https://msdn.microsoft.com/en-us/windows/hardware/gg463119.aspx\r\n            section 5.1.1 (pages 71-72).\r\n            ":"\r\n            在“调试目录（仅图像）”中写一个条目\r\n            请参阅https://msdn.microsoft.com/en-us/windows/hardware/gg463119.aspx\r\n            第5.1.1节（第71-72页）。\r\n            \r\n","\r\n            It can also be used manually to preserve annotations in a more complex tree\r\n            modification, even if the type of a node changes.\r\n            ":"\r\n            它也可以手动用来保存在更复杂的树上的注释\r\n            修改，即使节点的类型更改。\r\n            \r\n","\r\n            Gets global options that do not apply to any specific file\r\n            ":"\r\n            获取不适用于任何特定文件的全局选项\r\n            \r\n","\r\n            This method checks that all the files exist\r\n            ":"此方法检查所有文件是否存在\r\n            \r\n","\r\n            The following code demonstrates handling host exceptions in script code.\r\n            It assumes that an instance of ":"\r\n            以下代码演示了脚本代码中的处理主机异常。\r\n            它假设一个实例\r\n","\r\n            Temp created for pattern matching by type. This holds the value of an input value provisionally\r\n            converted to the type against which it is being matched.\r\n            ":"\r\n            为按类型匹配的模式匹配而创建的温度。这始终保留输入值的值\r\n            转换为与之匹配的类型。\r\n            \r\n",".\r\n            \r\n            A location path is considered mapped if the first ":"。\r\n            \r\n            如果第一次，则考虑映射位置路径\r\n"," is disposed.\r\n             ":" 被处置。\r\n             \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledAction((a, b, c, arg) => arg.self.DoSomething(a, b, c, arg.x), (self: this, x), out Action<int, int, int> action);\r\n             RunWithActionCallback(action);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooleDAction（（（a，b，c，arg）=> arg.self.dosothing（a，b，c，arg.x），（self：self：this，x），out action <int，int，int，int，int >行动）;\r\n             runwithactionCallback（action）;\r\n             \r\n","\r\n            The generic method that defines this type parameter.\r\n            ":"\r\n            定义此类型参数的通用方法。\r\n            \r\n"," statement to invoke\r\n            ":" 调用声明\r\n            \r\n","\r\n            Loads and evaluates a script document.\r\n            ":"\r\n            加载并评估脚本文档。\r\n            \r\n","\r\n            Determines if two nodes are the same, disregarding trivia differences.\r\n            ":"\r\n            确定两个节点是否相同，无视琐事差异。\r\n            \r\n","\r\n            The root namespace that contains all namespaces and types defined in source code or in\r\n            referenced metadata, merged into a single namespace hierarchy.\r\n            ":"\r\n            包含源代码中定义的所有名称空间和类型的根名称空间或\r\n            引用元数据，合并为单个名称空间层次结构。\r\n            \r\n","\r\n            Get binary operand kinds.\r\n            ":"\r\n            获取二进制操作数。\r\n            \r\n","\r\n            Provides hash code for current instance of ":"\r\n            为当前实例提供哈希代码\r\n","The semantic information for the topmost node of the expression.":"表达式最高节点的语义信息。\r\n","\r\n            Represents a invocation that is dynamically bound.\r\n            ":"\r\n            表示动态绑定的调用。\r\n            \r\n","new C() { 1, 2, 3 }":"新C（）{1，2，3}\r\n","\r\n            Returns true if the bag has any non-lazy diagnostics with Severity=Error.\r\n            ":"\r\n            如果袋子有任何严重性=错误的非懒惰诊断，则返回true。\r\n            \r\n","\r\n            The original args to the client.\r\n            ":"\r\n            原件向客户介绍。\r\n            \r\n","\r\n            Releases all resources used by the V8 runtime.\r\n            ":"\r\n            释放V8运行时使用的所有资源。\r\n            \r\n"," The metadata name of explicit interface names have spaces removed, compared to\r\n            the name property. ":" 与\r\n            名称属性。\r\n","\r\n            True if this ":"\r\n            如果这个是正确的\r\n","\r\n            Reads the contents of ":"\r\n            阅读内容\r\n","\r\n            Returns the method used to perform the conversion for a user-defined conversion if ":"\r\n            返回用于执行用户定义转换转换的方法\r\n","\r\n            Provides access to the underlying unmanaged COM object.\r\n            ":"\r\n            提供对基础非托管com对象的访问。\r\n            \r\n","A sequence of trivia to use in the tree in place of the specified trivia.":"在树上使用的一系列琐事代替指定的琐事。\r\n"," doesn't take ownership of the ":" 不占有\r\n","\r\n            Returns true if this method hides base methods by name. This cannot be specified directly\r\n            in the C# language, but can be true for methods defined in other languages imported from\r\n            metadata. The equivalent of the \"hidebyname\" flag in metadata. \r\n            ":"\r\n            如果此方法用名称隐藏基本方法，则返回true。这不能直接指定\r\n            在c＃语言中，但对于以从其他语言定义的方法可能是正确的\r\n            元数据。等效于元数据中的“ hidebyname”标志。\r\n            \r\n","\r\n            Retrieves assembly definition identity from given runtime assembly.\r\n            ":"\r\n            从给定的运行时组装中检索汇编定义身份。\r\n            \r\n","Interface(s) (C#)":"接口（s）（c＃）\r\n","\r\n            The location represents a metadata file.\r\n            ":"\r\n            该位置代表元数据文件。\r\n            \r\n","An optional category for the document.":"该文档的可选类别。\r\n","\r\n            This is a list of the using directives that were in scope for this method body.\r\n            ":"\r\n            这是该方法主体范围内的使用指令的列表。\r\n            \r\n","\r\n            Provides a string representation of the StringBuilderText located within given span.\r\n            ":"\r\n            提供给定跨度内的StringBuilderText的字符串表示。\r\n            \r\n","\r\n            The list of custom modifiers, if any, associated with the type of the property. \r\n            ":"\r\n            与属性类型关联的自定义修饰符列表（如果有）。\r\n            \r\n","\r\n            Gets the definition object corresponding to this reference within the given context, \r\n            or null if the referenced entity isn't defined in the context.\r\n            ":"\r\n            在给定上下文中获取与此引用相对应的定义对象，\r\n            或null如果未在上下文中定义引用实体。\r\n            \r\n","\r\n            Adds elastic marker trivia\r\n            ":"\r\n            增加弹性标记琐事\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Int64\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toInt64(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.int64”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.toint64（42））;\r\n            \r\n","\r\n            x86 compiles the assembly to be run by the 32-bit, x86-compatible common language runtime.\r\n            ":"\r\n            X86编译由32位，X86兼容的通用语言运行时运行的组件。\r\n            \r\n","\r\n            A reference to a type definition that is a specialized nested type.\r\n            ":"\r\n            对特殊嵌套类型的类型定义的引用。\r\n            \r\n","\r\n            Represents state for a TextChanged event.\r\n            ":"\r\n            代表文本变化事件的状态。\r\n            \r\n","\r\n            Returns diagnostics produced by compilation actions of given ":"\r\n            通过给定的汇编操作产生的回报诊断\r\n",", as interop types can't be embedded from modules.":"，因为不能从模块中嵌入Interop类型。\r\n","\r\n            Represents a C# or VB label statement.\r\n            ":"\r\n            表示C＃或VB标签语句。\r\n            \r\n","\r\n            The CachingLookup class provides a convenient representation of an ILookup that is based\r\n            upon a potentially slow lookup, and caches lookup results so that subsequent lookups are\r\n            fast. Internally a ConcurrentDictionary is used to cache lookup results. The client provides\r\n            two delegates to perform lookups: One that maps a key to a IEnumerable of values, and one\r\n            that provides all keys.\r\n            \r\n            The client must provide an IEqualityComparer used for comparing keys. Failed lookups are\r\n            cached, but that has the disadvantage that every different failed lookup will consume a\r\n            small amount of extra memory. However, that memory can be reclaimed by forcing a full\r\n            population of the cache.\r\n            \r\n            Thread safe.\r\n            ":"\r\n            Cachinglookup类提供了基于Ilookup的方便表示\r\n            在潜在的缓慢查找和缓存查找结果下，以便随后的查找是\r\n            快速地。在内部，并进行了汇总来缓存查找结果。客户提供\r\n            两个要执行查找的代表：一个将钥匙映射到价值观的钥匙，一个\r\n            提供所有钥匙。\r\n            \r\n            客户必须提供用于比较密钥的IEqualityComparer。失败的查找是\r\n            缓存，但这是一个缺点，每个不同的失败查找都会消耗\r\n            少量的额外记忆。但是，可以通过强迫完整的\r\n            缓存的人口。\r\n            \r\n            线程安全。\r\n            \r\n","\r\n            Resources specified as arguments to the compilation.\r\n            ":"\r\n            资源指定为汇编的参数。\r\n            \r\n","\r\n            An override of ":"\r\n            替代\r\n","\r\n            Determine whether the given value is in the set.\r\n            ":"\r\n            确定给定值是否在集合中。\r\n            \r\n","\r\n            Returns true if the given symbol has required symbol modifiers based on options:\r\n              1. If user has explicitly configured candidate ":"\r\n            如果给定符号具有基于选项所需的符号修饰符，则返回true：\r\n              1.如果用户已明确配置了候选人\r\n","Array of outputs for the source":"来源的输出数组\r\n","\r\n            Represents a type.\r\n            ":"\r\n            代表一种类型。\r\n            \r\n","\r\n            Takes a ":"\r\n            服用\r\n","\r\n            Updates values for existing entries in ":"\r\n            更新现有条目的值\r\n","\r\n            Using an iterator to avoid copying the list.  If perf is a problem,\r\n            create an explicit enumerator type.\r\n            ":"\r\n            使用迭代器避免复制列表。如果perf是一个问题，\r\n            创建一个显式枚举类型。\r\n            \r\n","\r\n            An unsigned 16 bit integer representing a Unicode UTF16 code point.\r\n            ":"\r\n            一个未签名的16位整数，代表Unicode UTF16代码点。\r\n            \r\n","Root syntax node for an executable code block.":"可执行代码块的根语法节点。\r\n","\r\n            Exposes a host type to script code with the specified options. The type is specified by\r\n            type name and assembly name.\r\n            ":"\r\n            用指定的选项将主机类型公开为脚本代码。该类型由\r\n            类型名称和汇编名称。\r\n            \r\n","\r\n            A data structure that tracks the inputs and output of an execution node\r\n            ":"\r\n            跟踪执行节点的输入和输出的数据结构\r\n            \r\n","\r\n            Given a token for a constructor, return the token for the constructor's type and the blob containing the\r\n            constructor's signature.\r\n            ":"\r\n            给定一个构造函数的令牌，返回构造函数的令牌，包含blob\r\n            构造函数的签名。\r\n            \r\n","Stream containing portable executable image. Position zero should contain the first byte of the DOS header (\"MZ\").":"流包含便携式可执行图像。零位置应包含DOS标头的第一个字节（“ MZ”）。\r\n"," and passes the exception through (the method returns false).\r\n            ":" 并通过异常（方法返回false）。\r\n            \r\n","\r\n            Represents a value type that can be assigned null.\r\n            ":"\r\n            表示可以分配为null的值类型。\r\n            \r\n","\r\n            The path of the source document file.\r\n            ":"\r\n            源文档文件的路径。\r\n            \r\n","\r\n            Obtain the number of elements in the set.\r\n            ":"\r\n            获取集合中的元素数量。\r\n            \r\n","\r\n            A managed executable specifically marked as 32-bit\r\n            ":"\r\n            专门标记为32位的托管执行\r\n            \r\n","\r\n            This is an abstraction over the file system which allows for us to do more thorough unit testing.\r\n            ":"\r\n            这是对文件系统的抽象，使我们可以进行更彻底的单元测试。\r\n            \r\n","A function that returns an IEnumerable of all keys that have associated values.":"返回具有关联值的所有键的函数。\r\n","\r\n            Locals declared within the ":"\r\n            当地人在\r\n","\r\n              Looks up a localized string similar to PDB stream should not be given when embedding PDB into the PE stream..\r\n            ":"\r\n              在将PDB嵌入到PE流中时，请查找类似于PDB流的本地化字符串。\r\n            \r\n","\r\n            Gets the top-level nullability of this local variable.\r\n            ":"\r\n            获取此局部变量的顶级无效性。\r\n            \r\n","If the encoded named argument is invalid.":"如果编码的命名参数无效。\r\n"," visitor that visits only the single IOperation\r\n            passed into its Visit method with an additional argument of the type specified by the \r\n            ":" 仅访问单一偶然的访客\r\n            传递到其访问方法中，并提出了有关该类型的附加参数\r\n            \r\n","\r\n            Report a non-fatal error like ":"\r\n            报告一个非致命错误\r\n",". false otherwise.":"。否则为错误。\r\n"," arguments and\r\n            returns a value of the specified type. The type of all parameters is\r\n            ":" 争论和\r\n            返回指定类型的值。所有参数的类型是\r\n            \r\n","\r\n            Delegate to fetch the gate object to guard all callbacks into the analyzer.\r\n            It should return a unique gate object for the given analyzer instance for non-concurrent analyzers, and null otherwise.\r\n            All analyzer callbacks for non-concurrent analyzers will be guarded with a lock on the gate.\r\n            ":"\r\n            委派以获取栅极对象，以将所有回调列入分析仪。\r\n            它应该为给定的分析仪实例返回非电流分析仪的唯一门对象，否则为空。\r\n            所有用于非电流分析仪的分析仪回调都将在门上锁定。\r\n            \r\n","\r\n            Information decoded from well-known custom attributes applied on a module.\r\n            ":"\r\n            从模块上应用的众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            A reference to a member of a type, such as a field or a method.\r\n            This interface models the metadata representation of a type member reference.\r\n            ":"\r\n            对类型成员的引用，例如字段或方法。\r\n            该接口对类型成员参考的元数据表示形式进行建模。\r\n            \r\n","The new tokens.":"新令牌。\r\n","\r\n            Initializes a new V8 script engine instance with the specified options and debug port.\r\n            ":"\r\n            用指定选项和调试端口初始化新的V8脚本引擎实例。\r\n            \r\n","\r\n            Gets all the generators defined in this assembly reference for the given ":"\r\n            获取本汇编中定义的所有发电机，以给定\r\n","\r\n            Checks if the given method is an implementation of the given interface method\r\n            Substituted with the given typeargument.\r\n            ":"\r\n            检查给定方法是否是给定接口方法的实现\r\n            用给定的类型替代。\r\n            \r\n","\r\n            Has no effect outside ":"\r\n            外面没有效果\r\n","\r\n            Decodes a type name.  A type name is a string which is terminated by the end of the string or one of the\r\n            delimiters '+', ',', '[', ']'. '+' separates nested classes. '[' and ']'\r\n            enclosed generic type arguments.  ',' separates types.\r\n            ":"\r\n            解码类型名称。类型名称是一个字符串，由字符串的末端或其中一个终止\r\n            定义者'+'，'，'，'['，']'。 '+'分开嵌套类。 '[' 和 ']'\r\n            封闭的通用类型参数。 '，'分开类型。\r\n            \r\n","\r\n            Determine if the specific method is an Add method that adds to a collection.\r\n            ":"确定特定方法是否是添加到集合的添加方法。\r\n            \r\n","\r\n            include all namespace, type and member\r\n            ":"\r\n            包括所有名称空间，类型和成员\r\n            \r\n","\r\n            Method is a destructor.\r\n            ":"\r\n            方法是击改变器。\r\n            \r\n","\r\n            Handles of types that were changed (updated or inserted) in this delta.\r\n            ":"\r\n            在此三角洲更改（更新或插入）的类型的处理。\r\n            \r\n"," with the element at the specified index removed.\r\n            ":" 在指定索引处删除了该元素。\r\n            \r\n","\r\n            Creates analyzer options to be passed to ":"\r\n            创建要传递给的分析仪选项\r\n","\r\n            A list of objects representing persisted instances of pairs of security actions and sets of security permissions.\r\n            These apply by default to every method reachable from the module.\r\n            ":"\r\n            代表持续存在的安全操作和安全权限集的对象列表。\r\n            默认情况下，这些适用于从模块中获取的每种方法。\r\n            \r\n","\r\n            Determines if the symbol is accessible from the specified location.\r\n            ":"\r\n            确定是否可以从指定位置访问符号。\r\n            \r\n","\r\n            Undefined value.\r\n            ":"\r\n            未定义值。\r\n            \r\n","\r\n              Current usage:\r\n              (1) C# \"and\" and \"or\" patterns.\r\n            ":"\r\n              当前用法：\r\n              （1）C＃“和”和“或”模式。\r\n            \r\n","The count of valid bytes in ":"有效字节的计数\r\n","\r\n            Splits specified ":"\r\n            拆分\r\n","\r\n            Statements to execute before entry to the loop. For C# these come from the first clause of the for statement. For VB these initialize the index variable of the For statement.\r\n            ":"\r\n            在进入循环之前要执行的语句。对于C＃，这些来自for语句的第一条。对于VB，这些初始化for语句的索引变量。\r\n            \r\n","\r\n            An Int32 value encoded as 4 bytes.\r\n            ":"\r\n            INT32值编码为4个字节。\r\n            \r\n"," host type. Use\r\n            ":" 主机类型。利用\r\n            \r\n","s to a string.\r\n            ":"s到字符串。\r\n            \r\n","\r\n            Determine if custom attribute application is \r\n            NoPia TypeIdentifier.\r\n            ":"\r\n            确定自定义属性应用程序是否为\r\n            NOPIA TypeIdentifier。\r\n            \r\n"," if this is a 'checked' binary operator.\r\n            ":" 如果这是“检查”的二进制操作员。\r\n            \r\n","\r\n            The UInt32 value 3\r\n            ":"\r\n            UINT32值3\r\n            \r\n"," or\r\n            a location that is pointed to by a reference type variable, and tracked with ":" 或者\r\n            由参考类型变量指向的位置，并与\r\n"," if\r\n            there were errors reading the file.\r\n            ":" 如果\r\n            有错误阅读文件。\r\n            \r\n","\r\n            Returns the string representation of this node or token, not including its leading and trailing\r\n            trivia.\r\n            ":"\r\n            返回该节点或令牌的字符串表示形式，不包括其前导和尾声\r\n            琐事。\r\n            \r\n","\r\n            Initializer of the variables.\r\n            ":"\r\n            变量的初始化器。\r\n            \r\n","\r\n            Print compiler version\r\n            ":"\r\n            打印编译器版本\r\n            \r\n","\r\n            If the encoding is not specified the source isn't debuggable.\r\n            If an encoding-less ":"\r\n            如果未指定编码，则源将不可辩论。\r\n            如果没有编码\r\n","Full path of the directory to enumerate.":"目录的完整路径要枚举。\r\n","\r\n            Checks if the given method implements 'System.Runtime.Serialization.IDeserializationCallback.OnDeserialization' or overrides an implementation of 'System.Runtime.Serialization.IDeserializationCallback.OnDeserialization'/>.\r\n            ":"\r\n            检查给定的方法是否实现了“ system.runtime.serialization.sirializationcallback.ondeserialization”或覆盖实现“ system.runtime.serialization.serialization.serializationcallback.ondeserialization”/>。\r\n            \r\n","True if the diagnostic is enabled by default.":"如果默认启用了诊​​断，则为true。\r\n","ECMAScript 6":"eCMAScript 6\r\n","Requires that ":"需要这一点\r\n","\r\n            Represents a V8 CPU profile sample.\r\n            ":"\r\n            代表V8 CPU剖面样本。\r\n            \r\n","\r\n            Creates a new generator state that just contains information\r\n            ":"\r\n            创建一个仅包含信息的新发电机状态\r\n            \r\n","The new value of the specified property.":"指定属性的新值。\r\n"," operator and VB 'OrElse' operator.\r\n            ":" 操作员和VB'Orelse'操作员。\r\n            \r\n","\r\n            Subsystem version not specified\r\n            ":"\r\n            子系统版本未指定\r\n            \r\n","\r\n            An Int64 value encoded as 8 bytes\r\n            ":"\r\n            编码为8个字节的INT64值\r\n            \r\n","\r\n            Size of strong name hash.\r\n            ":"\r\n            强大名称哈希的大小。\r\n            \r\n"," overloads. A compilation created using \r\n             ":" 超载。使用的汇编\r\n             \r\n","The set of analyzers to include in the analysis.":"一组分析仪包括在分析中。\r\n","\r\n            Is the file under this full path?\r\n            ":"\r\n            该文件是此完整路径下的文件吗？\r\n            \r\n"," \r\n            is called before an element becomes available, the returned task is completed and\r\n            ":" \r\n            在元素可用之前调用，返回的任务已完成，并且\r\n            \r\n","Stream to which the compilation will be written.":"流将写入汇编的流。\r\n","\r\n            This property returns ":"\r\n            此属性返回\r\n","\r\n            Represents a source file or an additional file.\r\n            For source files, ":"\r\n            表示源文件或附加文件。\r\n            对于源文件，\r\n","\r\n            The name of the method.\r\n            ":"\r\n            该方法的名称。\r\n            \r\n","\r\n            C# only. Dynamic flags for local variables and constants.\r\n            ":"\r\n            仅C＃。局部变量和常数的动态标志。\r\n            \r\n"," when you are finished using the script engine. ":" 使用脚本引擎完成后。\r\n","\r\n            Some streams are easily represented as bytes.\r\n            ":"\r\n            一些流很容易表示为字节。\r\n            \r\n","\r\n            Close the special custom data section for token to source span mapping\r\n            information. Once it is closed no more mapping information can be added.\r\n            ":"\r\n            关闭特殊的自定义数据部分，以供代币到源跨度映射\r\n            信息。一旦关闭，就不会添加更多的映射信息。\r\n            \r\n","\r\n            Text content.\r\n            ":"\r\n            文本内容。\r\n            \r\n","\r\n            Gets the trivia at the specified index.\r\n            ":"\r\n            获取指定索引的琐事。\r\n            \r\n","\r\n            True if we need to perform analysis for a single source or additional file.\r\n            ":"\r\n            如果我们需要为单个源或其他文件执行分析，则为正确。\r\n            \r\n",".\r\n            \r\n            E.g. join clause declares left expression and right expression -- each of these expressions is a lambda body.\r\n            JoinClause1.GetCorrespondingLambdaBody(JoinClause2.RightExpression) returns JoinClause1.RightExpression.\r\n            ":"。\r\n            \r\n            例如。加入子句声明左表达式和右表达式 - 这些表达中的每一个都是lambda的身体。\r\n            joinclause1.getCorresportingLambdabody（joinclause2.right expression）返回joinclause1.rightexpression。\r\n            \r\n"," is set, then ":" 设置，然后\r\n","\r\n            Determines whether an object is compatible with the specified host type.\r\n            ":"\r\n            确定对象是否与指定的主机类型兼容。\r\n            \r\n","Generic Method":"通用方法\r\n","\r\n            Returns a JSON representation of the profile.\r\n            ":"\r\n            返回配置文件的JSON表示。\r\n            \r\n","\r\n            The resulting copy shares the metadata image and metadata information read from it with the original.\r\n            It doesn't own the underlying metadata image and is not responsible for its disposal.\r\n            \r\n            This is used, for example, when a metadata cache needs to return the cached metadata to its users\r\n            while keeping the ownership of the cached metadata object.\r\n            ":"\r\n            生成的副本共享元数据图像和元数据信息与原始内容。\r\n            它不拥有基本的元数据图像，也不对其处置负责。\r\n            \r\n            例如，当元数据缓存需要将缓存的元数据退还给其用户时\r\n            同时保留缓存的元数据对象的所有权。\r\n            \r\n","\r\n            Creates or gets metadata for PE reference.\r\n            ":"\r\n            创建或获取元数据以供体育参考。\r\n            \r\n","\r\n              Looks up a localized string similar to class.\r\n            ":"\r\n              查找类似于类的本地化字符串。\r\n            \r\n",", may be efficient for parallel entry\r\n            points (few direct calls but large amounts of iterative work), but are problematic when called inside the\r\n            iterations themselves. Performance-sensitive code should avoid the use of heavy parallelization APIs except\r\n            for known entry points to the parallel portion of code.":"，对于并行进入可能有效\r\n            要点（很少有直接调用，但大量迭代工作），但是在内部打电话时是有问题的\r\n            迭代本身。性能敏感的代码应避免使用重型平行化API，除非\r\n            有关代码并行部分的已知输入点。\r\n","\r\n            Same as accessing ":"\r\n            与访问相同\r\n","\r\n              Looks up a localized string similar to return.\r\n            ":"\r\n              查找类似于返回的本地化字符串。\r\n            \r\n","An index of the first definition to consider, ":"要考虑的第一个定义的索引，\r\n","\r\n            True if and only if the operation is performed by an operator method.\r\n            ":"\r\n            当且仅当操作是通过操作员方法执行操作时，则为true。\r\n            \r\n","\r\n            Zips two immutable arrays together through a mapping function, producing another immutable array.\r\n            ":"\r\n            通过映射函数将两个不变的阵列一起拉链，从而产生另一个不变的阵列。\r\n            \r\n","\r\n            Specifies the preferred base address at which to load the output DLL.\r\n            ":"\r\n            指定加载输出DLL的首选基础地址。\r\n            \r\n"," for the given method.\r\n            ":" 对于给定的方法。\r\n            \r\n","\r\n            Signature of the lambda.\r\n            ":"\r\n            Lambda的签名。\r\n            \r\n","Optional span within the syntax tree for which to get diagnostics.\r\n            If no argument is specified, then diagnostics for the entire tree are returned.":"在语法树中可进行的可选跨度，以获取诊断。\r\n            如果未指定参数，则返回整棵树的诊断。\r\n",", and will null reference in these cases. Implementation of the ":"，在这些情况下将无效。实施\r\n","\r\n            Only accessible where both protected and friend members are accessible\r\n            (more restrictive than ":"\r\n            仅在可访问受保护和朋友会员的情况下才能访问\r\n            （比限制比\r\n","\r\n            Constructs a new SourceText from this text with the specified changes.\r\n            ":"\r\n            通过指定的更改构建本文中的新源版本。\r\n            \r\n","\r\n            Represents an individual clause of an ":"\r\n            代表一个个人条款\r\n","\r\n            Table row counts. \r\n            ":"\r\n            表行计数。\r\n            \r\n"," \r\n            Register an action to be executed at the end of semantic analysis of a method body or an expression appearing outside a method body. \r\n            A code block action reports ":" \r\n            注册在方法主体的语义分析结束时执行的操作或出现在方法主体外的表达式。\r\n            代码块操作报告\r\n","\r\n            Encoding to use when there is no byte order mark (BOM) on the stream. This encoder may throw a ":"在流上没有字节订单标记（BOM）时使用编码要使用。这个编码器可能会抛出\r\n","\r\n            Read a Single value from the stream. This value must have been written using ":"\r\n            从流中读取单个值。该值必须使用\r\n","\r\n            Current usage:\r\n             (1) C# sizeof expression.\r\n            ":"\r\n            当前用法：\r\n             （1）c＃sizeof表达式。\r\n            \r\n"," depending on the\r\n            conversion context, in which the tuple is used.\r\n            ":" 取决于\r\n            转换上下文，其中使用元组。\r\n            \r\n"," are alive.\r\n            ":" 还活着。\r\n            \r\n","\r\n            Simple assembly name, or null if not specified.\r\n            ":"\r\n            简单的汇编名称，如果未指定为空名称。\r\n            \r\n"," are compatible with properties of ":" 与\r\n","\r\n            Creates a new list with the specified node inserted at the index.\r\n            ":"\r\n            使用指定的节点插入索引。\r\n            \r\n","\r\n            Array of code metrics data for symbolic children of ":"\r\n            符号儿童的代码指标数据阵列\r\n","\r\n            Default properties for a module reference.\r\n            ":"\r\n            模块参考的默认属性。\r\n            \r\n","\r\n            Stores the partial analysis state for a specific symbol declaration for a specific analyzer.\r\n            ":"\r\n            为特定分析仪的特定符号声明存储部分分析状态。\r\n            \r\n"," is the value of the expression. Otherwise, ":" 是表达式的价值。否则，\r\n","how many times the calling function has recursed":"调用功能复发了多少次\r\n","\r\n            While resolving the name, consider only types with this arity.\r\n            (-1) means allow any arity.\r\n            If ForcedArity >= 0 and UseCLSCompliantNameArityEncoding, lookup may\r\n            fail because ForcedArity doesn't match the one encoded in the name.\r\n            ":"\r\n            在解决名称的同时，仅考虑使用此差异的类型。\r\n            （-1）意味着允许任何Arity。\r\n            如果自由度> = 0和useclscompliantnamearityCoding，则查找可能\r\n            失败是因为Aduccearity与名称中编码的一个不匹配。\r\n            \r\n","The type of values kept by the queue.":"队列保留的值类型。\r\n","\r\n            Marks all the symbol declarations for the given symbol as fully analyzed for all the given analyzers.\r\n            ":"\r\n            标记给定符号的所有符号声明为所有给定分析仪的全面分析。\r\n            \r\n","\r\n            If a derived class has additional information about other referenced symbols, it can\r\n            expose the locations of those symbols in a general way, so they can be reported along\r\n            with the error.\r\n            ":"\r\n            如果派生类有有关其他引用符号的其他信息，则可以\r\n            以一般的方式公开这些符号的位置，以便可以报告它们\r\n            与错误。\r\n            \r\n","\r\n            Awaited expression.\r\n            ":"\r\n            等待表达。\r\n            \r\n",") region for the graph.\r\n            ":"）图形的区域。\r\n            \r\n","\r\n            A signed 32 bit integer or 64 bit integer, depending on the native word size of the underlying processor.\r\n            ":"\r\n            签名的32位整数或64位整数，具体取决于基础处理器的本地单词大小。\r\n            \r\n"," method used to obtain an awaiter for a task\r\n            (see C# Specification, §7.7.7.1 Awaitable expressions).\r\n            ":" 用于获取任务的方法\r\n            （请参阅C＃规范，第7.7.7.1节等待表达式）。\r\n            \r\n","\r\n            Base class for logging compiler diagnostics.\r\n            ":"\r\n            用于记录编译器诊断的基础类。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# method invocation expression.\r\n             (2) C# collection element initializer.\r\n                 For example, in the following collection initializer: ":"\r\n            当前用法：\r\n             （1）C＃方法调用表达式。\r\n             （2）C＃集合元素初始化器。\r\n                 例如，在以下集合初始化器中：\r\n"," of the diagnostic's ":" 诊断的\r\n","\r\n            Calculate the set of changes up to top-level types. The result\r\n            will be used as a filter when traversing the module.\r\n            \r\n            Note that these changes only include user-defined source symbols, not synthesized symbols since those will be \r\n            generated during lowering of the changed user-defined symbols.\r\n            ":"\r\n            计算更改的集合至顶级类型。结果\r\n            遍历模块时，将用作过滤器。\r\n            \r\n            请注意，这些更改仅包括用户定义的源符号，而不包括合成的符号，因为这些符号将是\r\n            在降低更改的用户定义符号期间生成。\r\n            \r\n","\r\n            Are there any hidden regions in the map?\r\n            ":"\r\n            地图中有任何隐藏区域吗？\r\n            \r\n","\r\n            NOTE: This type is a temporary workaround and should be deleted once we ship IOperation APIs.\r\n            ":"\r\n            注意：这种类型是临时的解决方法，一旦我们运送Ioperation API，应删除。\r\n            \r\n","\r\n            Visits an invocation, either as a direct method call, or intermediately through a delegate.\r\n            ":"\r\n            访问调用，无论是直接方法调用，还是通过委托中心访问。\r\n            \r\n","\r\n            Returns a full path of the file that the compiler will generate the assembly to if compilation succeeds.\r\n            ":"\r\n            返回文件的完整路径，如果编译成功，编译器将生成汇编的文件。\r\n            \r\n","\r\n            Get full metadata handle of the event definition.\r\n            ":"\r\n            获取事件定义的完整元数据手柄。\r\n            \r\n","\r\n            Secure Hash Algorithm 1.\r\n            ":"\r\n            安全哈希算法1。\r\n            \r\n"," with an appropriate Kind.\r\n            An operation action can report ":" 有一种适当的方式。\r\n            操作行动可以报告\r\n","A status indicating whether the conversion succeeded and why":"表明转换是否成功的状态以及为什么\r\n","The type of value returned by a successfully completed ":"成功完成的价值类型\r\n"," for the executable code block.\r\n            ":" 对于可执行代码块。\r\n            \r\n","\r\n            If a namespace is an assembly or compilation namespace, it may be composed of multiple\r\n            namespaces that are merged together. If so, ConstituentNamespaces returns\r\n            all the namespaces that were merged. If this namespace was not merged, returns\r\n            an array containing only this namespace.\r\n            ":"\r\n            如果名称空间是组件或编译名称空间，则可以由多个组成\r\n            合并在一起的名称空间。如果是这样，ConstituentNamespaces返回\r\n            合并的所有名称空间。如果没有合并此名称空间，请返回\r\n            仅包含此名称空间的数组。\r\n            \r\n","\r\n            Represents an invalid operation with one or more child operations.\r\n            ":"\r\n            代表一个或多个儿童操作的无效操作。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# local reference expression.\r\n             (2) VB local reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃本地参考表达式。\r\n             （2）VB局部参考表达式。\r\n            \r\n","\r\n            Gets the signature of the function pointed to by an instance of the function pointer type.\r\n            ":"\r\n            获取由功能指针类型的实例指向的函数的签名。\r\n            \r\n"," if the property was removed successfully, ":" 如果成功删除该物业，\r\n","\r\n            Use in an exception filter to report a non-fatal error (by calling ":"\r\n            在异常过滤器中使用非致命错误（通过调用\r\n","\r\n            A succinct format for displaying symbols.\r\n            ":"\r\n            用于显示符号的简洁格式。\r\n            \r\n","\r\n            Attempts to start processing a symbol for the given analyzer's symbol actions.\r\n            ":"\r\n            尝试开始处理给定分析仪的符号动作的符号。\r\n            \r\n","\r\n            Arguments passed to add method invocation.\r\n            ":"\r\n            传递的参数以添加方法调用。\r\n            \r\n"," explicitly.\r\n            Let the builder machinery do this when appropriate.\r\n            ":" 明确。\r\n            让构建器机械在适当的时候执行此操作。\r\n            \r\n","s and \r\n            the 'reader' function used to deserialize serialized instances of those types.  Registration\r\n            must happen ahead of time using the ":"沙\r\n            “读者”函数用于对这些类型的序列化实例进行序列化。登记\r\n            必须提前使用\r\n","\r\n            Serves as a hash function for the ":"\r\n            充当哈希功能\r\n","\r\n            Optional operation for the step value of the loop control variable. This comes from the expression after the 'Step' keyword.\r\n            ":"\r\n            循环控制变量的步骤值的可选操作。这来自“步骤”关键字之后的表达。\r\n            \r\n","\r\n            Returns true if this field was declared as \"fixed\".\r\n            Note that for a fixed-size buffer declaration, this.Type will be a pointer type, of which\r\n            the pointed-to type will be the declared element type of the fixed-size buffer.\r\n            ":"\r\n            如果该字段被声明为“固定”，则返回true。\r\n            请注意，对于固定尺寸的缓冲区声明，此.Type将是指指针类型\r\n            指向类型将是固定尺寸缓冲区的声明元素类型。\r\n            \r\n","\r\n            The boolean value true.\r\n            ":"\r\n            布尔值真实。\r\n            \r\n","\r\n            Gets the start position of the span.\r\n            ":"\r\n            获取跨度的开始位置。\r\n            \r\n","\r\n            True if the method does not provide an implementation.\r\n            ":"\r\n            如果该方法不提供实现，则为正确。\r\n            \r\n","\r\n            This enum is used internally by BCL. It includes flags that are not in the metadata spec.\r\n            ":"该枚举由BCL内部使用。它包括不在元数据规格中的标志。\r\n            \r\n","\r\n            No instrumentation.\r\n            ":"\r\n            没有仪器。\r\n            \r\n","\r\n            A string encoded as UTF16 (as array of UInt16 values)\r\n            ":"\r\n            一个编码为UTF16的字符串（作为UINT16值的数组）\r\n            \r\n","\r\n            String option to configure dispose analysis kind, primarily for CA2000 (DisposeObjectsBeforeLosingScope).\r\n            Allowed option values: Fields from DisposeAnalysisKind enum.\r\n            ":"\r\n            配置处置分析类型的字符串选项，主要针对CA2000（DisposeObjectsbeforleSingsCope）。\r\n            允许的选项值：来自Disposeanalysiskind枚举的字段。\r\n            \r\n","\r\n            Attaches the node to a SyntaxTree that the same options as ":"\r\n            将节点附加到语法中，该选项与\r\n","\r\n            Gets the return type of the method.\r\n            ":"\r\n            获取该方法的返回类型。\r\n            \r\n","\r\n            If a debugger is attached, it will present the specified script code to the user as a\r\n            document with the specified name. This document will not be discarded after execution.\r\n            ":"\r\n            如果附加了调试器，它将将指定的脚本代码呈现给用户\r\n            带有指定名称的文档。执行后不会丢弃本文档。\r\n            \r\n","If the array is null, this will return an empty immutable array.":"如果阵列为空，则将返回一个空的不变阵列。\r\n","A compiled script that can be executed multiple times without recompilation.":"可以多次执行的编译脚本而无需重新编译。\r\n","\r\n            Resolves any lazy diagnostics in the bag.\r\n            \r\n            Generally, this should only be called by the creator (modulo pooling) of the bag (i.e. don't use bags to communicate -\r\n            if you need more info, pass more info).\r\n            ":"\r\n            解决袋子中的任何懒惰诊断。\r\n            \r\n            通常，这只能由袋子的创建者（Modulo Pooling）调用（即不要使用袋子进行交流 - \r\n            如果您需要更多信息，请传递更多信息）。\r\n            \r\n","\r\n            The number of elements in the fixed size portion of the unmanaged array.\r\n            -1 if it should be omitted from the marshal blob.\r\n            ":"\r\n            非托管数组的固定大小部分中的元素数量。\r\n            -1如果应该从元帅斑点中省略它。\r\n            \r\n","\r\n            Stores a dynamic analysis instrumentation payload array. The value is initialized in\r\n            synthesized method prologue code and referred to throughout the method body.\r\n            ":"\r\n            存储动态分析仪器有效载荷阵列。该值初​​始化\r\n            合成方法序言代码，并在整个方法主体中提及。\r\n            \r\n","\r\n            For error reporting only, can't be used to reference a metadata file.\r\n            ":"\r\n            仅对于错误报告，不能用于引用元数据文件。\r\n            \r\n","\r\n            Tries to execute the syntax tree actions on the given syntax tree.\r\n            ":"\r\n            试图在给定语法树上执行语法树操作。\r\n            \r\n",".\r\n            Never null.\r\n            ":"。\r\n            永不零。\r\n            \r\n","\r\n            Creates a clone of the analysis data.\r\n            ":"\r\n            创建分析数据的克隆。\r\n            \r\n","\r\n            Gets a list of descendant nodes in prefix document order.\r\n            ":"\r\n            获取前缀文档顺序中的后代节点的列表。\r\n            \r\n","Expected non-empty public key":"预期的非公开密钥\r\n","\r\n            Opens a local scope.\r\n            ":"\r\n            打开当地范围。\r\n            \r\n"," from this bag.\r\n            Return value of true doesn't guarantee that bound attributes have also been initialized.\r\n            ":" 从这个袋子。\r\n            true的返回值不能保证绑定属性也已初始化。\r\n            \r\n","\r\n            The attributes on the type reference itself.\r\n            ":"\r\n            类型引用本身上的属性。\r\n            \r\n","\r\n            which can suppress reported analyzer/compiler diagnostics.\r\n            ":"\r\n            可以抑制报告的分析仪/编译器诊断。\r\n            \r\n","\r\n            Boolean option to configure if passing a disposable object as a constructor argument should be considered\r\n            as a dispose ownership transfer, primarily for CA2000 (DisposeObjectsBeforeLosingScope).\r\n            ":"\r\n            布尔值选项，如果应考虑将一次性对象作为构造函数参数进行配置\r\n            作为处置所有权转让，主要用于CA2000（DisposeObjectsBeforLosingScope）。\r\n            \r\n"," preceding this index are ignored.":" 在此索引之前被忽略。\r\n","\r\n            Current usage:\r\n             (1) C# simple, compound and deconstruction assignment expressions.\r\n             (2) VB simple and compound assignment expressions.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃简单，复合和解构分配表达式。\r\n             （2）VB简单而复合的分配表达式。\r\n            \r\n"," to generate assemblies with strong name and \r\n            a signing tool (Microsoft .NET Framework Strong Name Utility (sn.exe) or equivalent) to sign them.\r\n            ":" 生成具有强名称和的集会\r\n            签名工具（Microsoft .NET框架强名称实用程序（SN.EXE）或等效）来签名。\r\n            \r\n","\r\n            Appears when multiple method would otherwise have identical using records (see ":"\r\n            当多种方法否则使用记录相同时出现（请参阅\r\n","\r\n            Binds the given expression as a type or namespace only. If this option\r\n            is selected, then the given expression must derive from TypeSyntax.\r\n            ":"\r\n            仅将给定表达式绑定为类型或名称空间。如果此选项\r\n            选择，然后给定的表达式必须源自型尺寸。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# interpolation part.\r\n             (2) VB interpolation part.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃插值部分。\r\n             （2）VB插值部分。\r\n            \r\n","\r\n            Get the original definition of this type symbol. If this symbol is derived from another\r\n            symbol by (say) type substitution, this gets the original symbol, as it was defined in\r\n            source or metadata.\r\n            ":"\r\n            获取此类型符号的原始定义。如果此符号来自另一个符号\r\n            符号（说）类型替代，这将获得原始符号，因为它已定义\r\n            来源或元数据。\r\n            \r\n","\r\n            Implements a struct-based enumerator for ":"\r\n            实施基于结构的枚举者\r\n","\r\n            True if the event gets special treatment from the runtime.\r\n            ":"如果活动从运行时获得特殊待遇，则是的。\r\n            \r\n","\r\n            A list of the assemblies that are referenced by this module.\r\n            ":"\r\n            该模块引用的组件列表。\r\n            \r\n","completion of semantic analysis of a symbol,":"完成符号的语义分析，\r\n"," \r\n            for all languages defined in this assembly reference.\r\n            ":" \r\n            对于此组件参考中定义的所有语言。\r\n            \r\n","\r\n            var clr = host.lib(\"mscorlib\", \"System\", \"System.Core\");\r\n            var array = clr.System.Linq.Enumerable.Range(0, 5).ToArray();\r\n            ":"\r\n            var clr = host.lib（“ mscorlib”，“ system”，“ system.core”）;\r\n            var array = clr.system.linq.enumoser.range（0，5）.toArray（）;\r\n            \r\n","\r\n            Information about this types of the extra arguments supplied at the call sites that references the method with this object.\r\n            ":"\r\n            有关此对象将方法引用该方法的呼叫网站上提供的此类额外参数的信息。\r\n            \r\n","\r\n            Emit extended custom debug information to the PDB file.\r\n            ":"\r\n            将扩展的自定义调试信息发射到PDB文件。\r\n            \r\n","\r\n            Statements contained within the block.\r\n            ":"块中包含的语句。\r\n            \r\n","\r\n            Gets the document's character encoding.\r\n            ":"\r\n            获取文档的字符编码。\r\n            \r\n","\r\n            Kind of binary operation.\r\n            ":"\r\n            一种二进制操作。\r\n            \r\n","Method - parameter or return type is unsupported":"方法 - 不支持参数或返回类型\r\n","\r\n            Specifies how the target type member is to be exposed to script code.\r\n            ":"\r\n            指定目标类型成员如何暴露于脚本代码。\r\n            \r\n","\r\n            Specifies output assembly kinds generated by compiler.\r\n            ":"指定编译器生成的输出组件种类。\r\n            \r\n","\r\n            Gets or sets the maximum size of the young object heap in\r\n            ":"\r\n            获取或设置年轻物体堆的最大尺寸\r\n            \r\n"," qualifies as a member of\r\n            a static holder class; otherwise ":" 有资格作为成员\r\n            静态持有人类；否则\r\n","\r\n            Creates a new walker instance.\r\n            ":"\r\n            创建一个新的Walker实例。\r\n            \r\n","\r\n            The name assigned to an explicit (narrowing) conversion.\r\n            ":"\r\n            分配给显式转换的名称。\r\n            \r\n","The path to resolve. May be absolute or relative.":"解决的路径。可能是绝对的或相对的。\r\n","Invalid hash.":"无效哈希。\r\n","\r\n            An array of AssemblySymbols referenced by the input AssemblySymbol.\r\n            Implementers may return cached array, Binder does not mutate it.\r\n            ":"输入组件符号引用的一个组合符号阵列。\r\n            实施者可以返回缓存的数组，活页夹不会将其变异。\r\n            \r\n","\r\n            Compares two VB identifiers according to the VB identifier comparison rules.\r\n            ":"\r\n            根据VB标识符比较规则比较两个VB标识符。\r\n            \r\n","\r\n            Initializes a new VBScript engine instance with the specified name and options.\r\n            ":"\r\n            初始化具有指定名称和选项的新的VBScript引擎实例。\r\n            \r\n"," has the same value.\r\n            ":" 具有相同的值。\r\n            \r\n","\r\n            points to during points to analysis.\r\n            NOTE: Values added to this set should not be removed.\r\n            ":"\r\n            指向分析要点期间。\r\n            注意：不应删除此组中添加的值。\r\n            \r\n",".\r\n            Otherwise, returns a ":"。\r\n            否则，返回\r\n","\r\n            Creates a new options instance with the specified documentation mode.\r\n            ":"\r\n            使用指定的文档模式创建一个新的选项实例。\r\n            \r\n","\r\n            Multiply a BigInteger by the given power of two.\r\n            ":"\r\n            将一个biginteger乘以两个给定能力。\r\n            \r\n","(x, _) = e":"（x，_）= e\r\n","\r\n            True if this token or its trivia has any annotations.\r\n            ":"\r\n            如果这个令牌或其琐事有任何注释，则是真的。\r\n            \r\n","\r\n             The current state of both warnings and annotations are inherited from\r\n             the project default.\r\n             ":"\r\n             警告和注释的当前状态均继承\r\n             项目默认值。\r\n             \r\n"," or an invalid operation for error cases.\r\n            ":" 或用于错误情况的无效操作。\r\n            \r\n","\r\n            By default, the work associated with this method will be executed immediately on the current thread.\r\n            Implementations that wish to schedule this work differently should override ":"\r\n            默认情况下，与此方法关联的工作将立即在当前线程上执行。\r\n            希望以不同方式安排这项工作的实施应覆盖\r\n","A sequence of tokens to insert into the tree immediately before the specified token.":"在指定令牌之前，立即插入树上的一系列令牌。\r\n","await using":"等待使用\r\n","\r\n            An index of the target constructor signature in \r\n            signaturesOfTypeIdentifierAttribute array, -1 if\r\n            this is not NoPia TypeIdentifier.\r\n            ":"\r\n            目标构造函数签名的索引\r\n            signaturesoftypeidentifierAttribute阵列，-1如果\r\n            这不是Nopia TypeIdentifier。\r\n            \r\n","\r\n            The event queue that this compilation was created with.\r\n            ":"\r\n            该汇编的事件队列是与之创建的。\r\n            \r\n","The output graph is built from the .write. tlogs":"输出图是由.write构建的。 tlogs\r\n","\r\n            Target architecture of the machine.\r\n            ":"\r\n            机器的目标架构。\r\n            \r\n","\r\n            Ensure that at least one EndOfLine trivia is kept if one was present \r\n            ":"\r\n            确保至少有一个内向琐事，如果有的话\r\n            \r\n","\r\n            Signs the contents of ":"\r\n            标志着内容\r\n","\r\n            Represents the C# '==' operator and VB 'Is' operator and '=' operator for non-object typed operands.\r\n            ":"\r\n            代表C＃'=='运算符和Vb'是“运算符”，而非对象打字操作数的操作符。\r\n            \r\n","A byte array filled with the contents of the file.":"一个字节阵列填充了文件的内容。\r\n","\r\n            Filter out warnings based on the compiler options (/nowarn, /warn and /warnaserror) and the pragma warning directives.\r\n            ":"\r\n            根据编译器选项（ /Nowarn， /Warn和 /Warnaserror）和Pragma警告指令过滤警告。\r\n            \r\n","\r\n            Returns true if the parameter was declared as a parameter array. \r\n            ":"\r\n            如果参数被声明为参数阵列，则返回true。\r\n            \r\n","\r\n            Get directory name from path.\r\n            ":"\r\n            从path获取目录名。\r\n            \r\n",", script code running in the current script\r\n            engine is permitted to use reflection. This affects\r\n            ":"，在当前脚本中运行的脚本代码\r\n            引擎可以使用反射。这会影响\r\n            \r\n","\r\n            Removes an indexed script object property.\r\n            ":"\r\n            删除索引的脚本对象属性。\r\n            \r\n","\r\n            Assembly symbols that the identities are resolved against.\r\n            ":"\r\n            汇编符号可以解决这些身份。\r\n            \r\n","\r\n            \"call ArrayGet\"  is equivalent of \"ldelem ElementType\" \r\n            when working with multidimensional arrays\r\n            ":"\r\n            “ Call Arrayget”等效于“ Ldelem ElementType”\r\n            使用多维阵列时\r\n            \r\n","\r\n            The element in the collection at the current position of the enumerator.\r\n              ":"\r\n            集合中的元素处于枚举器的当前位置。\r\n              \r\n"," is an alias of either peStream or signingStream, and is the stream that will be written to by the emitter.\r\n            ":" 是Pestream或签名流的别名，并且是发射器将写入的流。\r\n            \r\n"," only on the target assembly.\r\n            ":" 仅在目标组件上。\r\n            \r\n","\r\n            We need to store reference to the assembly metadata to keep the metadata alive while \r\n            symbols have reference to PEAssembly.\r\n            ":"\r\n            我们需要存储对大会元数据的引用，以使元数据保持活力\r\n            符号引用了农民组合。\r\n            \r\n","\r\n            The span to check.\r\n            ":"\r\n            检查的跨度。\r\n            \r\n","\r\n            True if the method may not be overridden.\r\n            ":"\r\n            如果该方法可能不被覆盖，则为正确。\r\n            \r\n","true if parsing was successful, otherwise false.":"如果解析成功，则是真的。\r\n","\r\n            Represents a base interface for assignments.\r\n            ":"\r\n            代表分配的基本接口。\r\n            \r\n","The name of the assembly that contains the types to add.":"包含要添加类型的组件的名称。\r\n","The script engine in which the promise will be used.":"使用承诺的脚本引擎。\r\n","\r\n            Generally, the type will be a type that explicitly implements an interface and the method will be the\r\n            implemented method (i.e. on the interface).\r\n            ":"\r\n            通常，该类型将是一种明确实现接口的类型，该方法将是\r\n            实现方法（即在接口上）。\r\n            \r\n","\r\n            Indicates whether the method is readonly, i.e.\r\n            i.e. whether the 'this' receiver parameter is 'ref readonly'.\r\n            Returns true for readonly instance methods and accessors\r\n            and for reduced extension methods with a 'this in' parameter.\r\n            ":"\r\n            指示该方法是否已阅读，即\r\n            即，“此“接收器”参数是否为'ref readonly'。\r\n            返回可读取实例方法和访问者的返回\r\n            以及使用“ this”参数的减少扩展方法。\r\n            \r\n"," is negative or longer than the ":" 负数或更长\r\n","Last write time (UTC).":"最后写时间（UTC）。\r\n","\r\n            Used for retrieving applied source security attributes, i.e. attributes derived from well-known SecurityAttribute.\r\n            ":"\r\n            用于检索应用的源安全属性，即从众所周知的SecurityAttribute得出的属性。\r\n            \r\n","Delegate to identify if the given location is in generated code.":"委托确定给定位置是否在生成代码中。\r\n"," is true.\r\n            Otherwise, returns null.\r\n            ":" 是真的。\r\n            否则，返回null。\r\n            \r\n","\r\n              Looks up a localized string similar to Argument contains duplicate analyzer instances..\r\n            ":"\r\n              查找类似于参数的本地化字符串包含重复的分析仪实例。\r\n            \r\n","\r\n            Gets the document category for ":"\r\n            获取文档类别\r\n"," regions. \r\n            Doesn't contain any ":" 地区。\r\n            不包含任何\r\n","\r\n            Indicates that the diagnostic is related to edit and continue.\r\n            ":"\r\n            表明诊断与编辑和继续有关。\r\n            \r\n","\r\n            Returns true if diagnostic descriptor is not configurable, i.e. cannot be suppressed or filtered or have its severity changed.\r\n            For example, compiler errors are always non-configurable.\r\n            ":"\r\n            如果诊断描述符无法配置，则返回为true，即不能抑制或过滤或更改其严重性。\r\n            例如，编译器错误始终是不可配合的。\r\n            \r\n","\r\n            Represents a method that retrieves context information for a document.\r\n            ":"\r\n            代表一种检索文档上下文信息的方法。\r\n            \r\n","\r\n            Reversed enumerable.\r\n            ":"\r\n            颠倒了。\r\n            \r\n","\r\n            Provides the base implementation for all Windows Script engines in a desktop environment.\r\n            ":"\r\n            在桌面环境中为所有Windows脚本引擎提供基本实现。\r\n            \r\n","\r\n             Texts to embed in the PDB.\r\n             Only supported when emitting Portable PDBs.\r\n             ":"\r\n             嵌入PDB的文本。\r\n             仅在发出便携式PDB时才支持。\r\n             \r\n","\r\n            Gets the stored bound attributes in the bag.\r\n            ":"\r\n            获取袋子中存储的绑定属性。\r\n            \r\n","\r\n            Gets the single ":"\r\n            获取单曲\r\n"," during instantiation.\r\n            Attempting to execute script code on a different thread results in an exception. Script\r\n            delegates and event handlers are marshaled synchronously onto the correct thread.\r\n            ":" 在实例化期间。\r\n            尝试在不同线程上执行脚本代码会导致异常。脚本\r\n            委托和事件处理程序同步将其固定在正确的线程上。\r\n            \r\n","\r\n              Looks up a localized string similar to separator is expected.\r\n            ":"\r\n              可以预期查找类似于分离器的局部字符串。\r\n            \r\n"," that represents a subrange of another ":" 这代表了另一个的子范围\r\n","\r\n            A set of symbols whose name emitted to metadata must include a \"#{generation}\" suffix to avoid naming collisions with existing types.\r\n            Populated based on semantic edits with ":"\r\n            一组发出元数据名称的符号必须包括一个“＃{generation}”后缀，以避免命名与现有类型的碰撞。\r\n            根据语义编辑的填充\r\n","\r\n            Returns syntax diagnostics produced by all ":"\r\n            所有人产生的返回语法诊断\r\n","A line-break (i.e. whitespace).":"断线（即空间）。\r\n","\r\n            Finds a descendant token of this node whose span includes the supplied position. \r\n            ":"\r\n            找到该节点的后代令牌，其跨度包括提供的位置。\r\n            \r\n","\r\n            Is the given bit array null?\r\n            ":"\r\n            给定的位阵列null吗？\r\n            \r\n","\r\n            Diagnostics produced during reference resolution and binding.\r\n            ":"\r\n            参考分辨率和结合期间产生的诊断。\r\n            \r\n","\r\n             Current Usage:\r\n               (1) C# VariableDeclaration\r\n               (2) C# fixed declarations\r\n               (3) C# using declarations\r\n               (4) VB Dim statement declaration groups\r\n               (5) VB Using statement variable declarations\r\n             ":"\r\n             当前用法：\r\n               （1）C＃variabledeclaration\r\n               （2）C＃修复声明\r\n               （3）C＃使用声明\r\n               （4）VB DIM语句声明组\r\n               （5）使用语句变量声明的VB\r\n             \r\n","\r\n            Returns true if this property is an auto-created WithEvents property that takes place of\r\n            a field member when the field is marked as WithEvents.\r\n            ":"\r\n            如果此属性是发生的自动创建的事件属性，则返回true\r\n            当字段标记为事件时，现场成员。\r\n            \r\n","The previous token that precedes this token in the syntax tree.":"先前的令牌先于语法树中的该令牌。\r\n","\r\n            Represents a discard operation.\r\n            ":"\r\n            代表丢弃操作。\r\n            \r\n","\r\n            This interface models the metadata representation of a managed pointer.\r\n            Remark: This should be only used in attributes. For other objects like Local variables etc\r\n            there is explicit IsReference field that should be used.\r\n            ":"\r\n            该接口对托管指针的元数据表示建模。\r\n            注释：这仅在属性中使用。对于其他对象，例如本地变量等\r\n            应使用明确的ISReference字段。\r\n            \r\n","Provider that computes the underlying value.":"计算基本价值的提供商。\r\n","If given ":"如果给出\r\n","\r\n            Current Usage:\r\n              (1) C# VariableDeclaration\r\n              (2) C# fixed declarations\r\n              (3) VB Dim statement declaration groups\r\n              (4) VB Using statement variable declarations\r\n            ":"\r\n            当前用法：\r\n              （1）C＃variabledeclaration\r\n              （2）C＃修复声明\r\n              （3）VB DIM语句声明组\r\n              （4）使用语句变量声明的VB\r\n            \r\n","\r\n            True if the two paths are the same.  (but only up to the specified length)\r\n            ":"\r\n            如果这两条路径相同，则为true。 （但只能达到指定的长度）\r\n            \r\n","\r\n            This is base class for a bag used to accumulate information while binding is performed.\r\n            Including diagnostic messages and dependencies in the form of \"used\" assemblies. \r\n            ":"\r\n            这是用于在执行绑定时用于积累信息的袋子的基类。\r\n            以“使用”组件的形式包括诊断消息和依赖关系。\r\n            \r\n","Compilation options.":"汇编选项。\r\n"," to merge and compare values.\r\n            ":" 合并和比较值。\r\n            \r\n","\r\n            Pointer to be dereferenced.\r\n            ":"\r\n            指针被删除。\r\n            \r\n","\r\n            When reporting diagnostics be sure not to include any information that can't be shared among \r\n            compilations that share the same reference manager (such as full identity of the compilation, \r\n            simple assembly name is ok).\r\n            ":"\r\n            报告诊断时，请确保不包含任何无法共享的信息\r\n            共享相同参考管理器的汇编（例如编译的完整身份，\r\n            简单的汇编名称可以）。\r\n            \r\n","; otherwise, the default value for type\r\n            ":";否则，类型的默认值\r\n            \r\n"," values are equal. Because ":" 值相等。因为\r\n","\r\n            There will be a 1-to-1 mapping for each generator. If a generator has yet to\r\n            be initialized or failed during initialization it's state will be ":"\r\n            每个发电机将有一个1比1的映射。如果发电机尚未\r\n            在初始化期间被初始化或失败，它的状态将为\r\n","First path: absolute, relative, or null.":"第一个路径：绝对、相对或null。\r\n","Second path: relative and non-null.":"第二个路径：相对和非空。\r\n","\r\n            All values have to be less than or equal to ":"\r\n            所有值必须小于或等于\r\n","This exception is thrown if ":"如果抛出此例外\r\n",". If a matching driver is found in the \r\n            cache, or explicitly passed via ":"。如果在\r\n            缓存或明确通过\r\n","\r\n            Gets the nodes within the subtree corresponding to the original tracked nodes.\r\n            Use TrackNodes to start tracking nodes.\r\n            ":"\r\n            获取与原始跟踪节点相对应的子树中的节点。\r\n            使用踪迹开始跟踪节点。\r\n            \r\n","\r\n            Compares two strings according to the Unicode rules for case-insensitive\r\n            identifier comparison (lower-case mapping).\r\n            ":"\r\n            根据对案例不敏感的Unicode规则进行比较两个字符串\r\n            标识符比较（下盘映射）。\r\n            \r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n            specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n            accessible. \r\n            \r\n            Does not return INamespaceOrTypeSymbol, because there could be aliases.\r\n            ":"\r\n            “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n            指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n            无障碍。\r\n            \r\n            不返回InamespaceOrtyPesymbol，因为可能会有别名。\r\n            \r\n","\r\n            Represents a single item or many items.\r\n            ":"\r\n            代表一个或许多项目。\r\n            \r\n","Target label to branch to if key = stringConstant":"目标标签到分支到if key = stringconstant\r\n","\r\n            Option to configure required modifiers for analyzed APIs.\r\n            Allowed option values: One or more fields of flags enum ":"配置所需修饰符的选项，以进行分析的API。\r\n            允许的选项值：一个或多个标志字段枚举\r\n","\r\n            Semantic diagnostics reported by the ":"\r\n            语义诊断报告\r\n","\r\n            Represents an unrolled/lowered query expression in C# and VB.\r\n            For example, for the query expression \"from x in set where x.Name != null select x.Name\", the Operation tree has the following shape:\r\n              ITranslatedQueryExpression\r\n                IInvocationExpression ('Select' invocation for \"select x.Name\")\r\n                  IInvocationExpression ('Where' invocation for \"where x.Name != null\")\r\n                    IInvocationExpression ('From' invocation for \"from x in set\")\r\n            ":"\r\n            表示C＃和VB中的展开/降低查询表达式。\r\n            例如，对于查询表达式“ x in set where x.name！= null select x.name”，操作树具有以下形状：\r\n              itranslatedQuery表达\r\n                iinvocation expression（“选择x.name”的'选择'调用）\r\n                  iinvocation expression（'where'调用“ where x.name！= null”）\r\n                    IInvocationExpression ('From' invocation for \"from x in set\")\r\n            \r\n","\r\n            Count of registered additional file actions.\r\n            ":"\r\n            注册的其他文件操作计数。\r\n            \r\n","\r\n            List of operations to execute before entry to the loop. For C#, this comes from the first clause of the for statement.\r\n            ":"\r\n            进入循环之前要执行的操作列表。对于C＃，这来自for语句的第一条。\r\n            \r\n",").\r\n            \r\n            Non-reduced extension methods are considered regardless of the value of ":"）。\r\n            \r\n            无论价值如何\r\n","\r\n            Invokes a delegate that returns a value on the script engine's thread.\r\n            ":"\r\n            调用返回脚本引擎线程值的委托。\r\n            \r\n","\r\n            Marker interface for analysis contexts for execution of ":"\r\n            用于执行的分析上下文的标记接口\r\n","\r\n            Returns the first child in the list.\r\n            ":"\r\n            返回列表中的第一个孩子。\r\n            \r\n","\r\n            Casts a dynamic host object to its static type.\r\n            ":"\r\n            将动态主机对象施加到其静态类型。\r\n            \r\n","\r\n            The algorithm used finds all instances of .\\d+. and .\\d+- in the filename and translates them\r\n            to .[ID]. and .[ID]- respectively, where \"filename\" is defined as the part of the path following \r\n            the final '\\' in the path.  \r\n            \r\n            In the VS 2010 C++ project system, there are artificially constructed tlogs that instead follow the \r\n            pattern \"ProjectName.read/write.1.tlog\", which means that one result of this change is that such \r\n            tlogs, should the project name also contain this pattern (e.g. ClassLibrary.1.csproj), will also end up\r\n            with [ID] being substituted for digits in the project name itself -- so the tlog name would end up being \r\n            ClassLibrary.[ID].read.[ID].tlog, rather than ClassLibrary.1.read.[ID].tlog.  This could potentially \r\n            cause issues if there are multiple projects differentiated only by the digits in their names; however \r\n            we believe this is not an interesting scenario to watch for and support, given that the resultant rooting \r\n            marker is constructed from full paths, so either: \r\n            - The project directories are also different, and are never substituted, leading to different full paths (e.g. \r\n              C:\\ClassLibrary.1\\Debug\\ClassLibrary.[ID].read.[ID].tlog and C:\\ClassLibrary.2\\Debug\\ClassLibrary.[ID].read.[ID].tlog)\r\n            - The project directories are the same, in which case there are two projects that share the same intermediate \r\n              directory, which has a host of other problems and is explicitly NOT a supported scenario.  \r\n            ":"\r\n            所使用的算法找到了所有实例。\\ d+。和。\\ d+ - 在文件名中并翻译它们\r\n            to。[id]。和。[id]  - 分别将“文件名”定义为路径的一部分。\r\n            路径中的最终“ \\”。\r\n            \r\n            在VS 2010 C ++项目系统中，有一些人为构造的TLOG，而是遵循\r\n            模式“ projectname.read/write.1.tlog”，这意味着此更改的结果是这样\r\n            tlogs，如果项目名称还包含此模式（例如ClassLibrary.1.csproj），也将最终出现\r\n            在[id]被替换为项目名称本身中的数字 - 因此TLOG名称最终将成为\r\n            classLibrary。[id] .Read。[id] .tlog，而不是classLibrary.1.Read。[id] .tlog。这可能是可能的\r\n            如果有多个项目仅以其名称中的数字区分，则导致问题；然而\r\n            我们认为这不是一个有趣的场景，鉴于由此产生的生根\r\n            标记是由完整的路径构造的，所以要么：\r\n             - 项目目录也有所不同，从未被替换，导致了不同的完整路径（例如，\r\n              c：\\ classLibrary.1 \\ debug \\ classLibrary。[id] .Read。[id] .tlog和c：\\ classLibrary.2 \\ debug \\ classLibrary。[id] .Read。[id] .tlog）\r\n             - 项目目录是相同的，在这种情况下，有两个项目共享相同的中级\r\n              目录，有许多其他问题，明确不是支持的情况。\r\n            \r\n","\r\n            A type or method instance will match another instance if it has a type for this parameter that is the same or a supertype of the type the\r\n            other instance has for this parameter.\r\n            ":"\r\n            如果类型或方法实例将其匹配另一个实例，则该实例具有此参数的类型，该参数是相同的或类型的supertype\r\n            其他实例具有此参数。\r\n            \r\n","\r\n            The number of named arguments.\r\n            ":"\r\n            指定参数的数量。\r\n            \r\n","If the sequence is null, this will return an empty array.":"如果序列为空，则将返回一个空数组。\r\n","\r\n            This function is provided for script languages that do not support external\r\n            instantiation. It is overloaded with ":"\r\n            此功能是为不支持外部支持的脚本语言提供的\r\n            实例化。它超载\r\n","\r\n            Path of the PDB file or null if same as output binary path with .pdb extension.\r\n            ":"\r\n            PDB文件的路径或null的路径（如果与.pdb扩展名的输出二进制路径相同）。\r\n            \r\n","\r\n            Represents parse options common to C# and VB.\r\n            ":"\r\n            表示C＃和VB共有的解析选项。\r\n            \r\n","\r\n            Operation visitor to flow the dispose values across a given statement in a basic block.\r\n            ":"\r\n            操作访问者以基本块中的给定语句中的处置值流动。\r\n            \r\n"," for a given node":" 对于给定的节点\r\n"," are the specifed value and other properties are copied\r\n            from the current tree.\r\n            ":" 是否复制了指定的值和其他属性\r\n            从当前树。\r\n            \r\n","\r\n            Represents a syntactically or semantically invalid C# or VB statement.\r\n            ":"\r\n            表示句法或语义上无效的C＃或VB语句。\r\n            \r\n","\r\n            A range of CLR IL operations that comprise a lexical scope.\r\n            ":"\r\n            一系列包含词汇范围的CLR IL操作。\r\n            \r\n","The name of the cancel event tracker should listen for, or null if there isn't one":"取消事件跟踪器的名称应收听，或者如果没有\r\n"," branch or\r\n            the ":" 分支或\r\n            这\r\n","\r\n            Captures the set of synthesized definitions that should be added to a type\r\n            during emit process.\r\n            ":"\r\n            捕获应添加到类型的合成定义集\r\n            在发射过程中。\r\n            \r\n"," if the generator completed without error.\r\n            ":" 如果发电机完成没有错误。\r\n            \r\n","\r\n            The following code retrieves the assembly-qualified name of a host type.\r\n            It assumes that an instance of ":"\r\n            以下代码检索主机类型的组装合格名称。\r\n            它假设一个实例\r\n","\r\n            Includes square brackets around optional parameters.\r\n            ":"\r\n            包括围绕可选参数的方括号。\r\n            \r\n","\r\n            Represents a node in the execution pipeline of an incremental generator\r\n            ":"\r\n            表示增量发电机的执行管道中的节点\r\n            \r\n","\r\n            Specifies whether or not optimizations should be performed on the output IL.\r\n            This is independent of whether or not PDB information is generated.\r\n            ":"\r\n            指定是否应在输出IL上进行优化。\r\n            这与是否生成PDB信息无关。\r\n            \r\n","\r\n            The first node in the list or default if the list is empty.\r\n            ":"\r\n            如果列表为空，则列表中的第一个节点或默认值。\r\n            \r\n","\r\n            The name assigned to the Multiply operator.\r\n            ":"\r\n            分配给乘数运算符的名称。\r\n            \r\n","\r\n            Variables declared by the statement.\r\n            ":"\r\n            声明声明的变量。\r\n            \r\n","\r\n            Creates a new immutable array based on filtered elements by the predicate. The array must not be null.\r\n            ":"\r\n            基于谓词过滤的元素创建一个新的不变阵列。阵列不得无效。\r\n            \r\n","\r\n            Specify the preferred output language name.\r\n            ":"\r\n            指定首选输出语言名称。\r\n            \r\n"," and extension \".write\" logging the files written to during compilation.\r\n            ":" 和扩展名。\r\n            \r\n","\r\n            Exposes a host type to script code with the specified options. The type is specified by name.\r\n            ":"用指定的选项将主机类型公开为脚本代码。该类型是按名称指定的。\r\n            \r\n","\r\n            Creates a new options instance with the specified public sign setting.\r\n            ":"\r\n            使用指定的公共符号设置创建一个新的选项实例。\r\n            \r\n","A buffer containing the encoded text.":"包含编码文本的缓冲区。\r\n","\r\n            Specifies that the host resource's dynamic members are not to be exposed. This option\r\n            applies only to objects that implement ":"\r\n            指定主机资源的动态成员不应公开。此选项\r\n            仅适用于实现的对象\r\n","\r\n            Returns the only element of specified sequence if it has exactly one, and default(TSource) otherwise.\r\n            Unlike ":"\r\n            如果它具有一个，则返回指定序列的唯一元素，否则默认（tsource）。\r\n            与众不同\r\n"," to scan for possible overloads":" 扫描可能的超载\r\n","\r\n            Scope for setting up analyzers for a code block, capable of retrieving the actions.\r\n            ":"\r\n            用于为代码块设置分析仪的范围，能够检索操作。\r\n            \r\n","Compilation events to analyze.":"汇编事件要分析。\r\n","\r\n            The method definitions to be emitted, in row order. These\r\n            are just the method definitions from the current generation.\r\n            ":"\r\n            方法定义要以行顺序排列。这些\r\n            只是当前一代的方法定义。\r\n            \r\n","\r\n            Emit the IL for the compilation into the specified stream.\r\n            ":"\r\n            将汇编的IL发射到指定的流中。\r\n            \r\n","Target ??= Value":"目标?? =值\r\n","Stream must be readable.":"流必须可读。\r\n","\r\n            Condition of the loop. This comes from the second clause of the for statement.\r\n            ":"\r\n            循环的条件。这来自for语句的第二子句。\r\n            \r\n","The token to remove.":"令牌要删除。\r\n","Maps #r values to successfully resolved metadata references. Does not contain values that failed to resolve.":"地图#R值成功解析了元数据参考。不包含未能解析的值。\r\n"," appears in the set. false otherwise.":" 出现在集合中。否则为错误。\r\n","\r\n            Acquires an element setter method for a given array type\r\n            ":"\r\n            获取给定数组类型的元素设置器方法\r\n            \r\n"," API\r\n            to get execute these actions to get the per-compilation analyzer actions.\r\n            ":" API\r\n            为了执行这些操作，以获取每编译分析仪的操作。\r\n            \r\n"," defined in this assembly reference of given ":" 在给定的此组件参考中定义\r\n","\r\n            Nullable annotation associated with the type, or ":"\r\n            与类型相关的无效注释或\r\n","\r\n            Populates a empty dictionary of SyntaxNode->IOperation, where every key corresponds to an explicit IOperation node.\r\n            If there is a SyntaxNode with more than one explicit IOperation, this will throw.\r\n            ":"\r\n            填充语法> ioperation的空词典，其中每个密钥都对应于一个显式ioperation节点。\r\n            如果存在具有多个显式ioperation的语法句，这将抛出。\r\n            \r\n","\r\n              Looks up a localized string similar to The stream cannot be written to..\r\n            ":"\r\n              查找类似于流的本地化字符串无法写入。\r\n            \r\n","\r\n            The format of the containing type is determined by ":"\r\n            包含类型的格式由\r\n","\r\n            Represents the C# 'true' operator and VB 'IsTrue' operator.\r\n            ":"\r\n            代表C＃'true'运算符和VB'IsTrue'运算符。\r\n            \r\n","The string representation of this token, not including its leading and trailing trivia.":"这个令牌的字符串表示，不包括其领先和尾随的琐事。\r\n","\r\n            True if there's a stackalloc somewhere in the method.\r\n            ":"\r\n            如果方法中的某个地方有stackalloc，则为thu。\r\n            \r\n"," in the signature are really dynamic.\r\n            ":" 在签名中确实是动态的。\r\n            \r\n","\r\n            Represents a textual literal numeric, string, etc.\r\n            ":"\r\n            代表文本文字数字，字符串等。\r\n            \r\n","Arguments to the message of the diagnostic.":"诊断信息的论点。\r\n","Value associated with the key.":"与密钥关联的值。\r\n","\r\n            The low 32 bits of the number of seconds since 00:00 January 1, 1970, that indicates when the file was created.\r\n            ":"\r\n            自1970年1月1日以来的秒数中，低32位的秒数中的秒数表明何时创建了文件。\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Byte\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toByte(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.byte”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.tobyte（42））;\r\n            \r\n","\r\n            The number of array dimensions.\r\n            ":"\r\n            数组尺寸的数量。\r\n            \r\n"," that correspond to references with non-matching (unified) \r\n            version along with unification details.\r\n            ":" 这对应于具有非匹配（统一）的参考\r\n            版本以及统一详细信息。\r\n            \r\n","\r\n            Formats a symbol description in a form that suits ":"\r\n            格式化适合形式的符号描述\r\n"," (VB) directives.\r\n            ":" （VB）指令。\r\n            \r\n","\r\n            Try to get all symbols that match the reference id string.\r\n            Returns true if at least one symbol matches.\r\n            ":"\r\n            尝试获取与参考ID字符串匹配的所有符号。\r\n            如果至少一个符号匹配，则返回真实。\r\n            \r\n","\r\n             If this text was constructed via ":"\r\n             如果此文本是通过\r\n"," objects may cache information decoded from the PE image.\r\n             Reusing ":" 对象可能会缓存从PE图像解码。\r\n             重复使用\r\n","A document name for the script code. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.":"脚本代码的文档名称。当前，此名称仅在演示文稿上下文中用作标签，例如调试器用户界面。\r\n","\r\n            Get all the annotations of the specified annotation kind.\r\n            ":"\r\n            获取指定注释类型的所有注释。\r\n            \r\n","\r\n            Gets or sets the minimum time interval between consecutive heap size samples.\r\n            ":"\r\n            获取或设置连续堆尺寸样本之间的最小时间间隔。\r\n            \r\n","\r\n            Writes a Single value to the stream.\r\n            ":"\r\n            将单个值写入流。\r\n            \r\n","\r\n            Includes the name of corresponding interface on members that explicitly implement\r\n            interface members.\r\n            For example, \"IGoo.Bar { get; }\".\r\n            ":"\r\n            包括明确实现的成员上对应接口的名称\r\n            接口成员。\r\n            例如，“ igoo.bar {get;}”。\r\n            \r\n","\r\n            For information about the mapping between host members and script-callable properties\r\n            and methods, see ":"\r\n            有关主机成员与脚本可爱属性之间映射的信息\r\n            和方法，请参阅\r\n","\r\n            Creates a byte array containing a copy of the ":"\r\n            创建一个包含该副本的字节数组\r\n","\r\n            The original definition of this symbol. If this symbol is constructed from another\r\n            symbol by type substitution then ":"\r\n            此符号的原始定义。如果此符号是从另一个符号构造的\r\n            然后按类型替换符号\r\n","\r\n            Register an action to be executed for each non-code document.\r\n            An additional file action reports ":"\r\n            注册要为每个非代码文档执行的操作。\r\n            其他文件操作报告\r\n","\r\n            Given a set of sources, removes from the dependency graph any roots that share\r\n            the same outputs as the rooting marker constructed from the given set of sources. \r\n            ":"\r\n            给定一组来源，从依赖关系图中删除任何共享的根\r\n            与从给定的一组源构建的生根标记相同的输出。\r\n            \r\n","\r\n            Gets the stored decoded data.\r\n            ":"\r\n            获取存储的解码数据。\r\n            \r\n","\r\n            Represents the '/' operator.\r\n            ":"\r\n            代表“/”运算符。\r\n            \r\n","\r\n            The symbol name assigned to all indexers, other than explicit interface implementations.\r\n            ":"\r\n            除明确的接口实现外，分配给所有索引器的符号名称。\r\n            \r\n","\r\n            Specifies that ":"\r\n            指定\r\n","\r\n            The usage is:\r\n                   var inst = PooledStringBuilder.GetInstance();\r\n                   var sb = inst.builder;\r\n                   ... Do Stuff...\r\n                   ... sb.ToString() ...\r\n                   inst.Free();\r\n            ":"\r\n            用法是：\r\n                   var inst = pooledStringBuilder.getInstance（）;\r\n                   var sb = inst.builder;\r\n                   ... 做东西...\r\n                   ... sb.tostring（）...\r\n                   inst.free（）;\r\n            \r\n","\r\n            For each TypeDef that has 1 in m_lazyNoPiaLocalTypeCheckBitMap,\r\n            this map stores corresponding TypeIdentifier AttributeInfo. \r\n            ":"\r\n            对于每个在m_lazynopialocaltypecheckbitmap中具有1个的Typedef，\r\n            该地图存储相应的TypeIdentifier AttributeInfo。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid public key..\r\n            ":"\r\n              查找类似于无效公钥的本地化字符串。\r\n            \r\n"," occurs.  However, the accessibility rules\r\n            are different: protected members of the base type will be visible.\r\n            \r\n            Consider the following example:\r\n            \r\n              public class Base\r\n              {\r\n                  protected void M() { }\r\n              }\r\n              \r\n              public class Derived : Base\r\n              {\r\n                  void Test(Base b)\r\n                  {\r\n                      b.M(); // Error - cannot access protected member.\r\n                      base.M();\r\n                  }\r\n              }\r\n            \r\n            Protected members of an instance of another type are only accessible if the instance is known\r\n            to be \"this\" instance (as indicated by the \"base\" keyword).\r\n            ":" 发生。但是，可访问性规则\r\n            有所不同：基本类型的受保护成员将是可见的。\r\n            \r\n            考虑以下示例：\r\n            \r\n              公共班级\r\n              {\r\n                  受保护的void m（）{}\r\n              }\r\n              \r\n              派生公共类：基础\r\n              {\r\n                  空隙测试（基本B）\r\n                  {\r\n                      B.M（）; //错误 - 无法访问受保护的成员。\r\n                      base.m（）;\r\n                  }\r\n              }\r\n            \r\n            仅当已知实例的情况下，只能访问其他类型实例的受保护成员\r\n            为“此”实例（如“基本”关键字所示）。\r\n            \r\n","Options to configure analyzer execution within ":"配置分析仪执行的选项\r\n"," to a strongly\r\n            typed list.\r\n            It assumes that an instance of ":" 强烈\r\n            打字列表。\r\n            它假设一个实例\r\n","\r\n            Allows for the comparison of two ":"\r\n            可以比较两个\r\n","The maximum number of elements to copy.":"要复制的最大元素数。\r\n"," from a source basic block to a non-null destination basic block.\r\n            ":" 从源基本块到非NULL目标基本块。\r\n            \r\n","\r\n            Abstract copy value shared by a set of one of more ":"\r\n            一组另一组共享的抽象复制值\r\n"," for this CompilationWithAnalyzers instance.\r\n            Depending on analyzers' behavior, some diagnostics that would be reported for the file by an analysis of the complete compilation can be absent.\r\n            ":" 对于此汇编WithAnalyzers实例。\r\n            根据分析仪的行为，可以不对完整汇编进行分析来报告文件的某些诊断。\r\n            \r\n","\r\n            If this is a type parameter of a reduced extension method, gets the type parameter definition that\r\n            this type parameter was reduced from. Otherwise, returns Nothing.\r\n            ":"\r\n            如果这是简化扩展方法的类型参数，请获取类型参数定义\r\n            此类参数从中降低。否则，什么都没有。\r\n            \r\n"," implementation of this method invokes\r\n            ":" 该方法的实现调用\r\n            \r\n","\r\n            Gets the operation for the object being created that is being referenced by ":"\r\n            获取正在创建的对象的操作\r\n","true if the value was removed successfully; otherwise false.":"如果成功删除该值，则为是真的；否则错误。\r\n","\r\n            // create and populate an array of integers\r\n            var EnumerableT = host.type(\"System.Linq.Enumerable\", \"System.Core\");\r\n            var array = EnumerableT.Range(1, 5).ToArray();\r\n            // import the callback type required to call Array.ForEach\r\n            var Int32T = host.type(\"System.Int32\");\r\n            var CallbackT = host.type(\"System.Action\", Int32T);\r\n            // use Array.ForEach to calculate a sum\r\n            var sum = 0;\r\n            var ArrayT = host.type(\"System.Array\");\r\n            ArrayT.ForEach(array, host.del(CallbackT, function (value) { sum += value; }));\r\n            ":"\r\n            //创建和填充整数数组\r\n            var enumerablet = host.type（“ system.linq.edumable”，“ system.core”）;\r\n            var array = enumerablet.range（1，5）.toArray（）;\r\n            //导入调用array.foreach所需的回调类型\r\n            var int32t = host.type（“ system.int32”）;\r\n            var callbackt = host.type（“ system.action”，int32t）;\r\n            //使用array.foreach计算总和\r\n            var sum = 0;\r\n            var arrayt = host.type（“ system.Array”）;\r\n            arrayt.foreach（array，host.del（callbackt，function（value）{sum += value;}））;\r\n            \r\n"," in its list of dependencies.":" 在其依赖列表中。\r\n","\r\n            Returns a new compilation with a given event queue.\r\n            ":"\r\n            返回给定事件队列的新汇编。\r\n            \r\n","\r\n            Writes the text of this token to the specified TextWriter, optionally including trivia.\r\n            ":"\r\n            将这个令牌的文本写给指定的文本作者，可选地包括琐事。\r\n            \r\n","\r\n            Determines where this trivia has any annotations of the specified annotation kinds.\r\n            ":"\r\n            确定该琐事在何处具有指定注释类型的任何注释。\r\n            \r\n","PDB stream should not be given when embedding PDB into the PE stream.":"将PDB嵌入到PE流中时，不应给出PDB流。\r\n"," \r\n            method other than having a method body (extern, interface, or abstract methods are not allowed).\r\n            ":" \r\n            除了具有方法主体（不允许使用外部，界面或抽象方法）以外。\r\n            \r\n","\r\n            The settings that determine other characteristics of how symbols are displayed.\r\n            ":"\r\n            确定符号如何显示的其他特征的设置。\r\n            \r\n","\r\n            Exceeding this limit causes the V8 runtime to interrupt script execution and throw an\r\n            exception. To re-enable script execution, set this property to a new value.\r\n            ":"\r\n            超过此限制会导致V8运行时中断脚本执行并投掷\r\n            例外。要重新启用脚本执行，请将此属性设置为新值。\r\n            \r\n","\r\n            Count of registered suppression actions.\r\n            This is the same as count of ":"\r\n            注册抑制作用的计数。\r\n            这与计数相同\r\n","\r\n            Returns MetadataToken for type ref matching resolution scope and name\r\n            ":"\r\n            返回用于类型ref匹配分辨率范围和名称的类型元数据\r\n            \r\n","The new aliases for the reference.":"引用的新别名。\r\n","\r\n            Returns zero or more local variable definitions that are local to the given scope.\r\n            ":"\r\n            返回给定范围本地的零或更多本地变量定义。\r\n            \r\n","\r\n            Return the 1-based index of the assembly reference, adding\r\n            the reference to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回汇编参考的1个基于1的索引\r\n            如果丢失了这一代的索引的引用。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","\r\n            The 1-based index of the field definition.\r\n            The index is into the full metadata.\r\n            ":"\r\n            字段定义的基于1个索引。\r\n            该索引进入了完整的元数据。\r\n            \r\n","\r\n            Allow the use of ":"\r\n            允许使用\r\n","The old reference.":"旧引用。\r\n","\r\n            True if the compilation represents an interactive submission.\r\n            ":"\r\n            如果汇编代表交互式提交，则为正确。\r\n            \r\n","The script options for the target type member.":"目标类型成员的脚本选项。\r\n","\r\n            The compiler needs to define an ordering among different partial class in different syntax trees\r\n            in some cases, because emit order for fields in structures, for example, is semantically important.\r\n            This function defines an ordering among syntax trees in this compilation.\r\n            ":"\r\n            编译器需要定义不同语法树中不同部分类别之间的订购\r\n            在某些情况下，例如，由于结构中的字段排序在语义上很重要。\r\n            此函数定义了本汇编中语法树之间的顺序。\r\n            \r\n"," \r\n            is called before an element becomes available, the returned task is cancelled.\r\n            ":" \r\n            在元素可用之前调用，取消返回的任务。\r\n            \r\n"," contains * the version build and/or revision numbers are set to ":" 包含 *版本构建和/或修订号设置为\r\n","\r\n            Indicates the reasons why a candidate (or set of candidate) symbols were not considered\r\n            correct in SemanticInfo. Higher values take precedence over lower values, so if, for\r\n            example, there a symbol with a given name that was inaccessible, and other with the wrong\r\n            arity, only the inaccessible one would be reported in the SemanticInfo.\r\n            ":"\r\n            表示未考虑候选人（或候选人）符号的原因\r\n            在Semanticinfo中正确。较高的值优先于较低的值，因此\r\n            例如，有一个给定名称无法访问的符号，而其他符号则是错误的\r\n            Arity，只有在Semanticinfo中才能报道的。\r\n            \r\n","Name cannot be null.":"名称不能为空。\r\n","\r\n            An object specifying how parameters should be formatted.\r\n            ":"\r\n            指定应如何格式的对象。\r\n            \r\n"," gives internals\r\n            access to assembly ":" 给出内部\r\n            访问集会\r\n","\r\n            Assembly name override - file name and extension. If not specified the compilation name is used.\r\n            ":"\r\n            汇编名称覆盖 - 文件名和扩展名。如果未指定，则使用汇编名称。\r\n            \r\n","\r\n            Disables all optimizations and instruments the generated code to improve debugging experience.\r\n            ":"\r\n            禁用所有优化和仪器生成的代码，以改善调试经验。\r\n            \r\n","\r\n            Scope of user-defined variable hoisted to state machine.\r\n            ":"\r\n            用户定义的变量范围悬挂在状态机上。\r\n            \r\n","\r\n            Initializes a new JScript engine instance with the specified programmatic\r\n            identifier, name, list of supported file name extensions, and options.\r\n            ":"\r\n            用指定的程序化初始化新的JScript引擎实例\r\n            标识符，名称，支持的文件名扩展名列表和选项。\r\n            \r\n","\r\n            Get all the members of this symbol.\r\n            ":"\r\n            获取此符号的所有成员。\r\n            \r\n","\r\n            The severity of the diagnostic may cause the compilation to fail, depending on the ":"\r\n            诊断的严重程度可能导致汇编失败，具体取决于\r\n","IO error reading the metadata. See ":"io错误阅读元数据。看\r\n","\r\n            Count of registered symbol actions.\r\n            ":"\r\n            注册符号操作的计数。\r\n            \r\n","\r\n            The code was lazily determined and does not need to be reported.\r\n            ":"\r\n            该代码懒惰地确定，不需要报告。\r\n            \r\n","\r\n            Writes a Int64 value to the stream.\r\n            ":"\r\n            将INT64值写入流。\r\n            \r\n","\r\n            The ordinal position of the type parameter in the parameter list which declares\r\n            it. The first type parameter has ordinal zero.\r\n            ":"\r\n            参数列表中类型参数的序数位置，该参数列表声明\r\n            它。第一个类型参数具有序数零。\r\n            \r\n","The container to search for symbols within. If null then the enclosing declaration\r\n            scope around position is used.":"要搜索内部符号的容器。如果null，则封闭声明\r\n            使用位置周围的范围。\r\n","\r\n            Returns true if a given field is a default tuple element\r\n            ":"\r\n            如果给定字段是默认元组元素，则返回true\r\n            \r\n","\r\n            Path to the file.\r\n            ":"\r\n            文件的路径。\r\n            \r\n","\r\n            Indicates a C# for loop or a VB For loop.\r\n            ":"\r\n            指示循环的C＃或vb表示循环。\r\n            \r\n","\r\n            Writes a String value to the stream.\r\n            ":"\r\n            将字符串值写入流。\r\n            \r\n","\r\n            Gets the number of dimensions of this array. A regular single-dimensional array\r\n            has rank 1, a two-dimensional array has rank 2, etc.\r\n            ":"\r\n            获取此数组的尺寸数。常规的单维阵列\r\n            有等级1，二维阵列的等级为2，等等。\r\n            \r\n","The cached table entry":"缓存的桌子条目\r\n","\r\n            Kinds of loops.\r\n            ":"\r\n            循环。\r\n            \r\n","\r\n            Represents a declaration expression operation. Unlike a regular variable declaration ":"\r\n            代表声明表达操作。与常规变量声明不同\r\n","\r\n            C# has a special implementation that implements idiosyncratic behavior of csc.\r\n            ":"\r\n            C＃具有特殊的实现，可实现CSC的特殊行为。\r\n            \r\n","\r\n             Used for logging all compiler diagnostics into a given ":"\r\n             用于将所有编译器诊断记录到给定的\r\n","\r\n            The id for this metadata instance.  If two metadata instances have the same id, then \r\n            they have the same content.  If they have different ids they may or may not have the\r\n            same content.\r\n            ":"\r\n            此元数据实例的ID。如果两个元数据实例具有相同的ID，则\r\n            他们有相同的内容。如果他们有不同的ID，则可能或可能没有\r\n            相同的内容。\r\n            \r\n","\r\n            Decode the arguments to DeprecatedAttribute. DeprecatedAttribute can have 3 or 4 arguments.\r\n            ":"\r\n            将论点解码为弃用。弃用属性可以有3或4个参数。\r\n            \r\n","The generator to get the type of":"发电机以获取类型\r\n","\r\n            Count of registered symbol start actions.\r\n            ":"\r\n            注册符号启动操作的计数。\r\n            \r\n","\r\n            Some of the slots might not be used anymore (a variable might have been deleted or its type changed).\r\n            Still, new hoisted variables are assigned slots starting with ":"\r\n            某些插槽可能不再使用（可能已删除变量或更改其类型）。\r\n            尽管如此，新提起的变量还是从\r\n","\r\n            Returns true if we have any pending syntax analysis for given analysis scope.\r\n            ":"如果我们对给定的分析范围进行任何待处理的语法分析，则返回为真。\r\n            \r\n","\r\n            The sequence of AssemblySymbols the Binder can choose from.\r\n            ":"\r\n            粘合剂可以选择的汇编符号序列。\r\n            \r\n","\r\n            True to emit PDB file.\r\n            ":"\r\n            忠实于发射PDB文件。\r\n            \r\n","Null Reference":"null引用\r\n","\r\n            Creates a new options instance with the specified output kind.\r\n            ":"\r\n            用指定的输出类型创建一个新的选项实例。\r\n            \r\n","\r\n            Subsystem version: Windows Vista\r\n            ":"\r\n            子系统版本：Windows Vista\r\n            \r\n","\r\n            Represents a new/New expression.\r\n            ":"\r\n            代表一个新的/新的表达。\r\n            \r\n"," is specified and the PE headers of the image are invalid.\r\n            ":" 指定图像的PE标题无效。\r\n            \r\n","\r\n            Contains the caller's analysis context data passed to context sensitive interprocedural analysis, ":"\r\n            包含呼叫者的分析上下文数据传递给上下文敏感的概要分析，\r\n"," does not start with a valid header, then ":" 不从有效的标头开始，然后\r\n","\r\n            Holds the captured values for initialized anonymous type properties in an anonymous object initializer.\r\n            ":"\r\n            在匿名对象初始化器中保存初始化匿名类型属性的捕获值。\r\n            \r\n","\r\n            The character position within the line.\r\n            ":"\r\n            线路内的角色位置。\r\n            \r\n"," is the stream which will be signed by the legacy strong name signer, or null if we aren't using the legacy signer\r\n            * ":" 是由旧的名称签名签名的流还是null，如果我们不使用旧的签名者\r\n            *\r\n","\r\n            The narrowed type of the pattern-matching operation.\r\n            ":"\r\n            模式匹配操作的狭窄类型。\r\n            \r\n","\r\n            Gets a list of descendant nodes and tokens (including this node) in prefix document order.\r\n            ":"\r\n            获取以前缀文档顺序中的后代节点和令牌（包括此节点）的列表。\r\n            \r\n","\r\n            An object representing how miscellaneous symbols will be formatted.\r\n            ":"\r\n            代表如何格式化杂项符号的对象。\r\n            \r\n"," option is set.\r\n            ":" 设置选项。\r\n            \r\n","\r\n            Symbol is updated.\r\n            ":"\r\n            符号已更新。\r\n            \r\n",", the corresponding key exists in ":"，相应的密钥存在于\r\n","\r\n            Locals declared.\r\n            ":"\r\n            当地人宣布。\r\n            \r\n","The cache entry to check":"缓存条目检查\r\n",". This method will unwrap and return the underlying type\r\n            in those cases.\r\n            ":"。此方法将解开并返回基础类型\r\n            在这些情况下。\r\n            \r\n"," if undefined.\r\n            ":" 如果不确定。\r\n            \r\n","\r\n             value is given that value as its unique key. Subsequent adds with the same ID will have .NNN\r\n             apppended to their with an auto-incremented numeric value.\r\n             ":"\r\n             值将值作为其唯一键。随后的添加具有相同的ID将具有.nnn\r\n             使用自动插入数字值将其应用于它们。\r\n             \r\n","Action to be executed for an operation block.":"操作块执行的操作。\r\n","\r\n            Returns collection of names of members declared within this type.\r\n            ":"\r\n            返回此类型中声明的成员名称的收集。\r\n            \r\n","\r\n            An IErrorTypeSymbol is used when the compiler cannot determine a symbol object to return because\r\n            of an error. For example, if a field is declared \"Foo x;\", and the type \"Foo\" cannot be\r\n            found, an IErrorTypeSymbol is returned when asking the field \"x\" what it's type is.\r\n            ":"\r\n            当编译器无法确定要返回的符号对象时，请使用ieRrortyPesymbol\r\n            错误。例如，如果字段声明为“ foo x”；而类型“ foo”不能为\r\n            发现，当询问字段“ x”字段时，将返回一个iErrortypesymbol。\r\n            \r\n","\r\n            The variables declared by this using declaration.\r\n            ":"\r\n            使用声明声明的变量。\r\n            \r\n","\r\n            Represents a single using directive (Imports clause).\r\n            ":"\r\n            代表使用指令（导入子句）的单个。\r\n            \r\n","\r\n            Displays the extension method based on its ":"\r\n            根据其显示扩展方法\r\n","\r\n            True if the return value is passed by reference (using a managed pointer).\r\n            ":"\r\n            如果通过引用传递返回值（使用托管指针）。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# method body\r\n            ":"\r\n            当前用法：\r\n             （1）C＃方法主体\r\n            \r\n","\r\n            Controls whether script code is permitted to use reflection.\r\n            ":"\r\n            控制是否允许脚本代码使用反射。\r\n            \r\n","\r\n            A pointer to fixed or unmanaged memory.\r\n            ":"\r\n            指向固定或不受管理的内存的指针。\r\n            \r\n","\r\n            Creates a list of tokens.\r\n            ":"\r\n            创建一个令牌列表。\r\n            \r\n","\r\n            The top-level nullability information of the expression represented by the syntax node.\r\n            ":"\r\n            语法节点表示的表达式的顶级无效信息。\r\n            \r\n","\r\n            Read in a byte array in reverse order.\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            ":"\r\n            以相反的顺序读取字节阵列。\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            \r\n"," will have at least 1 ":" 至少有1个\r\n",". Application code should not\r\n            call this method; an object's ":"。申请代码不应\r\n            调用此方法；一个对象\r\n","\r\n            Adds the specified document as a system document to the configuration.\r\n            ":"\r\n            将指定的文档作为系统文档添加到配置中。\r\n            \r\n","\r\n            Represents the value of #r reference along with its source location.\r\n            ":"\r\n            表示#R参考的值及其源位置。\r\n            \r\n","\r\n            Get the symbol for the predefined type from the Cor Library referenced by this\r\n            compilation.\r\n            ":"\r\n            从此引用的COR库中获取预定类型的符号\r\n            汇编。\r\n            \r\n","The source to gather outputs for":"收集输出的来源\r\n","\r\n            The CSP key container containing the public key used to produce the key,\r\n            or null if the key was retrieved from ":"\r\n            CSP密钥容器包含用于生成密钥的公共密钥，\r\n            或null如果从钥匙中检索到\r\n","\r\n            Get full metadata handle of the method definition.\r\n            ":"\r\n            获取方法定义的完整元数据手柄。\r\n            \r\n"," is non-empty.\r\n            Otherwise, returns ":" 是非空的。\r\n            否则，返回\r\n","\r\n            Represents case x in C# or Case x in VB.\r\n            ":"\r\n            表示C＃中的情况X或VB中的Case X。\r\n            \r\n","\r\n            Returns true and full metadata handle of the type definition\r\n            if the type definition is recognized. Otherwise returns false.\r\n            ":"\r\n            返回类型定义的真实和完整的元数据句柄\r\n            如果识别类型定义。否则返回false。\r\n            \r\n","The dynamic host object that contains the element to remove.":"包含要删除的元素的动态主机对象。\r\n","\r\n            This works the same as GetRed, but intended to be used in lists\r\n            The only difference is that the public parent of the node is not the list, \r\n            but the list's parent. (element's grand parent).\r\n            ":"\r\n            这与获得相同，但要在列表中使用\r\n            唯一的区别是节点的公开父母不是列表，\r\n            但是名单的父母。 （元素的大父母）。\r\n            \r\n","\r\n            Statement defining the lifetime of the synthetic local.\r\n            ":"\r\n            陈述定义合成局部的寿命。\r\n            \r\n","\r\n            Get all the analyzer actions to execute for the given analyzer against a given compilation.\r\n            The returned actions include the actions registered during ":"\r\n            根据给定的汇编，获取所有分析仪为给定的分析仪执行。\r\n            返回的动作包括在\r\n","Cannot target net module when emitting ref assembly.":"排放参考组装时无法靶向净模块。\r\n"," tracked by ":" 跟踪\r\n","\r\n            Performs the union of this state and the other state for a Binary operation\r\n            and returns a new ":"\r\n            执行该州和另一个州的联合进行二进制操作\r\n            并返回新的\r\n","\r\n            Resolves paths to metadata references specified in source via #r directives.\r\n            Null if the compilation can't contain references to metadata other than those explicitly passed to its factory (such as #r directives in sources). \r\n            ":"\r\n            解决源#R指令中指定的元数据参考的路径。\r\n            null如果该汇编不包含对元数据的引用，则除了明确传递给其工厂的元数据（例如来源中的#R指令）。\r\n            \r\n","Type name.":"类型名称。\r\n"," to discard the script document after execution, ":" 要在执行后丢弃脚本文档，\r\n","\r\n            Contains information about an argument passed to interprocedural analysis.\r\n            ":"\r\n            包含有关转移分析的论点的信息。\r\n            \r\n"," instance across analyzer actions and/or analyzer instances can improve the overall analyzer performance by avoiding recomputation of the values.\r\n            ":" 跨分析仪操作和/或分析仪实例可以通过避免值重新计算来改善整体分析仪的性能。\r\n            \r\n","\r\n            Returns true if the bag has any diagnostics with Severity=Error. Does not consider warnings or informationals.\r\n            ":"\r\n            如果包具有严重性=错误的任何诊断，则返回true。不考虑警告或信息。\r\n            \r\n","\r\n            Provides a string representation of the SourceText.\r\n            ":"\r\n            提供SourceText的字符串表示。\r\n            \r\n"," document.\r\n            ":" 文档。\r\n            \r\n","\r\n            Compares assembly identities. \r\n            Derived types may implement platform specific unification and portability policies.\r\n            ":"\r\n            比较组装身份。\r\n            派生类型可以实施平台特定的统一和可移植性策略。\r\n            \r\n"," will\r\n            only be returned if the end of stream is reached before all bytes can be read.\r\n            ":" 将要\r\n            仅在读取所有字节之前到达流的末尾，才能返回。\r\n            \r\n","\r\n            Last write time (UTC).\r\n            ":"\r\n            最后写时间（UTC）。\r\n            \r\n","\r\n            Creates a reference to a single-module assembly or a stand-alone module from data in specified stream. \r\n            Reads the content of the stream into memory and closes the stream upon return.\r\n            ":"\r\n            从指定流中的数据中创建对单模型组件或独立模块的引用。\r\n            将流的内容读取到内存中，并在返回时关闭流。\r\n            \r\n","\r\n            Indicates that the document is temporary and can be discarded after use. Only Windows\r\n            Script engines honor this attribute.\r\n            ":"\r\n            表示该文档是暂时的，可以在使用后丢弃。只有窗口\r\n            脚本发动机尊重此属性。\r\n            \r\n","\r\n            Total size of metadata (header and all streams).\r\n            ":"\r\n            元数据的总大小（标题和所有流）。\r\n            \r\n","\r\n            Gets the options the compilation was created with.\r\n            ":"\r\n            获取与创建汇编的选项。\r\n            \r\n",", the exception is rethrown. Regardless of the outcome,\r\n            ":"，例外是重新的。不管结果如何\r\n            \r\n","\r\n            Map builder from entity to set of entities that share the same instance location.\r\n            Primarily used for ref arguments for context sensitive interprocedural analysis\r\n            to ensure that PointsTo value updates to any of the mapped entities is reflected in the others in the set.\r\n            ":"\r\n            从实体到共享相同实例位置的实体集合构建器。\r\n            主要用于涉及上下文敏感概论分析的参数\r\n            为了确保对任何映射实体的PointSto值更新反映在集合中的其他实体中。\r\n            \r\n","The text writer to which to write the profile.":"要编写配置文件的文本作者。\r\n","\r\n            Get all of the syntax errors within the syntax tree associated with this\r\n            object. Does not get errors involving declarations or compiling method bodies or initializers.\r\n            ":"\r\n            在与此关联的语法树中获取所有语法错误\r\n            目的。没有涉及声明或编译方法或初始化器的错误。\r\n            \r\n","\r\n            Represents a constructor method body operation.\r\n            ":"\r\n            代表构造方法的身体操作。\r\n            \r\n"," from one or more ":" 从一个或多个\r\n","\r\n            Current usage:\r\n             (1) C# array initializer.\r\n             (2) VB array initializer.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃数组初始化器。\r\n             （2）VB数组初始化器。\r\n            \r\n","\r\n             For the given set of AssemblyData objects, do the following:\r\n                1) Resolve references from each assembly against other assemblies in the set.\r\n                2) Choose suitable AssemblySymbol instance for each AssemblyData object.\r\n            \r\n             The first element (index==0) of the assemblies array represents the assembly being built.\r\n             One can think about the rest of the items in assemblies array as assembly references given to the compiler to\r\n             build executable for the assembly being built. \r\n             ":"\r\n             对于给定的一组汇编对象，请执行以下操作：\r\n                1）从集合中的其他组件中解决每个组件中的参考。\r\n                2）为每个汇编对象选择合适的汇编实例。\r\n            \r\n             组件阵列的第一个元素（索引== 0）表示要构建的组件。\r\n             人们可以将组件阵列中的其余项目视为给出编译器的汇编引用\r\n             构建可执行的用于构建的组件。\r\n             \r\n","\r\n            The type definition corresponding to full metadata type handle.\r\n            Deltas are only required to support indexing into current generation.\r\n            ":"\r\n            对应于完整元数据类型句柄的类型定义。\r\n            仅需要向当前一代索引索引。\r\n            \r\n"," API when creating multiple references to the same assembly.\r\n            Reusing ":" 当创建对同一组件的多个引用时，API。\r\n            重复使用\r\n","\r\n            If returnType is ":"\r\n            如果returnType是\r\n","\r\n            Option to configure analyzed symbol kinds, i.e. ":"\r\n            配置分析的符号类型的选项，即\r\n","\r\n            If the invocation is in its expanded form, then params/ParamArray arguments would be collected into arrays. \r\n            Default values are supplied for optional arguments missing in source.\r\n            ":"\r\n            如果调用以其扩展的形式，则参数/paramarray参数将收集到数组中。\r\n            为源中缺少的可选参数提供了默认值。\r\n            \r\n",") and no\r\n            \"disqualifying members\" (":"） 和不\r\n            “取消成员的资格”（\r\n","Binding information (for determining names appropriate to\r\n            the context).":"约束信息（用于确定适合的名称\r\n            上下文）。\r\n","\r\n            Embed the COM types from the reference so that the compiled\r\n            application no longer requires a primary interop assembly (PIA).\r\n            ":"\r\n            从引用中嵌入com类型，以便编译\r\n            应用不再需要主要的Interop组装（PIA）。\r\n            \r\n","\r\n            Returns the names of linked managed modules.\r\n            ":"\r\n            返回链接的托管模块的名称。\r\n            \r\n","\r\n            Gets the root of the syntax tree if it is available.\r\n            ":"\r\n            如果可用，则获取语法树的根。\r\n            \r\n","\r\n            Construct a concurrent set with the default concurrency level.\r\n            ":"\r\n            构建具有默认并发级别的并发设置。\r\n            \r\n","A compiled script that can be executed by multiple V8 script engine instances.":"可以通过多个V8脚本引擎实例执行的编译脚本。\r\n",", or one of its language-specific overloads,\r\n            where you pass the first and last statements of the region as parameters.\r\n            \"Inside\" means those statements or ones between them. \"Outside\" are any other statements of the same method.\r\n            ":"，或它的特定语言过载之一，\r\n            您将区域的第一个和最后一个语句作为参数传递。\r\n            “内部”是指这些陈述或它们之间的陈述。 “外部”是同一方法的其他任何陈述。\r\n            \r\n","\r\n            Sets the byte alignment for portable executable file sections.\r\n            ":"\r\n            为便携式可执行文件部分设置字节对齐。\r\n            \r\n"," the generated backing field for an auto property or a field-like event, ":" 自动属性或类似现场的事件的生成的背面字段，\r\n","The passed in expression is interpreted as a stand-alone expression, as if it\r\n            appeared by itself somewhere within the scope that encloses \"position\".":"传递的表达式被解释为独立表达，好像\r\n            自行出现在包围“位置”的范围内的某个地方。\r\n"," if this is a postfix expression.\r\n            ":" 如果这是后缀表达式。\r\n            \r\n","\r\n            Allows Windows Script engines to display dialogs within the host's user interface.\r\n            ":"\r\n            允许Windows脚本引擎在主机的用户界面中显示对话框。\r\n            \r\n","\r\n            Analyze control-flow within a part of a method body.\r\n            ":"\r\n            在方法主体的一部分内分析控制流。\r\n            \r\n","\r\n            The nullable feature is fully enabled.\r\n            ":"\r\n            无效的功能已完全启用。\r\n            \r\n","\r\n                Provides ":"\r\n                提供\r\n","\r\n            Creates a new options instance with the specified suppressed diagnostics reporting option.\r\n            ":"\r\n            使用指定的抑制诊断报告选项创建一个新的选项实例。\r\n            \r\n"," If true then the nodes are equivalent if the contained nodes and\r\n            tokens declaring metadata visible symbolic information are equivalent, ignoring any\r\n            differences of nodes inside method bodies or initializer expressions, otherwise all\r\n            nodes and tokens must be equivalent. \r\n            ":" 如果为true，则节点是等效的，如果包含的节点和\r\n            宣布元数据可见符号信息的令牌是等效的，忽略了任何\r\n            方法主体或初始化器表达式内部节点的差异，否则所有\r\n            节点和令牌必须等效。\r\n            \r\n"," in editor config options and\r\n                 given symbol's visibility is one of the candidate visibilites.\r\n              2. Otherwise, if user has not configured visibility, and given symbol's visibility\r\n                 matches the given default symbol visibility.\r\n            ":" 在编辑器配置选项中，\r\n                 给定符号的可见性是候选人之一。\r\n              2.否则，如果用户尚未配置可见性，并且给出了符号的可见性\r\n                 匹配给定的默认符号可见性。\r\n            \r\n","\r\n            Reference to the object being initialized in C# or VB object or collection initializer,\r\n            anonymous type creation initializer, or to the object being referred to in a VB With statement,\r\n            or the C# 'with' expression initializer.\r\n            ":"\r\n            引用在C＃或VB对象或集合初始化器中初始化的对象，\r\n            匿名类型创建初始化器，或者在带有语句的VB中引用的对象，\r\n            或带有'表达初始化器的c＃'。\r\n            \r\n","\r\n             Returns a new anonymous type symbol with the given member types member names.\r\n             Anonymous type members will be readonly by default.  Writable properties are\r\n             supported in VB and can be created by passing in ":"带有给定的成员类型成员名称的新的匿名类型符号。\r\n             默认情况下，匿名类型成员将被阅读。可写的特性是\r\n             在VB中支持，可以通过传递来创建\r\n"," at the given ":" 在给定\r\n","\r\n            Populate EncMap table.\r\n            ":"\r\n            填充加密表。\r\n            \r\n","\r\n            Returns diagnostics produced by all ":"\r\n            所有人产生的回报诊断\r\n","The left SyntaxNodeOrTokenList":"左语法诺德列语\r\n","\r\n            Check if the given type is an enum with System.FlagsAttribute.\r\n            ":"\r\n            检查给定类型是否是带有System.flagSattribute的枚举。\r\n            \r\n","\r\n            Lock to track the set of active tasks computing tree diagnostics and task computing compilation diagnostics.\r\n            ":"\r\n            锁定以跟踪一组活动任务集合树诊断和任务计算汇编诊断。\r\n            \r\n"," can be set\r\n            from source code via the AssemblyFlags assembly custom attribute. The interpretation of the property depends on the target platform.\r\n            ":" 可以设置\r\n            从源代码通过汇编汇编自定义属性。属性的解释取决于目标平台。\r\n            \r\n"," blocks or finalizers\r\n            and causes a crash dump to be collected (if the system is configured to do so). \r\n            Otherwise, the process continues normally.\r\n            ":" 块或最终化器\r\n            并导致收集崩溃转储（如果系统配置为这样做）。\r\n            否则，该过程正常继续。\r\n            \r\n","\r\n            Points to one or more known possible l-values.\r\n            Used for pointers, ref expressions and l-value flow captures.\r\n            ":"\r\n            指向一个或多个可能的L值。\r\n            用于指针，参考表达式和L值流量捕获。\r\n            \r\n","\r\n            The string returned from this function represents the inputs to the compiler which impact determinism.  It is \r\n            meant to be inline with the specification here:\r\n            \r\n                - https://github.com/dotnet/roslyn/blob/master/docs/compilers/Deterministic%20Inputs.md\r\n            \r\n            Issue #8193 tracks filling this out to the full specification. \r\n            \r\n                https://github.com/dotnet/roslyn/issues/8193\r\n            ":"\r\n            从该函数返回的字符串表示影响确定论的编译器的输入。这是\r\n            在此处与规格结合在一起：\r\n            \r\n                -https：//github.com/dotnet/roslyn/blob/master/docs/compilers/deterministic%20inputs.md\r\n            \r\n            问题＃8193跟踪将其填充到完整规范中。\r\n            \r\n                https://github.com/dotnet/roslyn/issues/8193\r\n            \r\n","\r\n            Exception to enable callers to catch all of the exceptions originating\r\n            from writing PDBs. We resurface such exceptions as this type, to eventually\r\n            be reported as PDB-writing failure diagnostics to the user.\r\n            Unfortunately, an exception originating in a user-implemented\r\n            Stream derivation will come out of the symbol writer as a COMException\r\n            missing all of the original exception info.\r\n            ":"\r\n            使呼叫者能够捕获所有异常的例外\r\n            从编写PDB。我们重新出现此类例外，最终\r\n            向用户报告为PDB写入故障诊断。\r\n            不幸的是，一个源自用户实现的例外\r\n            流推导将从符号作者出现作为compexception\r\n            缺少所有原始异常信息。\r\n            \r\n","The bits of the mantissa":"Mantissa的碎片\r\n","\r\n            on the control flow paths where the corresonding ":"\r\n            在控制路径上与之相关的控制路径\r\n",",\r\n            then the branch ":"，，，，\r\n            然后分支\r\n","\r\n            The message that will be shown when an error/warning is created for ":"\r\n            创建错误/警告时将显示的消息\r\n","\r\n            Represents compilation emit options.\r\n            ":"\r\n            表示汇编发射选项。\r\n            \r\n"," Method - parameter or return type is unsupported ":" 方法 - 不支持参数或返回类型\r\n","\r\n            If this method has ":"\r\n            如果此方法具有\r\n","\r\n            True if the method has generic parameters;\r\n            ":"\r\n            如果该方法具有通用参数，则为true；\r\n            \r\n","\r\n            Returns null if member doesn't belong to an embedded NoPia type.\r\n            ":"\r\n            返回null如果成员不属于嵌入式NOPIA类型。\r\n            \r\n","\r\n            Adds given retargeting assembly for this compilation into the cache.\r\n            ":"\r\n            将此汇编的给定重新定位组件添加到缓存中。\r\n            \r\n","\r\n            Represents a Include tag in a RuleSet file.\r\n            ":"\r\n            代表规则集文件中的包含标签。\r\n            \r\n","\r\n            Determines how parameters (of methods, properties/indexers, and delegates) are displayed.\r\n            ":"\r\n            确定如何显示参数（方法，属性/索引和委托）。\r\n            \r\n","\r\n            Register an action to be executed for a complete compilation.\r\n            A compilation action reports ":"注册以执行完整汇编的操作。\r\n            汇编行动报告\r\n","\r\n            Attempts to create a ":"\r\n            尝试创建一个\r\n","\r\n             The \"position\" is used to determine what variables are visible and accessible.\r\n            \r\n             Non-reduced extension methods are considered, but reduced extension methods are not.\r\n             ":"\r\n             “位置”用于确定哪些变量可见和可访问。\r\n            \r\n             考虑了未还原的扩展方法，但不进行减少的扩展方法。\r\n             \r\n","\r\n            True implies ":"\r\n            正确意味着\r\n",". The exception is passed through (the method returns false).\r\n            ":"。异常通过（方法返回false）。\r\n            \r\n","\r\n            Specifies how the caller passes parameters to the callee and who cleans up the stack.\r\n            ":"\r\n            指定呼叫者如何将参数传递给Callee并清理堆栈。\r\n            \r\n","\r\n            True to apply ":"\r\n            忠实申请\r\n","\r\n            Values of elements of the created array instance.\r\n            ":"\r\n            创建数组实例的元素的值。\r\n            \r\n","\r\n            Default properties for an assembly reference.\r\n            ":"\r\n            用于汇编引用的默认属性。\r\n            \r\n","\r\n            Checked if ReturnValueIsMarshalledExplicitly == true and ReturnValueMarshallingInformation is null\r\n            ":"\r\n            检查returnValueismarshalledexplicly == true and returnValueMarshallingInformation为null\r\n            \r\n","\r\n            The containing compilation for compilation namespaces.\r\n            ":"\r\n            汇编名称空间的包含汇编。\r\n            \r\n","\r\n            The absolute span of the list elements in characters, not including the leading and trailing trivia of the first and last elements.\r\n            ":"\r\n            字符中列表元素的绝对跨度，不包括第一个和最后一个元素的领先和尾随琐事。\r\n            \r\n"," is a registry that maps between arbitrary ":" 是一个注册表，可在任意之间映射\r\n","\r\n            Adds a type to a host type collection. The type is specified by name.\r\n            ":"\r\n            将类型添加到主机类型集合中。该类型是按名称指定的。\r\n            \r\n","\r\n            Try to parse the SARIF log file version from a string.\r\n            ":"\r\n            尝试从字符串中解析SARIF日志文件版本。\r\n            \r\n","Parameter - type is unsupported":"参数 - 类型不支持\r\n","\r\n            The contents of ":"\r\n            内容的内容\r\n","\r\n             Indicates whether this source text can be embedded in the PDB.\r\n             ":"\r\n             指示该源文本是否可以嵌入PDB中。\r\n             \r\n","\r\n            Kind of unary operation.\r\n            ":"\r\n            一种单一操作。\r\n            \r\n","\r\n            Lookup well-known type used by this Compilation.\r\n            ":"\r\n            查找此汇编使用的众所周知类型。\r\n            \r\n","If a cancel event has been created that Tracker should be listening for, its name is passed here":"如果已经创建了应收听跟踪器的取消事件，则其名称将在此处传递\r\n","\r\n            Represents the value of a conditionally-accessed operation within ":"\r\n            表示有条件处理的操作的价值\r\n","\r\n            Namespaces in references whose ":"\r\n            引用中的名称空间\r\n"," based on the compilation options so that /nowarn and /warnaserror etc. take effect.options\r\n            ":" 基于汇编选项，以便 /nowarn和 /warnaserror等。\r\n            \r\n","\r\n            Marks all blocks unreachable.\r\n            ":"\r\n            标记所有障碍都无法到达。\r\n            \r\n","\r\n            Writes string in SerString format (see ECMA-335-II 23.3 Custom attributes): \r\n            The string is UTF8 encoded and prefixed by the its size in bytes. \r\n            Null string is represented as a single byte 0xFF.\r\n            ":"\r\n            以serstring格式写入字符串（请参阅ECMA-335-II 23.3自定义属性）：\r\n            该字符串由UTF8编码和前缀，并由其字节中的大小。\r\n            空字符串表示为单个字节0xFF。\r\n            \r\n"," is relative ":" 是相对的\r\n","\r\n            Returns the hashcode of this ITaskItem.  Given that equality is judged solely based\r\n            on the itemspec, the hash code for this particular comparer also only uses the \r\n            itemspec to make its determination. \r\n            ":"\r\n            返回此ITASCITEM的哈希码。鉴于平等仅基于\r\n            在ItemSpec上，此特定比较的哈希代码也仅使用\r\n            itemspec做出决定。\r\n            \r\n","Win32 resources, assumed to be in COFF object format, have one or more invalid relocation header values.":"Win32资源，假定为Coff对象格式，具有一个或多个无效的重定位标头值。\r\n","\r\n              Looks up a localized string similar to '/keepalive' option is only valid with '/shared' option..\r\n            ":"\r\n              查找类似于“/keetalive”选项的本地化字符串仅对“/共享”选项有效。\r\n            \r\n","The BigInteger to multiply by a power of ten and replace with the product":"BigInteger乘以10的力量并替换为产品\r\n","\r\n            Information decoded from well-known custom attributes applied on a method return value.\r\n            ":"\r\n            根据方法返回值应用的众所周知的自定义属性解码。\r\n            \r\n","System.String":"System.String\r\n","\r\n            True for adding a binding, false for removing one.\r\n            ":"\r\n            添加绑定的是正确的，用于删除一个绑定。\r\n            \r\n","\r\n            Gets a case-insensitive hash code for Unicode identifiers.\r\n            ":"\r\n            为Unicode标识符获取不敏感的哈希代码。\r\n            \r\n","\r\n            When this attribute is applied to a struct, ClearScript exposes the same object reference\r\n            for all instances of the struct that satisfy equality comparison, giving script code the\r\n            ability to use native equality operators to compare the exposed objects. This behavior is\r\n            also enabled automatically for all enums, numeric types, ":"\r\n            当将此属性应用于struct时，clearScript公开相同的对象参考\r\n            对于满足平等比较的结构的所有实例，给出脚本代码\r\n            能够使用本地平等操作员比较暴露的对象。这种行为是\r\n            还可以自动启用所有枚举，数字类型，\r\n"," of operations that are executed while holding a lock onto the ":" 将锁定在\r\n","\r\n            Return full metadata handle of the assembly reference, adding\r\n            the reference to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"返回组装参考的完整元数据手柄，添加\r\n            如果丢失了这一代的索引的引用。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            Enumerate all the keys.\r\n            Forces a full population of the cache.\r\n            ":"\r\n            枚举所有钥匙。\r\n            强迫全部缓存。\r\n            \r\n",", \r\n            then this method will return ":"，，，，\r\n            那么此方法将返回\r\n","\r\n            The format used for displaying symbols when visualizing IL.\r\n            ":"\r\n            可视化IL时用于显示符号的格式。\r\n            \r\n","\r\n            Represents an operation with two operands and a binary operator that produces a result with a non-null type.\r\n            ":"\r\n            代表一个具有两个操作数和一个二进制操作员的操作，该操作数和二进制运算符可产生非零类型的结果。\r\n            \r\n","\r\n            Optional delegate which is invoked when an analyzer throws an exception as an exception filter.\r\n            Delegate can do custom tasks such as crash hosting process to create a dump.\r\n            ":"\r\n            当分析仪将异常作为异常滤波器抛出时，可选的委托将被调用。\r\n            委托可以执行自定义任务，例如崩溃托管过程来创建转储。\r\n            \r\n","\r\n            The base class for language specific assembly managers.\r\n            ":"\r\n            语言特定组装经理的基类。\r\n            \r\n","\r\n            Writes a DateTime value to the stream.\r\n            ":"\r\n            将DateTime值写入流。\r\n            \r\n","\r\n            Returns the token after this token in the syntax tree.\r\n            ":"\r\n            在语法树中的这个令牌之后返回令牌。\r\n            \r\n","\r\n            Gets a path relative to a directory.\r\n            ":"获得相对于目录的路径。\r\n            \r\n"," or any of it's parent control flow graphs.\r\n            ":" 或任何一个父控制流程图。\r\n            \r\n","\r\n              Looks up a localized string similar to Syntax tree doesn't belong to the underlying 'Compilation'..\r\n            ":"\r\n              查找类似于语法树的本地化字符串不属于基础的“汇编”。\r\n            \r\n","\r\n            Represents a creation of a type parameter object, i.e. new T(), where T is a type parameter with new constraint.\r\n            ":"\r\n            表示类型参数对象的创建，即新的t（），其中t是具有新约束的类型参数。\r\n            \r\n","\r\n            Puts local variable into current scope.\r\n            ":"\r\n            将局部变量放入当前范围。\r\n            \r\n","\r\n            Two log files will be created: \r\n            One with path ":"\r\n            将创建两个日志文件：\r\n            一个有路径\r\n","\r\n            Mapped field data, or null if the field is not mapped.\r\n            ":"\r\n            映射字段数据，如果未映射该字段，则null。\r\n            \r\n","\r\n            Obsolete interface that used to represent a collection element initializer. It has been replaced by\r\n            ":"\r\n            用来表示集合元素初始化器的过时接口。它已取代\r\n            \r\n","\r\n            Private helper class to capture information about AssemblySymbol instance we \r\n            should check for suitability. Used by the Bind method.\r\n            ":"\r\n            私人帮手课程以捕获有关汇编的信息实例我们\r\n            应该检查适合性。由绑定方法使用。\r\n            \r\n","\r\n            Creates a new V8 script engine instance with the specified name.\r\n            ":"\r\n            使用指定名称创建一个新的V8脚本引擎实例。\r\n            \r\n","A newly created analyzer driver":"新创建的分析仪驱动程序\r\n","\r\n            Factory to create ":"\r\n            工厂创建\r\n","A sequence of nodes to insert into the tree immediately after the specified node.":"指定节点后立即将节点插入树的序列。\r\n","\r\n            Returns the raw bytes of a record.\r\n            ":"\r\n            返回记录的原始字节。\r\n            \r\n","\r\n            Gets the view's size in bytes.\r\n            ":"\r\n            在字节中获取视图的大小。\r\n            \r\n",". Otherwise,\r\n            the values are the literal values present in the source.\r\n            ":"。否则，\r\n            这些值是源中存在的文字值。\r\n            \r\n"," is compatible with the specified type, ":" 与指定类型兼容\r\n","\r\n            leaves the V8 runtime in an unusable state. After calling ":"\r\n            将V8运行时留下不可用的状态。打电话后\r\n","\r\n            True if the edit is an update of the active method and local values\r\n            should be preserved; false otherwise.\r\n            ":"\r\n            如果编辑是活动方法和本地值的更新，则为true\r\n            应该保留；否则为错误。\r\n            \r\n","\r\n            Debugging information associated with the specified method that is emitted by the compiler to support Edit and Continue.\r\n            ":"\r\n            调试与编译器发出的指定方法相关联的信息，以支持编辑并继续。\r\n            \r\n","\r\n            Gets the name associated with the V8 runtime instance.\r\n            ":"\r\n            获取与V8运行时实例关联的名称。\r\n            \r\n","\r\n            The number of assemblies referenced by each module in ":"\r\n            每个模块引用的组件数量\r\n","\r\n            Represents a constituent string literal part of an interpolated string expression.\r\n            ":"代表插值字符串表达式的构成字符串文字部分。\r\n            \r\n","\r\n              Looks up a localized string similar to Assembly file not found.\r\n            ":"\r\n              查找类似于找不到的汇编文件的本地化字符串。\r\n            \r\n","\r\n            True if the method calls another method containing security code. If this flag is set, the method\r\n            should have System.Security.DynamicSecurityMethodAttribute present in its list of custom attributes.\r\n            ":"\r\n            正确，如果该方法调用另一种包含安全代码的方法。如果设置了此标志，则方法\r\n            应该有System.Security.DynamicsEcurityMethodattribute中存在的自定义属性列表中。\r\n            \r\n","\r\n            Constant value of the pattern operation.\r\n            ":"\r\n            模式操作的恒定值。\r\n            \r\n","\r\n            Gets or sets the document's category.\r\n            ":"\r\n            获取或设置文档的类别。\r\n            \r\n","\r\n            Instance of the type. Null if the reference is to a static/shared member.\r\n            ":"\r\n            类型的实例。 null如果引用是静态/共享成员。\r\n            \r\n",",\r\n            and other similar values. Instead, use ":"，，，，\r\n            和其他类似的值。而是使用\r\n","\r\n            Statements to execute at the bottom of the loop. For C# these come from the third clause of the for statement. For VB these increment the index variable of the For statement.\r\n            ":"\r\n            语句要在循环的底部执行。对于C＃，这些来自for语句的第三条。对于VB，这些增加了for语句的索引变量。\r\n            \r\n","This type is intended for use as the resource of a ":"这种类型旨在用作\r\n","\r\n            Returns true if some decoded data has been stored into ":"\r\n            如果将一些解码数据存储到\r\n","\r\n            Creates a control flow graph for the given ":"\r\n            为给定创建控制流程图\r\n",".\r\n            Returns a non-null argument ":"。\r\n            返回一个非无编号的参数\r\n"," should descent into.\r\n            ":" 应该下降。\r\n            \r\n","\r\n            Return source declaration symbols whose name meets given predicate.\r\n            ":"\r\n            返回源声明符号的名称符合给定的谓词。\r\n            \r\n"," is not specified, the encoding used to parse source files\r\n            that do not declare their encoding via Byte Order Mark and are not UTF8-encoded.\r\n            ":" 未指定，用于解析源文件的编码\r\n            这不会通过字节订单标记声明其编码，也没有编码UTF8。\r\n            \r\n","\r\n            Combine a char with an existing FNV-1a hash code\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            将字符与现有的FNV-1A哈希代码相结合\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","\r\n            Temporarily suspend tracking of file accesses in the current tracking context. \r\n            ":"\r\n            在当前跟踪上下文中暂时暂停对文件访问的跟踪。\r\n            \r\n"," version of this method supports both expressions and\r\n            statements. If the specified command begins with \"eval \" (not case-sensitive), the\r\n            engine executes the remainder as an expression and attempts to use\r\n            ":" 此方法的版本支持表达式和\r\n            语句。如果指定的命令以“ eval”开头（不是案例敏感），则\r\n            引擎执行其余部分作为表达式和尝试使用\r\n            \r\n","\r\n            The following code demonstrates using a host variable to invoke a method with an\r\n            ":"\r\n            以下代码使用主机变量演示了用\r\n            \r\n","\r\n            Indicates pattern case in C#.\r\n            ":"\r\n            在C＃中指示模式案例。\r\n            \r\n","See remarks of ":"见\r\n","\r\n            Returns the list of custom modifiers, if any, associated with the return type. \r\n            ":"\r\n            返回与返回类型关联的自定义修饰符列表。\r\n            \r\n","\r\n            Properties of an IEEE floating-point representation.\r\n            ":"\r\n            IEEE浮点表示的属性。\r\n            \r\n","ArrayBuffer":"ArrayBuffer\r\n","\r\n            Current usage:\r\n             (1) C# nested member initializer expression.\r\n            For example, given an object creation with initializer \"new Class() { X = x, Y = { x, y, 3 }, Z = { X = z } }\",\r\n            member initializers for Y and Z, i.e. \"Y = { x, y, 3 }\", and \"Z = { X = z }\" are nested member initializers represented by this operation.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃嵌套成员初始化器表达式。\r\n            例如，给定一个使用initializer的对象创建“ new class（）{x = x，y = {x，y，3}，z = {x = z}}}”，\r\n            Y和Z的成员初始化器，即“ Y = {X，Y，3}”和“ Z = {X = Z}”是由此操作表示的嵌套成员初始化器。\r\n            \r\n","\r\n            Exposes a host type to script code with a default name.\r\n            ":"\r\n            用默认名称将主机类型公开为脚本代码。\r\n            \r\n","\r\n            Whether bounds checking on integer arithmetic is enforced by default or not.\r\n            ":"\r\n            默认情况下，是否强制执行整数算术的界限。\r\n            \r\n","The object to test for compatibility with the specified host type.":"测试与指定主机类型兼容的对象。\r\n","File ":"文件\r\n"," for each input AssemblyData object resides\r\n             at the same position.\r\n             \r\n             Each ":" 对于每个输入组件data对象\r\n             在同一位置。\r\n             \r\n             每个\r\n",", they were produced by a subset of these generators.\r\n            ":"，它们是由这些发电机的子集生产的。\r\n            \r\n","\r\n            The UInt32 value 9\r\n            ":"\r\n            UINT32值9\r\n            \r\n","\r\n            This attribute is applicable to events, fields, methods, and properties.\r\n            ":"\r\n            此属性适用于事件，字段，方法和属性。\r\n            \r\n","Can't create a module reference to an assembly.":"无法创建对程序集的模块引用。\r\n","\r\n            Returns the position in given path where the file name starts.\r\n            ":"\r\n            返回给定路径中文件名开始的位置。\r\n            \r\n",") if the information is not available.\r\n            \r\n            The values are not affected by line mapping directives (#line in C# or #ExternalSource in VB).\r\n            ":"）如果没有信息。\r\n            \r\n            这些值不受行映射指令的影响（C＃中的#line或#externalsource在VB中）。\r\n            \r\n","\r\n              Looks up a localized string similar to Tuple element name cannot be an empty string..\r\n            ":"\r\n              查找类似于元组元素名称的本地化字符串不能是一个空字符串。\r\n            \r\n","\r\n            Names of well-known XML attributes and elements.\r\n            ":"\r\n            众所周知的XML属性和元素的名称。\r\n            \r\n","\r\n            Create a RuleSetInclude given the include path and the effective action.\r\n            ":"\r\n            给定包含路径和有效的动作，创建一个规则。\r\n            \r\n","\r\n            The type of the additional argument passed to this visitor's Visit method.\r\n            ":"附加参数的类型传递给了此访问者的访问方法。\r\n            \r\n","\r\n            Local functions declared within ":"\r\n            内部声明的本地功能\r\n","\r\n            True if the list has at least one node.\r\n            ":"\r\n            如果列表至少有一个节点，则为正确。\r\n            \r\n","\r\n            Zero or more interfaces implemented by this type.\r\n            ":"\r\n            此类型实现的零或更多接口。\r\n            \r\n","\r\n            Finds a closure in the previous generation that corresponds to the specified syntax.\r\n            ":"\r\n            在上一代中找到与指定语法相对应的封闭。\r\n            \r\n"," specified for the given ":" 为给定指定\r\n","\r\n            Node was deleted.\r\n            ":"\r\n            节点已删除。\r\n            \r\n","-1 if ":"-1如果\r\n","\r\n            SyntaxTree which contains current SyntaxTrivia.\r\n            ":"\r\n            语法中包含当前语法。\r\n            \r\n","\r\n            The Int32 value 6\r\n            ":"\r\n            INT32值6\r\n            \r\n","\r\n            Represents an instance of the V8 JavaScript engine.\r\n            ":"\r\n            代表V8 JavaScript引擎的实例。\r\n            \r\n","\r\n            Represents the state of the nullable analysis at a specific point in a file. Bits one and\r\n            two correspond to whether the nullable feature is enabled. Bits three and four correspond\r\n            to whether the context was inherited from the global context.\r\n            ":"\r\n            在文件中的特定点代表无效分析的状态。一点点\r\n            两个与启用了无效的功能相对应。三位和四个对应\r\n            关于上下文是否是从全球背景继承的。\r\n            \r\n","\r\n            Path or name used in error messages to identity the reference.\r\n            ":"\r\n            错误消息中使用的路径或名称以识别引用。\r\n            \r\n","\r\n            True to return tokens that are part of trivia. If false finds the token whose full span (including trivia)\r\n            includes the position.\r\n            ":"\r\n            返回琐事一部分的代币。如果false找到了其完整跨度（包括琐事）的令牌\r\n            包括位置。\r\n            \r\n"," that deserializes objects from a byte stream.\r\n            ":" 从字节流进行了对象。\r\n            \r\n","\r\n            Declaration introduced or resource held by the using.\r\n            ":"\r\n            使用该声明或持有的资源。\r\n            \r\n","\r\n            Returns the metadata module the location is associated with or ":"\r\n            返回元数据模块该位置与或\r\n","The nodes and tokens":"节点和令牌\r\n","\r\n            This method only checks accessibility from the point of view of the accessibility\r\n            modifiers on symbol and its containing types. Even if true is returned, the given symbol\r\n            may not be able to be referenced for other reasons, such as name hiding.\r\n            ":"\r\n            此方法仅从可访问性的角度检查可访问性\r\n            符号及其包含类型的修饰符。即使返回true，给定的符号\r\n            由于其他原因，例如隐藏名称，可能无法引用。\r\n            \r\n"," Required custom modifiers ":" 所需的自定义修饰符\r\n","\r\n            A named type definition, such as an INamespaceTypeDefinition or an INestedTypeDefinition.\r\n            ":"\r\n            命名类型的定义，例如InamespaceTypeDefinition或InestedTypedeFinition。\r\n            \r\n"," is only needed for the initial generation. The mapping for the subsequent generations\r\n            is carried over through ":" 仅需初始一代。后续几代的映射\r\n            被延续\r\n","\r\n            A concatenation of assemblies referenced by each module in the order they are listed in ":"\r\n            每个模块在列出的顺序中引用的组件的串联\r\n","\r\n            The callback can modify the document meta-information by specifying or overriding any of\r\n            its mutable properties.\r\n            ":"\r\n            回调可以通过指定或覆盖任何一项来修改文档元信息\r\n            它的可变特性。\r\n            \r\n","The index of the property to set.":"要设置的属性索引。\r\n","\r\n            Update resources and generate XML documentation comments.\r\n            ":"\r\n            更新资源并生成XML文档注释。\r\n            \r\n","\r\n            Determines if two trees are the same, disregarding trivia differences.\r\n            ":"\r\n            确定两棵树是否相同，无视琐事差异。\r\n            \r\n","\r\n            Converts an object to a host object with the specified type restriction, for use with\r\n            script code running in the specified script engine.\r\n            ":"\r\n            将对象转换为具有指定类型限制的主机对象，以供\r\n            在指定的脚本引擎中运行的脚本代码。\r\n            \r\n","\r\n            Determines whether this trivia represents a preprocessor directive.\r\n            ":"\r\n            确定此琐事是否代表预处理器指令。\r\n            \r\n","\r\n            Attempts to start executing a symbol's end actions for the given analyzer.\r\n            ":"试图开始为给定的分析仪执行符号的最终操作。\r\n            \r\n","\r\n            Optional loop control variable in VB that refers to the operation for declaring a new local variable or reference an existing variable or an expression.\r\n            This field is always null for C#.\r\n            ":"\r\n            VB中的可选循环控制变量是指声明新局部变量或引用现有变量或表达式的操作。\r\n            该字段对于C＃始终为null。\r\n            \r\n","\r\n            Represents a C# ?: or VB If expression.\r\n            ":"\r\n            表示c＃？：或vb，如果表达式。\r\n            \r\n","\r\n            Target of the assignment.\r\n            ":"\r\n            作业的目标。\r\n            \r\n","\r\n            Simple name of a top level child namespace, the left-most name following parent namespace name \r\n            in the fully qualified name.\r\n            ":"\r\n            顶级儿童名称空间的简单名称，左最左派名称，以下是父命名空间名称\r\n            以完全合格的名称。\r\n            \r\n","\r\n            Represents the 'dynamic' type in C#.\r\n            ":"\r\n            表示C＃中的“动态”类型。\r\n            \r\n","\r\n            The absolute span of the underlying node or token in characters, including its leading and trailing trivia.\r\n            ":"\r\n            基础节点的绝对跨度或字符中的代币，包括其领先和尾随的琐事。\r\n            \r\n"," itself.\r\n            ":"本身。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid output kind for submission. DynamicallyLinkedLibrary expected..\r\n            ":"\r\n              查找类似于无效输出类似的本地化字符串以提交。动态链接元素预期..\r\n            \r\n","The file identifier - typically a relative or absolute path.":"文件标识符 - 通常是相对或绝对路径。\r\n","\r\n            The 1-based index of the first parameter of the method.\r\n            ":"\r\n            该方法的第一个参数的基于1个索引。\r\n            \r\n","The key to lookup the driver by in the cache":"通过缓存中查找驱动程序的关键\r\n","\r\n            A list of the modules that are referenced by this module.\r\n            ":"\r\n            该模块引用的模块列表。\r\n            \r\n","The index to insert the new tokens.":"插入新令牌的索引。\r\n","Specifies if the type is Dynamic.":"指定类型是动态的。\r\n","\r\n            Represents compilation options common to C# and VB.\r\n            ":"\r\n            表示C＃和VB共有的汇编选项。\r\n            \r\n","\r\n            Immutable representation of a line number and position within a SourceText instance.\r\n            ":"\r\n            在SourceText实例中的行号和位置的不变表示。\r\n            \r\n","\r\n            Writes the full text of this token to the specified ":"\r\n            将这个令牌的全文写入指定的\r\n"," array. \r\n            ":" 大批。\r\n            \r\n","\r\n            If the given ":"\r\n            如果给定\r\n"," is null and the stream appears to be a binary file.\r\n            ":" 是空的，流似乎是二进制文件。\r\n            \r\n","\r\n            Contains helper methods for switch statement label constants\r\n            ":"\r\n            包含开关语句标签常数的辅助方法\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# dynamic invocation expression.\r\n             (2) C# dynamic collection element initializer.\r\n                 For example, in the following collection initializer: ":"\r\n            当前用法：\r\n             （1）C＃动态调用表达式。\r\n             （2）C＃动态集合元素初始化器。\r\n                 例如，在以下集合初始化器中：\r\n","\r\n            Context for an operation block action or operation block end action.\r\n            An operation block action or operation block end action can use an ":"\r\n            操作块操作或操作块结束操作的上下文。\r\n            操作块操作或操作块端操作可以使用\r\n"," that have an attribute that precisely matches ":" 具有完全匹配的属性\r\n","Cache data for accelerated recompilation.":"加速重新编译的缓存数据。\r\n","\r\n            The method makes a copy of the data and pins it. To avoid making a copy use an overload that takes an ":"\r\n            该方法制作数据并固定数据。为了避免制作副本，请使用超载\r\n"," on which this data is predicated.\r\n            ":" 该数据的鉴定。\r\n            \r\n"," task for the driver to finish processing all events and generate remaining analyzer diagnostics.\r\n            ":" 驾驶员完成处理所有事件并生成剩余分析仪诊断的任务。\r\n            \r\n","\r\n            Block is reachable from try or catch but\r\n            finally prevents falling through.\r\n            ":"\r\n            可以从尝试或捕获中达到块\r\n            最终防止跌倒。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# interpolated string content.\r\n             (2) VB interpolated string content.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃插值字符串内容。\r\n             （2）VB插值字符串内容。\r\n            \r\n","The array into which to copy the elements.":"复制元素的数组。\r\n","\r\n            The same functionality as ":"\r\n            与\r\n"," is true and the compilation succeeds.\r\n            ":" 是真实的，汇编成功。\r\n            \r\n","\r\n            Use the underlying (possibly slow) functions to get the values associated with a key.\r\n            ":"\r\n            使用基础（可能慢）函数获取与键关联的值。\r\n            \r\n"," by calling\r\n            ":" 通过打电话\r\n            \r\n","\r\n            PERF: Cache from method symbols to their topmost block operations to enable interprocedural flow analysis\r\n            across analyzers and analyzer callbacks to re-use the operations, semanticModel and control flow graph.\r\n            ":"\r\n            perf：从方法符号到其最上方的块操作以启用摘要流量分析\r\n            跨分析仪和分析仪回调，以重新使用操作，semanticmodel和控制流程图。\r\n            \r\n","TiB":"tib\r\n","\r\n            Finds a descendant trivia of this node at the specified position, where the position is\r\n            within the span of the node.\r\n            ":"\r\n            在指定位置找到该节点的后代琐事，位置为\r\n            在节点的跨度内。\r\n            \r\n"," it is not guaranteed that\r\n            the stream position or the output buffer will be unchanged if an exception is\r\n            returned.\r\n            ":" 不能保证\r\n            如果例外是，流位置或输出缓冲区将不变\r\n            回来。\r\n            \r\n","\r\n            This function calculates the offset of a child at given position. It is very common that\r\n            some children to the left of the given index already know their positions so we first\r\n            check if that is the case. In a worst case the cost is O(n), but it is not generally an\r\n            issue because number of children in regular nodes is fixed and small. In a case where\r\n            the number of children could be large (lists) this function is overridden with more\r\n            efficient implementations.\r\n            ":"\r\n            此功能计算给定位置的儿童的偏移。很普遍\r\n            给定指数左侧的一些孩子已经知道他们的职位，所以我们首先\r\n            检查是否是这种情况。在最坏的情况下，成本是o（n），但通常不是\r\n            问题是因为常规节点中的儿童人数固定且小。在这种情况下\r\n            儿童的数量可能很大（列表）此功能被覆盖了更多\r\n            有效的实现。\r\n            \r\n","\r\n            Gets the count of nodes in this list\r\n            ":"\r\n            在此列表中获取节点计数\r\n            \r\n","\r\n            Enumerates all referenced assemblies.\r\n            ":"\r\n            列举所有引用的组件。\r\n            \r\n","\r\n            This method generates a heap snapshot in JSON format with ASCII encoding.\r\n            ":"\r\n            此方法使用ASCII编码生成JSON格式的堆快照。\r\n            \r\n","True if the symbols are equivalent":"如果符号等效，则为正确\r\n","\r\n            // import a dictionary type\r\n            var StringT = host.type(\"System.String\");\r\n            var StringDictT = host.type(\"System.Collections.Generic.Dictionary\", StringT, StringT);\r\n            // create and populate a dictionary\r\n            var dict = host.newObj(StringDictT);\r\n            dict.Add(\"foo\", \"bar\");\r\n            dict.Add(\"baz\", \"qux\");\r\n            // look up a dictionary entry\r\n            var result = host.newVar(StringT);\r\n            var found = dict.TryGetValue(\"baz\", result.out);\r\n            ":"\r\n            //导入字典类型\r\n            var stringt = host.type（“ system.string”）;\r\n            var stringDictt = host.type（“ system.collections.generic.dictionary”，stringt，stringt）;\r\n            //创建和填充字典\r\n            var dict = host.newobj（stringDictt）;\r\n            dict.add（“ foo”，“ bar”）;\r\n            dict.add（“ baz”，“ qux”）;\r\n            //查找字典条目\r\n            var结果= host.newvar（stringt）;\r\n            var找到= dict.trygetValue（“ baz”，result.out）;\r\n            \r\n","s produced by all generators run during this generation pass.\r\n            ":"所有发电机在这一代通过期间运行的S生产。\r\n            \r\n","\r\n            Integral case labels sorted and indexed by their ConstantValue\r\n            ":"\r\n            整体案例标签由其恒定值分类和索引\r\n            \r\n","\r\n            Creates a host variable of the specified type.\r\n            ":"\r\n            创建指定类型的主机变量。\r\n            \r\n","The visibility to compare with.":"与之比较的可见性。\r\n","\r\n            Imports a COM/ActiveX type from the specified server and exposes it to script code with\r\n            the specified options. The registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            从指定的服务器导入com/activex类型，并将其公开为脚本代码\r\n            指定的选项。注册类由类标识符（CLSID）指定。\r\n            \r\n"," used as a set.\r\n            ":" 用作集合。\r\n            \r\n","\r\n            Gets a value indicating whether the symbol is defined externally.\r\n            ":"\r\n            获得一个值，指示该符号是否在外部定义。\r\n            \r\n","\r\n            A list of classes or interfaces. All type arguments matching this parameter must be derived from all of the classes and implement all of the interfaces.\r\n            ":"\r\n            类或接口列表。与此参数匹配的所有类型参数必须从所有类中派生并实现所有接口。\r\n            \r\n","Name associated with the slot.":"与插槽关联的名称。\r\n","Analyzer driver threw the following exception:\r\n            '{0}'.":"分析仪驾驶员提出以下例外：\r\n            '{0}'。\r\n","\r\n            Marks the given tree as fully syntactically analyzed for the given analyzers.\r\n            ":"\r\n            标记给定的树是给定分析仪的完全句法分析。\r\n            \r\n","\r\n            Allows us to treat both generator types as ISourceGenerator externally and not change the public API.\r\n            Inside the driver we unwrap and use the actual generator instance.\r\n            ":"\r\n            允许我们将两种发电机类型视为外部的Isourcegenerator，而不会更改公共API。\r\n            在驱动程序内部，我们解开并使用实际的生成器实例。\r\n            \r\n","\r\n            Implements a map from an assembly identity to a value. The map allows to look up the value by an identity\r\n            that either exactly matches the original identity key, or corresponds to a key with the lowest version among identities\r\n            with higher version than the requested identity key.\r\n            ":"\r\n            将地图从汇编身份实现到值。该地图允许通过身份查找值\r\n            与原始身份密钥完全匹配，或对应于身份中最低版本的密钥\r\n            具有高于请求的身份密钥的更高版本。\r\n            \r\n","\r\n            Dynamically bound arguments, excluding the instance argument.\r\n            ":"\r\n            动态绑定的参数，不包括实例参数。\r\n            \r\n","\r\n            Gets all the annotations with the specified annotation kinds. \r\n            ":"用指定的注释类型获取所有注释。\r\n            \r\n","\r\n            Context for an operation block start action.\r\n            An operation block start action can use an ":"\r\n            操作块启动操作的上下文。\r\n            操作块启动操作可以使用\r\n","\r\n            Represents using variable declaration, with scope spanning across the parent ":"\r\n            代表使用变量声明，范围跨越了父\r\n","\r\n            The set of local variables which are assigned a value inside a region\r\n            that may be used outside the region.\r\n            ":"\r\n            在区域内分配了一个值的局部变量集\r\n            可以在该地区以外使用。\r\n            \r\n","One or more node instances originally tracked.":"最初跟踪的一个或多个节点实例。\r\n"," indicating the declared accessibility for the symbol.\r\n            Returns NotApplicable if no accessibility is declared.\r\n            ":" 指示该符号的声明可访问性。\r\n            如果未声明可访问性，则返回无关紧要。\r\n            \r\n","The include node from which to create a RuleSetInclude object":"从中创建一个uludeTinclude对象的包括节点\r\n"," is true).\r\n            ":" 是真的）。\r\n            \r\n","\r\n            This field is a compile-time constant. The field has no runtime location and cannot be directly addressed from IL.\r\n            ":"\r\n            该字段是编译时常数。该字段没有运行时的位置，不能直接从IL解决。\r\n            \r\n","\r\n            Apply additional disambiguation rules during resolution of referenced assemblies.\r\n            ":"\r\n            在解决参考组件的决议期间应用其他歧义规则。\r\n            \r\n","\r\n            Represents the various output kinds of an ":"\r\n            代表各种输出类型\r\n","\r\n            Allows access to options provided by an analyzer config\r\n            ":"\r\n            允许访问分析仪配置提供的选项\r\n            \r\n","\r\n            Each value is either a single V or an ":"\r\n            每个值是单个V或\r\n"," The length of names is limited to not exceed metadata restrictions. ":" 名称的长度仅限于不超过元数据限制。\r\n","\r\n            internal indexer that does not verify index.\r\n            Used when caller has already ensured that index is within bounds.\r\n            ":"\r\n            内部索引器不验证索引。\r\n            当呼叫者已经确保索引在范围内时使用。\r\n            \r\n","The full string representation of this node or token including its leading and trailing\r\n            trivia.":"该节点或令牌的完整字符串表示，包括其前导和尾声\r\n            琐事。\r\n","\r\n            Helper method to reset analysis data for analysis locations.\r\n            ":"\r\n            用于重置分析位置的分析数据的帮助方法。\r\n            \r\n","\r\n            Indicates a C# while or do loop, or a VB While or Do loop.\r\n            ":"\r\n            指示c＃while或do循环，或while while或do loop。\r\n            \r\n","The type to add.":"要添加的类型。\r\n","\r\n            True if differences in IsByRef for parameters should be treated as significant.\r\n            ":"\r\n            如果应将参数的ISBYREF差异视为显着，则是正确的。\r\n            \r\n","\r\n            Locals for which this region represent the life-time.\r\n            ":"\r\n            该地区代表终身的当地人。\r\n            \r\n","\r\n            Subset of processed analyzers.\r\n            NOTE: This property is only non-null for ":"\r\n            加工分析仪的子集。\r\n            注意：此属性只是非记录\r\n","\r\n            \"newobj ArrayConstructor\"  is equivalent of \"newarr ElementType\" \r\n            when working with multidimensional arrays\r\n            ":"\r\n            “ newobj arrayconstructor”等效于“ newarr elementtype”\r\n            使用多维阵列时\r\n            \r\n","Action to be executed at the end of semantic analysis of a code block.":"在代码块的语义分析结束时执行的操作。\r\n",". The exception isn't passed through (the method returns true).\r\n            ":"。异常未通过（方法返回true）。\r\n            \r\n","\r\n            Returns the string representation of this node, not including its leading and trailing trivia.\r\n            ":"\r\n            返回该节点的字符串表示形式，而不包括其领先和尾随的琐事。\r\n            \r\n",". If this is not a function pointer signature or the calling convention is\r\n            not unmanaged, this is an empty array. Order and duplication of these modifiers reflect source/metadata order and duplication, whichever this symbol came from.\r\n            ":"。如果这不是函数指针签名或调用约定是\r\n            不受管理，这是一个空数组。这些修饰符的订单和复制反映了源/元数据顺序和重复，该符号来自于此。\r\n            \r\n","\r\n            Include the global namespace, unconditionally.\r\n            ":"\r\n            无条件地包括全局名称空间。\r\n            \r\n","\r\n            Check whether given symbol is from mscorlib\r\n            ":"\r\n            检查给定的符号是否来自mscorlib\r\n            \r\n","\r\n            Checks if an applied attribute with the given attributeType matches the namespace name and type name of the given early attribute's description\r\n            and the attribute description has a signature with parameter count equal to the given attributeArgCount.\r\n            NOTE: We don't allow early decoded attributes to have optional parameters.\r\n            ":"\r\n            检查给定属性的应用属性是否匹配给定早期属性描述的名称名称和类型名称\r\n            并且属性描述的签名与给定的属性计数等于参数计数。\r\n            注意：我们不允许早期解码属性具有可选参数。\r\n            \r\n","\r\n            Holds the current object instance being initialized if we're visiting an object initializer.\r\n            ":"\r\n            如果我们访问对象初始化器，则保留当前对象实例。\r\n            \r\n","\r\n            Creates a new options instance with the concurrent build property set accordingly.\r\n            ":"\r\n            与并发构建属性相应地创建一个新的选项实例。\r\n            \r\n","File name with an extension to be stored in metadata.":"文件名带有要存储在元数据中的扩展名。\r\n",", as appropriate.\r\n            ":"， 作为适当的。\r\n            \r\n",".\r\n            Null of all modules were specified at construction time.\r\n            ":"。\r\n            在施工时指定了所有模块的零。\r\n            \r\n"," type and the second\r\n            parameter inherits from or equals ":" 类型和第二个\r\n            参数继承或等于\r\n","\r\n            An object reference to reference-id map, that can share base data efficiently.\r\n            ":"\r\n            可以有效共享基本数据的参考ID映射的对象引用。\r\n            \r\n"," instance in\r\n            which case it is owned by that. Or it is just an alias for the value that is stored \r\n            in ":" 实例IN\r\n            这种情况是由此所有的。或者只是存储的值的别名\r\n            在\r\n","\r\n            Occurs when a property is added or replaced, or when the collection is cleared.\r\n            ":"\r\n            当添加或更换属性或清除集合时发生。\r\n            \r\n","ITypedArray<double>":"ItypedArray <double>\r\n","\r\n            Check for occurrence of two consecutive NUL (U+0000) characters.\r\n            This is unlikely to appear in genuine text, so it's a good heuristic\r\n            to detect binary files.\r\n            ":"检查出现两个连续的NUL（U+0000）字符。\r\n            这不太可能出现在真实的文本中，所以这是一个好启发式\r\n            检测二进制文件。\r\n            \r\n"," is true\r\n            ":" 是真的\r\n            \r\n"," with a sequence of ":" 一系列\r\n","The next token that follows this token in the syntax tree.":"在语法树中此令牌之后的下一个令牌。\r\n","\r\n            Represents the '-' operator.\r\n            ":"\r\n            代表“  - ”操作员。\r\n            \r\n","\r\n            This PEBuilder adds an .mvid section.\r\n            ":"\r\n            该卵石添加了一个.MVID部分。\r\n            \r\n","\r\n            Declarative security actions for this method.\r\n            ":"\r\n            该方法的声明性安全措施。\r\n            \r\n","\r\n              Looks up a localized string similar to The span does not include the end of a line..\r\n            ":"\r\n              查找类似于跨度的局部字符串不包括行的末端。\r\n            \r\n","\r\n            Value to be locked.\r\n            ":"\r\n            价值要锁定。\r\n            \r\n","\r\n            Omits all kind keywords.\r\n            ":"\r\n            省略所有关键字。\r\n            \r\n","\r\n            Search a sorted integer array for the target value in O(log N) time.\r\n            ":"\r\n            搜索排序的整数数组以在O（log n）时间中的目标值。\r\n            \r\n","\r\n            Gets the set of type identifiers from this assembly.\r\n            ":"\r\n            从此组件中获取一组类型标识符。\r\n            \r\n","\r\n            Global warning level (from 0 to 4).\r\n            ":"\r\n            全球警告级别（从0到4）。\r\n            \r\n","\r\n            The number of sections. This indicates the size of the section table, which immediately follows the headers.\r\n            ":"\r\n            部分的数量。这表明了截面表的大小，该截面表紧随其后。\r\n            \r\n",", all field, property, and method return values\r\n            are marshaled with full .NET type information even if they are ":"，所有字段，属性和方法返回值\r\n            即使是完整的.NET类型信息，即使它们是\r\n","\r\n            Gets the effective ":"\r\n            有效\r\n","\r\n            The path to a Win32 resource.\r\n            ":"Win32资源的道路。\r\n            \r\n","\r\n            Include the member keyword before members (if one exists).\r\n            For example, \"event D E\" in C# or \"Function MyFun()\" in Visual Basic.\r\n            ":"\r\n            在会员之前包含会员关键字（如果存在）。\r\n            例如，Visual Basic中的C＃或“ function MyFun（）”中的“事件D E”。\r\n            \r\n",".\r\n            The 99% case here is that we are dealing with an ASCII string that matches the input hence\r\n            it's worth special casing that here and falling back to the more complicated comparison \r\n            when dealing with non-ASCII input\r\n            ":"。\r\n            这里的99％情况是我们正在处理与输入匹配的ASCII字符串\r\n            值得特别的套管，在这里，回到更复杂的比较\r\n            处理非ASCII输入时\r\n            \r\n","\r\n            This method adds a computed output for the given source key to the dictionary specified\r\n            ":"\r\n            此方法为指定字典添加了给定源键的计算输出\r\n            \r\n","\r\n            Set of exception diagnostics reported for exceptions thrown by the analyzers.\r\n            ":"\r\n            分析仪抛出的例外情况报告的一组异常诊断。\r\n            \r\n",". Such a delegate is\r\n            often useful in strongly typed contexts because of\r\n            ":"。这样的代表是\r\n            由于\r\n            \r\n","\r\n            // import types\r\n            var ElementT = host.type(\"System.Double\");\r\n            var ListT = host.type(\"System.Collections.Generic.List\", ElementT);\r\n            // create a list\r\n            var list = host.newObj(ListT);\r\n            // add a list element\r\n            list.Add(host.toDouble(42));\r\n            ":"\r\n            //导入类型\r\n            var elementt = host.type（“ system.double”）;\r\n            var listt = host.type（“ system.collections.generic.list”，elementt）;\r\n            //创建列表\r\n            var list = host.newobj（listt）;\r\n            //添加列表元素\r\n            list.add（host.todouble（42））;\r\n            \r\n","\r\n            Get full metadata handle of the type definition.\r\n            ":"\r\n            获取类型定义的完整元数据手柄。\r\n            \r\n","\r\n            Attempts to start processing a syntax tree for the given analyzer's syntax tree actions.\r\n            ":"\r\n            试图开始为给定的分析仪的语法树操作处理语法树。\r\n            \r\n","\r\n            Report a diagnostic by default.\r\n            ":"\r\n            默认情况下报告诊断。\r\n            \r\n","\r\n            A signed 32 bit integer.\r\n            ":"\r\n            一个签名的32位整数。\r\n            \r\n","\r\n            Output parameter, never null:\r\n            A sequence with information about namespaces immediately contained within this namespace.\r\n            For each pair:\r\n              Key - contains simple name of a child namespace.\r\n              Value - contains a sequence similar to the one passed to this function, but\r\n                      calculated for the child namespace. \r\n            ":"\r\n            输出参数，永不零：\r\n            该命名空间中立即包含的有关名称空间的信息的序列。\r\n            每对：\r\n              键 - 包含儿童名称空间的简单名称。\r\n              值 - 包含一个类似于传递到此函数的序列，但是\r\n                      为子名称空间计算。\r\n            \r\n"," that will be used to parse any added sources.\r\n            ":" 这将用于解析任何添加的来源。\r\n            \r\n","\r\n            Returns true if the identity is a Framework 4.5 or lower assembly.\r\n            ":"\r\n            如果身份是4.5或较低的组件，则返回true。\r\n            \r\n","\r\n            Used for time-based version generation when ":"\r\n            用于基于时间的版本生成\r\n","Provides XML documentation for symbol found in the reference.":"提供XML文档，以适用于参考中的符号。\r\n","\r\n            Imports a COM/ActiveX type and exposes it to script code. The registered class is\r\n            specified by class identifier (CLSID).\r\n            ":"\r\n            导入com/activex类型并将其公开为脚本代码。注册课是\r\n            由类标识符（CLSID）指定。\r\n            \r\n","Emit options.":"发射选项。\r\n","A host object with the specified type restriction.":"具有指定类型限制的主机对象。\r\n","AnalyzerManager to manage analyzers for analyzer host's lifetime.":"Analyzermanager管理分析仪的分析仪的寿命。\r\n","The incremental generator to wrap":"要包装的增量发电机\r\n","\r\n            Creates a COM/ActiveX object and exposes it to script code with the specified options.\r\n            The registered class is specified by programmatic identifier (ProgID).\r\n            ":"\r\n            创建一个COM/ActiveX对象，并使用指定选项将其公开为脚本代码。\r\n            注册类由程序化标识符（ProgID）指定。\r\n            \r\n","\r\n            Indicates no conditional branch from a ":"\r\n            表示没有条件分支\r\n",".\r\n            It clears the cached internal state (supported descriptors, registered actions, exception handlers, etc.) for analyzers.\r\n            ":"。\r\n            它清除了缓存的内部状态（受支持的描述符，注册的动作，异常处理程序等）。\r\n            \r\n","The new node or token.":"新节点或令牌。\r\n","s from scratch based on metadata produced by subsequent compilations).\r\n            ":"s基于随后的汇编产生的元数据）。\r\n            \r\n","\r\n              Looks up a localized string similar to Inconsistent language versions.\r\n            ":"\r\n              查找类似于不一致语言版本的本地化字符串。\r\n            \r\n","\r\n            Contravariant (":"\r\n            违反（\r\n","\r\n            Returns a set of descriptors for the diagnostics that this analyzer is capable of producing.\r\n            ":"\r\n            返回该分析仪能够生产的诊断的一组描述符。\r\n            \r\n"," has an attribute of type\r\n            ":" 具有类型的属性\r\n            \r\n","The name of an interface.":"接口的名称。\r\n",". This is used as an increment operator":"。这被用作增量操作员\r\n","\r\n            Gets the location for this token.\r\n            ":"\r\n            获取这个令牌的位置。\r\n            \r\n","True if the input was converted; false if there was an overflow":"如果转换输入，则为是真的；错误如果有溢出\r\n"," will be invoked to create\r\n            an instance of ":" 将调用创建\r\n            一个实例\r\n","\r\n            Returns true if this block has a branch label\r\n            and is not a \"nop\" branch.\r\n            ":"\r\n            如果此块具有分支标签，则返回true\r\n            并且不是“ NOP”分支。\r\n            \r\n","\r\n            System.Runtime.InteropServices.VarEnum is obsolete.\r\n            ":"\r\n            System.Runtime.InterOpservices.Varenum已过时。\r\n            \r\n","\r\n            GeneratorDriver is an immutable class that can be manipulated by returning a mutated copy of itself.\r\n            In the compiler we only ever create a single instance and ignore the mutated copy. The IDE may perform \r\n            multiple edits, or generation passes of the same driver, re-using the state as needed.\r\n            ":"\r\n            Generatordriver是一个不变的类，可以通过返回自身的突变副本来操纵。\r\n            在编译器中，我们只创建一个实例并忽略突变的副本。 IDE可能会执行\r\n            多次编辑或同一驱动程序的一代通过，根据需要重新使用状态。\r\n            \r\n","Hash algorithm to use to calculate checksum of the text that's saved to PDB.":"哈希算法用于计算保存到PDB的文本的校验和。\r\n"," indicating what kind of symbol it is.\r\n            ":" 指示它是什么样的符号。\r\n            \r\n","\r\n            This indicates that further information can be obtained by looking at the custom debug\r\n            info of another method (specified by token).\r\n            ":"\r\n            这表明可以通过查看自定义调试来获得更多信息\r\n            另一种方法的信息（由令牌指定）。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified resource constraints and options.\r\n            ":"\r\n            初始化具有指定资源约束和选项的新的V8运行时实例。\r\n            \r\n","\r\n            Displays asterisks between commas in multi-dimensional arrays.\r\n            For example, \"int[][*,*]\" instead of \"int[][,]\" in C# or\r\n            \"Integer()(*,*)\" instead of \"Integer()(*,*) in Visual Basic.\r\n            ":"\r\n            在多维阵列中的逗号之间显示星号。\r\n            例如，“ int [] [*，*]”，而不是C＃或C＃或\r\n            “ Integer（）（*，*）”，而不是Visual Basic中的“ Integer（）（）（*，*）。\r\n            \r\n","\r\n            Defines a hidden sequence point.\r\n            The effect of this is that debugger will not associate following code \r\n            with any source (until it sees a lexically following sequence point).\r\n            \r\n            This is used for synthetic code that is reachable through labels.\r\n            \r\n            If such code is not separated from previous sequence point by the means of a hidden sequence point\r\n            It looks as a part of the statement that previous sequence point specifies.\r\n            As a result, when user steps through the code and goes through a jump to such label,\r\n            it will appear as if the jump landed at the beginning of the previous statement.\r\n            \r\n            NOTE: Also inserted as the first statement of a method that would not otherwise have a leading\r\n            sequence point so that step-into will find the method body.\r\n            ":"定义一个隐藏的序列点。\r\n            这样做的效果是，调试器不会关联遵循代码\r\n            使用任何源（直到看到词汇后的序列点）。\r\n            \r\n            这用于通过标签达到的合成代码。\r\n            \r\n            如果通过隐藏序列的均值与先前的序列点分开\r\n            它看起来是上一个序列指定的语句的一部分。\r\n            结果，当用户逐步浏览代码并跳到此类标签​​时，\r\n            看起来好像跳跃降落在上一个声明的开头。\r\n            \r\n            注意：还将插入作为方法的第一个语句\r\n            序列点，使得插入可以找到方法主体。\r\n            \r\n","\r\n            True if the type can be accessed from other assemblies.\r\n            ":"\r\n            如果可以从其他组件访问类型，则为true。\r\n            \r\n","\r\n            Adds aliases of a specified reference to the merged set of aliases.\r\n            Consider the following special cases:\r\n            \r\n            o {} + {} = {} \r\n              If neither reference has any aliases then the result has no aliases.\r\n            \r\n            o {A} + {} = {A, global}\r\n              {} + {A} = {A, global}\r\n              \r\n              If one and only one of the references has aliases we add the global alias since the \r\n              referenced declarations should now be accessible both via existing aliases \r\n              as well as unqualified.\r\n              \r\n            o {A, A} + {A, B, B} = {A, A, B, B}\r\n              We preserve dups in each alias array, but avoid making more dups when merging.\r\n            ":"\r\n            添加对合并的别名集的指定引用的别名。\r\n            考虑以下特殊情况：\r\n            \r\n            o {} + {} = {}\r\n              如果两个参考都没有任何别名，则结果没有别名。\r\n            \r\n            o {a} + {} = {a，global}\r\n              {} + {a} = {a，全局}\r\n              \r\n              如果其中一个参考文献中有一个和别名，我们将添加全球别名，因为\r\n              现在应通过现有别名访问引用的声明\r\n              以及不合格的。\r\n              \r\n            o {a，a} + {a，b，b} = {a，a，b，b}\r\n              我们在每个别名数组中保留DUP，但在合并时避免制作更多的DUP。\r\n            \r\n","\r\n            Fired when an exception is raised by any of the public methods of ":"\r\n            当任何公共方法提出例外时被解雇\r\n","\r\n            Win32 API calling convention for calling unmanaged methods via PlatformInvoke. The call stack is cleaned up by the callee.\r\n            ":"\r\n            Win32 API致电通过PlatformInvoke调用非托管方法的公约。呼叫堆栈由Callee清理。\r\n            \r\n","\r\n            Return collection of assemblies involved in canonical type resolution of\r\n            NoPia local types defined within target assembly. In other words, all \r\n            references used by previous compilation referencing the target assembly.\r\n            ":"\r\n            涉及规范类型分辨率的组件的返回集合\r\n            NOPIA在目标组件中定义的本地类型。换句话说，所有人\r\n            先前汇编所用的参考引用了目标组件。\r\n            \r\n","\r\n            Returns null for interfaces and System.Object.\r\n            ":"\r\n            返回接口和system.Object的null。\r\n            \r\n","The name of a label.":"标签的名称。\r\n","\r\n            This contains the (symbol, property) pairs within a property subpattern.\r\n            ":"\r\n            这包含属性子图案中的（符号，属性）对。\r\n            \r\n","\r\n            descend into everything\r\n            ":"\r\n            下降到一切\r\n            \r\n","\r\n             int x = 3;\r\n             RunWithActionCallback(a => this.DoSomething(a, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithactionCallback（a => this.dosomething（a，x））;\r\n             \r\n","\r\n            Unique identification of an emitted entity (method, lambda, closure) used for debugging purposes (EnC).\r\n            ":"\r\n            用于调试目的（ENC）的发射实体（方法，lambda，闭合）的唯一识别。\r\n            \r\n","An optional script function that performs cleanup for the operation.":"可选的脚本功能，可为操作执行清理。\r\n","The IID of the interface to return in scope. Typically, this would be IID_IMetaDataImport.":"接口的IID返回范围。通常，这将是IID_IMETADATAIMPORT。\r\n","\r\n              Looks up a localized string similar to Given operation block does not belong to the current analysis context..\r\n            ":"\r\n              查找类似于给定的操作块的本地化字符串不属于当前分析上下文。\r\n            \r\n","\r\n            Clear the set\r\n            ":"\r\n            清除集合\r\n            \r\n","\r\n            Check that the name is a valid Unicode identifier.\r\n            ":"\r\n            检查名称是否是有效的Unicode标识符。\r\n            \r\n","\r\n            A reference to managed memory.\r\n            ":"\r\n            对托管内存的引用。\r\n            \r\n","Case constant to compare the key against":"案例常数以比较钥匙与\r\n","\r\n            Overload resolution did not choose a method. The candidate symbols are the methods there\r\n            were considered during overload resolution (which may or may not be applicable methods). \r\n            ":"\r\n            超载分辨率没有选择方法。候选符号是那里的方法\r\n            在超负荷分辨率（可能是适用的方法）期间被考虑。\r\n            \r\n","TaskLoggingHelper from the host task":"主机任务的TaskLoggingHelper\r\n","\r\n            var item = host.newObj();\r\n            item.label = \"Widget\";\r\n            item.weight = 123.45;\r\n            ":"\r\n            var item = host.newobj（）;\r\n            item.label =“ widget”;\r\n            item.Weight = 123.45;\r\n            \r\n"," to catch the exception if the non-fatal error was reported; otherwise,\r\n             ":" 如果报告了非致命误差，请捕获例外；否则，\r\n             \r\n","#line default":"#line默认值\r\n","Me":"我\r\n",".\r\n            Otherwise, if type of ":"。\r\n            否则，如果类型\r\n","\r\n            TODO: Can/should this be done using WellKnownAttributes?\r\n            ":"\r\n            TODO：可以/应该使用众所周知的工作吗？\r\n            \r\n","The names of the assemblies that contain the types to import.":"包含要导入类型的组件的名称。\r\n","\r\n            Specifies how to display delegates (just the name or the name with the signature).\r\n            ":"\r\n            指定如何显示委托（只有名称或带有签名的名称）。\r\n            \r\n","What tree to complete. null means complete all trees. ":"要完成什么树。无效意味着完成所有树木。\r\n","\r\n            This method directly converts a ":"\r\n            此方法直接转换\r\n","\r\n            Defines the max length for method call chain (call stack size) for interprocedural analysis.\r\n            This is done for performance reasons for analyzing methods with extremely large call trees.\r\n            ":"\r\n            定义方法呼叫链的最大长度（呼叫堆栈大小）进行概要分析。\r\n            这是出于表现原因而进行的，以分析非常大的呼叫树的方法。\r\n            \r\n","\r\n            Get the syntax node(s) where this symbol was declared in source. Some symbols (for example,\r\n            partial classes) may be defined in more than one location. This property should return\r\n            one or more syntax nodes only if the symbol was declared in source code and also was\r\n            not implicitly declared (see the IsImplicitlyDeclared property). \r\n            \r\n            ":"\r\n            获取在源中声明此符号的语法节点。一些符号（例如，\r\n            部分类）可以在多个位置定义。此属性应返回\r\n            仅在源代码中声明符号并且是一个或多个语法节点，并且\r\n            没有隐式声明（请参见IsimplicerDeclared属性）。\r\n            \r\n            \r\n","The type of the second parameter of the bound action.":"绑定动作的第二个参数的类型。\r\n","\r\n            Create an analyzer driver.\r\n            ":"\r\n            创建一个分析仪驱动程序。\r\n            \r\n","\r\n            A UInt32 value encoded as 4 bytes.\r\n            ":"\r\n            UINT32值编码为4个字节。\r\n            \r\n","Pointer to the start of metadata block.":"指向元数据块开始的指针。\r\n","\r\n            Gets the value associated with the specified symbol in the option specification.\r\n            ":"\r\n            获取与选项规范中指定符号关联的值。\r\n            \r\n","Methods in anonymous types.":"匿名类型的方法。\r\n","\r\n            Serves as a hash function for FileLinePositionSpan.\r\n            ":"\r\n            充当FilelinePositionSpan的哈希函数。\r\n            \r\n","\r\n            Stores the partial analysis state for a specific event/symbol/tree for a specific analyzer.\r\n            ":"\r\n            为特定分析仪的特定事件/符号/树存储部分分析状态。\r\n            \r\n","[]' parameter.\r\n            The default value of this is ":"[]' 范围。\r\n            此的默认值是\r\n","The compilation before any source generation has occurred.":"发生任何来源之前的汇编。\r\n","\r\n            Represents unknown argument kind.\r\n            ":"\r\n            代表未知参数类型。\r\n            \r\n","\r\n             Label that can be the target of branches.\r\n            ":"\r\n             可以成为分支的目标的标签。\r\n            \r\n",".\r\n            Once a basic block is entered, all operations in it are always executed.\r\n            Optional ":"。\r\n            输入基本块后，其中所有操作始终执行。\r\n            可选的\r\n","\r\n            Gets a type by its full type name.\r\n            ":"\r\n            通过其完整类型名称获取类型。\r\n            \r\n","\r\n            The kind of assembly generated when emitted.\r\n            ":"\r\n            发射时产生的组装种类。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# dynamic member reference expression.\r\n             (2) VB late bound member reference expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃动态成员参考表达式。\r\n             （2）VB晚期结合的成员参考表达式。\r\n            \r\n","\r\n            For super simple cases: If this abstract value is a single non-null literal, then get that literal value.\r\n            ":"\r\n            对于超简单的情况：如果此抽象值是单个非无真词文字，则获得该文字值。\r\n            \r\n","\r\n            Prepends the path to the appropriate FileTracker assembly to the PATH\r\n            environment variable.  Used for inproc tracking, or when the .NET Framework may \r\n            not be on the PATH.\r\n            ":"\r\n            将适当的Filetracker组件的路径预先到达路径\r\n            环境变量。用于INPROC跟踪或.NET框架可能\r\n            不在路上。\r\n            \r\n"," are caught and converted to an emit diagnostic. Other exceptions are passed through.\r\n            The function shall return an empty ":" 被捕获并转换为发射诊断。其他例外情况通过。\r\n            该功能应返回空\r\n"," for each assembly reference that\r\n            doesn't match any of the assemblies explicitly referenced by the ":"对于每个组装参考\r\n            不匹配任何由\r\n","\r\n            Specifies the size of sections in the output file. \r\n            ":"\r\n            指定输出文件中的部分大小。\r\n            \r\n","\r\n            Gets the name of this assembly.\r\n            ":"获取此组件的名称。\r\n            \r\n","\r\n            An array with zero elements\r\n            ":"\r\n            零元素的数组\r\n            \r\n","Typed Array":"键入数组\r\n","V8 Inspector JSON Protocol":"V8检查员JSON协议\r\n","\r\n            The name assigned to the LogicalOr operator.\r\n            ":"\r\n            分配给逻辑运算符的名称。\r\n            \r\n","\r\n            True if any bits were set as a result of the union.\r\n            ":"\r\n            如果是由于联盟而设置的任何位，则为真的。\r\n            \r\n","Semantic model actions to be executed.":"语义模型动作要执行。\r\n","\r\n            Initializes a new JScript engine instance with the specified name.\r\n            ":"\r\n            初始化具有指定名称的新JScript引擎实例。\r\n            \r\n","\r\n              Looks up a localized string similar to Suppressed diagnostic ID '{0}' does not match suppressable ID '{1}' for the given suppression descriptor..\r\n            ":"\r\n              查找类似于被抑制的诊断ID'{0}'类似的本地化字符串，对于给定的抑制描述符。\r\n            \r\n","\r\n            Mimic behavior of the native function by the same name.\r\n            ":"\r\n            模仿本机函数以相同名称为单位。\r\n            \r\n","Error creating the PDB writer. See inner exception for root cause.":"错误创建PDB作者。有关根本原因，请参见内部例外。\r\n","\r\n            Loads and evaluates a document with the specified category and context callback.\r\n            ":"加载并评估具有指定类别和上下文回调的文档。\r\n            \r\n","The dynamic host object that contains the element to set.":"包含要设置的元素的动态主机对象。\r\n","Specifies the binding model for how this object will be treated in comparisons.":"指定在比较中如何处理该对象的绑定模型。\r\n"," if the position is greater than or equal to Start and strictly less \r\n            than End, otherwise ":" 如果该位置大于或等于开始，并且严格少\r\n            比目的，否则\r\n","\r\n            Looks for metadata references among the assembly file references given to the compilation when constructed.\r\n            When scripts are included into a project we don't want #r's to reference other assemblies than those \r\n            specified explicitly in the project references.\r\n            ":"\r\n            在构造时查找汇编的汇编文件引用中的元数据参考。\r\n            当将脚本包含到一个项目中时，我们不希望＃r参考其他组件\r\n            在项目参考中明确指定。\r\n            \r\n"," is part of that built-in \r\n                equatability, but we do not write it out, and so descriptors differing only\r\n                by MessageFormat (common) would lead to duplicate rule metadata entries in\r\n                the log.\r\n            \r\n             2. ":" 是该内置的一部分\r\n                平等性，但我们没有写出来，因此描述符仅有不同\r\n                通过messageFormat（common）将导致重复的规则元数据条目\r\n                日志。\r\n            \r\n             2。\r\n","The node or token to add.":"节点或令牌要添加。\r\n"," gets the original symbol as it was defined in\r\n            source or metadata.\r\n            ":" 获取原始符号定义\r\n            来源或元数据。\r\n            \r\n","\r\n            The name of the resource. Only valid if this.Id < 0.\r\n            ":"\r\n            资源的名称。仅在此时有效。ID<0。\r\n            \r\n","\r\n            Contains common arguments to Symbol.EarlyDecodeWellKnownAttribute method in both the language compilers.\r\n            ":"\r\n            在两个语言编译器中包含符号的常见参数。\r\n            \r\n","\r\n            Indicates that this PE file makes Win32 calls. See CorPEKind.pe32BitRequired for more information (http://msdn.microsoft.com/en-us/library/ms230275.aspx).\r\n            ":"\r\n            指示此PE文件进行Win32调用。有关更多信息，请参见Corpekind.pe32bitrequired（http://msdn.microsoft.com/en-us/library/ms230275.aspx）。\r\n            \r\n","\r\n            Used to generate a unique token for each tree diagnostics request.\r\n            The token is used to determine the priority of each request.\r\n            Each new tree diagnostic request gets an incremented token value and has higher priority over other requests for the same tree.\r\n            Compilation diagnostics requests always have the lowest priority.\r\n            ":"\r\n            用于为每个树诊断请求生成一个唯一的令牌。\r\n            令牌用于确定每个请求的优先级。\r\n            每个新的树诊断请求都会有一个增加的令牌值，并且比对同一树的其他请求更优先。\r\n            汇编诊断请求始终具有最低的优先级。\r\n            \r\n","Win32 resources, assumed to be in COFF object format, have an invalid section size.":"Win32资源（假定为Coff对象格式）具有无效的部分大小。\r\n"," intersects this span. \r\n            A position is considered to intersect if it is between the start and\r\n            end positions (inclusive) of this span.\r\n            ":" 相交此跨度。\r\n            如果位置在开始和\r\n            该跨度的最终位置（包括）。\r\n            \r\n","\r\n            region. Doesn't contain any ":"\r\n            地区。不包含任何\r\n","The event handler delegate type.":"事件处理程序代表类型。\r\n","A provider that returns analyzer config options":"返回分析仪配置选项的提供商\r\n","\r\n            A DateTime value\r\n            ":"\r\n            DateTime值\r\n            \r\n","\r\n            The settings that determine how properties are displayed. \r\n            For example, \"Prop\" vs \"Prop { get; set; }\" in C# or \"Prop\" vs. \"ReadOnly Prop\" in Visual Basic.\r\n            ":"\r\n            确定属性如何显示的设置。\r\n            例如，在Visual Basic中，C＃或“ Prop”与“ ReadOnly Prop”中的“ Prop” VS” Prop {get; set;}”。\r\n            \r\n","\r\n            Drop to an interactive loop. If a script is specified in ":"\r\n            滴到交互式循环。如果在\r\n","\r\n            May represent assembly definition or assembly reference identity.\r\n            ":"\r\n            可以代表汇编定义或组装参考身份。\r\n            \r\n","\r\n            Represents the C# '!=' operator and VB 'IsNot' operator and ":"\r\n            代表C＃'！='运算符和Vb'isnot'运算符，并且\r\n","A signed integer that indicates the relative values of\r\n             ":"一个指示的签名整数\r\n             \r\n","Constraints are normally specified by other specific properties that allow automated validation of the\r\n            constraint. This property supports documenting constraints which cannot be described in terms of other\r\n            constraint properties.":"约束通常由其他特定属性指定，允许自动验证\r\n            约束。该属性支持记录约束，这些约束无法用其他\r\n            约束属性。\r\n","The imported host array type.":"导入的主机数组类型。\r\n","\r\n            Gets a list of all the tokens in the span of this node.\r\n            ":"\r\n            在此节点的跨度中获取所有令牌的列表。\r\n            \r\n","s about a non-source ":"关于非源\r\n","\r\n            Sets the value of a named script object property.\r\n            ":"\r\n            设置命名脚本对象属性的值。\r\n            \r\n","\r\n            Builds a global analyzer config from a series of partial configs\r\n            ":"\r\n            从一系列部分配置构建全局分析仪配置\r\n            \r\n","Error reading module metadata.":"错误读取模块元数据。\r\n","\r\n            Nullable annotations are enabled and will be shown when APIs\r\n            defined in this project are used in other contexts.\r\n            ":"\r\n            启用了无效的注释，并在API时显示\r\n            该项目中定义的其他情况使用。\r\n            \r\n","\r\n            Returns true if and only if analysis was successful.  Analysis can fail if the region does not properly span a single expression,\r\n            a single statement, or a contiguous series of statements within the enclosing block.\r\n            ":"\r\n            当且仅当分析成功时，返回是正确的。如果区域无法正确跨越单个表达式，则分析可能会失败\r\n            一个语句，或封闭块中的一系列连续语句。\r\n            \r\n","\r\n            Symbol for generic type.\r\n            ":"\r\n            通用类型的符号。\r\n            \r\n","\r\n            Denotes the kind of reference parameter.\r\n            ":"\r\n            表示参考参数的种类。\r\n            \r\n"," of the diagnostic.\r\n            ":" 诊断。\r\n            \r\n","\r\n            C# and VB. Tuple element names for local variables and constants.\r\n            ":"\r\n            C＃和VB。本地变量和常数的元组元素名称。\r\n            \r\n","\r\n            Returns the hash code for the current instance.\r\n            ":"\r\n            返回当前实例的哈希代码。\r\n            \r\n","\r\n            This function defines whether an attribute is optional or not.\r\n            ":"\r\n            此函数定义属性是否是可选的。\r\n            \r\n","\r\n            Returns a non-sealed custom attribute bag with null initialized ":"\r\n            返回一个非密封的自定义属性袋，并初始化为NULL\r\n","\r\n            References may be small (2B) or large (4B).\r\n            ":"\r\n            参考可能很小（2b）或大（4b）。\r\n            \r\n"," is false.\r\n            For example, a C# ternary expression \"a ? b : c\" or a VB \"If(a, b, c)\" expression is represented as a conditional operation whose resulting value is the result of the expression.\r\n            Additionally, a C# \"if else\" statement or VB \"If Then Else\" is also is represented as a conditional operation, but with a dropped or no result value.\r\n            ":" 是错误的。\r\n            例如，如果（a，b，c）”表达式表示为条件操作，其结果值是表达式的结果。\r\n            此外，还表示c＃“ if else”语句或vb“如果则表示为有条件的操作，但删除或没有结果值。\r\n            \r\n","\r\n            Whether the variable is a ref or ref readonly local.\r\n            ":"\r\n            该变量是ref还是Refonly Local。\r\n            \r\n","\r\n            Enumerator for lists of SyntaxNodeOrToken structs.\r\n            ":"\r\n            枚举列表的枚举列表。\r\n            \r\n","\r\n            Does this key have one or more associated values?\r\n            ":"\r\n            此键具有一个或多个相关的值吗？\r\n            \r\n","\r\n            The set of local variables which are definitely assigned a value when a region is\r\n            exited.\r\n            ":"\r\n            当区域为时，一组本地变量肯定被分配了一个值\r\n            退出。\r\n            \r\n","\r\n            Invert all the bits in the vector.\r\n            ":"\r\n            将矢量中的所有位反转。\r\n            \r\n"," if the element was found and removed, ":" 如果找到并去除元素，\r\n","\r\n            Given a compilation and a destination directory, determine three names:\r\n              1) The name with which the assembly should be output (default = null, which indicates that the compilation output name should be used).\r\n              2) The path of the assembly/module file (default = destination directory + compilation output name).\r\n              3) The path of the pdb file (default = assembly/module path with \".pdb\" extension).\r\n            ":"\r\n            给定汇编和目标目录，确定三个名称：\r\n              1）应该输出组件的名称（默认值= null，这表明应使用汇编输出名称）。\r\n              2）汇编/模块文件的路径（Default = Destination Directory +编译输出名称）。\r\n              3）PDB文件的路径（默认值=带有“ .pdb”扩展名的汇编/模块路径）。\r\n            \r\n","\r\n            Removes a property from the ":"\r\n            从\r\n","Delegate applied to each token.  The token is returned if the predicate returns\r\n            true.":"委托应用于每个令牌。如果谓词返回，将返回令牌\r\n            真的。\r\n"," include any ":" 包括任何\r\n","\r\n            A map from a net-module metadata reference to the index of the corresponding module\r\n            symbol in the source assembly symbol for the current compilation.\r\n            ":"\r\n            网络模块元数据引用到相应模块索引的地图\r\n            当前汇编的源组件符号中的符号。\r\n            \r\n"," in reversed order":" 以相反的顺序\r\n","\r\n            Used in C# for spans inside of \"#line linenumber\" directive\r\n            ":"\r\n            在c＃中用于“ #line linenumber”指令内的跨度\r\n            \r\n","ITypeSymbol":"ItypeSymbol\r\n"," intersects this span. Two spans are considered to \r\n            intersect if they have positions in common or the end of one span \r\n            coincides with the start of the other span.\r\n            ":" 相交此跨度。两个跨度被认为\r\n            相交是否有共同位置或一个跨度的末端\r\n            与另一个跨度的开始相吻合。\r\n            \r\n","\r\n            Allows a symbol to support comparisons that involve child type symbols\r\n            ":"\r\n            允许符号支持涉及儿童类型符号的比较\r\n            \r\n","\r\n            Get all of the method body and initializer errors within the syntax tree associated with this\r\n            object. Does not get errors involving incorrect syntax or declarations.\r\n            ":"\r\n            在与此关联的语法树中获取所有方法主体和初始化错误\r\n            目的。没有涉及错误语法或声明的错误。\r\n            \r\n","\r\n            Specifies that instances of the target struct are immutable.\r\n            ":"\r\n            指定目标结构的实例是不可变的。\r\n            \r\n"," instance with the specified script options.\r\n            ":" 带有指定脚本选项的实例。\r\n            \r\n",", and possibly other entities, such as ":"，甚至可能是其他实体，例如\r\n",") \r\n            a description of how it binds to one of the input assemblies.\r\n            ":"）\r\n            描述它如何绑定到一个输入组件之一。\r\n            \r\n","\r\n            Method is a static constructor.\r\n            ":"\r\n            方法是静态构造函数。\r\n            \r\n","\r\n            This class contains utility functions to assist with tracking dependencies\r\n            ":"\r\n            此类包含实用程序功能以帮助跟踪依赖关系\r\n            \r\n","\r\n            Completes and returns a CPU profile.\r\n            ":"\r\n            完成并返回CPU配置文件。\r\n            \r\n","\r\n            A dictionary that maps strings to all known spellings of that string. Can be used to\r\n            efficiently store the set of known type names for a module for both VB and C# while also\r\n            answering questions like \"do you have a type called Foo\" in either a case sensitive or\r\n            insensitive manner.\r\n            ":"\r\n            词典将字符串映射到该字符串的所有已知拼写。可以习惯\r\n            有效地存储VB和C＃模块的已知类型名称集\r\n            回答诸如case敏感或\r\n            不敏感的方式。\r\n            \r\n","\r\n            Values to initialize array elements.\r\n            ":"\r\n            初始化数组元素的值。\r\n            \r\n","\r\n            Includes the ":"\r\n            包括\r\n","Returns true if early decoded data were stored into the bag on this thread.":"如果将早期解码的数据存储在此线程上的袋子中，则返回true。\r\n","\r\n            Indicates an index value between 0 and 100 that represents the relative ease of maintaining the code.\r\n            A high value means better maintainability.\r\n            ":"\r\n            指示索引值在0到100之间，表示维护代码的相对易度性。\r\n            高价值意味着更好的可维护性。\r\n            \r\n","Flag indicating whether analyzer execution time should be logged.":"标志指示分析仪执行时间是否应记录。\r\n","\r\n            Specifies that the host resource's non-public members are to be exposed.\r\n            ":"\r\n            指定主机资源的非公共成员将被公开。\r\n            \r\n","\r\n              Looks up a localized string similar to Including private members should not be used when emitting to the secondary assembly output..\r\n            ":"\r\n              在发出二级装配输出时，请查找类似于私有成员的本地化字符串。\r\n            \r\n","A semicolon-delimited list of supported file name extensions.":"被支持的文件名扩展名的半脱落列表。\r\n"," instance with the specified name and script access setting.\r\n            ":" 带有指定名称和脚本访问设置的实例。\r\n            \r\n","\r\n            True if the baseline PDB is portable.\r\n            ":"\r\n            如果基线PDB是可移植的，则为true。\r\n            \r\n","\r\n            Represents a continue branch kind.\r\n            ":"\r\n            代表继续分支。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# compound assignment expression.\r\n             (2) VB compound assignment expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃复合分配表达式。\r\n             （2）VB复合分配表达式。\r\n            \r\n","Array.SetValue":"array.setValue\r\n","\r\n            Returns zero or more strings used in the module. If the module is produced by reading in a CLR PE file, then this will be the contents\r\n            of the user string heap. If the module is produced some other way, the method may return an empty enumeration or an enumeration that is a\r\n            subset of the strings actually used in the module. The main purpose of this method is to provide a way to control the order of strings in a\r\n            prefix of the user string heap when writing out a module as a PE file.\r\n            ":"\r\n            返回模块中使用的零或更多字符串。如果模块是通过在CLR PE文件中读取而产生的，那么这将是内容\r\n            用户字符串堆。如果该模块的其他方式产生了其他方式，则该方法可能会返回一个空的枚举或枚举\r\n            实际上在模块中使用的字符串子集。该方法的主要目的是提供一种控制字符串顺序的方法\r\n            用户字符串堆的前缀将模块写入PE文件时。\r\n            \r\n","\r\n            A list of the files that constitute the assembly. These are not the source language files that may have been\r\n            used to compile the assembly, but the files that contain constituent modules of a multi-module assembly as well\r\n            as any external resources. It corresponds to the File table of the .NET assembly file format.\r\n            ":"\r\n            构成程序集的文件列表。这些不是可能已经存在的源语言文件\r\n            用于编译组件，但还包含多模块组件的组成模块的文件\r\n            作为任何外部资源。它对应于.NET汇编文件格式的文件表。\r\n            \r\n","\r\n            The TypeSymbol for the type 'dynamic' in this Compilation.\r\n            ":"\r\n            此汇编中“动态”类型的类型符号。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# tuple binary operator expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃元组二进制操作员表达式。\r\n            \r\n","\r\n              Looks up a localized string similar to Can't alias a module..\r\n            ":"\r\n              查找类似于不能别名模块的本地化字符串。\r\n            \r\n","The detected encoding or null if no recognized byte order mark was present.":"如果没有识别的字节订单标记，则检测到的编码或null。\r\n","\r\n            Enumeration for possible kinds of method symbols.\r\n            ":"\r\n            枚举可能的方法符号。\r\n            \r\n","\r\n            Options controlling the generation of a SARIF log file containing compilation or\r\n            analysis diagnostics, or null if no log file is desired.\r\n            ":"\r\n            控制包含汇编或\r\n            分析诊断或如果不需要日志文件为零。\r\n            \r\n","\r\n            True if writing delta metadata in a minimal format.\r\n            ":"\r\n            如果以最小的格式编写三角洲元数据，则为是真的。\r\n            \r\n"," with the specified node or token added to the end.\r\n            ":" 将指定的节点或令牌添加到末端。\r\n            \r\n","\r\n            NetModules and EnC deltas don't have AssemblyDef record.\r\n            We don't emit it for EnC deltas since assembly identity has to be preserved across generations (CLR/debugger get confused otherwise).\r\n            ":"\r\n            NetModules和ENC Deltas没有汇编记录。\r\n            我们不为ENC DELTA散发它，因为必须在几代人之间保留汇编身份（CLR/调试器否则会感到困惑）。\r\n            \r\n","\r\n            True if a strong name can be created for the compilation using these keys.\r\n            ":"\r\n            如果可以使用这些键为编译创建一个强名称，则是正确的。\r\n            \r\n","\r\n            Symbol declared by this variable declaration\r\n            ":"\r\n            该变量声明声明的符号\r\n            \r\n","Local variable slot map.":"本地变量插槽图。\r\n","\r\n            True if the method does not require an instance of its declaring type as its first argument.\r\n            ":"\r\n            正确，如果该方法不需要其声明类型的实例作为其第一个参数。\r\n            \r\n","Reference properties (extern aliases, type embedding).":"参考属性（外部别名，类型嵌入）。\r\n","\r\n            Symbol declared events for symbols with pending symbol end analysis for given analyzer.\r\n            ":"\r\n            符号为带有待处理符号的符号的符号为给定分析仪的符号分析。\r\n            \r\n","\r\n            Tries to execute compilation completed actions.\r\n            ":"\r\n            试图执行汇编完成的操作。\r\n            \r\n","\r\n            Subsystem version: Windows 2000\r\n            ":"\r\n            子系统版本：Windows 2000\r\n            \r\n","s as each suppressor\r\n            has a single suppression action, i.e. ":"s作为每个抑制器\r\n            具有单一的抑制作用，即\r\n"," item at the specified index.\r\n            ":" 指定索引的项目。\r\n            \r\n","\r\n            Represents an immutable snapshot of assembly CLI metadata.\r\n            ":"\r\n            代表组装CLI元数据的不变快照。\r\n            \r\n","\r\n            Indicates that a code element is performance sensitive under a known scenario.\r\n            ":"\r\n            表示在已知方案下，代码元素对性能敏感。\r\n            \r\n","\r\n            True if this is a write-only property; that is, a property with no get accessor.\r\n            ":"\r\n            如果这是仅写作的属性，则为诚实；也就是说，没有GET登录器的属性。\r\n            \r\n"," of the start of the span.\r\n            ":" 跨度的开始。\r\n            \r\n","\r\n            Load the rule set from the XML node\r\n            ":"\r\n            从XML节点加载规则集\r\n            \r\n","\r\n            Tests whether the list is non-empty.\r\n            ":"\r\n            测试列表是否非空。\r\n            \r\n","\r\n            Path of the file containing information linking the compilation to source server that stores \r\n            a snapshot of the source code included in the compilation.\r\n            ":"\r\n            文件的路径，其中包含链接编译到存储的源服务器的信息的信息\r\n            汇编中包含的源代码的快照。\r\n            \r\n","\r\n            WARN WARN WARN: This should be used with extreme caution - the underlying builder does\r\n            not give any indication that it is from a separated syntax list but the constraints\r\n            (node, token, node, token, ...) should still be maintained.\r\n            ":"\r\n            警告警告：应该非常谨慎地使用这 - 基础建筑商确实\r\n            没有任何迹象表明它来自分离的语法列表，而是约束\r\n            （节点，令牌，节点，令牌，...）仍应保持。\r\n            \r\n","host type objects":"主机类型对象\r\n","\r\n                    Overloaded host methods are merged into a single script-callable method. At\r\n                    runtime the correct host method is selected based on the argument types.\r\n                    ":"\r\n                    超载主机方法合并为单个可容纳的方法。在\r\n                    运行时根据参数类型选择正确的主机方法。\r\n                    \r\n","An out param indicating whether the slot was successfully updated.":"指示该插槽是否已成功更新的一个选。\r\n"," is true and/or ":"是真的和/或\r\n","\r\n            A short localizable title describing the diagnostic.\r\n            ":"\r\n            一个简短的可本质标题，描述了诊断。\r\n            \r\n","\r\n            A program location in source code.\r\n            ":"\r\n            源代码中的程序位置。\r\n            \r\n","\r\n            A single element of a symbol description.  For example, a keyword, a punctuation character or\r\n            a class name.\r\n            ":"\r\n            符号描述的一个元素。例如，一个关键字，标点符号或\r\n            班级名称。\r\n            \r\n","Language specific representation for an assembly symbol.":"汇编符号的语言特定表示。\r\n","Driver must be initialized before invoking this method, i.e. ":"在调用此方法之前，必须初始化驱动程序，即\r\n","\r\n            Returns the Main method that will serves as the entry point of the assembly, if it is\r\n            executable (and not a script).\r\n            ":"\r\n            返回将用作组件入口点的主要方法，如果是\r\n            可执行（而不是脚本）。\r\n            \r\n","\r\n            TypedConstant isn't computing its own kind from the type symbol because it doesn't\r\n            have a way to recognize the well-known type System.Type.\r\n            ":"\r\n            TypedConstant不是从类型符号中计算自己的类型，因为它没有\r\n            有一种识别众所周知的类型系统的方法。\r\n            \r\n","\r\n            Represents an operation for raising an event.\r\n            ":"\r\n            代表举起活动的操作。\r\n            \r\n","\r\n            Arguments of the invocation, excluding the instance argument. Arguments are in parameter order,\r\n            and params/ParamArray arguments have been collected into arrays. Default values are supplied for\r\n            optional arguments missing in source.\r\n            ":"\r\n            调用的参数，不包括实例参数。参数按参数顺序，\r\n            和参数参数已收集到数组中。提供默认值\r\n            来源中缺少可选论点。\r\n            \r\n","\r\n            Flag indicating if this is a partial analysis.\r\n            ":"\r\n            标志表示这是否是部分分析。\r\n            \r\n"," as type ":" 作为类型\r\n","\r\n            Represents a coalesce assignment operation with a target and a conditionally-evaluated value:\r\n             (1) ":"\r\n            代表具有目标和有条件评估的值的联合分配操作：\r\n             （1）\r\n","\r\n            Convert a ":"\r\n            转换\r\n","\r\n            Represents a method body operation.\r\n            ":"\r\n            代表方法身体操作。\r\n            \r\n"," describing the diagnostic.":" 描述诊断。\r\n","\r\n            Represents a C# for statement or a VB For statement.\r\n            ":"\r\n            代表语句或VB表示语句的C＃。\r\n            \r\n","\r\n            Returns a new INamedTypeSymbol with the given underlying type and element names and locations.\r\n            The underlying type needs to be tuple-compatible.\r\n            ":"\r\n            返回带有给定的基本类型和元素名称和位置的新的InamedTypeSymbol。\r\n            基础类型需要兼容元组。\r\n            \r\n","Must include private members unless emitting a ref assembly.":"必须包括私人成员，除非散发裁判大会。\r\n","\r\n            Create a SuppressionDescriptor, which provides a justification about a programmatic suppression of a ":"\r\n            创建一个suppressionDeScriptor，该抑制作用提供了有关程序抑制的理由\r\n","\r\n            Current usage:\r\n             (1) C# throw expression.\r\n             (2) C# throw statement.\r\n             (2) VB Throw statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃投掷表达。\r\n             （2）C＃投掷语句。\r\n             （2）VB投掷声明。\r\n            \r\n"," from this list into ":" 从这个列表到\r\n","\r\n            Initializes a new VBScript engine instance with the specified name.\r\n            ":"\r\n            初始化具有指定名称的新的VBScript引擎实例。\r\n            \r\n"," for the specified host type.":" 对于指定的主机类型。\r\n","\r\n            Loads ":"\r\n            负载\r\n"," is not a valid absolute path.":" 不是有效的绝对路径。\r\n","\r\n            Executes script code with an associated document name, optionally discarding the document after execution.\r\n            ":"\r\n            用关联的文档名称执行脚本代码，可选地在执行后丢弃文档。\r\n            \r\n","\r\n            Count of registered syntax tree actions.\r\n            ":"\r\n            注册语法树的计数。\r\n            \r\n","The corresponding FieldSymbol or null.":"相应的fieldsymbol或null。\r\n","Type of the transformed array items":"转换的数组项目的类型\r\n","\r\n            A resource file formatted according to Win32 API conventions and typically obtained from a Portable Executable (PE) file.\r\n            See the Win32 UpdateResource method for more details.\r\n            ":"\r\n            根据Win32 API约定格式化的资源文件，通常从便携式可执行文件（PE）文件中获得。\r\n            有关更多详细信息，请参见Win32 Updateresource方法。\r\n            \r\n"," tree containing the given ":" 包含给定的树\r\n"," added with a given ":" 添加给定的\r\n","\r\n            Specifies that the field, property, or method return value is to be marshaled with full\r\n            .NET type information even if it is ":"\r\n            指定字段，属性或方法返回值应与完整的\r\n            .NET类型信息即使是\r\n",".\r\n            If the operation is referencing an implicit or an explicit this/base/Me/MyBase/MyClass instance, then we return \"null\".\r\n            ":"。\r\n            如果操作是引用隐式或明确的此/base/me/mybase/myclass实例，则我们返回“ null”。\r\n            \r\n","\r\n            Use in an exception filter to report a non fatal error.\r\n            Calls ":"\r\n            在例外过滤器中使用无致命错误。\r\n            呼叫\r\n","\r\n            Current usage:\r\n             (1) C# address of expression\r\n            ":"\r\n            当前用法：\r\n             （1）C＃表达式地址\r\n            \r\n","\r\n            By default, a host object's instance methods are exposed as enumerable properties.\r\n            Setting this property to ":"\r\n            默认情况下，主机对象的实例方法被视为枚举属性。\r\n            将此属性设置为\r\n","\r\n            Displays the extension method in the form of an instance method. \r\n            For example, IEnumerable<TSource>.ElementAt<TSource>(int index).\r\n            ":"\r\n            以实例方法的形式显示扩展方法。\r\n            例如，ienumerable <tsource> .lementat <tsource>（int index）。\r\n            \r\n","Analyzer Failure":"分析仪故障\r\n","\r\n            A V8 script engine can collect multiple CPU profiles simultaneously.\r\n            ":"V8脚本引擎可以同时收集多个CPU配置文件。\r\n            \r\n","\r\n            True if the given symbol declaration is fully analyzed for all the analyzers.\r\n            ":"\r\n            如果对所有分析仪进行了充分分析给定的符号声明，则是正确的。\r\n            \r\n","\r\n            Object member or collection initializers.\r\n            ":"\r\n            对象成员或收集初始化器。\r\n            \r\n","\r\n            GetSyntax() for the given SyntaxReference.\r\n            ":"\r\n            给定的语法rreference的getsyntax（）。\r\n            \r\n","\r\n            Represents no output kinds. Can be used when creating a driver to indicate that no outputs should be disabled.\r\n            ":"\r\n            代表没有输出种类。可以在创建驱动程序时使用以指示不应禁用输出。\r\n            \r\n"," and selected at runtime if\r\n            ":" 并在运行时选择\r\n            \r\n",",\r\n            it does not attempt to use the ":"，，，，\r\n            它不尝试使用\r\n","\r\n            The last event placed into a compilation's event queue.\r\n            ":"\r\n            最后一个事件放入汇编的事件队列中。\r\n            \r\n","\r\n            A container for static helper methods that are used for manipulating and computing iterators.\r\n            ":"\r\n            用于操纵和计算迭代器的静态辅助方法的容器。\r\n            \r\n","\r\n            Allows script code to access non-public host resources.\r\n            ":"允许脚本代码访问非公开主机资源。\r\n            \r\n","\r\n            CONSIDER: Should we remove this class and let the sub-classes derived from WellKnownAttributeData?\r\n            ":"\r\n            考虑：我们是否应该删除此类，让子类衍生自众所周知的tributedata？\r\n            \r\n","Operation block.":"操作块。\r\n","Whether there are any nonzero bits past the supplied mantissa":"是否有任何非零的位以前\r\n","\r\n            An anonymous method or lambda expression\r\n            ":"\r\n            匿名方法或lambda表达式\r\n            \r\n","\r\n            Symbol is a dynamic type.\r\n            ":"\r\n            符号是动态类型。\r\n            \r\n","Local or parameter holding the value to switch on.\r\n            This value has already been loaded onto the execution stack.\r\n            ":"固定要打开的值的本地或参数。\r\n            该值已经加载到执行堆栈上。\r\n            \r\n"," corresponding to the given MethodDef token. Search amongst\r\n            the supertypes (classes and interfaces) of a designated type.\r\n            ":" 对应给定的MethodDef令牌。在之间搜索\r\n            指定类型的超级型（类和接口）。\r\n            \r\n","\r\n              Looks up a localized string similar to Can't create a reference to a module..\r\n            ":"\r\n              查找类似于不能创建对模块的引用的本地化字符串。\r\n            \r\n","\r\n            Used to create a file given a path specified by the user.\r\n            paramName - Provided by the Public surface APIs to have a clearer message. Internal API just rethrow the exception\r\n            ":"\r\n            用于创建给定用户指定的路径的文件。\r\n            paramName-由公共表面Api提供，以获得更清晰的消息。 内部API只是重新抛出异常\r\n            \r\n","\r\n            Represents an initialization of member within an object initializer with a nested object or collection initializer.\r\n            ":"\r\n            代表具有嵌套对象或集合初始化器的对象初始化器中成员的初始化。\r\n            \r\n",".  Unfortunately, .NET marshals\r\n            ":"。不幸的是，.NET元帅\r\n            \r\n","\r\n            Represents a type parameter object creation expression, i.e. new T(), where T is a type parameter with new constraint.\r\n            ":"\r\n            代表类型参数对象创建表达式，即新的t（），其中t是带有新约束的类型参数。\r\n            \r\n","\r\n            Check that the given composite root contains all entries in the composite sub root\r\n            ":"\r\n            检查给定的复合根是否包含复合子根中的所有条目\r\n            \r\n","\r\n            Represents a using alias (Imports alias in Visual Basic).\r\n            ":"\r\n            代表使用别名（Visual Basic中的导入别名）。\r\n            \r\n","\r\n            Returns list of entries sorted in source order, each of which captures a\r\n            position in the supplied syntax tree and the set of diagnostics (warnings)\r\n            whose reporting should either be suppressed or enabled at this position.\r\n            ":"\r\n            返回按源顺序排序的条目列表，每个条目都捕获了\r\n            在提供的语法树和诊断集（警告）中的位置\r\n            其报告应在此职位上被抑制或启用。\r\n            \r\n","\r\n            String option to configure how many enum values should be prefixed by the enum type name to trigger the rule.\r\n            Configurable rules: CA1712 (https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1712)\r\n            Allowed method name formats:\r\n              1. Any of the enum values starts with the enum type name\r\n              2. All of the enum values starts with the enum type name\r\n              3. Default FxCop heuristic (75% of enum values)\r\n            ":"\r\n            字符串选项以配置应由枚举类型名称触发规则的枚举值的数量值。\r\n            可配置规则：CA1712（https://docs.microsoft.com/en-us/visalstudio/code-quality/ca1712）\r\n            允许的方法名称格式：\r\n              1.任何枚举值以枚举类型名称开头\r\n              2.所有枚举值以枚举类型名称开头\r\n              3.默认FXCOP启发式（占枚举值的75％）\r\n            \r\n","\r\n            Check whether parameter types of the given methods are same for given parameter indices.\r\n            ":"\r\n            检查给定参数索引的给定方法的参数类型是否相同。\r\n            \r\n","\r\n            To be accepted, the cache data must have been generated for identical script code by\r\n            the same V8 build.\r\n            ":"\r\n            要被接受，必须通过通过相同的脚本代码生成缓存数据\r\n            相同的V8构建。\r\n            \r\n","\r\n            Returns true if the block has the signature of the special\r\n            labeled block that follows a complete try/catch or try/finally.\r\n            ":"\r\n            如果块具有特殊的签名，则返回true\r\n            标记为完整的尝试/捕捉或最终尝试/尝试/的标记块。\r\n            \r\n","\r\n            The string type\r\n            ":"\r\n            字符串类型\r\n            \r\n"," was true.":" 是真的。\r\n","\r\n            Marks blocks that are reachable.\r\n            ":"\r\n            标记可到达的块。\r\n            \r\n","The string representation of FileLinePositionSpan.":"filelinePositionSpan的字符串表示。\r\n","\r\n            The pattern to which the member is matched in a property subpattern.\r\n            ":"\r\n            在属性子图案中与成员匹配的模式。\r\n            \r\n","The index of the property to remove.":"属性的索引要删除。\r\n","s in the code block.\r\n            ":"s在代码块中。\r\n            \r\n","\r\n            Determines whether an object is a host type. This version is invoked if the specified\r\n            object cannot be used as a type argument.\r\n            ":"\r\n            确定对象是否是主机类型。如果指定了此版本\r\n            对象不能用作类型参数。\r\n            \r\n","\r\n            The options used by the parser to produce the syntax tree.\r\n            ":"\r\n            解析器使用的选项生产语法树。\r\n            \r\n","\r\n            Reference to metadata stored in the standard ECMA-335 metadata format.\r\n            ":"\r\n            引用以标准ECMA-335元数据格式存储的元数据。\r\n            \r\n"," with resolved implicitly referenced assemblies appended.\r\n             ":" 带有隐式引用的程序集的解决方案。\r\n             \r\n","\r\n            Returns true if the bag has any non-lazy diagnostics with DefaultSeverity=Error. Does not consider warnings or informationals\r\n            or warnings promoted to error via /warnaserror.\r\n            ":"\r\n            如果袋子有任何非懒惰诊断，则返回true。不考虑警告或信息\r\n            或警告通过 /warnaserror促进了错误。\r\n            \r\n","The set of tlogs to format":"格式的一组Tlogs\r\n","\r\n            Current usage:\r\n             (1) VB Stop statement.\r\n            ":"\r\n            当前用法：\r\n             （1）VB停止语句。\r\n            \r\n","\r\n            Bag has been created, but no decoded data or attributes have been stored.\r\n            CustomAttributeBag is in this state during early decoding phase.\r\n            ":"\r\n            袋子已经创建，但是没有存储编码的数据或属性。\r\n            在早期解码阶段，CustomAttributeBag处于这种状态。\r\n            \r\n","\r\n            Creates a new tree of nodes with specified old node replaced with a new nodes.\r\n            ":"\r\n            创建一棵新的节点树，其中指定的旧节点替换为新节点。\r\n            \r\n","\r\n            Add an item from a previous generation\r\n            that has been updated in this generation.\r\n            ":"\r\n            添加上一代的项目\r\n            在这一代人中已经更新了。\r\n            \r\n","\r\n            This method is called by the public ":"\r\n            公众调用此方法\r\n","\r\n              Looks up a localized string similar to Resource stream provider should return non-null stream..\r\n            ":"\r\n              查找类似于资源流提供商的本地化字符串，应返回非挂钩流。\r\n            \r\n"," to avoid catching the exception.":" 避免捕获例外。\r\n","\r\n            Node was inserted.\r\n            ":"\r\n            节点被插入。\r\n            \r\n"," to restore the exemption if you have older script code\r\n            that depends on it.\r\n            ":" 如果您拥有较旧的脚本代码，请恢复豁免\r\n            这取决于它。\r\n            \r\n","The number of arguments to pass to the script function.":"传递给脚本函数的参数数量。\r\n","\r\n              Looks up a localized string similar to Value too large to be represented as a 30 bit unsigned integer..\r\n            ":"\r\n              查找类似于太大的值，无法表示为30位无符号整数。\r\n            \r\n","\r\n            The size of IL stream.\r\n            ":"\r\n            IL流的大小。\r\n            \r\n","\r\n            Initializes a new VBScript engine instance with the specified name, options, and synchronous invoker.\r\n            ":"\r\n            初始化具有指定名称，选项和同步调用器的新的VBScript引擎实例。\r\n            \r\n"," type of the leading parameter or the trailing parameter":" 引导参数的类型或尾随参数\r\n","\r\n            True if the ":"\r\n            如果是，则为\r\n","\r\n            Returns null if there are no compiler generated types.\r\n            ":"\r\n            如果没有编译器生成类型，则返回null。\r\n            \r\n","\r\n            Method represents the signature of a function pointer type.\r\n            ":"\r\n            方法表示功能指针类型的签名。\r\n            \r\n","\r\n            Something suspicious but allowed.\r\n            ":"\r\n            可疑但允许的东西。\r\n            \r\n","\r\n            True if this method is hidden if a derived type declares a method with the same name and signature. \r\n            If false, any method with the same name hides this method. This flag is ignored by the runtime and is only used by compilers.\r\n            ":"\r\n            如果隐藏此方法，则如果派生类型声明具有相同名称和签名的方法，则为true。\r\n            如果是错误的，则任何具有相同名称的方法都会隐藏此方法。此标志被运行时忽略，仅由编译器使用。\r\n            \r\n"," can never be ":" 永远不会\r\n","\r\n            Local variable that stores the array instance (C#, VB?).\r\n            ":"\r\n            存储数组实例（C＃，VB？）的本地变量。\r\n            \r\n","\r\n            Only a type or namespace was valid in the given location, but the candidate symbols was\r\n            of the wrong kind.\r\n            ":"\r\n            在给定位置中只有类型或名称空间是有效的，但是候选符号是\r\n            错误的。\r\n            \r\n"," that is fed the diagnostics as they are computed.\r\n            ":" 这是在计算时给出的诊断。\r\n            \r\n","\r\n            Determines if two ":"\r\n            确定是否两个\r\n","\r\n            Gets a value indicating, whether the compilation of assembly targets .NET Framework.\r\n            This method differentiates between .NET Framework and other frameworks (.NET Core, .NET Standard, .NET 5 in future).\r\n            ":"\r\n            获得一个指示组件目标.NET框架的汇编的值。\r\n            此方法区分.NET框架和其他框架（.NET Core，.NET Standard，.net 5将来）。\r\n            \r\n"," isn't debuggable.\r\n            If an encoding-less ":" 不可辩论。\r\n            如果没有编码\r\n","\r\n            Gets the token that follows this token in the syntax tree.\r\n            ":"\r\n            获取遵循语法树中此令牌的令牌。\r\n            \r\n"," containing the next word or ":" 包含下一个单词或\r\n","The method symbol for which to return a MethodDef token.":"返回MethodDef令牌的方法符号。\r\n","\r\n            Size of the type.\r\n            ":"\r\n            类型的大小。\r\n            \r\n","BigInt":"bigint\r\n","\r\n            Represents an operation with one operand and a unary operator.\r\n            ":"\r\n            代表一个操作数和一个单一操作员的操作。\r\n            \r\n","The array to process":"处理的数组\r\n","VT_DATE":"vt_date\r\n","\r\n            The generated cache data can be stored externally and is usable in other V8 runtimes\r\n            and application processes.\r\n            ":"\r\n            生成的缓存数据可以外部存储，并且在其他V8 Runtimes中可用\r\n            和申请流程。\r\n            \r\n","Analyzers whose analysis results are required. All the given analyzers must be from the analyzers passed into the constructor of ":"需要分析结果的分析仪。所有给定的分析仪都必须来自分析仪进入的构造函数\r\n"," with the specified token replaced with new tokens.\r\n            ":" 指定的令牌用新令牌代替。\r\n            \r\n"," that can be checked to see if the generation should be cancelled.\r\n            ":" 可以检查一下以查看是否应取消生成。\r\n            \r\n","\r\n            A reference to the constructor that will be used to instantiate this custom attribute during execution (if the attribute is inspected via Reflection).\r\n            ":"\r\n            对构造函数的引用将在执行过程中用于实例化此自定义属性（如果通过反射检查属性）。\r\n            \r\n","The name of a query range variable.":"查询范围变量的名称。\r\n","\r\n            Analyzer configuration options for a given syntax tree from ":"\r\n            给定语法树的分析仪配置选项\r\n","\r\n            Name of the anonymous type field.\r\n            ":"\r\n            匿名类型字段的名称。\r\n            \r\n","\r\n            has been processed, indicating all relevant analyzers have executed on the corresponding syntax tree for the event.\r\n            Similarly, it clears the entire compilation wide cache whenever a ":"\r\n            已经处理过，指示所有相关分析仪都在事件的相应语法树上执行。\r\n            同样，每当a时，它都会清除整个汇编的宽缓存\r\n"," may have\r\n            dynamic members that override members of its static type. This function can be used to\r\n            gain access to type members overridden in this manner.\r\n            ":" 可能有\r\n            覆盖其静态类型成员的动态成员。此功能可用于\r\n            以这种方式访问​​类型成员。\r\n            \r\n","FlatTrackingData structure containing the inputs":"flattrackingdata结构包含输入\r\n","\r\n            Metadata generation ordinal. Zero for\r\n            full metadata and non-zero for delta.\r\n            ":"\r\n            元数据产生序数。为零\r\n            Delta的完整元数据和非零。\r\n            \r\n"," should be\r\n            inserted in order to maintain the sorted order. All values to the right of this position will be\r\n            strictly greater than ":" 应该\r\n            插入以维护排序顺序。该职位右边的所有值将是\r\n            严格大于\r\n","\r\n            Represents a label in method body\r\n            ":"\r\n            代表方法主体中的标签\r\n            \r\n"," attribute in XML documentation comments. For example: ":" XML文档注释中的属性。例如：\r\n","\r\n            APIs for constructing documentation comment id's, and finding symbols that match ids.\r\n            ":"\r\n            用于构建文档注释ID的API，并找到匹配ID的符号。\r\n            \r\n","\r\n            Add the values from all keys to a flat array.\r\n            Forces a full population of the cache.\r\n            ":"\r\n            将所有键的值添加到平面阵列中。\r\n            强迫全部缓存。\r\n            \r\n","Throw ":"扔\r\n","\r\n            Produces a hash code for ":"\r\n            生成哈希代码\r\n","\r\n            true if the type specified by ":"\r\n            如果由\r\n"," in error cases.\r\n            ":" 在错误情况下。\r\n            \r\n","The document to be added as a system document.":"该文档将作为系统文档添加。\r\n","\r\n            Get overload from the given overloads that matches given method signature + given parameter\r\n            ":"\r\n            从给定的过载中获得过载，匹配给定的方法签名 +给定参数\r\n            \r\n",".\r\n            By default, any attempt to invoke these members from script code results in an\r\n            exception.\r\n            ":"。\r\n            默认情况下，任何尝试从脚本代码调用这些成员的尝试导致\r\n            例外。\r\n            \r\n","\r\n            The name of the entity.\r\n            ":"\r\n            实体的名称。\r\n            \r\n","\r\n            Information decoded from early well-known custom attributes applied on a property.\r\n            ":"\r\n            从应用于属性的早期众所周知的自定义属性解码的信息。\r\n            \r\n","Builder to add declarations.":"建造者添加声明。\r\n","\r\n            An expression that does not change its value at runtime and can be evaluated at compile time.\r\n            ":"\r\n            一个不会在运行时改变其值的表达式，可以在编译时进行评估。\r\n            \r\n","\r\n            Attempts to resolve the \"Target\" argument of the global SuppressMessageAttribute to symbols in compilation.\r\n            ":"\r\n            试图解决全局抑制概述到编译中符号的“目标”参数。\r\n            \r\n","\r\n            The type references to be emitted, in row order. These\r\n            are just the type references from the current generation.\r\n            ":"\r\n            按排顺序排列的类型引用。这些\r\n            只是当前一代的类型引用。\r\n            \r\n"," property used in\r\n            a ForEach statement when the collection is a nullable struct.\r\n            ":" 使用的属性\r\n            当集合是一个可随之而来的结构时，一个foreach语句。\r\n            \r\n","\r\n            for the suppression context in which this suppression is being created.":"\r\n            对于正在创建这种抑制的抑制环境。\r\n"," instance with the specified script access setting.\r\n            ":" 带有指定脚本访问设置的实例。\r\n            \r\n","\r\n            Returns a tuple of streams where\r\n            * `peStream` is a stream which will carry the output PE bits\r\n            * `signingStream` is the stream which will be signed by the legacy strong name signer, or null if we aren't using the legacy signer\r\n            * `selectedStream` is an alias of either peStream or signingStream, and is the stream that will be written to by the emitter.\r\n            ":"\r\n            返回元组的溪流\r\n            *``peStream`是一条流，它将携带输出PE位\r\n            *``signingStream`是由旧名称签名签名的流，或者如果不使用旧标志，则null\r\n            *```selectedstream`是pestream或signingStream的别名''，它是发射器将写入的流。\r\n            \r\n","\r\n            Specifies that the field, property, or method return value is not to be restricted to\r\n            its declared type.\r\n            ":"\r\n            指定字段，属性或方法返回值不限于\r\n            其声明的类型。\r\n            \r\n","\r\n            Represents a unary, binary, relational, or conversion operation that can use an operator method.\r\n            ":"\r\n            代表可以使用操作员方法的单一，二进制，关系或转换操作。\r\n            \r\n","\r\n            Type is dynamic.\r\n            ":"\r\n            类型是动态的。\r\n            \r\n","\r\n            The convention for calling managed methods that accept extra arguments.\r\n            ":"\r\n            呼叫托管方法的约定，接受额外的论点。\r\n            \r\n","The new assembly name.":"新的集会名称。\r\n","\r\n            The type Id may be:\r\n                (1) encoded in a single byte (for types below 255)\r\n                (2) encoded in two bytes (255 + extension byte) for types below 512\r\n            ":"\r\n            类型ID可能是：\r\n                （1）用单个字节编码（对于低于255的类型）\r\n                （2）在两个字节（255 +扩展字节）中编码为512的类型\r\n            \r\n","\r\n            Determine if the character in question is any line break character\r\n            ":"\r\n            确定所讨论的字符是否是任何线路断开字符\r\n            \r\n"," to not reach the end of this reader before the next \r\n            fragment is appended, unless the current fragment is malformed in one way or another. \r\n            ":" 在下一个之前不要到达该读者的末尾\r\n            片段被附加，除非当前片段以一种或另一种方式畸形。\r\n            \r\n","\r\n            Attempts to start processing a syntax tree or additional file for the given analyzer's syntax tree or additional file actions respectively.\r\n            ":"\r\n            试图分别为给定的分析仪的语法树或其他文件操作开始处理语法树或其他文件。\r\n            \r\n","\r\n            A reference to a string with the id encoded as 2 bytes.\r\n            ":"\r\n            对字符串的引用，该字符串编码为2个字节。\r\n            \r\n"," or a string (usually a fully-qualified type name of a type implementing the custom marshaller, but Dev11 allows any string).\r\n            ":" 或字符串（通常是实现自定义骑士的类型的完全合格的类型名称，但是DEV11允许任何字符串）。\r\n            \r\n"," which holds a strong reference to key-value pairs for the lifetime of a compilation that this provider is associated with.\r\n            This ensures that values are never re-computed for equivalent keys while analyzing each compilation, improving overall analyzer performance.\r\n            ":" 在此提供商与之相关联的汇编的寿命中，有很大的参考对键值对。\r\n            这样可以确保在分析每次汇编的同时重新计算等效键的值，从而提高整体分析仪的性能。\r\n            \r\n","s across a given statement in a basic block.\r\n            ":"s在基本块中的给定语句中。\r\n            \r\n","\r\n              Looks up a localized string similar to parameter.\r\n            ":"\r\n              查找类似于参数的本地化字符串。\r\n            \r\n",". Note that enabling heap size\r\n            monitoring results in slower script execution.\r\n            ":"。请注意，启用堆大小\r\n            监视导致脚本执行速度较慢。\r\n            \r\n","\r\n            Represents a parenthesized operation.\r\n            ":"\r\n            代表括号的操作。\r\n            \r\n","\r\n            Loads and compiles a document with the specified category and context callback, generating cache data for accelerated recompilation.\r\n            ":"\r\n            加载并与指定类别和上下文回调一起编译文档，从而生成用于加速重新编译的缓存数据。\r\n            \r\n","\r\n            Indicates that the diagnostic is a compilation end diagnostic reported\r\n            from a compilation end action.\r\n            ":"\r\n            表明诊断是报告的编译端诊断\r\n            从汇编最终动作。\r\n            \r\n","\r\n            Creates a representation of a resource whose file name will be recorded in the assembly.\r\n            ":"\r\n            创建一个资源的表示，其文件名将记录在汇编中。\r\n            \r\n","\r\n            If true, a language may use the modified storage location without being aware of the meaning of the modification.\r\n            ":"\r\n            如果是正确的话，语言可以使用修改后的存储位置而不意识到修改的含义。\r\n            \r\n","The imported host type collection.":"导入的主机类型集合。\r\n","\r\n            Performance considerations:\r\n            ":"\r\n            性能注意事项：\r\n            \r\n","Path to normalize.":"路径正常化。\r\n","\r\n            Creates a TextSpan instance beginning with the position Start and having the Length\r\n            specified with ":"\r\n            创建一个从位置启动开始并具有长度的textspan实例\r\n            指定\r\n","\r\n            The attribute class.\r\n            ":"\r\n            属性类。\r\n            \r\n","A new empty host object.":"一个新的空主体对象。\r\n","\r\n            Name of the enum backing field.\r\n            ":"\r\n            枚举背景字段的名称。\r\n            \r\n","Argument index.":"参数索引。\r\n"," is a null reference, \r\n            for nullable types this checks if the ":" 是一个零参考，\r\n            对于无效类型，请检查是否\r\n","\r\n            Host types are exposed to script code in the form of objects whose properties and\r\n            methods are bound to the type's static members and nested types. If the type has\r\n            generic parameters, the corresponding object will be invocable with type arguments to\r\n            yield a specific type.\r\n            ":"\r\n            主机类型以属性和属性的形式暴露于脚本代码\r\n            方法与该类型的静态成员和嵌套类型绑定。如果类型有\r\n            通用参数，相应的对象将与类型参数无关\r\n            产生特定类型。\r\n            \r\n","\r\n            This is ONLY used id BoundNode.cs Debug method - Dump()\r\n            ":"\r\n            这仅是使用ID BONDNODE.CS调试方法-DUMP（）\r\n            \r\n",")\r\n            into this basic block.\r\n            ":"）\r\n            进入这个基本块。\r\n            \r\n","\r\n            Array of names for types.\r\n            The names should correspond to ids from WellKnownType enum so\r\n            that we could use ids to index into the array\r\n            ":"\r\n            类型的名称数组。\r\n            名称应对应于众所周知的枚举的ID\r\n            我们可以使用ID索引到数组\r\n            \r\n","\r\n            Helper method to reset analysis data for analysis entities.\r\n            ":"\r\n            用于重置分析实体分析数据的帮助方法。\r\n            \r\n","\r\n            Information decoded from well-known custom attributes applied on a method.\r\n            ":"\r\n            从应用于方法应用的众所周知的自定义属性解码的信息。\r\n            \r\n"," is the class ":" 是班级\r\n"," instead.\r\n            True if the value referenced by the local must not be moved by the actions of the garbage collector.\r\n            ":" 反而。\r\n            是的，如果本地引用的值不得由垃圾收集器的动作移动。\r\n            \r\n","\r\n            The width of this trivia in characters. If this trivia is a structured trivia then the returned width will\r\n            include the widths of any leading or trailing trivia present on the child non-terminal node of this trivia.\r\n            ":"\r\n            这个琐事在人物中的宽度。如果这个琐事是一个结构化的琐事，那么返回的宽度将\r\n            包括该琐事的儿童非末端节点上存在的任何领先或尾随琐事的宽度。\r\n            \r\n","\r\n            4. Fully processed: ":"\r\n            4.完全处理：\r\n","\r\n            The count of ":"\r\n            计数\r\n","\r\n            A hash of the file contents.\r\n            ":"文件内容的哈希。\r\n            \r\n","\r\n            The name for the ":"\r\n            名字\r\n","\r\n            Constant value of the pattern.\r\n            ":"\r\n            图案的恒定值。\r\n            \r\n","\r\n            Is this a zero-based one-dimensional array, i.e. SZArray in CLR terms.\r\n            SZArray is an array type encoded in metadata with ELEMENT_TYPE_SZARRAY (always single-dim array with 0 lower bound).\r\n            Non-SZArray type is ecoded in metadata with ELEMENT_TYPE_ARRAY and with optional sizes and lower bounds. Even though \r\n            non-SZArray can also be a single-dim array with 0 lower bound, the encoding of these types in metadata is distinct.\r\n            ":"\r\n            这是一个基于零的一维数组，即用CLR术语进行szarray。\r\n            szarray是一种数组类型，用element_type_szarray在元数据中编码（始终具有单个dim数组，带有0下限）。\r\n            非szarray类型用element_type_array在元数据中生态编码，并具有可选的大小和下限。虽然\r\n            非szarray也可以是具有0下限的单DIM阵列，元数据中这些类型的编码是不同的。\r\n            \r\n","\r\n            Represents a declaration expression in C#.\r\n            Unlike a regular variable declaration, this operation represents an \"expression\" declaring a variable.\r\n            For example,\r\n              1. \"var (x, y)\" is a deconstruction declaration expression with variables x and y.\r\n              2. \"(var x, var y)\" is a tuple expression with two declaration expressions.\r\n              3. \"M(out var x);\" is an invocation expression with an out \"var x\" declaration expression.\r\n            ":"\r\n            表示C＃中的声明表达式。\r\n            与常规变量声明不同，此操​​作代表声明变量的“表达式”。\r\n            例如，\r\n              1.“ var（x，y）”是带有变量x和y的解构声明表达式。\r\n              2.“（var x，var y）”是一个带有两个声明表达式的元组表达式。\r\n              3.“ m（out var x）；”是带有“ var x”声明表达式的调用表达式。\r\n            \r\n","s reported by ":"S报告\r\n","\r\n            Determines whether the specified System.Object is equal to the current ":"\r\n            确定指定的系统是否等于当前\r\n","\r\n            special cased helper for 2 and 3 children lists where child #1 may map to a token\r\n            ":"\r\n            特殊的外壳帮手2和3个儿童列表，儿童＃1 5月1日映射到令牌\r\n            \r\n","\r\n            Returns true if and only if analysis was successful.  Analysis can fail if the region does not\r\n            properly span a single expression, a single statement, or a contiguous series of\r\n            statements within the enclosing block.\r\n            ":"\r\n            当且仅当分析成功时，返回是正确的。如果区域没有，分析可能会失败\r\n            正确跨越单个表达式，单个语句或连续的一系列\r\n            封闭块中的语句。\r\n            \r\n","\r\n            Returns semantic diagnostics produced by the given ":"\r\n            给定产生的返回语义诊断\r\n","Matching type ref token or nil (0)":"匹配类型的参考令牌或零（0）\r\n","The diagnostic.":"诊断。\r\n","ByRef return type":"BYREF返回类型\r\n"," streamProvider callers will dispose result after use.\r\n            ":" StreamProvider呼叫者使用后将处置结果。\r\n            \r\n","\r\n            Kind of the branch for an ":"\r\n            一种分支\r\n","\r\n            Dataflow analysis to track dispose state of ":"\r\n            数据流分析以跟踪处置状态\r\n"," with the specified token removed.\r\n            ":" 删除了指定的令牌。\r\n            \r\n","\r\n            DocumentationProviders are compared when determining whether an AssemblySymbol can be reused.\r\n            Hence, if multiple instances can represent the same documentation, it is imperative that\r\n            GetHashCode (and Equals) be overridden to capture this fact.  Otherwise, it is possible to end\r\n            up with multiple AssemblySymbols for the same assembly, which plays havoc with the type hierarchy.\r\n            ":"\r\n            在确定是否可以重复使用汇编符号时，比较了Documentation -Providers。\r\n            因此，如果多个实例可以代表相同的文档，则必须\r\n            Gethashcode（和平等）被覆盖以捕获这一事实。否则，可以结束\r\n            在同一组件上使用多个组合符号，该组件与类型层次结构扮演破坏。\r\n            \r\n","\r\n            Value supplied for the argument.\r\n            ":"\r\n            为参数提供的价值。\r\n            \r\n","\r\n            A local whose type is represented by a metadata signature instead of a type symbol.\r\n            ":"\r\n            一个本地，其类型由元数据签名而不是类型符号表示。\r\n            \r\n","s that dispose an associated disposable ":"处置相关的一次性\r\n","A RuleSetInclude object with data from the given XML node":"带有来自给定XML节点的数据\r\n","\r\n            Represents an argument in a method invocation.\r\n            ":"\r\n            在方法调用中表示一个参数。\r\n            \r\n","\r\n            Basic block kind (entry, block, or exit).\r\n            ":"\r\n            基本块类（条目，块或出口）。\r\n            \r\n","The number of elements in the set.":"集合中的元素数量。\r\n","\r\n            Indicates if the generic type or method with this type parameter is co-, contra-, or non variant with respect to this type parameter.\r\n            ":"\r\n            指示此类型参数的通用类型或方法是否相对于此类型参数是共同的，contra的或非变体。\r\n            \r\n"," region.\r\n            ":" 地区。\r\n            \r\n","When given span is outside of the text range.":"当给定的跨度不在文本范围内。\r\n","\r\n            Represents a read-only list of ":"\r\n            代表只读的列表\r\n","\r\n            True to emit an assembly excluding executable code such as method bodies.\r\n            ":"\r\n            确实要发射一个不包括可执行代码（例如方法实体）的程序集。\r\n            \r\n"," that represents FileLinePositionSpan.\r\n            ":" 这代表filelinePositionSpan。\r\n            \r\n","The Script class symbol or null if it is not defined.":"脚本类符号或null如果未定义。\r\n","\r\n            A reference to a syntax node.\r\n            ":"\r\n            对语法节点的引用。\r\n            \r\n","A set of additional non-code text files that can be used by analyzers.":"一组分析仪可以使用的其他非代码文本文件。\r\n"," and the corresponding catch ":" 和相应的捕获\r\n","'s Kind matches one of the syntax kind values.":"的类型匹配语法类值之一。\r\n","If the encoded type is invalid.":"如果编码类型无效。\r\n","\r\n            Indicates whether the reference uses virtual semantics.\r\n            ":"\r\n            指示参考是否使用虚拟语义。\r\n            \r\n","\r\n            Represents immutable assembly or module CLI metadata.\r\n            ":"\r\n            代表不变的组件或模块CLI元数据。\r\n            \r\n","\r\n            To the extent possible, implementations should remain consistent in the face\r\n            of exceptions and allow the caller to handle them. This allows the caller to\r\n            decide how to surface issues to the user and whether or not they are fatal. For\r\n            example, if asked to load an a non-existent or inaccessible file a command line\r\n            tool may wish to exit immediately, while an IDE may wish to keep going and give\r\n            the user a chance to correct the issue.\r\n            ":"\r\n            在可能的范围内，实施应在面对面保持一致\r\n            例外，允许呼叫者处理它们。这允许呼叫者\r\n            确定如何向用户表达问题以及他们是否致命。为了\r\n            例如，如果要求加载不存在或不可访问的文件命令行\r\n            工具可能希望立即退出，而IDE可能希望继续前进并给予\r\n            用户有机会纠正问题。\r\n            \r\n","\r\n            An object that contains an instance of a SourceText and raises events when its current instance\r\n            changes.\r\n            ":"\r\n            一个包含SourceText实例并在其当前实例时提出事件的对象\r\n            变化。\r\n            \r\n","\r\n              Looks up a localized string similar to Unrecognized resource file format..\r\n            ":"\r\n              查找类似于未识别的资源文件格式的本地化字符串。\r\n            \r\n"," at construction and handles its disposal.\r\n            ":" 在施工并处理其处置。\r\n            \r\n","\r\n            Creates a new syntax token identical to this one without annotations of the specified kind.\r\n            ":"\r\n            在没有指定类型的注释的情况下，创建一个与该语法相同的新语法令牌。\r\n            \r\n"," is created per-generation, meaning there is no need to manage the lifetime of the \r\n            receiver or its contents.\r\n            ":" 是创建人均的，这意味着无需管理\r\n            接收器或其内容。\r\n            \r\n"," completed successfully, ":" 成功完成，\r\n","\r\n            Changes do not have to be in sorted order.  However, ":"\r\n            更改不必按顺序排序。然而，\r\n","\r\n            The EnC generation the method was defined in (0 is the baseline build).\r\n            ":"\r\n            ENC生成该方法是在（0是基线构建）中定义的。\r\n            \r\n","\r\n            Information decoded from well-known custom attributes applied on an assembly.\r\n            ":"\r\n            从众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            Gets the name of the node's script function.\r\n            ":"\r\n            获取节点脚本函数的名称。\r\n            \r\n","\r\n            Underlying initializer value.\r\n            ":"\r\n            基础初始化器值。\r\n            \r\n","\r\n            Returns the last token in the list.\r\n            ":"\r\n            返回列表中的最后一个令牌。\r\n            \r\n","\r\n            1) 0, if both the dictionaries are identical.\r\n            2) -1, if dictionaries are not identical and for every key in ":"\r\n            1）0，如果两个字典都是相同的。\r\n            2）-1，如果字典不完全相同，并且对于每个键\r\n"," Pointer types in VB ":" VB中的指针类型\r\n","\r\n            Represents a module from a previous compilation. Used in Edit and Continue\r\n            to emit the differences in a subsequent compilation.\r\n            ":"\r\n            代表先前汇编的模块。用于编辑并继续\r\n            发出随后的汇编中的差异。\r\n            \r\n","Analyzer '{0}' threw an exception of type '{1}' with message '{2}'.\r\n            {3}":"分析仪'{0}'带有消息'{2}'的类型'{1}'的例外。\r\n            {3}\r\n","\r\n            Checks if a type is considered a \"built-in integral\" by CLR.\r\n            ":"\r\n            检查类型是否被CLR视为“内置积分”。\r\n            \r\n","\r\n            Represents C# nameof and VB NameOf expression.\r\n            ":"\r\n            代表C＃名称和VB名称表达式。\r\n            \r\n","\r\n            The list of custom modifiers, if any, associated with the parameter type. \r\n            ":"\r\n            与参数类型关联的自定义修饰符列表。\r\n            \r\n","\r\n            \"file\"\r\n            ":"\r\n            \"档案\"\r\n            \r\n","\r\n             An array of ":"\r\n             一系列\r\n","\r\n            Handles storage of strings referenced via tokens in metadata. When items are stored \r\n            they are uniquely \"associated\" with fake token, which is basically a sequential number.\r\n            IL gen will use these fake tokens during codegen and later, when actual token values \r\n            are known the method bodies will be patched.\r\n            To support these two scenarios we need two maps - Item-->uint, and uint-->Item.  (the second is really just a list).\r\n            ":"\r\n            处理通过元数据中的令牌引用的字符串存储。存储物品时\r\n            它们与假令牌是独特的“关联”，这基本上是一个顺序的数字。\r\n            IL Gen将在Codegen期间和后来的实际令牌值时使用这些假令牌\r\n            已知该方法将被修补。\r\n            为了支持这两种情况，我们需要两个地图 - 项目 - > uint和uint-> item。 （第二个实际上只是列表）。\r\n            \r\n","The index of the property to get or set.":"要获得或设置的属性索引。\r\n","\r\n            Current usage:\r\n             (1) C# case clause of the form \"case x\"\r\n             (2) VB case clause of the form \"Case x\".\r\n            ":"\r\n            当前用法：\r\n             （1）表格“ case x”的c＃案例子句\r\n             （2）形式“ case x”的VB案例条款。\r\n            \r\n","\r\n            Releases all resources used by the compiled script.\r\n            ":"\r\n            释放编译脚本使用的所有资源。\r\n            \r\n","PDB stream should not be given when emitting metadata only.":"仅在排放元数据时不应给出PDB流。\r\n","\r\n            Exit label for the switch statement.\r\n            ":"\r\n            退出Switch语句的标签。\r\n            \r\n","\r\n            The return type of the method or type of the property.\r\n            ":"\r\n            属性的方法或类型的返回类型。\r\n            \r\n","Compilation scope to store the analyzer actions.":"编译范围以存储分析仪的操作。\r\n","\r\n            Creates a new tree of nodes with new tokens inserted before the specified token.\r\n            ":"\r\n            在指定的令牌之前创建一棵新的节点树，并插入新的代币。\r\n            \r\n","\r\n            Applied on every structured trivia. Return false if the tokens included in the trivia should be skipped. \r\n            Pass null to skip all structured trivia.\r\n            ":"\r\n            应用于每个结构化的琐事。如果应该跳过琐事中包含的令牌，则返回false。\r\n            通过Null跳过所有结构化的琐事。\r\n            \r\n","\r\n            Gets the value of a named script object property.\r\n            ":"\r\n            获取命名脚本对象属性的值。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# expression statement.\r\n             (2) VB expression statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃表达式语句。\r\n             （2）VB表达式语句。\r\n            \r\n","\r\n            Checksum of the associated PDB.\r\n            ":"\r\n            相关PDB的校验和。\r\n            \r\n","s used by the stack spilling, etc.\r\n            Do not create instances of this type manually, use ":"S堆栈溢出，等等。\r\n            不要手动创建此类型的实例，请使用\r\n"," at the time of execution.\r\n            ":" 在执行时。\r\n            \r\n","\r\n            Returns metadata generation ordinal. Zero for\r\n            full metadata and non-zero for delta.\r\n            ":"\r\n            返回元数据产生序数。为零\r\n            Delta的完整元数据和非零。\r\n            \r\n","\r\n            Writes a Char value to the stream.\r\n            ":"\r\n            将炭值写入流。\r\n            \r\n","\r\n            A digest of MetadataTypeName's fully qualified name which can be used as the key in a dictionary\r\n            ":"\r\n            元数据末烯的完全合格名称的摘要，可以用作字典中的键\r\n            \r\n","\r\n            An object specifying additional parameters for how members will be formatted.\r\n            ":"\r\n            一个对象，指定将如何格式化成员的其他参数。\r\n            \r\n","\r\n            Existing symbol is replaced by its new version.\r\n            ":"\r\n            现有符号被其新版本所取代。\r\n            \r\n","\r\n            Returns the hash code for the current ":"\r\n            返回当前的哈希代码\r\n"," executes the script first.\r\n            ":" 先执行脚本。\r\n            \r\n","\r\n            Get a list of all the trivia associated with the descendant nodes and tokens.\r\n            ":"\r\n            获取与后代节点和令牌相关的所有琐事的列表。\r\n            \r\n"," class with the specified text, options and prefix.\r\n            ":" 与指定的文本，选项和前缀进行类。\r\n            \r\n","\r\n              Looks up a localized string similar to Cannot deserialize type '{0}', no binder supplied..\r\n            ":"\r\n              查找类似于避免的局部字符串'{0}'，没有提供粘合剂。\r\n            \r\n","\r\n            Returns a tuple of streams where\r\n            * ":"\r\n            返回元组的溪流\r\n            *\r\n","\r\n            Specifies the different kinds of comparison between types.\r\n            ":"\r\n            指定类型之间的不同类型的比较。\r\n            \r\n","\r\n            A host variable is a strongly typed object that holds a value of the specified type.\r\n            Host variables are useful for passing method arguments by reference. In addition to\r\n            being generally interchangeable with their stored values, host variables support the\r\n            following properties:\r\n            ":"\r\n            主机变量是一个强大的对象，具有指定类型的值。\r\n            主机变量可用于通过参考传递方法参数。此外\r\n            通常与其存储值互换，主机变量支持\r\n            以下属性：\r\n            \r\n","\r\n            Kind for the ":"\r\n            善良\r\n","\r\n            Returns a flag indicating if the suppression is disabled for the given ":"\r\n            返回一个标志，指示给定的抑制是否被禁用\r\n"," on a control flow graph.\r\n            Primarily exists for specifying constraints on analysis result type parameters.\r\n            ":" 在控制流程图上。\r\n            主要存在于分析结果类型参数上的约束。\r\n            \r\n","The index identifying the element to remove.":"索引识别要删除的元素。\r\n","\r\n             This flag is set by default at the start of all files.\r\n            \r\n             The project default can change depending on the file type. Generated\r\n             files have nullable off by default, regardless of of the project-level\r\n             default setting.\r\n             ":"\r\n             默认情况下，该标志在所有文件的开头设置。\r\n            \r\n             项目默认值可以根据文件类型更改。生成\r\n             默认情况下，文件无效，无论项目级如何\r\n             默认设置。\r\n             \r\n","The tlog path to normalize":"标准化的TLOG路径\r\n","ref readonly":"ref Readonly\r\n"," instances that share the same ":" 共享相同的实例\r\n","\r\n              Looks up a localized string similar to Embedded texts are only supported when emitting Portable PDB..\r\n            ":"\r\n              仅在发出便携式PDB时支持与嵌入式文本类似的本地化字符串。\r\n            \r\n","An ordered set of fully qualified \r\n            paths which are searched when resolving assembly names.":"一组完全合格的\r\n            解决汇编名称时搜索的路径。\r\n","\r\n            Immutable abstract representation of a span of text.  For example, in an error diagnostic that reports a\r\n            location, it could come from a parsed string, text from a tool editor buffer, etc.\r\n            ":"\r\n            文本跨度的不变抽象表示。例如，在报告的错误诊断中报告\r\n            位置，它可能来自解析的字符串，工具编辑器缓冲区的文本，等等。\r\n            \r\n","\r\n            Subsystem version\r\n            ":"\r\n            子系统版本\r\n            \r\n","\r\n            Omits the global namespace, unconditionally.\r\n            ":"\r\n            无条件省略了全局名称空间。\r\n            \r\n","Path returned by {0}.ResolveStrongNameKeyFile must be absolute: '{1}'":"{0}返回的路径。resolvestrongnamekeykeyfile必须是绝对的：'{1}'\r\n","\r\n            Returns all top-level (not nested) types defined in the module. \r\n            ":"\r\n            返回模块中定义的所有顶级（未嵌套）类型。\r\n            \r\n","\r\n            Given a TLog path, replace all PIDs and TIDs with \"[ID]\" in the filename, where \r\n            the typical format of a filename is \"tool[.PID][-tool].read/write/command/delete.TID.tlog\"\r\n            ":"\r\n            给定一个TLOG路径，将所有PID和TID替换为文件名中的“ [id]”，其中\r\n            文件名的典型格式是“工具[.pid] [ -  tool] .Read/write/command/delete.tid.tlog“\r\n            \r\n","Local holding the value to switch on.\r\n            This value has already been loaded onto the execution stack.\r\n            ":"本地持有要打开的值。\r\n            该值已经加载到执行堆栈上。\r\n            \r\n","\r\n            Represents a single variable declarator and initializer.\r\n            ":"代表单个变量声明器和初始化器。\r\n            \r\n","Semantic model representing the syntax tree to analyze.":"语义模型代表要分析的语法树。\r\n","\r\n            If the given key is not found in the dictionary, add it with the given value and return the value.\r\n            Otherwise return the existing value associated with that key.\r\n            ":"\r\n            如果在字典中找不到给定键，请添加给定值并返回值。\r\n            否则，返回与该密钥关联的现有值。\r\n            \r\n","\r\n            Should only accept Pointer types.\r\n            Should return null in case of error.\r\n            ":"\r\n            应该只接受指针类型。\r\n            如果发生错误，应返回null。\r\n            \r\n","\r\n            Read a value from the stream. The value must have been written using ObjectWriter.WriteValue.\r\n            ":"\r\n            从流中读取一个值。该值必须使用ObjectWriter.WriteValue编写。\r\n            \r\n","\r\n            Stores the partial analysis state for analyzers executed on a specific compilation.\r\n            ":"\r\n            存储在特定汇编中执行的分析仪的部分分析状态。\r\n            \r\n","\r\n            Tries to parse a UInt16 from string in either decimal, octal or hex format.\r\n            ":"\r\n            试图以小数，八分或十六进制格式从字符串中解析UINT16。\r\n            \r\n","\r\n            If this is a tuple type symbol, returns the symbol for its underlying type.\r\n            Otherwise, returns null.\r\n            The type argument corresponding to the type of the extension field (VT[8].Rest),\r\n            which is at the 8th (one based) position is always a symbol for another tuple, \r\n            rather than its underlying type.\r\n            ":"\r\n            如果这是元组类型的符号，请返回其基础类型的符号。\r\n            否则，返回null。\r\n            与扩展字段类型相对应的类型参数（VT [8] .rest），\r\n            在第八位（一个基于一个）位置始终是另一个元组的符号，\r\n            而不是其基础类型。\r\n            \r\n"," that is currently picked by the user":" 目前是用户选择的\r\n","\r\n            Gets a structure containing meta-information for the document.\r\n            ":"\r\n            获取包含文档元信息的结构。\r\n            \r\n","\r\n            Count of Operation block end actions.\r\n            ":"\r\n            操作块最终动作的计数。\r\n            \r\n","\r\n            The type definition being referred to.\r\n            ":"\r\n            引用的类型定义。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# binary operator expression.\r\n             (2) VB binary operator expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃二进制操作员表达式。\r\n             （2）VB二进制操作员表达式。\r\n            \r\n","\r\n            Contains the counts of registered actions for an analyzer.\r\n            ":"\r\n            包含分析仪的注册操作计数。\r\n            \r\n","Generic task type.":"通用任务类型。\r\n","\r\n            Gets the emit options.\r\n            ":"\r\n            获取发射选项。\r\n            \r\n","\r\n            Raw assembly version as specified in the AssemblyVersionAttribute, or Nothing if none specified.\r\n            If the string passed to AssemblyVersionAttribute contains * the version build and/or revision numbers are set to ":"\r\n            原始汇编版本如“汇编”中指定，或者没有指定。\r\n            如果字符串传递给assemblyVersionAttribute *\r\n","\r\n            The \"position\" is used to determine what variables are visible and accessible. Even if \"container\" is\r\n            specified, the \"position\" location is significant for determining which members of \"containing\" are\r\n            accessible. \r\n            ":"\r\n            “位置”用于确定哪些变量可见和可访问。即使“容器”是\r\n            指定，“位置”位置对于确定“包含”的哪个成员是重要的\r\n            无障碍。\r\n            \r\n"," operation to be executed when ":" 操作将在\r\n","\r\n            Does not resolve any lazy diagnostics in the bag.\r\n            \r\n            Generally, this should only be called by the creator (modulo pooling) of the bag (i.e. don't use bags to communicate -\r\n            if you need more info, pass more info).\r\n            ":"\r\n            不能解决袋子中的任何懒惰诊断。\r\n            \r\n            通常，这只能由袋子的创建者（Modulo Pooling）调用（即不要使用袋子进行交流 - \r\n            如果您需要更多信息，请传递更多信息）。\r\n            \r\n","\r\n            An .exe with an entry point and a console.\r\n            ":"\r\n            带有入口点和控制台的.exe。\r\n            \r\n","This method is safe to call from multiple threads.":"此方法可以安全地从多个线程调用。\r\n","\r\n            Includes type parameters and constraints.\r\n            For example, \"where T : new()\" in C# or \"Of T as New\" in Visual Basic.\r\n            ":"\r\n            包括类型参数和约束。\r\n            例如，在Visual Basic中，c＃或t as t of t of t of t t t t t t t：where t：new（）。\r\n            \r\n","\r\n             Maps an immutable array to another immutable array.\r\n            ":"\r\n             将不变的阵列映射到另一个不变的阵列。\r\n            \r\n","\r\n            Has no effect when ":"\r\n            没有效果\r\n"," during creation\r\n            ":" 在创作期间\r\n            \r\n","\r\n            Whether this using is asynchronous.\r\n            Always false for VB.\r\n            ":"\r\n            是否使用它是异步的。\r\n            始终为VB。\r\n            \r\n"," representing partial analysis state for the given declaration for the given analyzer.\r\n            ":" 代表给定分析仪的给定声明的部分分析状态。\r\n            \r\n","\r\n            Result of resolving assembly references of the corresponding assembly \r\n            against provided set of assemblies. Essentially, this is an array returned by\r\n            AssemblyData.BindAssemblyReferences method. \r\n            \r\n            Each element describes the assembly the corresponding reference of the input assembly \r\n            is bound to.\r\n            ":"\r\n            解析相应组件的组装参考的结果\r\n            反对提供的组件集。本质上，这是一个由\r\n            assemblyData.bindassemblyReferences方法。\r\n            \r\n            每个元素都描述了组件输入组件的相应参考\r\n            一定会。\r\n            \r\n","\r\n            The sources that were added by ":"\r\n            添加的来源\r\n","\r\n            Returns true for symbols whose name starts with an underscore and\r\n            are optionally followed by an integer, such as '_', '_1', '_2', etc.\r\n            These symbols can be treated as special discard symbol names.\r\n            ":"\r\n            对于符号的返回，其名称以下划线开头和\r\n            可选的是整数，例如'_'，'_1'，'_2'，等等。\r\n            这些符号可以视为特殊的丢弃符号名称。\r\n            \r\n"," needs to read the reference metadata.\r\n             \r\n             The listed exceptions are caught and converted to compilation diagnostics.\r\n             Any other exception is considered an unexpected error in the implementation and is not caught.\r\n            \r\n             ":" 需要阅读参考元数据。\r\n             \r\n             列出的例外被捕获并转换为汇编诊断。\r\n             任何其他例外都被认为是实施中的意外错误，并且没有被捕获。\r\n            \r\n             \r\n","\r\n            Conversion is defined by the underlying type system and throws an exception if it fails.\r\n            ":"\r\n            转换由基础类型系统定义，如果失败，则会引发异常。\r\n            \r\n","\r\n            Current usage:\r\n             (1) VB omitted argument in an invocation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）VB在调用表达式中省略了参数。\r\n            \r\n","\r\n              Looks up a localized string similar to type must be a subclass of SyntaxAnnotation..\r\n            ":"\r\n              查找类似于类型的本地化字符串必须是句法的子类。\r\n            \r\n","\r\n            Stores the partial analysis state for code block actions executed on the declaration.\r\n            ":"\r\n            存储在声明上执行的代码块操作的部分分析状态。\r\n            \r\n","\r\n            Represents a C# goto, break, or continue statement, or a VB GoTo, Exit ***, or Continue *** statement\r\n            ":"\r\n            代表一个C＃goto，break或stonger语句，或vb goto，退出***或继续***声明\r\n            \r\n","\r\n            A value of \"1\" is a sufficient, but not a necessary, condition for hiding the\r\n            local in the debugger.  Locals with value \"0\" may also be hidden.\r\n            \r\n            Hidden locals must still be emitted because they participate in evaluation.\r\n            ":"\r\n            “ 1”的值是隐藏掩盖的条件，但不是必需的条件\r\n            调试器中的本地。具有价值“ 0”的当地人也可以隐藏。\r\n            \r\n            隐藏的当地人仍然必须发放，因为他们参与了评估。\r\n            \r\n","\r\n            Defines options for initializing a new Windows Script engine instance.\r\n            ":"\r\n            定义用于初始化新Windows脚本引擎实例的选项。\r\n            \r\n","A DocumentationComment.":"文档。\r\n","Used to compare assembly identities.":"用于比较组装身份。\r\n","\r\n            Custom modifiers associated with local variable definition.\r\n            ":"\r\n            与局部变量定义关联的自定义修饰符。\r\n            \r\n","\r\n            Gets the value of an element in a dynamic host object that implements ":"\r\n            在实现的动态主机对象中获取元素的值\r\n"," instance by first probing the contract name and then the name as it\r\n            would exist in mscorlib.  This helps satisfy both the CoreCLR and Desktop scenarios. \r\n            ":" 实例首先探测合同名称，然后是该名称\r\n            将存在于Mscorlib中。这有助于满足CORECLR和桌面方案。\r\n            \r\n","\r\n            CandidateSymbols are members of a group of results. This is used when there isn't a problem,\r\n            but there is more than one result, for example nameof(int.ToString).\r\n            ":"\r\n            候选符号是一组结果的成员。当没有问题时使用，\r\n            但是有多个结果，例如名称（int.tostring）。\r\n            \r\n","\r\n            Aliases used by assemblies referenced directly by the source module of the compilation.\r\n            ":"\r\n            编译源模块直接引用的组件使用的别名。\r\n            \r\n","\r\n            If this is an extension method that can be applied to a receiver of the given type,\r\n            returns a reduced extension method symbol thus formed. Otherwise, returns null.\r\n            ":"\r\n            如果这是一种扩展方法，可以应用于给定类型的接收器，\r\n            返回如此形成的还原扩展方法符号。否则，返回null。\r\n            \r\n","The command to track":"跟踪的命令\r\n","\r\n            The line of the line position. The first line in a file is defined as line 0 (zero based line numbering).\r\n            ":"\r\n            线位置的线。文件中的第一行定义为第0行（基于零的行编号）。\r\n            \r\n","\r\n            Represents a loop operation.\r\n            ":"\r\n            代表循环操作。\r\n            \r\n","The script code to compile.":"编译的脚本代码。\r\n"," statement.\r\n            ":" 陈述。\r\n            \r\n","\r\n            The generated cache data can be stored externally and is usable in other V8 script\r\n            engines and application processes.\r\n            ":"\r\n            生成的缓存数据可以外部存储，并且可在其他V8脚本中使用\r\n            引擎和应用程序。\r\n            \r\n","\r\n            The following table summarizes the types of result values that script code can return.\r\n            ":"\r\n            下表总结了脚本代码可以返回的结果值的类型。\r\n            \r\n","\r\n            Helper for converting a UInt32 exponent to bytes.\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            ":"\r\n            用于将UINT32指数转换为字节的助手。\r\n            Copied from https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.Shared.cs\r\n            \r\n","\r\n            Local variable that stores the return value of an async method.\r\n            ":"\r\n            存储异步方法的返回值的局部变量。\r\n            \r\n","\r\n            A rope can wrap a simple string.\r\n            ":"\r\n            绳索可以包裹一个简单的字符串。\r\n            \r\n","\r\n              Looks up a localized string similar to Module copy can't be used to create an assembly metadata..\r\n            ":"\r\n              查找类似于模块副本的本地化字符串不能用于创建汇编元数据。\r\n            \r\n"," is default-initialized.\r\n            ":" 被默认限制化。\r\n            \r\n","\r\n            Arity of the type inferred based on the name mangling. It doesn't have to match the actual\r\n            arity of the type.\r\n            ":"\r\n            根据名称杂交推断的类型。它不必匹配实际\r\n            类型的Arity。\r\n            \r\n","\r\n              Looks up a localized string similar to WindowsRuntime identity can't be retargetable.\r\n            ":"\r\n              查找类似于WindowsRuntime身份的本地化字符串，无法重新定位。\r\n            \r\n"," generated ":" 生成\r\n","\r\n            Shows the type of the local in addition to its name.\r\n            For example, \"int x\" in C# or \"x As Integer\" in Visual Basic.\r\n            ":"\r\n            显示除名称外的本地类型。\r\n            例如，Visual Basic中的C＃或“ X as Integer”中的“ Int X”。\r\n            \r\n","\r\n            Gets pending events for given set of analyzers for the given syntax tree.\r\n            ":"\r\n            为给定的语法树获取给定的分析仪的未决事件。\r\n            \r\n","Icon stream is not in the expected format.":"图标流不采用预期格式。\r\n"," instances that have the same value.\r\n            If no comparer is provided, then ":" 具有相同值的实例。\r\n            如果没有提供比较，则\r\n"," for the provided information.\r\n            ":" 提供提供的信息。\r\n            \r\n","\r\n             The definition index of the COR library.\r\n             ":"\r\n             COR库的定义索引。\r\n             \r\n","The metadata image is stored in a file that can't be found.":"元数据图像存储在找不到的文件中。\r\n"," to invoke the object as a constructor, ":" 为了将对象作为构造函数，\r\n"," for operations such as an ":" 用于诸如\r\n","The name of a parameter.":"参数的名称。\r\n","\r\n            A virtual method named Dispose that takes a single Boolean parameter, as\r\n            is used when implementing the standard Dispose pattern.\r\n            ":"\r\n            一个名为Dispose的虚拟方法，该方法采用单个布尔参数，为\r\n            在实施标准处置模式时使用。\r\n            \r\n","\r\n            Determines if the string 'value' starts with string 'possibleStart'.\r\n            ":"\r\n            确定字符串“值”是否从字符串“ PossibleStart”开始。\r\n            \r\n","The node to be replaced; a descendant of the root node and an element of a list member.":"要替换的节点；根节点的后代和列表成员的元素。\r\n","\r\n            A set of utilities for converting from a decimal floating-point literal string to its IEEE float\r\n            or double representation, which coniders all digits signficant and correctly rounds according to\r\n            the IEEE round-to-nearest-ties-to-even mode. This code does not support a leading sign character,\r\n            as that is not part of the C# or VB floating-point literal lexical syntax.\r\n            \r\n            If you change this code, please run the set of long-running random tests in the solution\r\n            RandomRealParserTests.sln. That solution is not included in Roslyn.sln as it is Windows-specific.\r\n            ":"\r\n            一组用于从小数浮点字面字符串转换为其IEEE float的实用程序\r\n            或双重表示，所有数字都具有标志性的数字，并根据\r\n            IEEE往返最连接模式。此代码不支持主符号字符，\r\n            因为那不是C＃或VB浮点字面词法语法的一部分。\r\n            \r\n            如果更改此代码，请在解决方案中运行一组长期运行的随机测试\r\n            RandomRealParsertests.sln。该解决方案不包含在Roslyn.sln中，因为它特定于Windows。\r\n            \r\n"," if one was not specified.\r\n            ":" 如果未指定。\r\n            \r\n","\r\n            Indicates if this variable contains non literal operands or not.\r\n            ":"\r\n            指示此变量是否包含非文字操作数。\r\n            \r\n","\r\n            Mimics the function RemoveQuotes from the native C# compiler.  The native VB equivalent of this \r\n            function is called RemoveQuotesAndSlashes.  It has virtually the same behavior except for a few \r\n            quirks in error cases.  \r\n            ":"\r\n            模拟该函数从本机C＃编译器中删除Quotes。本地VB等效于此\r\n            函数称为remove QuotesandSlashes。除了一些，它几乎具有相同的行为\r\n            错误情况中的怪癖。\r\n            \r\n","\r\n            Returns true if this symbol is a namespace. If it is not a namespace, it must be a type.\r\n            ":"\r\n            如果此符号是名称空间，则返回true。如果不是名称空间，则必须是一种类型。\r\n            \r\n","\r\n            This is only used for testing.\r\n            ":"\r\n            这仅用于测试。\r\n            \r\n","The index of the found nodeOrToken, or -1 if it wasn't found":"找到的nodeortoken的索引，如果没有找到-1\r\n","\r\n            Specifies a kind of instrumentation to be applied in generated code.\r\n            ":"\r\n            指定一种要在生成代码中应用的仪器。\r\n            \r\n","The assembly that contains the types to add.":"包含要添加类型的组件。\r\n","\r\n            descend into nodes, tokens and trivia\r\n            ":"\r\n            下降到节点，令牌和琐事\r\n            \r\n"," from stream content.\r\n            ":" 来自流内容。\r\n            \r\n","\r\n            True if the two paths are the same.\r\n            ":"\r\n            如果这两条路径相同，则为true。\r\n            \r\n","A task that represents the asynchronous operation. Upon completion, the task's result is a ":"代表异步操作的任务。完成后，任务的结果是\r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledAction((a, b, arg) => arg.self.DoSomething(a, b, arg.x), (self: this, x), out Action<int, int> action);\r\n             RunWithActionCallback(action);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooleDaction（（（a，b，arg）=> arg.self.dosothing（a，b，arg.x），（self：this，x），out action <int，int> action）;\r\n             runwithactionCallback（action）;\r\n             \r\n","\r\n            Nullable warnings are enabled and will be reported at this file location.\r\n            ":"\r\n            启用了无效警告，并将在此文件位置进行报告。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# constant pattern.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃常数模式。\r\n            \r\n","\r\n            include type and member\r\n            ":"\r\n            包括类型和成员\r\n            \r\n","\r\n            Creates a copy of the SymbolDisplayFormat but with a set of ":"\r\n            创建SymboldisPlayFormat的副本，但带有一组\r\n","\r\n            Computes ":"\r\n            计算\r\n","\r\n            Initialized fields. There can be multiple fields for Visual Basic fields declared with As New.\r\n            ":"\r\n            初始化字段。可以将视觉基本字段称为新的多个字段。\r\n            \r\n","\r\n            Gets the underlying common conversion information.\r\n            ":"\r\n            获取基本的共同转换信息。\r\n            \r\n"," is evaluated and assigned to target.\r\n             (2) ":" 评估并分配给目标。\r\n             （2）\r\n","\r\n            Value to check.\r\n            ":"\r\n            值得检查的价值。\r\n            \r\n","\r\n            The absolute span of the underlying node or token in characters, not including its leading and trailing\r\n            trivia.\r\n            ":"\r\n            基础节点的绝对跨度或字符中的令牌，不包括其前导和尾随\r\n            琐事。\r\n            \r\n"," should be transformed":" 应该转变\r\n","Internal for test purposes.":"内部用于测试目的。\r\n","\r\n            Returns an enumerator for the tokens in the ":"\r\n            返回一个代币中的枚举者\r\n"," for a construct that is not implemented yet.":" 对于尚未实施的结构。\r\n","\r\n            Reset all the instance analysis data if ":"\r\n            重置所有实例分析数据\r\n","\r\n            Modify this bit vector by '|'ing each element with the other bit vector.\r\n            ":"\r\n            通过使用另一个位向量的每个元素来修改此位向量。\r\n            \r\n","\r\n            Gets the metadata token associated with this symbol, or 0 if the symbol is not loaded from metadata.\r\n            ":"\r\n            获取与此符号关联的元数据令牌，或者如果未从元数据加载符号，则获得0。\r\n            \r\n","The start line position.":"起点位置。\r\n","\r\n            A mask that can be used to mask out flag bits when the latter are stored in the same memory word as the enumeration.\r\n            ":"\r\n            当将后者存储在与枚举相同的内存词中时，可用于掩盖标志位的掩码。\r\n            \r\n","An error occurred while reading the stream.":"阅读流时发生了错误。\r\n","\r\n            This method should be invoked when the analyzer host is disposing off the analyzers.\r\n            It unregisters the exception handler hooked up to the descriptors' LocalizableString fields and subsequently removes the cached descriptors for the analyzers.\r\n            ":"\r\n            当分析仪主机处置分析仪时，应调用此方法。\r\n            它解开了例外处理程序连接到描述符的本地化字段，随后将缓存的描述符删除用于分析仪。\r\n            \r\n","\r\n            Lockable object only instance is knowledgeable about.\r\n            ":"\r\n            仅锁定对象实例知识渊博。\r\n            \r\n","\r\n            A reference to the definition of a type parameter of a generic type or method.\r\n            ":"\r\n            引用通用类型或方法的类型参数的定义。\r\n            \r\n","The new trivia to use in the new tree in place of the old trivia.":"在新树上使用的新琐事代替了旧琐事。\r\n","Identifier of the suppressed diagnostic, i.e. ":"被抑制诊断的标识符，即\r\n","\r\n            Provides strong name and signs source assemblies.\r\n            ":"\r\n            提供强烈的名称和符号源组件。\r\n            \r\n","\r\n            After the global header (see ":"\r\n            在全球标题之后（请参阅\r\n","\r\n            Creates a new list with the specified nodes inserted at the index.\r\n            ":"\r\n            使用索引插入的指定节点创建一个新列表。\r\n            \r\n"," produced by given ":" 由给定产生\r\n"," is specified.\r\n            ":" 指定。\r\n            \r\n","The full name of the namespace to locate.":"要找到名称空间的全名。\r\n","\r\n            Body of the fixed, over which the variables are fixed.\r\n            ":"\r\n            固定的主体，变量固定在其上。\r\n            \r\n","The tokens to be replaced.":"代币要替换。\r\n","\r\n            Module providing the method/field.\r\n            ":"\r\n            提供方法/字段的模块。\r\n            \r\n","\r\n            True if all type arguments matching this parameter are constrained to be value types.\r\n            ":"\r\n            正确，如果将匹配此参数的所有类型参数限制为值类型。\r\n            \r\n",".\r\n            Regions can overlap, but never cross each other boundaries.\r\n            ":"。\r\n            区域可以重叠，但绝不会跨越界限。\r\n            \r\n","\r\n            Add another DiagnosticBag to the bag.\r\n            ":"\r\n            在包中添加另一个诊断袋。\r\n            \r\n","\r\n            byte marker bits for uint encoded in 1 byte.\r\n            ":"\r\n            UINT的字节标记位编码为1个字节。\r\n            \r\n",".\r\n            The script function can set the value of an output argument by assigning the\r\n            corresponding host variable's ":"。\r\n            脚本函数可以通过分配来设置输出参数的值\r\n            相应的主机变量\r\n","\r\n            An object specifying which parameters should not be applied to how miscellaneous symbols will be formatted.\r\n            ":"\r\n            指定哪些参数不应应用于如何格式化的对象。\r\n            \r\n","\r\n            Each entity has:\r\n                1. An associated non-null ":"\r\n            每个实体都有：\r\n                1.相关的非效果\r\n","\r\n            Sets the value of an indexed script object property.\r\n            ":"\r\n            设置索引脚本对象属性的值。\r\n            \r\n","\r\n            Gets all tokens with the specified annotation kind.\r\n            ":"\r\n            用指定的注释类型获取所有令牌。\r\n            \r\n","\r\n            Expects non-empty cache. Does not lock.\r\n            ":"\r\n            期望非空的缓存。不锁定。\r\n            \r\n","\r\n            Import all symbols.\r\n            ":"\r\n            导入所有符号。\r\n            \r\n","\r\n            Returns the corresponding symbol in this type or a base type that implements \r\n            interfaceMember (either implicitly or explicitly), or null if no such symbol exists\r\n            (which might be either because this type doesn't implement the container of\r\n            interfaceMember, or this type doesn't supply a member that successfully implements\r\n            interfaceMember).\r\n            ":"\r\n            返回此类型中的相应符号或实施的基本类型\r\n            Interfacemember（隐式或显式），如果没有此类符号，则无效\r\n            （这可能是因为这种类型无法实现\r\n            Interfacemember或此类型无法提供成功实施的成员\r\n            Interfacemember）。\r\n            \r\n","\r\n            Resolve ":"解决\r\n"," array. Do not access\r\n            directly, use ":" 大批。请勿访问\r\n            直接使用\r\n","\r\n            Dependency filter delegate. Used during TLog saves in order for tasks to selectively remove dependencies from the written\r\n            graph.\r\n            ":"\r\n            依赖性过滤器委托。在TLOG保存期间使用的任务以选择性地从书面中删除依赖项\r\n            图形。\r\n            \r\n","\r\n            A string representing the name of the member in a format consistent with FxCop.\r\n            ":"\r\n            以与FXCOP一致的格式表示成员名称的字符串。\r\n            \r\n"," have the\r\n            same value.\r\n            ":" 有\r\n            相同的值。\r\n            \r\n","The modified diagnostic, or null":"修改后的诊断或无效\r\n"," as the element type.":" 作为元素类型。\r\n","\r\n            The default SARIF version, which is v1.0.0 for compatibility with\r\n            previous versions of the compiler.\r\n            ":"\r\n            默认SARIF版本，即v1.0.0，以兼容\r\n            编译器的先前版本。\r\n            \r\n","\r\n            Represents a control flow branch from a ":"\r\n            代表来自一个控制流的分支\r\n","\r\n            var EnumerableT = host.type(\"System.Linq.Enumerable\", \"System.Core\");\r\n            var Int32T = host.type(\"System.Int32\");\r\n            var StringT = host.type(\"System.String\");\r\n            var SelectorT = host.type(\"System.Func\", Int32T, StringT);\r\n            var selector = host.del(SelectorT, function (num) { return StringT.Format(\"The number is {0}.\", num); });\r\n            var array = EnumerableT.Range(0, 5).Select(selector).ToArray();\r\n            ":"\r\n            var enumerablet = host.type（“ system.linq.edumable”，“ system.core”）;\r\n            var int32t = host.type（“ system.int32”）;\r\n            var stringt = host.type（“ system.string”）;\r\n            var selectort = host.type（“ system.func”，int32t，stringt）;\r\n            var selector = host.del（selectort，function（num）{return stringt.format（“数字为{0}。”，num）;}）;\r\n            var array = enumerablet.range（0，5）.select（selector）.toArray（）;\r\n            \r\n","\r\n            In order to avoid creating a separate pool of SeparatedSyntaxListBuilders, we expose\r\n            our underlying SyntaxListBuilder to SyntaxListPool.\r\n            ":"\r\n            为了避免创建单独的分离列表列表构建器，我们公开了\r\n            我们的基础语法构成对语法的语法。\r\n            \r\n",",\r\n            are thrown while reading the metadata file, the exception is caught and an appropriate diagnostic stored in ":"，，，，\r\n            在阅读元数据文件时被抛弃，捕获了例外，并存储在\r\n","subsystem version with provided major and minor":"带有专业和次要的子系统版本\r\n","Root method body operation, which must have a null parent.":"根方法主体操作，必须具有无效的父。\r\n","\r\n            Gets the total executable heap size in bytes.\r\n            ":"\r\n            在字节中获取总可执行堆大小。\r\n            \r\n","\r\n            The conversion from the type of the ":"\r\n            从类型的转换\r\n","#line":"＃线\r\n"," \r\n            for diagnostic message purposes.\r\n            ":" \r\n            出于诊断消息目的。\r\n            \r\n","\r\n            Contains common arguments to Symbol.DecodeWellKnownAttribute method in both the language compilers.\r\n            ":"\r\n            在两个语言编译器中包含符号的常见参数。\r\n            \r\n","\r\n            Option to configure analyzed API surface.\r\n            Allowed option values: One or more fields of flags enum ":"\r\n            配置分析的API表面的选项。\r\n            允许的选项值：一个或多个标志字段枚举\r\n","\r\n            True if this symbol body needs to be updated when the ":"\r\n            如果需要在\r\n","An optional primary location of the diagnostic. If null, ":"诊断的可选主要位置。如果无效，\r\n","\r\n              Looks up a localized string similar to Invalid assembly name: '{0}'.\r\n            ":"\r\n              查找类似于无效汇编名称的本地化字符串：'{0}'。\r\n            \r\n","\r\n            The settings that determine how delegates are displayed (e.g. name vs full signature).\r\n            ":"\r\n            确定如何显示委托的设置（例如名称与完整签名）。\r\n            \r\n","\r\n            A union used to convert between a float and the bits of its representation\r\n            ":"\r\n            用于在浮子之间转换的工会和其表示的位\r\n            \r\n","\r\n            Represents a branch operation.\r\n            ":"\r\n            代表分支操作。\r\n            \r\n","\r\n            Analyzers to execute on the compilation.\r\n            ":"\r\n            分析仪执行汇编。\r\n            \r\n","The value to insert":"插入的值\r\n","\r\n            Returns an instance of the reference with specified aliases.\r\n            ":"\r\n            返回带有指定别名的参考实例。\r\n            \r\n"," and returns the following diagnostic options from the parsed file:\r\n            1) A map of ":"并从解析文件中返回以下诊断选项：\r\n            1）一张地图\r\n","\r\n            Current usage:\r\n             (1) C# tuple expression.\r\n             (2) VB tuple expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃元组表达式。\r\n             （2）VB元组表达。\r\n            \r\n","\r\n            Parses display name filling defaults for any basic properties that are missing.\r\n            ":"\r\n            解析显示名称填充默认的任何基本属性的默认值。\r\n            \r\n","\r\n            Returns full metadata handle the standalone signature, adding\r\n            the signature to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回完整的元数据，添加了独立签名，添加\r\n            如果丢失了这一代的索引的签名。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n"," option for all rules in the ruleset file.\r\n            ":" 规则集文件中的所有规则的选项。\r\n            \r\n","\r\n            Gets the name or URL of the document containing the node's script function.\r\n            ":"\r\n            获取包含节点脚本函数的文档的名称或URL。\r\n            \r\n","\r\n            Specifies the options for how locals are displayed in the description of a symbol.\r\n            ":"\r\n            指定在符号描述中显示当地人的选项。\r\n            \r\n","\r\n            Capture Ids used for intermediate results within the region.\r\n            ":"\r\n            捕获用于区域内中间结果的ID。\r\n            \r\n","\r\n            A duplicate of the SymbolDisplayFormat, with a replaced set of ":"\r\n            SymboldisPlayFormat的重复，一组已更换\r\n","\r\n            This value represents the number of times the CPU profiler observed the current\r\n            script line at the top of the call stack.\r\n            ":"\r\n            该值表示CPU剖面仪观察到电流的次数\r\n            脚本线位于呼叫堆栈的顶部。\r\n            \r\n","\r\n             Original async method transformed into MoveNext() \r\n            ":"原始异步方法转化为movenext（）\r\n            \r\n","\r\n            Returns null if ":"\r\n            返回null如果\r\n"," with newer values from CurrentAnalysisData.\r\n            ":" 具有来自电流分析的较新值。\r\n            \r\n","\r\n             The assembly table is a legacy internal feature intended to accelerate assembly\r\n             loading. Because it relies on deprecated platform functionality, this feature is now\r\n             disabled by default. Although its replacement is simpler and more efficient, the\r\n             feature is still available to provide full compatibility with older ClearScript\r\n             releases.\r\n             ":"\r\n             组装桌是旨在加速组装的旧式内部功能\r\n             加载。因为它依赖于弃用的平台功能，所以此功能现在为\r\n             默认情况下禁用。尽管其更换更简单，更高效，但\r\n             功能仍然可以提供与较旧的clearscript的完整兼容性\r\n             发行。\r\n             \r\n","\r\n            Are there any hidden regions in the tree?\r\n            ":"\r\n            树上有隐藏区域吗？\r\n            \r\n","An optional message to be recorded in the dump in case of failure. Can be ":"如果发生故障，将在转储中记录一条可选消息。可\r\n","\r\n            Initialized parameter.\r\n            ":"\r\n            初始化参数。\r\n            \r\n"," and creates a matcher that\r\n            matches the given language. Returns null if the section name is\r\n            invalid.\r\n            ":" 并创建一个匹配项\r\n            匹配给定的语言。返回null如果部分名称为\r\n            无效的。\r\n            \r\n"," to avoid ambiguity when they are accessed from source.\r\n            All existing aliases of a superseded assembly are discarded.\r\n            ":"为了避免从源头访问的歧义。\r\n            丢弃了取代组件的所有现有别名。\r\n            \r\n","\r\n            Supported diagnostic descriptors for diagnostic analyzer, if any.\r\n            ":"\r\n            支持诊断分析仪的诊断描述符（如果有）。\r\n            \r\n","\r\n            The name assigned to the LessThan operator.\r\n            ":"\r\n            分配给Lessthan运营商的名称。\r\n            \r\n","\r\n            Gets the full text of this node as a new ":"\r\n            将此节点的全文作为新的\r\n","Resource stream provider should return non-null stream.":"资源流提供商应返回非NULL流。\r\n","\r\n            Gets the constant value of this local variable.\r\n            ":"\r\n            获取此局部变量的恒定值。\r\n            \r\n","\r\n            Allows the host to access script resources directly.\r\n            ":"\r\n            允许主机直接访问脚本资源。\r\n            \r\n","\r\n            Abstract base class for ":"\r\n            抽象基类\r\n","The inner non conversion operation or the starting operation if it wasn't a conversion operation.":"内部非转换操作或起始操作如果不是转换操作。\r\n","\r\n            Syntax of the attribute to decode. Might be null when the attribute information is not coming \r\n            from syntax. For example, an assembly attribute propagated from added module to the resulting assembly.\r\n            ":"\r\n            属性的语法解码。当属性信息不发布时，可能是无效的\r\n            来自语法。例如，从添加模块传播到生成的组件的汇编属性。\r\n            \r\n",".\r\n            This node is produced only as part of a ":"。\r\n            该节点仅作为一个\r\n","Action to be executed at completion of semantic analysis of a ":"在完成语义分析时要执行的措施\r\n","Since nodes are immutable, the only way to create nodes with errors attached is to create a node without an error,\r\n            then add an error with this method to create another node.":"由于节点是不可变的，因此创建带有错误的节点的唯一方法是创建一个节点而无需错误，\r\n            然后在此方法中添加错误来创建另一个节点。\r\n","\r\n            \"\\dir\\file\"\r\n            ":"\r\n            \"目录档案\"\r\n            \r\n","\r\n            Gets a value indicating whether the documentation comments are parsed and analyzed.\r\n            ":"\r\n            获得一个值，指示文档注释是否已解析和分析。\r\n            \r\n",").\r\n            Exposed for ":"）。\r\n            暴露于\r\n","\r\n            Writes teh content to the given stream. The writer is disposed and can't be used for further writing.\r\n            ":"\r\n            将内容写入给定的流。作者被处置，不能用于进一步写作。\r\n            \r\n"," to enable interprocedural flow analysis\r\n            across analyzers and analyzer callbacks to re-use the control flow graph.\r\n            ":" 为了启用分解流分析\r\n            跨分析仪和分析仪回调，以重新使用控制流程图。\r\n            \r\n"," if this is a prefix expression.\r\n            ":" 如果这是前缀表达式。\r\n            \r\n","\r\n            This context does not apply to files that are marked as generated. Nullable is off\r\n            by default in those locations.\r\n            ":"\r\n            此上下文不适用于标记为生成的文件。无效的是关闭\r\n            默认情况下在这些位置。\r\n            \r\n","\r\n            Returns true if the conversion is a user-defined conversion.\r\n            ":"\r\n            如果转换是用户定义的转换，则返回true。\r\n            \r\n"," if the comparison is text based for string or object comparison in VB.\r\n            ":" 如果比较是基于字符串或对象比较的文本。\r\n            \r\n","\r\n            Displays attributes names without the \"Attribute\" suffix, if possible.\r\n            ":"\r\n            如果可能的话，显示没有“属性”后缀的属性名称。\r\n            \r\n","\r\n            3. ":"\r\n            3。\r\n","\r\n            Returns true if there are any error diagnostics in the bag which cannot be suppressed and\r\n            are guaranteed to break the build.\r\n            Only diagnostics which have default severity error and are tagged as NotConfigurable fall in this bucket.\r\n            This includes all compiler error diagnostics and specific analyzer error diagnostics that are marked as not configurable by the analyzer author.\r\n            ":"\r\n            如果袋中有任何错误诊断，则返回true\r\n            保证打破构建。\r\n            只有默认严重性错误并将其标记为Notconfigurable的诊断落在此存储桶中。\r\n            这包括所有编译器错误诊断和特定分析仪错误诊断，这些错误诊断不可是由分析仪作者标记为不可配置的。\r\n            \r\n","\r\n            Check whether an event accessor has an appropriate signature.\r\n            ":"\r\n            检查活动访问者是否具有适当的签名。\r\n            \r\n","Compilation.":"汇编。\r\n","The variable state is invalid due to predicate analysis.":"由于谓词分析，可变状态无效。\r\n","\r\n            A user can explicitly set the global level via the ":"\r\n            用户可以通过\r\n","\r\n            Reference to the event being bound.\r\n            ":"\r\n            参考事件被绑定。\r\n            \r\n","\r\n            Returns an index of a slot that stores specified hoisted local variable in the previous generation.\r\n            ":"\r\n            返回一个插槽的索引，该插槽存储上一代中指定的局部变量。\r\n            \r\n","\r\n            The UInt32 value 6\r\n            ":"\r\n            UINT32值6\r\n            \r\n"," or overrides an implementation of ":" 或覆盖实施\r\n","\r\n            Represents metadata image reference.\r\n            ":"\r\n            表示元数据图像参考。\r\n            \r\n","\r\n            Qualified name of namespace.\r\n            e.g. \"A.B.C\"\r\n            ":"\r\n            名称空间的合格名称。\r\n            例如“ A.B.C”\r\n            \r\n","\r\n             Gets the available base type members in the context of the specified location.  Akin to\r\n             calling ":"\r\n             在指定位置的上下文中获取可用的基本类型成员。类似于\r\n             打电话\r\n","\r\n            Represents a function pointer type such as \"delegate*<void>\".\r\n            ":"\r\n            表示函数指针类型，例如“委托*<void>”。\r\n            \r\n"," \r\n            Returns the full string representation of this trivia. If this trivia is structured trivia then the returned string will\r\n            include any leading or trailing trivia present on the StructuredTriviaSyntax node of this trivia.\r\n            ":" \r\n            返回此琐事的完整字符串表示。如果这个琐事是结构化的琐事，那么返回的字符串将\r\n            包括该琐事的结构性曲霉节点上存在的任何前导或尾随琐事。\r\n            \r\n","\r\n            Gets custom tags for the diagnostic.\r\n            ":"\r\n            获取用于诊断的自定义标签。\r\n            \r\n","\r\n            Flag indicating whether analysis can be performed concurrently on multiple threads.\r\n            ":"\r\n            标志指示是否可以在多个线程上同时执行分析。\r\n            \r\n","\r\n            Represents a host event source.\r\n            ":"\r\n            代表主机事件源。\r\n            \r\n",", script code running in the current script\r\n            engine has access to the runtime types of all exposed host resources, which by default\r\n            are restricted to their declared types. The default behavior is a general requirement\r\n            for correct method binding, so setting this property to ":"，在当前脚本中运行的脚本代码\r\n            引擎可以访问所有暴露主机资源的运行时类型，默认情况下\r\n            仅限于其声明的类型。默认行为是一般要求\r\n            对于正确的方法绑定，因此将此属性设置为\r\n"," using the FNV-1a algorithm":" 使用FNV-1A算法\r\n","The namespace name in metadata format (case sensitive)":"元数据格式的名称名称（情况敏感）\r\n","\r\n            The boolean type\r\n            ":"\r\n            布尔类型\r\n            \r\n","\r\n            The member being examined.\r\n            ":"\r\n            成员正在检查。\r\n            \r\n","Can't create a metadata reference to a dynamic assembly.":"无法创建对动态组件的元数据引用。\r\n","\r\n              Looks up a localized string similar to Absolute path expected..\r\n            ":"\r\n              查找类似于预期的绝对路径的局部字符串。\r\n            \r\n",", which is the first operand that is unconditionally evaluated and is the result of the operation if non null.\r\n            (2) ":"，这是第一个无条件评估的操作数，如果无效，则是操作的结果。\r\n            （2）\r\n","\r\n            Tries to execute syntax node, code block and operation actions for all declarations for the given symbol.\r\n            ":"\r\n            试图为给定符号的所有声明执行语法节点，代码块和操作操作。\r\n            \r\n","Analyzer driver threw an exception of type '{0}' with message '{1}'.":"Analyzer驱动程序给Message'{1}'类型'{0}'的例外。\r\n","\r\n            Current usage:\r\n             (1) C# dynamic invocation expression.\r\n             (2) VB late bound invocation expression.\r\n            ":"当前用法：\r\n             （1）C＃动态调用表达式。\r\n             （2）VB晚期调用表达式。\r\n            \r\n"," a\r\n            ":" 一个\r\n            \r\n","The slot index of the slot containing the given offset.":"插槽的插槽索引包含给定偏移。\r\n","Matching full path to Tracker.exe or null if a matching path is not found.":"如果找不到匹配路径，则将完整路径匹配到Tracker.exe或NULL。\r\n","\r\n            Represents a constituent string literal part of an interpolated string operation.\r\n            ":"\r\n            代表插值字符串操作的构成字符串文字部分。\r\n            \r\n","\r\n            Represents a property or indexer.\r\n            ":"\r\n            代表属性或索引器。\r\n            \r\n","An optional structure containing meta-information for the requesting document.":"一个可选的结构，其中包含请求文档的元信息。\r\n","\r\n            A map from diagnostic ID to diagnostic reporting level. The diagnostic\r\n            ID string may be case insensitive depending on the language.\r\n            ":"\r\n            从诊断ID到诊断报告级别的地图。诊断\r\n            根据语言，ID字符串可能不敏感。\r\n            \r\n","\r\n            Represents a combined global analyzer config.\r\n            ":"\r\n            代表组合的全局分析仪配置。\r\n            \r\n","\r\n            Primary entity for which analysis data is tracked by ":"\r\n            主要实体通过其跟踪分析数据\r\n","\r\n            returns true when checksum was computed base on an actual source stream\r\n            as opposed to be suggested via a checksum directive/pragma\r\n            ":"\r\n            当计算校验和在实际源流上计算校验和\r\n            而不是通过校验和实践提出建议\r\n            \r\n",", index access ":"，索引访问\r\n"," inclusive, \r\n            and ":" 包括的，\r\n            和\r\n","\r\n            The name assigned to the Inequality operator.\r\n            ":"\r\n            分配给不平等运营商的名称。\r\n            \r\n","\r\n            A localizable justification about the suppression.\r\n            ":"\r\n            关于抑制的可本质理由。\r\n            \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledFunction((a, b, c, arg) => arg.self.IsSomething(a, b, c, arg.x), (self: this, x), out Func<int, int, int, bool> predicate);\r\n             RunWithPredicate(predicate);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooledFunction（（（a，b，c，arg）=> arg.self.issomething（a，b，c，arg.x），（self：this，x），out func <int，int，int，int，int，int ，bool>谓词）;\r\n             runwithPredicate（谓词）;\r\n             \r\n","\r\n            Minimal size of PDB path in Debug Directory. We pad the path to this minimal size to\r\n            allow some tools to patch the path without the need to rewrite the entire image.\r\n            This is a workaround put in place until these tools are retired.\r\n            ":"\r\n            DEBUG目录中PDB路径的最小尺寸。我们将这一最小尺寸的路径铺平到\r\n            允许一些工具修补路径，而无需重写整个图像。\r\n            这是在这些工具退休之前进行的解决方法。\r\n            \r\n","\r\n            If the exception happens within a finally region, this points to that finally.\r\n            ":"\r\n            如果例外发生在最后一个区域内，则最终指出了这一点。\r\n            \r\n","\r\n            Loads and compiles a document with the specified category and context callback, consuming previously generated cache data.\r\n            ":"\r\n            加载并与指定类别和上下文回调一起编译文档，以消耗先前生成的缓存数据。\r\n            \r\n","\r\n            A reference to the field definition that has been specialized to obtain the field definition referred to by this field reference. \r\n            When the containing type of the referenced specialized field definition is itself a specialized nested type of a generic type instance, \r\n            then the unspecialized field reference refers to the corresponding field definition from the unspecialized containing type definition.\r\n            (I.e. the unspecialized field reference always refers to a field definition that is not obtained via specialization.)\r\n            ":"\r\n            对现场定义的字段定义的引用，以获取本字段参考引用的字段定义。\r\n            当包含引用的专业字段定义的类型本身是通用类型实例的专业嵌套类型时，\r\n            然后，无专门的字段参考是指未包含类型定义的相应字段定义。\r\n            （即，无专业的字段参考始终是指未通过专业获得的字段定义。）\r\n            \r\n"," instances that were not referenced.\r\n            ":" 未参考的实例。\r\n            \r\n","\r\n            Specifies public key used to generate strong name for the compilation assembly, or empty if not specified.\r\n            ":"\r\n            指定用于生成编译组件的强名称的公共密钥，或者如果未指定的话，则为空名称。\r\n            \r\n","Less than zero: ":"小于零：\r\n","\r\n            Gets the source language (\"C#\" or \"Visual Basic\").\r\n            ":"\r\n            获取源语言（“ C＃”或“ Visual Basic”）。\r\n            \r\n","\r\n            Initializes a new V8 script engine instance with the specified name, options, and debug port.\r\n            ":"\r\n            初始化具有指定名称，选项和调试端口的新的V8脚本引擎实例。\r\n            \r\n"," of the end of the span.\r\n            ":" 跨度的尽头。\r\n            \r\n"," hash of the uncompressed bytes\r\n            that's saved to the PDB.\r\n            ":" 无压缩字节的哈希\r\n            这保存到了PDB。\r\n            \r\n","\r\n            Exposes a host type to script code. The type is specified by name.\r\n            ":"\r\n            将主机类型公开为脚本代码。该类型是按名称指定的。\r\n            \r\n","\r\n            Expression producing a value to be locked.\r\n            ":"\r\n            表达式产生要锁定的值。\r\n            \r\n","\r\n            Produce unbound generic type symbol if the type is a generic type.\r\n            ":"\r\n            如果该类型是通用类型，则产生未结合的通用类型符号。\r\n            \r\n","\r\n            The kind of the relational operator.\r\n            ":"\r\n            关系运营商的种类。\r\n            \r\n","\r\n              Looks up a localized string similar to Can't create a module reference to an assembly..\r\n            ":"\r\n              查找类似于类似的本地化字符串，无法创建对汇编的模块引用。\r\n            \r\n","\r\n            A built-in operator.\r\n            ":"\r\n            内置操作员。\r\n            \r\n","\r\n            Create a simple language specific diagnostic for given error code.\r\n            ":"\r\n            为给定的错误代码创建一个简单的语言特定诊断。\r\n            \r\n","\r\n            True if the module has been disposed.\r\n            ":"\r\n            如果已处理该模块，则为是真的。\r\n            \r\n","s are not equal.":"S不等。\r\n","\r\n            Initializes a new V8 runtime instance.\r\n            ":"\r\n            初始化一个新的V8运行时实例。\r\n            \r\n","The span does not include the start of a line.":"跨度不包括线路的开始。\r\n","\r\n            Specifies that documents may be downloaded from the Web.\r\n            ":"\r\n            指定可以从网络下载文档。\r\n            \r\n","\r\n            Special informational diagnostic for each programmatic ":"\r\n            每个程序的特殊信息诊断\r\n","\r\n            Report a ":"\r\n            报告\r\n","\r\n            The caller is expected to not call this if ":"\r\n            如果呼叫者有望在\r\n"," \r\n            invoked for each syntax node in the compilation, allowing the receiver to build up information about the compilation before generation occurs.\r\n            \r\n            During ":" \r\n            为编辑中的每个语法节点调用，允许接收器在发电之前构建有关汇编的信息。\r\n            \r\n            期间\r\n","\r\n            Indicates if every entry in this table has a state of ":"\r\n            指示该表中的每个条目是否具有\r\n","\r\n            The name assigned to the LogicalAnd operator.\r\n            ":"\r\n            分配给逻辑和操作员的名称。\r\n            \r\n","\r\n            Covariant (":"\r\n            协变（\r\n","The parent trivia syntax for this structured trivia syntax.":"该结构化琐事语法的父琐语法。\r\n"," is a simple file name, false if it is null or includes a directory specification.\r\n            ":" 是一个简单的文件名，如果为null或包含目录规范，则为false。\r\n            \r\n","\r\n            var Int32T = host.type(\"System.Int32\");\r\n            var intValue = host.cast(Int32T, 12.5);\r\n            ":"\r\n            var int32t = host.type（“ system.int32”）;\r\n            var intvalue = host.cast（int32t，12.5）;\r\n            \r\n","\r\n            Root (":"\r\n            根 （\r\n","\r\n            The length of the text in characters.\r\n            ":"\r\n            字符中的文字长度。\r\n            \r\n","\r\n            The type of the expression represented by the syntax node. For expressions that do not\r\n            have a type, null is returned. If the type could not be determined due to an error, then\r\n            an IErrorTypeSymbol is returned.\r\n            ":"\r\n            语法节点表示的表达式类型。对于不表达的表达\r\n            有类型，返回null。如果由于错误无法确定类型，则\r\n            返回ierrortypesymbol。\r\n            \r\n","\r\n            Combines contiguous segments with lengths that are each less than or equal to the specified segment size.\r\n            ":"\r\n            将连续段与每个小于或等于指定段的大小的长度结合在一起。\r\n            \r\n","\r\n            Symbol changes when emitting EnC delta.\r\n            ":"\r\n            符号在发射ENC DELTA时会更改。\r\n            \r\n","\r\n                Returns the next word in the text.\r\n            ":"\r\n                返回文本中的下一个单词。\r\n            \r\n","\r\n             int x = 3;\r\n             using var _ = GetPooledFunction((a, b, arg) => arg.self.IsSomething(a, b, arg.x), (self: this, x), out Func<int, int, bool> predicate);\r\n             RunWithPredicate(predicate);\r\n             ":"\r\n             int x = 3;\r\n             使用var _ = getPooledFunction（（（a，b，arg）=> arg.self.issomething（a，b，arg.x），（self：this，x），out func <int，int，int，bool> predentice）;\r\n             runwithPredicate（谓词）;\r\n             \r\n"," equals the fully-qualified name given by ":" 等于由\r\n","\r\n            Information decoded from well-known custom attributes applied on an event.\r\n            ":"\r\n            从事件上应用的众所周知的自定义属性解码的信息。\r\n            \r\n","\r\n            True if this module is an EnC update.\r\n            ":"\r\n            如果此模块是ENG更新，则为true。\r\n            \r\n","\r\n            Get an optional argument ":"\r\n            获取可选论点\r\n","\r\n            Represents a C# while, for, or do statement, or a VB While, For, or Do statement.\r\n            ":"\r\n            代表一个c＃while，for，do do语句或vb while，for或do语句。\r\n            \r\n","\r\n            Set of analyzers that have registered symbol start analyzer actions. \r\n            ":"\r\n            已经注册符号开始分析仪操作的一组分析仪。\r\n            \r\n","\r\n            Determines whether this token has any descendant preprocessor directives.\r\n            ":"\r\n            确定该令牌是否具有任何后代预处理器指令。\r\n            \r\n"," with the result.\r\n            ":" 结果。\r\n            \r\n","\r\n            Determines whether the specified instance is equal to the current instance.\r\n            ":"\r\n            确定指定的实例是否等于当前实例。\r\n            \r\n","An optional name that specifies the server from which to import the type.":"一个可选的名称，该名称指定了导入类型的服务器。\r\n","Slot position in the signature.":"签名中的插槽位置。\r\n","\r\n            Construct a non-formattable ":"\r\n            构建一个非格式\r\n","\r\n            Gets or sets a property value in the ":"\r\n            获取或设置属性值\r\n"," returns False this method returns an empty ":" 返回错误此方法返回一个空\r\n","\r\n            Policy to be used when matching assembly reference to an assembly definition across platforms.\r\n            ":"\r\n            将汇编引用到跨平台的汇编定义时要使用的策略。\r\n            \r\n","\r\n            Determines if \"path\" contains 'component' within itself.\r\n            i.e. asking if the path \"c:\\foo\\bar\\baz\" has component \"bar\" would return 'true'.\r\n            On the other hand, if you had \"c:\\foo\\bar1\\baz\" then it would not have \"bar\" as a\r\n            component.\r\n            \r\n            A path contains a component if any file name or directory name in the path\r\n            matches 'component'.  As such, if you had something like \"\\\\foo\" then that would\r\n            not have \"foo\" as a component. That's because here \"foo\" is the server name portion\r\n            of the UNC path, and not an actual directory or file name.\r\n            ":"\r\n            确定\"path\"本身是否包含'component'。\r\n            即询问路径\"c:\\foo\\bar\\baz\"has component\"bar\"将返回'true'。\r\n            另一方面，如果你有\"c:\\foo\\bar1\\baz\"那么它就不会有\"酒吧\"作为一个\r\n            组件。\r\n            \r\n            如果路径中的任何文件名或目录名，则路径包含组件\r\n            匹配'组件'。  因此，如果你有类似\"\\\\foo\"的东西，那么这将\r\n            没有\"foo\"作为组件。 这是因为这里的\"foo\"是服务器名称部分\r\n            UNC路径，而不是实际的目录或文件名。\r\n            \r\n","\r\n            The default severity of the diagnostic.\r\n            ":"\r\n            诊断的默认严重程度。\r\n            \r\n","\r\n            The default fully qualified name of a ":"\r\n            默认的完全合格的名称\r\n","\r\n            Method that tests existence of a file.\r\n            ":"\r\n            测试文件存在性的方法。\r\n            \r\n","Preferred culture or null for the default.":"默认值的首选文化或无效。\r\n","\r\n            Creates a metadata reference for this compilation.\r\n            ":"\r\n            为此汇编创建元数据参考。\r\n            \r\n"," is contained in a control flow region with the given ":" 包含在给定的对照流域中\r\n","\r\n            Converts a symbol to a string that can be displayed to the user. May be tailored to a\r\n            specific location in the source code.\r\n            ":"\r\n            将符号转换为可以显示给用户的字符串。可以量身定制\r\n            源代码中的特定位置。\r\n            \r\n","\r\n            Allows asking semantic questions about a tree of syntax nodes in a Compilation. Typically,\r\n            an instance is obtained by a call to GetBinding on a Compilation or Compilation.\r\n            ":"\r\n            允许在汇编中询问有关语法节点树的语义问题。通常，\r\n            通过调用汇编或汇编的呼叫来获得实例。\r\n            \r\n","\r\n            The method being referred to.\r\n            ":"\r\n            所指的方法。\r\n            \r\n","\r\n            Groups together the RowIds of types in a given namespaces.  The types considered are\r\n            those defined in this module.\r\n            ":"\r\n            将给定名称空间中的类型类型组合在一起。所考虑的类型是\r\n            在此模块中定义的。\r\n            \r\n",", like ":"， 喜欢\r\n"," if it threw an exception that was handled by ":" 如果它抛出了一个例外\r\n","\r\n            Reference matches definition except for version (reference version is lower or higher than definition version).\r\n            ":"\r\n            参考匹配的定义除外（参考版本比定义版本低或更高）。\r\n            \r\n","\r\n            A reference to a method.\r\n            ":"\r\n            对方法的引用。\r\n            \r\n","An array of tokens.":"一系列令牌。\r\n","\r\n            A reference to a .NET assembly.\r\n            ":"\r\n            对.NET组件的引用。\r\n            \r\n","System.Runtime.CompilerServices.ITuple":"system.runtime.compilerservices.ituple\r\n","\r\n            to indicte if the copy equality check for the SetAbstractValue call is a reference compare or a value compare operation.\r\n            ":"\r\n            起诉setAbtractValue调用的副本平等检查是参考比较或值比较操作。\r\n            \r\n","\r\n            Write ":"\r\n            写\r\n","\r\n            Read UTF8 string with null terminator.\r\n            ":"\r\n            使用NULL终端读取UTF8字符串。\r\n            \r\n","\r\n            Creates a new tree of nodes with new tokens inserted after the specified token.\r\n            ":"\r\n            在指定令牌之后，创建一棵新的节点的新树，并插入新的代币。\r\n            \r\n","\r\n            Optional initializer of the variable.\r\n            ":"\r\n            变量的可选初始化器。\r\n            \r\n","\r\n            Gets or set an optional method to be called when a document is loaded.\r\n            ":"\r\n            加载文档时获取或设置可选方法要调用。\r\n            \r\n","\r\n              Looks up a localized string similar to Diagnostic '{0}: {1}' was programmatically suppressed by a DiagnosticSuppressor with suppresion ID '{2}' and justification '{3}'.\r\n            ":"\r\n              查找类似于诊断'{0}：{1}'的本地化字符串，该字符串被带有抑制ID'{2}'{2}'and painification'and painfification'{3}'的诊断抑制。\r\n            \r\n","\r\n            Marks the given file as fully syntactically analyzed for the given analyzer.\r\n            ":"\r\n            标记给定的文件是对给定分析仪的完全句法分析。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# deconstruction assignment expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃解构分配表达式。\r\n            \r\n","Finalize()":"最终确定（）\r\n","\r\n            Includes the type parameters. \r\n            For example, \"Goo<T>\" in C# or \"Goo(Of T)\" in Visual Basic.\r\n            ":"\r\n            包括类型参数。\r\n            例如，Visual Basic中的C＃或“ T）中的“ Goo <t>”。\r\n            \r\n","\r\n            Represents an assembly reference with an alias (C# only, /r:Name=Reference on command line).\r\n            ":"\r\n            代表带有别名的汇编引用（唯一C＃， /r：name =命令行上的参考）。\r\n            \r\n","\r\n            Gets a list of all the diagnostics in the syntax tree.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取语​​法树中所有诊断的列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n              Looks up a localized string similar to Assembly must have at least one module..\r\n            ":"\r\n              查找类似于汇编的本地化字符串必须至少具有一个模块。\r\n            \r\n"," is a static holder type;\r\n            otherwise ":" 是静态支架类型；\r\n            否则\r\n"," with the specified nodes or tokens inserted at the index.\r\n            ":" 用指定的节点或令牌插入索引。\r\n            \r\n",", 1 if ":"，1如果\r\n","\r\n            Queue to store analyzer diagnostics on the ":"\r\n            队列将分析仪诊断在\r\n","\r\n            Only accessible where both protected and internal members are accessible\r\n            (more restrictive than ":"仅在可访问受保护和内部成员的情况下才能访问\r\n            （比限制比\r\n"," values are not equal. Because ":" 值不相等。因为\r\n","\r\n            Represents a parenthesized expression.\r\n            ":"\r\n            代表括号的表达。\r\n            \r\n","\r\n            The following code defines a function that determines whether an object implements\r\n            ":"\r\n            以下代码定义了确定对象是否实现的函数\r\n            \r\n","\r\n            Is this a ref assignment\r\n            ":"\r\n            这是参考作业吗\r\n            \r\n","The target value.":"目标值。\r\n","\r\n            The tuple element names of the local definition if any, or empty.\r\n            ":"\r\n            如果有的话，本地定义的元组元素名称或空。\r\n            \r\n","\r\n            An integer tag that identifies this resource. If the value is less than 0, this.Name should be used instead.\r\n            ":"\r\n            标识此资源的整数标签。如果值小于0，则应使用此名称。\r\n            \r\n","\r\n            The leading and trailing trivia associated with the node or token is kept.\r\n            ":"\r\n            保留了与节点或令牌相关的领先和尾随琐事。\r\n            \r\n","\r\n             The name is used for determining internals-visible-to relationship with referenced assemblies.\r\n            \r\n             If the compilation represents an assembly the value of ":"\r\n             该名称用于确定与参考组件的内部可视化关系。\r\n            \r\n             如果编译代表一个组件，则\r\n","\r\n            Gets the resolver for resolving source document references for the compilation.\r\n            Null if the compilation is not allowed to contain source file references, such as #line pragmas and #load directives.\r\n            ":"\r\n            获取用于解决汇编的源文档引用的分辨率。\r\n            null如果不允许汇编包含源文件引用，例如#line Pragmas和#load指令。\r\n            \r\n","\r\n            The last run state of each generator, by the generator that created it\r\n            ":"\r\n            每个发电机的最后运行状态，由创建它的生成器\r\n            \r\n","\r\n            Returns an array of tokens for type constraints. Null reference if none.\r\n            ":"\r\n            返回类型约束的代币数组。 null引用如果没有。\r\n            \r\n","Portable executable image beginning with the DOS header (\"MZ\").":"便携式可执行映像以DOS标头（“ MZ”）开头。\r\n","\r\n            Loads and compiles a document with the specified category and context callback.\r\n            ":"\r\n            加载和编译具有指定类别和上下文回调的文档。\r\n            \r\n","The generated backing field for an auto property or a field-like event.":"自动属性或类似现场的事件的生成的备份字段。\r\n","\r\n            Represents a .NET assembly.\r\n            ":"\r\n            表示.NET组件。\r\n            \r\n","\r\n              Looks up a localized string similar to Invalid size of public key token..\r\n            ":"\r\n              查找类似于公共密钥令牌无效的局部字符串。\r\n            \r\n","\r\n            The span in the syntax tree containing the line mapping directive.\r\n            ":"\r\n            包含行映射指令的语法树中的跨度。\r\n            \r\n","\r\n            Gets or sets a value indicating whether enumeration of a generic ":"\r\n            获取或设置一个值，指示是否枚举通用\r\n","\r\n            TODO: use ":"\r\n            托多：使用\r\n","\r\n            The 1-based index of the property definition.\r\n            The index is into the full metadata.\r\n            ":"\r\n            属性定义的基于1的索引。\r\n            该索引进入了完整的元数据。\r\n            \r\n"," into native heap. The native memory block is released \r\n            when the resulting reference becomes unreachable and GC collects it. To decrease memory footprint of the reference and/or manage\r\n            the lifetime deterministically use ":" 进入本地堆。本机内存块已发布\r\n            当结果参考变得无法到达并收集GC时。减少参考和/或管理的记忆足迹\r\n            生命周期确定使用\r\n","Function that maps file paths to CCI debug documents":"将文件路径映射到CCI调试文档的功能\r\n","\r\n            Contains information about a label.\r\n            ":"\r\n            包含有关标签的信息。\r\n            \r\n"," \r\n            Returns the string representation of this trivia. If this trivia is structured trivia then the returned string\r\n            will not include any leading or trailing trivia present on the StructuredTriviaSyntax node of this trivia.\r\n            ":" \r\n            返回此琐事的字符串表示形式。如果这个琐事是结构化的琐事，则返回的字符串\r\n            将不包括该琐事的结构性曲霉节点上存在的任何前导或尾随琐事。\r\n            \r\n","\r\n            Enumerates the different kinds of levels of visibility a type member can have.\r\n            ":"\r\n            列举类型成员可以拥有的不同种类的可见性水平。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# range expressions\r\n            ":"\r\n            当前用法：\r\n             （1）C＃范围表达式\r\n            \r\n","The stream":"流\r\n"," is also set, ":" 也设置了\r\n","\r\n              Looks up a localized string similar to Node to track is not a descendant of the root..\r\n            ":"\r\n              查找类似于跟踪节点的局部字符串不是根的后代。\r\n            \r\n","\r\n            Value state for presence of non-literal values for ":"\r\n            存在非文字值的价值状态\r\n","\r\n            The AssemblySymbol to check.\r\n            ":"\r\n            组件符号检查。\r\n            \r\n"," comes list of custom debug info record.\r\n            Each record begins with a standard header.\r\n            ":" 来定制调试信息记录列表。\r\n            每个记录以标准标头开始。\r\n            \r\n","\r\n              Looks up a localized string similar to property, indexer.\r\n            ":"\r\n              查找类似于属性索引器的本地化字符串。\r\n            \r\n","\r\n            Indicates a \"value\" parameter or return type.\r\n            ":"\r\n            指示“值”参数或返回类型。\r\n            \r\n","\r\n            Get the per-symbol analyzer actions to be executed by the given analyzer.\r\n            These are the actions registered during the various RegisterSymbolStartAction method invocations for the given symbol on different analysis contexts.\r\n            ":"\r\n            获取由给定分析仪执行的每个符号分析仪。\r\n            这些是在不同分析上下文中给定符号的各种寄存器符合方法调用中注册的动作。\r\n            \r\n","\r\n            Checks if the given name is a sequence of valid CLR names separated by a dot.\r\n            ":"\r\n            检查给定名称是否是由点分开的有效CLR名称的序列。\r\n            \r\n","\r\n            The index of the TextLine that encompasses the character position.\r\n            ":"\r\n            包含字符位置的文本线索引。\r\n            \r\n","\r\n            Returns true if this local variable was declared as \"const\" (i.e. is a constant declaration).\r\n            Also returns true for an enum member.\r\n            ":"\r\n            如果该局部变量被声明为“ const”（即是恒定声明），则返回为true。\r\n            枚举成员也返回。\r\n            \r\n","\r\n            The size of managed resource data stream.\r\n            Aligned to ":"\r\n            托管资源数据流的大小。\r\n            对齐\r\n","A string specifying the document to be loaded and compiled.":"指定要加载和编译的文档的字符串。\r\n","\r\n            XML documentation comments provider for the reference.\r\n            ":"\r\n            XML文档注释提供商供参考。\r\n            \r\n"," is used as the base path of ":" 被用作基本路径\r\n"," instances using the given computeValue delegate.\r\n            ":" 使用给定的ComputeValue委托的实例。\r\n            \r\n","\r\n            Seal the bag so no further errors can be added, while clearing it and returning the old set of errors.\r\n            Return the bag to the pool.\r\n            ":"\r\n            密封袋子，因此在清除并返回旧的错误时，无法添加其他错误。\r\n            将袋子退回游泳池。\r\n            \r\n","\r\n            Base file path to resolve CWD-relative paths against. Null if not available.\r\n            ":"\r\n            用于解析CWD相对路径的基本文件路径。 如果不可用，则为Null。\r\n            \r\n","\r\n            Source file paths.\r\n            ":"\r\n            源文件路径。\r\n            \r\n","\r\n            The code has yet to be determined.\r\n            ":"\r\n            该代码尚未确定。\r\n            \r\n","\r\n            Create a new instance of this diagnostic with the Severity property changed.\r\n            ":"\r\n            创建此诊断的新实例，并改变了严重性属性。\r\n            \r\n"," events, runs analyzer actions and signals completion of ":" 事件，运行分析仪的操作以及信号完成\r\n","\r\n            Implements a struct-based enumerable for ":"\r\n            实施基于结构的枚举\r\n","\r\n              Looks up a localized string similar to Invalid alias..\r\n            ":"\r\n              查找类似于无效别名的局部字符串。\r\n            \r\n","\r\n            One or more operations to execute within the switch section.\r\n            ":"\r\n            一个或多个操作要在交换部分内执行。\r\n            \r\n","\r\n            Might return null even if ":"\r\n            也可能返回null\r\n","\r\n            Read a Int64 value from the stream. This value must have been written using ":"\r\n            从流中读取INT64值。该值必须使用\r\n","\r\n            The declared base type of this type, or null. The object type, interface types,\r\n            and pointer types do not have a base type. The base type of a type parameter\r\n            is its effective base class.\r\n            ":"\r\n            该类型的基本类型或null的基本类型。对象类型，接口类型，\r\n            和指针类型没有基本类型。类型参数的基本类型\r\n            是其有效的基础。\r\n            \r\n","True if the function successfully returns the name and namespace.":"如果功能成功返回名称和名称空间，则为true。\r\n","\r\n            Gets the first token of the tree rooted by this node. Skips zero-width tokens.\r\n            ":"\r\n            获取由该节点扎根的树的第一个令牌。跳过零宽的令牌。\r\n            \r\n"," constraint that was specified for the type parameter. If there was no ":" 为类型参数指定的约束。如果没有\r\n","The object to expose.":"暴露的对象。\r\n"," reference, although loaders\r\n            are not required to manage document caches of unlimited size.\r\n            ":" 参考，尽管装载机\r\n            不需要管理无限尺寸的文档缓存。\r\n            \r\n","\r\n            Check whether given overloads has any overload whose parameters has the given type as its parameter type.\r\n            ":"\r\n            检查给定的过载是否具有任何过载其参数具有给定类型作为其参数类型的过载。\r\n            \r\n"," in C#).\r\n            ":" 在C＃中）。\r\n            \r\n","\r\n            The type explicitly specified, or null if it was inferred (e.g. using ":"\r\n            明确指定的类型，或者如果推断为null（例如，使用\r\n","\r\n            Type is an error type.\r\n            ":"\r\n            类型是错误类型。\r\n            \r\n","\r\n            Early decoded attribute data has been computed and stored on the bag, but bound attributes or remaining decoded attribute data is not stored.\r\n            Only ":"\r\n            早期解码的属性数据已经计算出来并存储在袋子上，但是未存储绑定的属性或剩余的解码属性数据。\r\n            仅有的\r\n","\r\n            Whether attribute allows multiple.\r\n            ":"\r\n            属性是否允许多个。\r\n            \r\n","\r\n            An array with one element\r\n            ":"\r\n            一个带有一个元素的数组\r\n            \r\n"," operator for object typed operands.\r\n            ":" 对象输入操作数的操作员。\r\n            \r\n","\r\n            A property is a member that provides access to an attribute of an object or a class.\r\n            This interface models the metadata representation of a property.\r\n            ":"\r\n            属性是提供对对象或类属性的访问的成员。\r\n            该接口对属性的元数据表示建模。\r\n            \r\n","\r\n            Use this to create IOperation when we don't have proper specific IOperation yet for given language construct\r\n            ":"\r\n            当我们没有适当的特定ioperation时，使用它来创建ioperation\r\n            \r\n","\r\n            Creates a new options instance with the specified general diagnostic option.\r\n            ":"\r\n            使用指定的常规诊断选项创建一个新的选项实例。\r\n            \r\n","Metadata PE stream should not be given when emitting metadata only.":"仅在排放元数据时不应给出元数据。\r\n","\r\n            Represents a VB With statement.\r\n            ":"\r\n            代表带有语句的VB。\r\n            \r\n"," entry that represents the enclosing type.\r\n            ":" 代表封闭类型的条目。\r\n            \r\n","Definition identity.":"定义身份。\r\n","\r\n            Points to unknown set of locations, which is known to be non-null.\r\n            ":"\r\n            指向未知的位置集，这是无效的。\r\n            \r\n","\r\n            Disposes all modules contained in the assembly.\r\n            ":"\r\n            处理组件中包含的所有模块。\r\n            \r\n","\r\n            Resolves references to source files specified in source code.\r\n            ":"\r\n            解决源代码中指定的源文件的引用。\r\n            \r\n","\r\n            Resolved absolute path of the source file (does not contain wildcards).\r\n            ":"\r\n            已解决源文件的绝对路径（不包含通配符）。\r\n            \r\n","\r\n            Temp variable created during lowering.\r\n            ":"\r\n            降低过程中创建的温度变量。\r\n            \r\n","\r\n            Specifies how the target type member is to be exposed to script code. This extended version\r\n            supports additional options.\r\n            ":"\r\n            指定目标类型成员如何暴露于脚本代码。这个扩展版本\r\n            支持其他选项。\r\n            \r\n","The new properties for the reference.":"引用的新属性。\r\n","The root to look for all sub roots in":"寻找所有子根的根\r\n","The name of a method.":"方法的名称。\r\n","\r\n            The first part of a two part version number indicating the version of the linker that produced this module. For example, the 8 in 8.0.\r\n            ":"\r\n            两部分版本号的第一部分指示产生该模块的链接器的版本。例如，8 in 8.0。\r\n            \r\n","\r\n            Marks the given file as fully syntactically analyzed for the unprocessed analyzers in the given analysisScope.\r\n            ":"\r\n            标记给定的文件是在给定的分析中的未加工分析仪的完全句法分析。\r\n            \r\n","A value to be merged":"要合并的价值\r\n","\r\n            Returns true if this method is an extension method. \r\n            ":"\r\n            如果此方法是扩展方法，则返回true。\r\n            \r\n","\r\n            Key that indicates if this config is a global config\r\n            ":"\r\n            指示此配置是否为全局配置的键\r\n            \r\n",". An optional qualifier of type\r\n            ":"。可选的类型预选赛\r\n            \r\n","\r\n            This function does not change the current region. The stack should be spilled before calling it.\r\n            ":"\r\n            此功能不会改变当前区域。堆栈应在调用之前溢出。\r\n            \r\n","\r\n            Some basic concepts:\r\n            - Basic blocks are sequences of statements/operations with no branching. The only branching\r\n              allowed is at the end of the basic block.\r\n            - Regions group blocks together and represent the lifetime of locals and captures, loosely similar to scopes in C#.\r\n              There are different kinds of regions, ":"\r\n            一些基本概念：\r\n             - 基本块是没有分支的语句/操作的序列。唯一的分支\r\n              允许在基本块的末端。\r\n             - 区域组将结合在一起并表示当地人和捕获的寿命，与C＃中的示波器松散相似。\r\n              有不同种类的区域，\r\n","\r\n            Represents an operation with two operands that produces a result with the same type as at least one of the operands.\r\n            ":"\r\n            代表一个具有两个操作数的操作，该操作数与至少一个操作数具有相同类型的结果。\r\n            \r\n","\r\n            Internal Symbol representing the inferred signature of\r\n            a lambda expression or method group.\r\n            ":"\r\n            内部符号表示推断的签名\r\n            lambda表达式或方法组。\r\n            \r\n"," specifying parsing and delimiting options.\r\n            ":" 指定解析和划界选项。\r\n            \r\n","\r\n            The symbol being examined.\r\n            ":"\r\n            符号正在检查。\r\n            \r\n","\r\n            An enumerable that yields the set's elements in insertion order.\r\n            ":"\r\n            枚举，以插入顺序产生集合的元素。\r\n            \r\n",".\r\n                   See ":"。\r\n                   看\r\n","\r\n            A diagnostic created in the process of determining the key.\r\n            ":"\r\n            在确定密钥的过程中创建的诊断。\r\n            \r\n","\r\n            The original metadata of the module.\r\n            ":"\r\n            模块的原始元数据。\r\n            \r\n","Type potentially representing a ":"类型可能代表\r\n"," can record any information about the nodes visited. During\r\n            ":" 可以记录有关访问的节点的任何信息。期间\r\n            \r\n","\r\n            Aggregate analyzer configuration options:\r\n            1. Per syntax tree options from ":"聚合分析仪配置选项：\r\n            1.每个语法树选项\r\n","The method":"方法\r\n","A set of per-tree options that can be used by analyzers.":"分析仪可以使用的一组每个树选项。\r\n","Path of the file to which the compilation's XML documentation will be written.  Null to forego XML generation.":"编译XML文档的文件的路径。 null至Orego XML生成。\r\n","\r\n            Dictionary storing context sensitive interprocedural analysis results for each callsite.\r\n            ":"\r\n            为每个呼叫的词典存储上下文敏感的分解分析结果。\r\n            \r\n","All statements in the block containing this node":"包含此节点的块中的所有语句\r\n","\r\n            The version of the assembly.\r\n            ":"\r\n            组件的版本。\r\n            \r\n","The token that follows this token in the syntax tree.":"在语法树中遵循此令牌的令牌。\r\n","\r\n            The file pointer to the COFF symbol table, or zero if no COFF symbol table is present. \r\n            This value should be zero for a PE image.\r\n            ":"\r\n            文件指针指向COFF符号表，如果没有Coff Symbol表，则零。\r\n            对于PE图像，此值应为零。\r\n            \r\n","\r\n            Describes how severe a diagnostic is.\r\n            ":"\r\n            描述诊断的严重程度。\r\n            \r\n","\r\n            Check whether parameter count and parameter types of the given methods are same.\r\n            ":"\r\n            检查给定方法的参数计数和参数类型是否相同。\r\n            \r\n","\r\n            Once a host object is exposed to script code, its members are accessible via the script\r\n            language's native syntax for member access. The following table provides details about\r\n            the mapping between host members and script-accessible properties and methods.\r\n            ":"\r\n            主机对象暴露于脚本代码后，可以通过脚本访问其成员\r\n            语言的本机语法用于会员访问。下表提供了有关的详细信息\r\n            主机成员与脚本访问属性和方法之间的映射。\r\n            \r\n","\r\n            If true, prepend the compiler-supported language versions during\r\n            ":"\r\n            如果是真的，请在编译器支持的语言版本中\r\n            \r\n","\r\n            Debug information format.\r\n            ":"\r\n            调试信息格式。\r\n            \r\n","The name of the symbol to find. If null is specified then symbols\r\n            with any names are returned.":"要查找的符号的名称。如果指定了空，则符号\r\n            任何名称都将返回。\r\n","Object.GetType()":"object.getType（）\r\n","An optional sequence of whitespace characters that defines a single level of indentation.":"白空间字符的可选序列，该字符定义了单个凹痕层。\r\n","\r\n            Used in VB when the position is not hidden, but it's not known yet that there is a (nonempty) #ExternalSource\r\n            following.\r\n            ":"\r\n            当位置没有隐藏时，在VB中使用，但尚不知道有（非空）#ExternalSource\r\n            下列的。\r\n            \r\n","\r\n            Retrieve a local slot by its symbol.\r\n            ":"\r\n            通过其符号检索本地插槽。\r\n            \r\n","\r\n            Temp created for caching \"this\".\r\n            Technically it is long-lived, but will happen only in optimized code.\r\n            ":"\r\n            为缓存“这个”而创建的临时。\r\n            从技术上讲，它是长寿的，但仅在优化的代码中发生。\r\n            \r\n","s for a ":"s\r\n","The offset within the ":"偏移\r\n"," if at least one of the elements within ":" 如果至少其中一个要素\r\n","\r\n            True to return tokens that are part of trivia.\r\n            If false finds the token whose full span (including trivia) includes the position.\r\n            ":"\r\n            返回琐事一部分的代币。\r\n            如果fals会找到其完整跨度（包括琐事）的令牌。\r\n            \r\n","The array to map":"映射的数组\r\n","\r\n            Instance receiver, if it exists.\r\n            ":"\r\n            实例接收器，如果存在。\r\n            \r\n","the number of bits of precision in integerValueAsBytes":"Integervalueasbybytes中的精度数量\r\n","\r\n            Parameter the argument matches.\r\n            ":"\r\n            参数匹配参数。\r\n            \r\n","\r\n            True if the constant represents a null literal.\r\n            ":"\r\n            如果常数表示无效的文字，则为正确。\r\n            \r\n"," can provide an instance of ":" 可以提供一个实例\r\n","\r\n            Load the rules from the XML node\r\n            ":"\r\n            从XML节点加载规则\r\n            \r\n","\r\n              Looks up a localized string similar to Deserialization reader for '{0}' read incorrect number of values..\r\n            ":"\r\n              查找类似于“ {0}”读取不正确数量的Queleialization读取器的本地化字符串。\r\n            \r\n","\r\n            Executes script code as a command.\r\n            ":"\r\n            执行脚本代码作为命令。\r\n            \r\n","\r\n            Get an optional help link for the given diagnostic code.\r\n            ":"\r\n            为给定的诊断代码获取可选帮助链接。\r\n            \r\n","True when there is no error.":"当没有错误时为tum。\r\n","\r\n            Gets the start position of the line.\r\n            ":"\r\n            获取线路的开始位置。\r\n            \r\n","The queue is already completed.":"队列已经完成。\r\n","\r\n            VB XML import.\r\n            ":"\r\n            VB XML导入。\r\n            \r\n","The new token to use in the new tree in place of the old\r\n            token.":"新树上使用的新令牌代替旧树\r\n            令牌。\r\n","\r\n            A reference to the generic method that defines the referenced type parameter.\r\n            ":"\r\n            对定义引用类型参数的通用方法的引用。\r\n            \r\n","\r\n              Looks up a localized string similar to Empty or invalid file name.\r\n            ":"\r\n              查找类似于空或无效的文件名的本地化字符串。\r\n            \r\n","\r\n            Namespace name for top level types.\r\n            ":"\r\n            顶级类型的名称名称。\r\n            \r\n","\r\n            Operation visitor to flow the data values across a given statement in a basic block.\r\n            ":"\r\n            操作访问者将数据值跨在基本块中的给定语句中。\r\n            \r\n","\r\n            Elements for tuple expression.\r\n            ":"\r\n            元组表达的元素。\r\n            \r\n","\r\n            Specifies how much qualification is used in symbol descriptions.\r\n            ":"\r\n            指定符号描述中使用了多少资格。\r\n            \r\n","\r\n            Specifies that no options are selected.\r\n            ":"\r\n            指定未选择选项。\r\n            \r\n","\r\n            A rope can be formed from the concatenation of two ropes.\r\n            ":"\r\n            可以通过两条绳索的串联形成绳索。\r\n            \r\n","The name of a local.":"当地的名称。\r\n","\r\n            The definition of a type parameter of a generic type.\r\n            ":"\r\n            通用类型的类型参数的定义。\r\n            \r\n",".\r\n            For conditional branches, this value is used to represent the condition which determines if\r\n            ":"。\r\n            对于条件分支，此值用于表示确定是否是否\r\n            \r\n","The type of the return value of the function.":"函数返回值的类型。\r\n","\r\n            Gets a value indicating whether the symbol is the original definition. Returns false\r\n            if the symbol is derived from another symbol, by type substitution for instance.\r\n            ":"\r\n            获取一个指示符号是否为原始定义的值。返回false\r\n            如果该符号是从另一个符号派生的，则例如替换。\r\n            \r\n","\r\n            Global warning level (a non-negative integer).\r\n            ":"\r\n            全球警告级别（非负整数）。\r\n            \r\n","The last token or ":"最后一个令牌或\r\n","\r\n            The finally regions the control goes through if this branch is taken.\r\n            Ordered in the sequence by which the finally regions are executed.\r\n            ":"\r\n            如果采用此分支，则最终控制将通过。\r\n            按照执行最终区域的顺序排序。\r\n            \r\n","\r\n            Represents a dynamically bound new/New expression.\r\n            ":"\r\n            代表动态绑定的新/新表达式。\r\n            \r\n","\r\n            VB root namespace (not an import).\r\n            ":"\r\n            VB根名称空间（不是导入）。\r\n            \r\n","The token to add.":"令牌要添加。\r\n","\r\n            Gets a value indicating whether the symbol is abstract.\r\n            ":"\r\n            获取一个指示符号是否抽象的值。\r\n            \r\n","\r\n            The code page for which this resource is appropriate.\r\n            ":"\r\n            此资源适当的代码页面。\r\n            \r\n","\r\n            Perform all the work associated with actual compilation\r\n            (parsing, binding, compile, emit), resulting in diagnostics\r\n            and analyzer output.\r\n            ":"\r\n            执行与实际汇编相关的所有工作\r\n            （解析，绑定，编译，发射），导致诊断\r\n            和分析仪输出。\r\n            \r\n","\r\n            The Int32 value 1\r\n            ":"\r\n            INT32值1\r\n            \r\n"," type. When the first breakpoint is hit\r\n            the debugger steps thru the code statement by statement until user code is reached, skipping methods marked by ":" 类型。当第一个断点击中\r\n            通过语句通过代码语句进行调试器步骤，直到达到用户代码为止，跳过了标记的方法\r\n","The syntax node to get semantic information for.":"语法节点获取语义信息。\r\n","\r\n            Current usage:\r\n             (1) C# delegate creation expression.\r\n             (2) VB delegate creation expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃委托创建表达式。\r\n             （2）VB代表创建表达式。\r\n            \r\n","\r\n            Builder for storing current, possibly partial, analysis results:\r\n            1. Diagnostics reported by analyzers.\r\n            2. AnalyzerTelemetryInfo.\r\n            ":"\r\n            建造器存储电流，可能是部分分析结果：\r\n            1.分析仪报告的诊断。\r\n            2. Analyzerzertelemetryinfo。\r\n            \r\n","\r\n            The UInt32 value 1\r\n            ":"\r\n            UINT32值1\r\n            \r\n","Optional equality comparer to determine equivalent ":"可选的平等比较以确定等效物\r\n","\r\n            Used for test purposes only to emulate missing members.\r\n            ":"\r\n            用于测试目的仅模拟缺失成员。\r\n            \r\n","\r\n            Symbol for the local catch variable bound to the caught exception.\r\n            ":"\r\n            局部捕获变量的符号绑定到捕获的异常。\r\n            \r\n","\r\n            Gets the zero-based line number.\r\n            ":"\r\n            获取基于零的行号。\r\n            \r\n","\r\n            A possibly empty list of lower bounds for dimension indices. When not explicitly specified, a lower bound defaults to zero.\r\n            The first lower bound in the list corresponds to the first dimension. Dimensions cannot be skipped.\r\n            ":"尺寸指数的低界限列表。如果未明确指定，则下限默认值为零。\r\n            列表中的第一个下限对应于第一个维度。尺寸不能跳过。\r\n            \r\n","\r\n            Copies bytes from the view into the specified byte array.\r\n            ":"\r\n            从视图中复制字节到指定的字节数组。\r\n            \r\n"," if no primary location.\r\n            ":" 如果没有主要位置。\r\n            \r\n","\r\n            Casts an object to the specified host type, returning ":"\r\n            将对象投入到指定的主机类型，返回\r\n","The stream doesn't support seek operations.":"该流不支持寻求操作。\r\n","\r\n            A collection of metadata custom attributes that are associated with this definition.\r\n            ":"与此定义关联的元数据自定义属性的集合。\r\n            \r\n","\r\n            Represents a C# throw or a VB Throw statement.\r\n            ":"\r\n            代表C＃投掷或VB投掷声明。\r\n            \r\n","A formatted string representation of the symbol.":"符号的格式字符串表示。\r\n"," where applicable.\r\n            ":" 适用的地方。\r\n            \r\n","A cancellation token that can be used to cancel the\r\n            process of obtaining the alias information.":"取消令牌，可用于取消\r\n            获取别名信息的过程。\r\n","\r\n            \r\n            Keeps the stream open.\r\n            ":"\r\n            \r\n            保持流打开。\r\n            \r\n"," rather than null.\r\n            ":" 而不是无效。\r\n            \r\n"," in each ":" 每一个\r\n","Alias is invalid for the metadata kind.":"别名无效元数据。\r\n","\r\n            Declarations local to the loop.\r\n            ":"\r\n            循环本地声明。\r\n            \r\n","Scope for analyzer execution.":"分析仪执行范围。\r\n","\r\n            Creates a new list with the specified nodes added at the end.\r\n            ":"\r\n            创建一个新列表，最后在末尾添加了指定的节点。\r\n            \r\n","True when parsing succeeds completely (i.e. every character in the string was consumed), false otherwise.":"当解析完全成功时（即，消耗了字符串中的每个字符），否则是错误的。\r\n","\r\n              Looks up a localized string similar to 'end' must not be less than 'start'.\r\n            ":"\r\n              查找类似于“ end”的本地化字符串不得小于“开始”。\r\n            \r\n","\r\n            Only defined if no errors were encountered.\r\n            True if '/shared' was an argument, false otherwise.\r\n            ":"\r\n            仅当未遇到错误时定义。\r\n            是的，如果“/共享”是一个论点，则否则为错误。\r\n            \r\n","\r\n            Defines kinds of regions that can be present in a ":"\r\n            定义可以存在于\r\n"," property to\r\n            discover information about the users compilation and make decisions on what source to \r\n            provide. \r\n            ":" 财产为\r\n            发现有关用户汇编的信息，并决定哪个来源\r\n            提供。\r\n            \r\n","\r\n            Flush any cached data in this ":"\r\n            冲洗此缓存数据\r\n","The diagnostic's default severity.":"诊断的默认严重性。\r\n","\r\n            Use the same bitness as the currently running executable. \r\n            ":"\r\n            使用与当前运行的可执行文件相同的位。\r\n            \r\n","\r\n            var DictT = host.type(\"System.Collections.Generic.Dictionary\");\r\n            var StringT = host.type(\"System.String\");\r\n            var dict = host.newObj(DictT(StringT, StringT));\r\n            ":"\r\n            var distt = host.type（“ system.collections.generic.dictionary”）;\r\n            var stringt = host.type（“ system.string”）;\r\n            var dict = host.newobj（doctt（stringt，stringt））;\r\n            \r\n"," to create an array of integers.\r\n            It assumes that an instance of ":" 创建一个整数。\r\n            它假设一个实例\r\n","\r\n            The custom diagnostic ID to use for obsolete diagnostics.\r\n            If null, diagnostics are produced using the compiler default diagnostic IDs.\r\n            ":"\r\n            用于过时诊断的自定义诊断ID。\r\n            如果无效，则使用编译器默认诊断ID产生诊断。\r\n            \r\n","\r\n            Return the 1-based index of the type reference, adding\r\n            the reference to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回类型参考的1个基于1的索引，添加\r\n            如果丢失了这一代的索引的引用。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","\r\n            True if the file has metadata.\r\n            ":"\r\n            如果文件具有元数据，则为true。\r\n            \r\n","The node to compare against.":"比较的节点。\r\n","\r\n            Specifies the version of the SARIF log file to produce.\r\n            ":"\r\n            指定要生产的Sarif日志文件的版本。\r\n            \r\n","\r\n            Represents the common, language-agnostic elements of a conversion.\r\n            ":"\r\n            代表转换的常见，语言不足的元素。\r\n            \r\n","The tlog files used to build this dependency table":"用于构建此依赖关系表的TLOG文件\r\n","\r\n            Non-empty tables that are emitted into the metadata table stream.\r\n            ":"\r\n            发射到元数据表流中的非空表。\r\n            \r\n","\r\n            Returns the underlying node if this ":"\r\n            如果此返回基础节点\r\n","\r\n            Generates code that stores an element of a multidimensional array.\r\n            ":"\r\n            生成存储多维数组元素的代码。\r\n            \r\n"," to selectively disable outputs.\r\n            ":" 选择性禁用输出。\r\n            \r\n"," for declaration (such as parameter symbols, member symbols, etc. - ":" 对于声明（例如参数符号，成员符号等，\r\n","\r\n             Implicitly resolved references.\r\n             ":"\r\n             隐式解决参考。\r\n             \r\n","\r\n            Called when the walker visits a node.  This method may be overridden if subclasses want\r\n            to handle the node.  Overrides should call back into this base method if they want the\r\n            children of this node to be visited.\r\n            ":"\r\n            沃克访问节点时打电话。如果子类想要，可能会覆盖此方法\r\n            处理节点。如果他们想要\r\n            这个节点的孩子将被访问。\r\n            \r\n",",\r\n            ignoring the ":"，，，，\r\n            忽略\r\n","\r\n            Detect an encoding by looking for byte order marks.\r\n            ":"\r\n            通过查找字节订单标记来检测编码。\r\n            \r\n","\r\n            Represents a dynamic indexer expression in C#.\r\n            ":"\r\n            代表C＃中的动态索引表达式。\r\n            \r\n","Resource constraints for the instance.":"实例的资源约束。\r\n","\r\n            Checks if the given method overrides Object.ToString.\r\n            ":"\r\n            检查给定方法是否覆盖对象。\r\n            \r\n","\r\n            Attempts to remove a value from the set.\r\n            ":"\r\n            尝试从集合中删除值。\r\n            \r\n","\r\n            Returns true if the location represents a specific location in a source code file.\r\n            ":"\r\n            如果位置表示源代码文件中的特定位置，则返回true。\r\n            \r\n","\r\n            A UInt8 value encoded as 1 byte.\r\n            ":"\r\n            UINT8值编码为1个字节。\r\n            \r\n","\r\n            The source languages to which this generator applies. See ":"该发电机应用的源语言。看\r\n","A new byte array containing a copy of the ":"一个新的字节阵列，其中包含\r\n"," object allows for sharing data across these references.\r\n            ":" 对象允许在这些引用中共享数据。\r\n            \r\n","\r\n            The type to which the variant values of all elements of the safe array must belong. See also SafeArrayElementUserDefinedSubtype.\r\n            (The element type of a safe array is VARIANT. The \"sub type\" specifies the value of all of the tag fields (vt) of the element values. )\r\n            -1 if it should be omitted from the marshal blob.\r\n            ":"\r\n            安全数组所有元素的变体值必须属于的类型。另请参见SafearrayElementUserDefinedsubtype。\r\n            （安全数组的元素类型是变体。“ sub类型”指定了元素值的所有标签字段（VT）的值。）\r\n            -1如果应该从元帅斑点中省略它。\r\n            \r\n","\r\n            The pattern on the right.\r\n            ":"\r\n            右边的图案。\r\n            \r\n","\r\n            Writes a constant value (see ECMA-335 Partition II section 22.9) at the current position.\r\n            ":"写一个恒定值（请参见ECMA-335分区II第22.9节）。\r\n            \r\n","\r\n            Previous EnC generation baseline, or null if this is not EnC delta.\r\n            ":"\r\n            以前的ENC生成基线，如果不是ENC DELTA，则为null。\r\n            \r\n","\r\n            Count of registered semantic model actions.\r\n            ":"\r\n            注册语义模型动作的计数。\r\n            \r\n","\r\n            List of operations to execute at the bottom of the loop. This comes from the third clause of the for statement.\r\n            ":"\r\n            在循环底部执行的操作列表。这来自for语句的第三子句。\r\n            \r\n","\r\n            Represents a C# while or do statement, or a VB While or Do statement.\r\n            ":"\r\n            代表c＃while或do语句，或vb while或do语句。\r\n            \r\n","\r\n            Gets or sets the maximum amount by which the V8 runtime is permitted to grow the stack during script execution.\r\n            ":"\r\n            获取或设置允许V8运行时在脚本执行过程中生长堆栈的最大金额。\r\n            \r\n","\r\n            There are two ways to sign PE files\r\n              1. By directly signing the ":"\r\n            有两种签名PE文件的方法\r\n              1.直接签署\r\n","The metadata of the module before editing.":"编辑之前，模块的元数据。\r\n","\r\n            Recursively calculates the start and end of the given scope.\r\n            Only scopes with locals are actually dumped to the list.\r\n            ":"递归计算给定范围的开始和结尾。\r\n            实际上，只有带有当地人的范围被丢弃到列表中。\r\n            \r\n","\r\n            Represents a type conversion.\r\n            ":"\r\n            表示类型转换。\r\n            \r\n","Process instance":"流程实例\r\n","A promise that represents the task's asynchronous operation.":"代表任务异步操作的承诺。\r\n","\r\n            Adds a system document with the specified category to the configuration.\r\n            ":"\r\n            将带有指定类别的系统文档添加到配置中。\r\n            \r\n","\r\n            The method used to get the value of this property. May be absent (null).\r\n            ":"\r\n            用于获取此属性值的方法。可能不存在（无效）。\r\n            \r\n"," with the contents of this file.\r\n            ":" 带有此文件的内容。\r\n            \r\n"," files by ":" 文件\r\n","Normalized key file path or null if not found.":"归一化的密钥文件路径或未找到的null。\r\n","\r\n            If parsing succeeded, the parsed version. When ":"\r\n            如果解析成功，则解析版本。什么时候\r\n","\r\n            Represents a C# using or VB Using statement.\r\n            ":"\r\n            使用语句代表使用或VB代表C＃。\r\n            \r\n","\r\n            Gets the location in terms of path, line and column for a given span.\r\n            ":"在给定的跨度上获取路径，线和列的位置。\r\n            \r\n","\r\n            Creates a list of syntax nodes.\r\n            ":"创建语法节点列表。\r\n            \r\n","A reference to a unit. Note that a unit can serve as a reference to itself.":"对单元的引用。请注意，一个单元可以作为对自己的参考。\r\n","Invalid output kind for submission. DynamicallyLinkedLibrary expected.":"提交的输出类型无效。预期动态链接。\r\n","\r\n                    This includes all native script objects that have no .NET representation. C#'s\r\n                    ":"\r\n                    这包括所有具有.NET表示的本机脚本对象。 CS\r\n                    \r\n","\r\n            Resolves analyzer references stored in ":"\r\n            解析分析仪参考存储在\r\n","\r\n            Matches the code generated by the native compiler in\r\n            ILGENREC::AdjustBlockedLeaveTargets.\r\n            ":"\r\n            匹配本机编译器生成的代码\r\n            ilgenrec :: awtionblockedleavetargets。\r\n            \r\n","\r\n            Return source declaration symbols whose name matches the provided name.  This may be\r\n            faster than ":"\r\n            返回源声明符号的名称与提供的名称匹配。这可能是\r\n            比...快\r\n","\r\n            Namespace name for top level types, empty string for nested types.\r\n            ":"顶级类型的名称名称，嵌套类型的空字符串。\r\n            \r\n","Event":"事件\r\n","The host type to which to cast ":"施放的主机类型\r\n"," for the given analyzer.\r\n            If an analyzer hasn't configured generated code analysis, returns ":" 对于给定的分析仪。\r\n            如果分析仪尚未配置生成的代码分析，则返回\r\n","\r\n            Current usage:\r\n             (1) C# await expression.\r\n             (2) VB await expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃等待表达。\r\n             （2）VB等待表达。\r\n            \r\n","\r\n            Texts to embed in the PDB.\r\n            Only supported when emitting Portable PDBs.\r\n            ":"\r\n            嵌入PDB的文本。\r\n            仅在发出便携式PDB时才支持。\r\n            \r\n"," method used to obtain the outcome of a task once it is complete\r\n            (see C# Specification, §7.7.7.1 Awaitable expressions).\r\n            ":" 完成任务完成后用于获得结果的方法\r\n            （请参阅C＃规范，第7.7.7.1节等待表达式）。\r\n            \r\n","\r\n            Gets a list of all the diagnostics associated with this token and any related trivia.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取与该令牌和任何相关琐事相关的所有诊断列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","\r\n            An awaiter in async method. \r\n            Never actually created as a local variable, immediately lifted to a state machine field.\r\n            Not serialized to ":"\r\n            异步方法的等待者。\r\n            从来没有真正创建为局部变量，可以立即提起到状态机字段。\r\n            未序列化\r\n","The element type of the array to create.":"要创建数组的元素类型。\r\n"," with specified aliases.\r\n            ":" 具有指定的别名。\r\n            \r\n","\r\n            The first and last nodes must be fully inside the same method body.\r\n            ":"\r\n            第一个和最后一个节点必须完全在同一方法主体内部。\r\n            \r\n"," enum.\r\n            ":" 枚举。\r\n            \r\n","\r\n            Empty sequence if the tree does not contain a line mapping directive.\r\n            Otherwise a non-empty sequence of ":"\r\n            空序列如果树不包含线映射指令。\r\n            否则是非空的序列\r\n","\r\n            Can be passed as a bit field when creating a ":"\r\n            创建一个时可以作为位字段传递\r\n","\r\n            Returns interface properties explicitly implemented by this event.\r\n            ":"\r\n            返回该事件明确实现的接口属性。\r\n            \r\n","\r\n            Returns path with the extension changed to ":"\r\n            返回路径，扩展名更改为\r\n"," should descend into.\r\n            ":" 应该下降。\r\n            \r\n","\r\n            Array dimensions supplied to an array declaration in error cases, ignored by the compiler. This is only used for the C# case of\r\n            RankSpecifierSyntax nodes on an ArrayTypeSyntax.\r\n            ":"\r\n            编译器忽略的错误情况中提供给数组声明的数组尺寸。这仅用于\r\n            rankspecifiersyntax节点在arraytypesyntax上。\r\n            \r\n","The node or token to insert.":"节点或令牌要插入。\r\n","\r\n            Convert a symbol to an array of string parts, each of which has a kind. May be tailored\r\n            to a specific location in the source code. Useful for colorizing the display string.\r\n            ":"\r\n            将符号转换为一个串件零件，每个符号都有一种。可能是量身定制的\r\n            到源代码中的特定位置。可用于上色字符串。\r\n            \r\n","\r\n            A reference to the containing type of the referenced type member.\r\n            ":"\r\n            引用引用类型成员的包含类型。\r\n            \r\n","\r\n            Calculates information about types and namespaces immediately contained within a namespace.\r\n            ":"\r\n            计算有关名称空间中立即包含的类型和名称空间的信息。\r\n            \r\n","\r\n            Converts the floating point value 0.mantissa * 2^exponent into the  \r\n            correct form for the FloatingPointType and stores the bits of the resulting value  \r\n            into the result object.  \r\n            The caller must ensure that the mantissa and exponent are correctly computed  \r\n            such that either [1] the most significant bit of the mantissa is in the  \r\n            correct position for the FloatingType, or [2] the exponent has been correctly  \r\n            adjusted to account for the shift of the mantissa that will be required.  \r\n             \r\n            This function correctly handles range errors and stores a zero or infinity in  \r\n            the result object on underflow and overflow errors, respectively.  This  \r\n            function correctly forms denormal numbers when required.  \r\n             \r\n            If the provided mantissa has more bits of precision than can be stored in the  \r\n            result object, the mantissa is rounded to the available precision.  Thus, if  \r\n            possible, the caller should provide a mantissa with at least one more bit of  \r\n            precision than is required, to ensure that the mantissa is correctly rounded.  \r\n            (The caller should not round the mantissa before calling this function.)  \r\n            ":"\r\n            将浮点值转换为0.Mantissa * 2^指数\r\n            浮动点类型的正确表格并存储所得值的位\r\n            进入结果对象。\r\n            呼叫者必须确保正确计算Mantissa和指数\r\n            这样[1]最重要的Mantissa是\r\n            浮动类型的正确位置，或[2]指数正确\r\n            调整以考虑将需要的曼蒂萨的移位。\r\n             \r\n            此功能正确处理范围错误，并在\r\n            结果对象分别是下流和溢出错误。这个\r\n            当需要时，函数正确地形成了非正式数字。\r\n             \r\n            如果所提供的曼蒂萨的精度比存储在\r\n            结果对象，将Mantissa四舍五入为可用的精度。因此，如果\r\n            可能的是，呼叫者应提供至少另外一位的Mantissa\r\n            精确度比要求的，以确保正确圆形。\r\n            （呼叫者在调用此功能之前不应围绕曼蒂萨（Mantissa）。\r\n            \r\n","Action to be executed for an ":"要执行的行动\r\n"," are caught and converted to an emit diagnostic. Other exceptions are passed through.\r\n            The function shall return a nil ":" 被捕获并转换为发射诊断。其他例外情况通过。\r\n            该功能应返回零\r\n","selectedStream":"SelectedStream\r\n"," is passed as the returnRefKind.\r\n             * parameterTypes and parameterRefKinds do not have the same length.\r\n            ":" 作为返回奖励。\r\n             *参数型和参数refkinds的长度不相同。\r\n            \r\n","\r\n            Return the 1-based index of the member reference, adding\r\n            the reference to the index for this generation if missing.\r\n            The index is into the full metadata. However, deltas\r\n            are not required to return rows from previous generations.\r\n            ":"\r\n            返回会员参考的1个基于1的索引\r\n            如果丢失了这一代的索引的引用。\r\n            该索引进入了完整的元数据。但是，三角洲\r\n            不需要从前几代返回行。\r\n            \r\n","Symbol for the type or null if type cannot be found or is ambiguous. ":"如果找不到类型或模棱两可，则类型或空的符号。\r\n"," to use for assembly name and relative path resolution.":" 用于组装名称和相对路径分辨率。\r\n","Exception for invalid ruleset files.":"无效的规则集文件例外。\r\n","\r\n            Describes a command line metadata reference (assembly or netmodule) specification.\r\n            ":"\r\n            描述命令行元数据参考（汇编或NetModule）规范。\r\n            \r\n",". The exception is\r\n             never caught.":"。例外是\r\n             从未抓住。\r\n","\r\n            out of the AnalyzerManager and into analyzer drivers.\r\n            ":"\r\n            从分析仪和分析仪驱动器出发。\r\n            \r\n"," without synchronization.\r\n            ":" 没有同步。\r\n            \r\n","Host Object":"主机对象\r\n","\r\n            Represents a C# fixed staement.\r\n            ":"\r\n            代表C＃固定的口号。\r\n            \r\n","A JSON representation of the profile in V8 Inspector format.":"V8 Inspector格式中配置文件的JSON表示。\r\n","The result of the cast if successful, ":"演员的结果如果成功，\r\n","\r\n            Creates a new compilation without the specified syntax trees. Preserves metadata info for use with trees\r\n            added later.\r\n            ":"\r\n            在没有指定的语法树的情况下创建新的汇编。保存元数据信息可与树一起使用\r\n            稍后添加。\r\n            \r\n","\r\n            The timestamp specifies an offset relative to an unspecified moment in the past. All\r\n            timestamps within the profile are relative to the same moment.\r\n            ":"\r\n            时间戳指定相对于过去未指定时刻的偏移。全部\r\n            轮廓内的时间戳相对于同一时刻。\r\n            \r\n","s to drive its analysis.\r\n            ":"s推动其分析。\r\n            \r\n","\r\n            The top-level nullabilities that were directly specified as constraints on the\r\n            constraint types.\r\n            ":"\r\n            直接指定为限制的顶级无效\r\n            约束类型。\r\n            \r\n","Subsystem version":"子系统版本\r\n","\r\n            The size of the virtual memory initially committed for the initial process heap.\r\n            Must fit into 32 bits if the target platform is 32 bit.\r\n            ":"\r\n            最初用于初始过程堆的虚拟内存的大小。\r\n            如果目标平台为32位，则必须适合32位。\r\n            \r\n"," parameters if the script\r\n            engine does not support that type natively.\r\n            ":" 参数如果脚本\r\n            发动机不支持这种类型。\r\n            \r\n","\r\n            Generates code that creates an instance of multidimensional array\r\n            ":"\r\n            生成创建多维数组实例的代码\r\n            \r\n","Assembly image.":"组装图像。\r\n","\r\n            The custom help URL format string for obsolete diagnostics.\r\n            Expected to contain zero or one format items.\r\n            ":"\r\n            定制帮助URL格式字符串，用于过时的诊断。\r\n            预计包含零或一种格式项目。\r\n            \r\n","\r\n              Looks up a localized string similar to <in-memory assembly>.\r\n            ":"\r\n              查找类似于<内存组件>的局部字符串。\r\n            \r\n","\r\n            An extension method with the \"this\" parameter removed.\r\n            ":"\r\n            删除了带有“此”参数的扩展方法。\r\n            \r\n","\r\n            True if the given symbol declaration is fully analyzed.\r\n            ":"\r\n            如果给定的符号声明进行了充分的分析，则为正确。\r\n            \r\n","; if the ":";如果是\r\n","TypeDef token of the type from which the search should begin.":"搜索开始的类型的Typedef令牌。\r\n","\r\n            For maximum compatibility with hosts that predate an inadvertent breaking change in\r\n            ClearScript 5.4.1, values greater than 1048576\r\n            (1 ":"\r\n            为了最大程度地兼容与主机的最大兼容性\r\n            clearscript 5.4.1，值大于1048576\r\n            （1\r\n","Action to be executed for each non-code document.":"为每个非代码文档执行的操作。\r\n","JIT optimizations are enabled via assembly level attribute (":"JIT优化是通过汇编级别属性启用的（\r\n",")\r\n            are the same method (Main). A non-executable program has no entry point. Runtimes that implement a custom loader may specify debug entry-point\r\n            to force the debugger to skip over complex custom loader logic executing at the beginning of the .exe and thus improve debugging experience.\r\n            \r\n            Unlike ordinary entry-point which is limited to a non-generic static method of specific signature, there are no restrictions on the ":"）\r\n            是相同的方法（主要）。一个非执行程序没有切入点。实现自定义加载程序的Runtimes可以指定调试入口点\r\n            迫使调试器在.EXE开头跳过复杂的自定义加载程序逻辑执行，从而改善了调试体验。\r\n            \r\n            与普通的入口点不同，该入口处仅限于非类别的特定签名静态方法，没有任何限制\r\n","\r\n            A visitor base class that traverses the object model in depth first, left to right order.\r\n            ":"\r\n            访客群类，首先深入遍历对象模型，从左到右顺序。\r\n            \r\n","\r\n            True if an error should be thrown for the ":"\r\n            如果要为此丢下错误，则为\r\n","The namespace this rule belongs to":"名称空间此规则属于\r\n","\r\n            Creates a new list with the element at the specified index removed.\r\n            ":"\r\n            在已删除指定索引处的元素创建一个新列表。\r\n            \r\n","\r\n            Arguments of the object creation, excluding the instance argument. Arguments are in evaluation order.\r\n            ":"\r\n            对象创建的参数，不包括实例参数。争论处于评估顺序。\r\n            \r\n","\r\n            Determines if this trivia is equivalent to the specified trivia.\r\n            ":"\r\n            确定此琐事是否等于指定的琐事。\r\n            \r\n","\r\n            If the line mapping directive maps the span into an explicitly specified file the ":"如果行映射指令将跨度映射到明确指定的文件中\r\n","\r\n            byte marker bits for uint encoded in 4 bytes.\r\n            ":"\r\n            UINT的字节标记位编码为4个字节。\r\n            \r\n"," overload\r\n            that updates copy value for each individual entity.\r\n            ":" 超载\r\n            这样可以更新每个实体的复制价值。\r\n            \r\n","s for each section. The entries in the outer array correspond to entries in ":"每个部分。外部阵列中的条目对应于\r\n","\r\n            Set containing following named types, if not null:\r\n            1. ":"\r\n            设置包含以下命名类型，如果不是null：\r\n            1。\r\n","Options that determine how the node's trivia is treated.":"确定节点的琐事如何处理的选项。\r\n","\r\n             Current Usage:\r\n               (1) C# variable declarator\r\n               (2) C# catch variable declaration\r\n               (3) VB single variable declaration\r\n               (4) VB catch variable declaration\r\n             ":"\r\n             当前用法：\r\n               （1）C＃变量声明器\r\n               （2）C＃捕获变量声明\r\n               （3）VB单变量声明\r\n               （4）VB捕获变量声明\r\n             \r\n","\r\n            Not appropriate on types that require localization, since localization should\r\n            happen after serialization.\r\n            ":"\r\n            在需要本地化的类型上不合适，因为本地化应\r\n            在序列化后发生。\r\n            \r\n","\r\n            Rank equal 0 is used to denote an SzArray, rank equal 1 denotes multi-dimensional array of rank 1.\r\n            ":"\r\n            等级等于0来表示szarray，等级等于1表示等级1的多维阵列。\r\n            \r\n","\r\n            Compiles your assembly to run on any platform. Your application runs in 32-bit mode on systems that support both 64-bit and 32-bit applications.\r\n            ":"\r\n            编译您的组件以在任何平台上运行。您的应用程序在支持64位和32位应用程序的系统上以32位模式运行。\r\n            \r\n"," for decrement operator.":" 用于减少操作员。\r\n","An exception from metadata reader.":"元数据读者的例外。\r\n","{0}.GetMetadata() must return an instance of {1}.":"{0} .getMetadata（）必须返回{1}的实例。\r\n","\r\n            Initializes a new host type collection with selected types from one or more assemblies.\r\n            The assemblies are specified by name.\r\n            ":"\r\n            初始化一个或多个组件中的选择类型的新主机类型集合。\r\n            组件按名称指定。\r\n            \r\n","\r\n            Label instruction corresponding to the end of handler block\r\n            ":"\r\n            标签指令对应于处理程序块的尽头\r\n            \r\n","\r\n            Represents the VB ":"\r\n            代表VB\r\n","\r\n            Returns full metadata handle of the type spec, adding\r\n            the spec to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回类型规范的完整元数据句柄，添加\r\n            如果丢失了这一代的索引规格。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            The type definitions to be emitted, in row order. These\r\n            are just the type definitions from the current generation.\r\n            ":"\r\n            按排顺序排列的类型定义。这些\r\n            只是当前一代的类型定义。\r\n            \r\n","\r\n            This function is provided for script languages that do not support external\r\n            instantiation.\r\n            ":"\r\n            此功能是为不支持外部支持的脚本语言提供的\r\n            实例化。\r\n            \r\n","\r\n            A structure for enumerating a ":"\r\n            列举的结构\r\n","\r\n            Returns full metadata handle the stanadlone signature, adding\r\n            the signature to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回完整的元数据处理stanadlone签名，添加\r\n            如果丢失了这一代的索引的签名。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            to convert the result value. Otherwise, it executes the command as a statement and does\r\n            not return a value.\r\n            ":"\r\n            转换结果值。否则，它将命令执行为语句，并执行\r\n            不返回值。\r\n            \r\n","A value that indicates the relative order of the objects being compared. The return value has these meanings:\r\n            Less than zero:     first instance precedes second in the sort order.\r\n            Zero:               first instance occurs in the same position in the sort order as second.\r\n            Greater than zero:  first instance follows second in the sort order.\r\n            ":"一个表示要比较对象的相对顺序的值。回报值具有这些含义：\r\n            小于零：第一个实例在排序顺序排名第二。\r\n            零：急诊室以与秒为单位的排序顺序出现在相同的位置。\r\n            大于零：第一个实例在排序顺序中排名第二。\r\n            \r\n","List where to store information about resolved modules to.":"列出在哪里存储有关已解决模块的信息。\r\n","Member Type":"会员类型\r\n",". This has yield return semantics.":"。这具有收益率回报语义。\r\n","\r\n            Parses choice defined by the following grammar:\r\n            ":"\r\n            通过以下语法定义的解析选择：\r\n            \r\n","\r\n            Gets the first declaration symbol that matches the declaration id string, order undefined.\r\n            ":"获取与声明ID字符串匹配的第一个声明符号，订单未定义。\r\n            \r\n","\r\n            Provides the base implementation for all script engines.\r\n            ":"\r\n            为所有脚本引擎提供基本实现。\r\n            \r\n","\r\n            The method that declares the type parameter, or null.\r\n            ":"\r\n            声明类型参数或null的方法。\r\n            \r\n","\r\n            Returns the type arguments that have been substituted for the type parameters. \r\n            If nothing has been substituted for a given type parameter,\r\n            then the type parameter itself is considered the type argument.\r\n            ":"\r\n            返回已替换为类型参数的类型参数。\r\n            如果没有什么可以代替给定类型参数，\r\n            然后，类型参数本身被视为类型参数。\r\n            \r\n"," Parameter - type is unsupported ":" 参数 - 类型不支持\r\n","Native .NET type":"本机.NET类型\r\n","\r\n            Copies elements from the specified array into the typed array.\r\n            ":"\r\n            从指定数组中的副本元素中的元素到键入数组中。\r\n            \r\n","\r\n            Exposes a host object to script code with the specified options.\r\n            ":"\r\n            用指定的选项将主机对象公开脚本代码。\r\n            \r\n",", but because\r\n            anonymous types are particularly useful for scripting, ClearScript by default continues\r\n            to expose their properties to external contexts. To override this behavior and enable\r\n            normal access restrictions for anonymous types, set this property to ":"， 但是因为\r\n            默认类型对于脚本而言特别有用，默认情况下继续\r\n            将其属性暴露于外部上下文。覆盖这种行为并启用\r\n            匿名类型的正常访问限制，将此属性设置为\r\n",") the actual current local time will be used.\r\n            ":"）将使用实际的当地时间。\r\n            \r\n","The index of the first digit to convert":"第一个转换数字的索引\r\n"," is not automatically generated.\r\n            ":" 不是自动生成的。\r\n            \r\n",",\r\n            including all its ruleset includes.\r\n            ":"，，，，\r\n            包括其所有规则集包括。\r\n            \r\n"," is created per-generation, meaning the instance\r\n            is free to store state without worrying about lifetime or reuse.\r\n            \r\n            An ":" 是创建人均的，意思是实例\r\n            可以自由存储状态，而不必担心终身或重用。\r\n            \r\n            一个\r\n","\r\n            Represents a try operation for exception handling code with a body, catch clauses and a finally handler.\r\n            ":"\r\n            代表使用身体，捕获子句和最后处理程序的异常处理代码的尝试操作。\r\n            \r\n","\r\n            State kind of per-analyzer ":"\r\n            状态\r\n","\r\n            Determines how generics (on types and methods) should be described (i.e. the level of detail).\r\n            ":"\r\n            确定应如何描述仿制药（即细节级别）。\r\n            \r\n","\r\n            The Int32 value 0\r\n            ":"\r\n            INT32值0\r\n            \r\n","\r\n            Initializes a new V8 script engine instance.\r\n            ":"\r\n            初始化一个新的V8脚本引擎实例。\r\n            \r\n",".\r\n            NOTE: For localizable ":"。\r\n            注意：对于可本地化\r\n","\r\n            Determine if the specific method is a Task.FromResult method that wraps a result in a task.\r\n            ":"\r\n            确定特定方法是否是任务。将结果包裹在任务中的方法。\r\n            \r\n","\r\n            The definition of a type parameter of a generic method.\r\n            ":"\r\n            通用方法的类型参数的定义。\r\n            \r\n","\r\n            This class seeks to perform the lowercase Unicode case mapping.\r\n            ":"\r\n            该课程旨在执行小写的Unicode案例映射。\r\n            \r\n","\r\n            Returns true for void returning methods with two parameters, where\r\n            the first parameter is of ":"\r\n            对于带有两个参数的void返回方法的返回，其中\r\n            第一个参数是\r\n","\r\n            Flag to indicate if the ":"\r\n            标志以指示是否\r\n","\r\n            Enclosing region.\r\n            ":"\r\n            封闭区域。\r\n            \r\n","\r\n            Normalizes specified source path with respect to base file path.\r\n            ":"\r\n            规范指定的源路径相对于基本文件路径。\r\n            \r\n","\r\n                    To invoke a constructor from script code, call\r\n                    ":"\r\n                    要调用脚本代码的构造函数，请致电\r\n                    \r\n","\r\n            Per-compilation DiagnosticAnalyzer for compiler's syntax/semantic/compilation diagnostics.\r\n            ":"用于编译器语法/语义/编译诊断的每编译诊断仪。\r\n            \r\n"," is at least as visible as ":" 至少和\r\n"," if the method that corresponds to the specified handle\r\n            has no local variables.\r\n            ":" 如果与指定的句柄相对应的方法\r\n            没有本地变量。\r\n            \r\n"," if the lambda is closed over \"this\" pointer only.\r\n            ":" 如果Lambda仅通过“此”指针关闭。\r\n            \r\n","\r\n            The preferred memory address at which the module is to be loaded at runtime.\r\n            ":"\r\n            在运行时加载模块的首选内存地址。\r\n            \r\n","\r\n            Returns true if this diagnostic is enabled by default by the author of the diagnostic.\r\n            ":"\r\n            如果诊断作者默认启用了此诊断，则返回为true。\r\n            \r\n","The executable type for the tool being tracked":"跟踪工具的可执行类型\r\n","\r\n            Returns a string representation of this object.\r\n            ":"\r\n            返回此对象的字符串表示。\r\n            \r\n","\r\n            The compile time value of the expression. Null to represent a null object reference or a null array.\r\n            ":"\r\n            表达式的编译时间值。 null表示空对象引用或空数阵列。\r\n            \r\n","\r\n            Compute the hashcode of a string using FNV-1a\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            使用FNV-1A计算字符串的哈希码\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n",".\r\n            Otherwise, returns null\r\n            ":"。\r\n            否则，返回null\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# 'foreach' loop statement\r\n             (2) VB 'For Each' loop statement\r\n            ":"\r\n            当前用法：\r\n             （1）c＃'foreach'循环语句\r\n             （2）vb'对于每个'循环语句\r\n            \r\n","The parameter has no default value.":"该参数没有默认值。\r\n"," (VB) \r\n            directives\r\n            ":" （VB）\r\n            指令\r\n            \r\n","\r\n            Represents a C# fixed statement.\r\n            ":"\r\n            表示C＃固定语句。\r\n            \r\n","\r\n            When used for a synthesized method the ordinal and generation numbers are included its name.\r\n            For user defined methods the ordinal is included in Custom Debug Information record attached to the method.\r\n            ":"\r\n            当用于合成方法时，将其名称包括在内。\r\n            对于用户定义的方法，该序数包含在该方法附加的自定义调试信息记录中。\r\n            \r\n","\r\n            Check that if any names are provided, and their number matches the expected cardinality.\r\n            Returns a normalized version of the element names (empty array if all the names are null).\r\n            ":"\r\n            检查是否提供了任何名称，其数字与预期的基数匹配。\r\n            返回元素名称的归一化版本（如果所有名称为null，则为空数组）。\r\n            \r\n","\r\n            The values in this map convert to ":"\r\n            此地图中的值转换为\r\n",".\r\n            \r\n            A location path is considered mapped if it is preceded by a line mapping directive that\r\n            either specifies an explicit file path or is ":"。\r\n            \r\n            如果位置路径在此之前，请考虑将其映射，如果该路径在线映射指令之前\r\n            要么指定明确的文件路径或\r\n","\r\n            The name assigned to the Equality operator.\r\n            ":"\r\n            分配给平等运算符的名称。\r\n            \r\n"," is dynamic, doesn't have a location, or the platform doesn't support reading from the location.":" 是动态的，没有位置，或者平台不支持从该位置阅读。\r\n"," is non-null, it attempts to use ":" 是非无效的，它试图使用\r\n","\r\n            The path for the newest file we have seen\r\n            ":"\r\n            我们看到的最新文件的路径\r\n            \r\n","\r\n            Determines whether this node is a descendant of a structured trivia.\r\n            ":"\r\n            确定该节点是否是结构化琐事的后代。\r\n            \r\n"," and relevant APIs ":" 和相关的API\r\n","\r\n            Current usage:\r\n             (1) C# new expression.\r\n             (2) VB New expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃新表达式。\r\n             （2）VB新表达式。\r\n            \r\n","\r\n            In some script languages the distinction between statements and expressions is\r\n            significant but ambiguous for certain syntactic elements. This method always\r\n            interprets script code loaded from the specified document as an expression.\r\n            ":"\r\n            在某些脚本语言中，语句和表达式之间的区别是\r\n            对于某些句法元素而言，重要但模棱两可。总是这个方法\r\n            解释从指定文档加载的脚本代码作为表达式。\r\n            \r\n","\r\n            Returns true if the parameter specifies a default value to be passed\r\n            when no value is provided as an argument to a call. The default value\r\n            can be obtained with the ":"\r\n            如果参数指定要传递的默认值，则返回true\r\n            当不提供值作为呼叫的参数时。默认值\r\n            可以用\r\n","\r\n            Determines whether the underlying node or token represents a language construct that was actually parsed\r\n            from source code. Missing nodes and tokens are typically generated by the parser in error scenarios to\r\n            represent constructs that should have been present in the source code for the source code to compile\r\n            successfully but were actually missing.\r\n            ":"\r\n            确定基础节点或令牌是否代表实际解析的语言构造\r\n            从源代码。在错误方案中，解析器通常会生成缺少的节点和令牌\r\n            表示源代码的源代码中应该存在的构造，以编译源代码\r\n            成功，但实际上是缺失的。\r\n            \r\n","Diagnostics produced during merge will be added to this bag":"合并期间产生的诊断将添加到此包中\r\n"," that specifies the host type to import.":" 这指定要导入的主机类型。\r\n","compilation start,":"汇编开始，\r\n","This metric is based off of the Halstead metric.":"该指标基于Halstead指标。\r\n","\r\n            True if the type has special name.\r\n            ":"\r\n            如果类型具有特殊名称，则为thu。\r\n            \r\n","\r\n            Writes UTF16 (little-endian) encoded string at the current position.\r\n            ":"\r\n            将UTF16（小型）编码字符串写入当前位置。\r\n            \r\n","\r\n            this.QualifiedNameArity = containingSymbol.QualifiedNameArity + \".\" + this.Name + \"`\" + this.Arity\r\n            ":"\r\n            this.qualifififififified = continingsymbol.qualififififififififified negrifififififified and。 + this.name +“`” + this.arity\r\n            \r\n","\r\n            Unique ordinal for each basic block in a ":"\r\n            每个基本块的独特序数\r\n","\r\n            Creates a Windows PDB writer.\r\n            ":"\r\n            创建Windows PDB作者。\r\n            \r\n","\r\n            Regions exited if this branch is taken.\r\n            Ordered from the innermost region to the outermost region.\r\n            ":"\r\n            如果采用该分支，则退出区域。\r\n            从最内向的地区订购到最外面的区域。\r\n            \r\n"," for the specified syntax tree.\r\n            ":" 对于指定的语法树。\r\n            \r\n","\r\n            The string representation of the tokens in this list, not including \r\n            the first token's leading trivia and the last token's trailing trivia.\r\n            ":"\r\n            该列表中令牌的字符串表示形式，不包括\r\n            第一个代币的主要琐事和最后一个令牌的拖尾琐事。\r\n            \r\n","\r\n              Looks up a localized string similar to Win32 resources, assumed to be in COFF object format, have one or more invalid symbol values..\r\n            ":"\r\n              查找类似于Win32资源的本地化字符串，假定为Coff对象格式，具有一个或多个无效的符号值。\r\n            \r\n","\r\n            Track and report missing dispose violations only on non-exception program paths.\r\n            Do not flag use of non-recommended dispose patterns that may cause\r\n            potential dispose leaks.\r\n            ":"\r\n            跟踪和报告仅在非检查程序路径上缺少处置违规行为。\r\n            请勿标记使用可能导致的非推荐的处置模式\r\n            潜在处理泄漏。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified options.\r\n            ":"用指定选项初始化新的V8运行时实例。\r\n            \r\n","\r\n            If the given slot is unoccupied, then try to replace it with a new value.\r\n            ":"\r\n            如果给定的插槽没有占用，请尝试用新值替换它。\r\n            \r\n","The text after the change.":"更改后的文字。\r\n","\r\n            Return true and full metadata handle of the type reference\r\n            if the reference is available in the current generation.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回类型参考的真实和完整的元数据句柄\r\n            如果该引用在当前一代中可用。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","Optional cancellation token.":"可选取消令牌。\r\n","Aliases that can be used to refer to the assembly from source code (see \"extern alias\" directive in C#).":"可以用来从源代码引用组件的别名（请参阅C＃中的“ Extern别名”指令）。\r\n","\r\n            Contains the partial analysis state per-analyzer. It tracks:\r\n            1. Global set of pending compilation events. This is used to populate the event queue for analyzer execution.\r\n            2. Per-analyzer set of pending compilation events, symbols, declarations, etc. Each of these pending entities has a ":"\r\n            包含部分分析状态通过分析仪。它跟踪：\r\n            1.全球待处理的汇编事件集。这用于填充事件队列以进行分析仪执行。\r\n            2.每个分析仪待定的汇编事件，符号，声明等。这些待处理的实体都有一个\r\n","\r\n            Creates a new compilation equivalent to this one with different symbol instances.\r\n            ":"\r\n            创建一个与该符号实例不同的新汇编。\r\n            \r\n","\r\n            Returns the full string representation of the nodes and tokens in this list including the first node or token's leading trivia \r\n            and the last node or token's trailing trivia.\r\n            ":"\r\n            返回此列表中节点和令牌的完整字符串表示形式，包括第一个节点或令牌的领先琐事\r\n            还有最后一个节点或令牌的拖延琐事。\r\n            \r\n","\r\n            to convert the return value.\r\n            ":"\r\n            转换返回值。\r\n            \r\n","Additional languages to which the analyzer applies. See ":"分析仪适用的其他语言。看\r\n","\r\n            Provides extensions to ":"\r\n            提供扩展\r\n","\r\n            Represents a assignment with a deconstruction.\r\n            ":"\r\n            代表具有解构的任务。\r\n            \r\n","\r\n            Returns whether the nullable warning state was inherited from the project default for this file type.\r\n            ":"\r\n            返回是否从该文件类型的项目默认值继承了无效的警告状态。\r\n            \r\n"," to use when comparing symbols":" 比较符号时使用\r\n","\r\n            Creates a compiled script with an associated document name, consuming previously generated cache data.\r\n            ":"\r\n            创建一个带有关联文档名称的编译脚本，消耗先前生成的高速缓存数据。\r\n            \r\n","\r\n            An integer representing the language specific kind of this node.\r\n            ":"\r\n            代表该节点的语言特定类型的整数。\r\n            \r\n","\r\n            Returns the last child in the list.\r\n            ":"\r\n            返回列表中的最后一个孩子。\r\n            \r\n","True if the symbols are equivalent.":"如果符号等效，则为正确。\r\n","\r\n            CustomAttributeBag is completely initialized and immutable.\r\n            ":"\r\n            CustomAttributeBag是完全初始化和不变的。\r\n            \r\n","/warn:N":"/warn：n\r\n","\r\n            The list of child nodes and tokens of this node, where each element is a SyntaxNodeOrToken instance.\r\n            ":"\r\n            该节点的子节点和令牌的列表，其中每个元素都是语法诺视式实例。\r\n            \r\n","\r\n             Resolves given metadata references to assemblies and modules.\r\n             ":"\r\n             解决给定的元数据引用对组件和模块。\r\n             \r\n","\r\n            Current Usage:\r\n             (1) C# range expressions\r\n            ":"\r\n            当前用法：\r\n             （1）C＃范围表达式\r\n            \r\n","\r\n            A list of import strings.  There should always be at least one entry, for the global namespace.\r\n            ":"\r\n            导入字符串列表。对于全局名称空间，总是至少有一个条目。\r\n            \r\n","\r\n              Looks up a localized string similar to Must include private members unless emitting a ref assembly..\r\n            ":"\r\n              查找类似于私人会员的本地化字符串，除非散布参考组件。\r\n            \r\n","\r\n            The convention for calling an instance method with an implicit this parameter (the method does not have an explicit parameter definition for this).\r\n            ":"\r\n            使用隐式此参数调用实例方法的约定（该方法对此没有明确的参数定义）。\r\n            \r\n","\r\n            parameter set to ":"\r\n            参数设置为\r\n","\r\n            Gets the type of the elements stored in the array.\r\n            ":"\r\n            获取存储在数组中的元素的类型。\r\n            \r\n"," specifies otherwise the module name\r\n            written to metadata is ":" 指定否则模块名称\r\n            写信给元数据是\r\n","\r\n                 -or-\r\n                ":"\r\n                 -或者-\r\n                \r\n","Optional generic type arguments.":"可选的通用类型参数。\r\n","\r\n            Returns true if this is a case sensitive compilation, false otherwise.  Case sensitivity\r\n            affects compilation features such as name lookup as well as choosing what names to emit\r\n            when there are multiple different choices (for example between a virtual method and an\r\n            override).\r\n            ":"\r\n            如果这是案例敏感的汇编，则返回true，否则为false。案例灵敏度\r\n            影响汇编功能，例如名称查找以及选择要发出的名称\r\n            当有多个不同的选择时（例如，虚拟方法和\r\n            覆盖）。\r\n            \r\n","\r\n                    This is returned when script code forwards the result of a host method that returns no value.\r\n                    ":"\r\n                    当脚本代码转发返回没有值的主机方法的结果时，将返回。\r\n                    \r\n","Int32Array":"INT32Array\r\n"," that has the contents of this text including and after the start position.\r\n            ":" 它具有本文的内容，包括开始位置和之后。\r\n            \r\n","\r\n            Key that indicates the precedence of this config when ":"\r\n            指示此配置优先级时的键\r\n","\r\n            Defines the max length for lambda/local function method call chain (call stack size) for interprocedural analysis.\r\n            This is done for performance reasons for analyzing methods with extremely large call trees.\r\n            https://github.com/dotnet/roslyn-analyzers/issues/1809 tracks improving this heuristic.\r\n            ":"\r\n            定义lambda/局部功能方法的最大长度调用链（调用堆栈大小）进行概要分析。\r\n            这是出于表现原因而进行的，以分析非常大的呼叫树的方法。\r\n            https://github.com/dotnet/roslyn-analyzers/issues/1809跟踪这种启发式。\r\n            \r\n"," and contains the given position.\r\n            ":" 并包含给定的位置。\r\n            \r\n","\r\n            True if this is a reference to an ":"\r\n            如果这是对\r\n","List>int>":"列表> int>\r\n","\r\n            If any of the following exceptions: ":"\r\n            如果以下任何例外：\r\n"," is true and\r\n             3. ":" 是真的\r\n             3。\r\n"," instances are identical,\r\n            i.e. they have the same attribute type, attribute constructor and have identical arguments.\r\n            ":" 实例是相同的，\r\n            即它们具有相同的属性类型，属性构造函数，并且具有相同的参数。\r\n            \r\n"," value of the corresponding ":"相应的值\r\n","\r\n            This is a bridge for APIs that are only available on Desktop \r\n            and NOT on CoreCLR. The compiler currently targets .NET 4.5 and CoreCLR\r\n            so this shim is necessary for switching on the dependent behavior.\r\n            ":"\r\n            这是仅在桌面上可用的API的桥梁\r\n            而不是在coreclr上。编译器当前针对.NET 4.5和CORECLR\r\n            因此，这种垫片对于打开依赖行为是必要的。\r\n            \r\n","\r\n            Determines how extension methods are displayed.\r\n            ":"\r\n            确定如何显示扩展方法。\r\n            \r\n","\r\n            Case value.\r\n            ":"\r\n            案例值。\r\n            \r\n"," keywords before variant type parameters.\r\n            For example, \"Goo<out T>\" in C# or (Goo Of Out T\" in Visual Basic.\r\n            ":" 变体类型参数之前的关键字。\r\n            例如，在C＃或（Visual Basic中的goo of t t'中，goo <out t>”。\r\n            \r\n"," with information about an unexpected value.\r\n            ":" 有关意外价值的信息。\r\n            \r\n"," or an class that implements it,\r\n            because ":" 或实现它的课程\r\n            因为\r\n","\r\n            Represents a document loader.\r\n            ":"\r\n            代表文档加载程序。\r\n            \r\n","\r\n            A kind that is no longer used.\r\n            ":"\r\n            不再使用的一种。\r\n            \r\n",". Unexpected cancellation, i.e. an\r\n             ":"。意外取消，即\r\n             \r\n","\r\n              Looks up a localized string similar to The element {0} is missing an attribute named {1}..\r\n            ":"\r\n              查找类似于元素{0}的本地化字符串，缺少一个名为{1}的属性。\r\n            \r\n","\r\n            An reference-id to object map, that can share base data efficiently.\r\n            ":"\r\n            可以有效共享基本数据的对象图的引用ID。\r\n            \r\n","\r\n            The following code imports the ":"\r\n            以下代码导入\r\n","\r\n            The LineDirectiveMap is created to enable translating positions, using the #line directives\r\n            in a file. The basic implementation creates an ordered array of line mapping entries, one\r\n            for each #line directive in the file (plus one at the beginning). If the file has no\r\n            directives, then the array has just one element in it. To map line numbers, a binary search\r\n            of the mapping entries is done and nearest line mapping is applied.\r\n            ":"\r\n            使用#line指令创建了LinedirectiveMap来启用翻译位置\r\n            在文件中。基本实现创建了一个有序的行映射条目，一个\r\n            对于文件中的每个#line指令（加上一开始）。如果文件没有\r\n            指令，然后数组中只有一个元素。为了映射行号，二进制搜索\r\n            已完成映射条目，并应用最近的线映射。\r\n            \r\n","\r\n             Used to filter out assemblies that have the same strong or weak identity.\r\n             Maps simple name to a list of identities. The highest version of each name is the first.\r\n             ":"\r\n             用于滤除具有相同强度或弱身份的组件。\r\n             将简单名称映射到身份列表中。每个名称的最高版本是第一个。\r\n             \r\n"," is true, returns the top-level nullability of the\r\n            ":" 是真的，返回了最高级别的无效性\r\n            \r\n"," from a sequence of ":" 从一系列\r\n","The token to insert before; a descendant of the root node and an element of a list member.":"以前要插入的令牌；根节点的后代和列表成员的元素。\r\n","\r\n            Determines if a flag is set on the ":"\r\n            确定是否在\r\n","\r\n            Determines how properties are displayed. \r\n            For example, \"Prop\" vs \"Prop { get; set; }\" in C# or \"Prop\" vs. \"ReadOnly Prop\" in Visual Basic.\r\n            ":"\r\n            确定属性的显示方式。\r\n            例如，在Visual Basic中，C＃或“ Prop”与“ ReadOnly Prop”中的“ Prop” VS” Prop {get; set;}”。\r\n            \r\n","\r\n            Represents a point of use of an intermediate result captured earlier. \r\n            The fact of capturing the result is represented by ":"\r\n            表示前面捕获的中间结果的使用点。\r\n            捕获结果的事实由\r\n","A list of rule objects with data from the given XML node":"带有来自给定XML节点的数据的规则对象列表\r\n","\r\n            If the value lies between -64 (0xFFFFFFC0) and 63 (0x3F), inclusive, encode as a one-byte integer: \r\n            bit 7 clear, value bits 5 through 0 held in bits 6 through 1, sign bit (value bit 31) in bit 0.\r\n            \r\n            If the value lies between -8192 (0xFFFFE000) and 8191 (0x1FFF), inclusive, encode as a two-byte integer: \r\n            15 set, bit 14 clear, value bits 12 through 0 held in bits 13 through 1, sign bit(value bit 31) in bit 0.\r\n            \r\n            If the value lies between -268435456 (0xF000000) and 268435455 (0x0FFFFFFF), inclusive, encode as a four-byte integer: \r\n            31 set, 30 set, bit 29 clear, value bits 27 through 0 held in bits 28 through 1, sign bit(value bit 31) in bit 0.\r\n            ":"\r\n            如果该值位于-64（0xfffffc0）和63（0x3F）之间，则包含在内，则编码为单字数整数：\r\n            位7清晰，值位5到0位于位6至1中的0，位0中的标志位（值位31）。\r\n            \r\n            如果该值位于-8192（0xffffe000）和8191（0x1fff）之间，则包含在内，将其编码为两个字节整数：\r\n            15集，位14透明，值位12至0在位13至1中保存，位于位0中的标志位（值位31）。\r\n            \r\n            如果该值位于-268435456（0xf000000）和268435455（0x0fffffff）（包含在内），则编码为四字节整数：\r\n            31集，30套，位29透明，值位27至0在位28到1中保存，符号位（值位31）位于位0。\r\n            \r\n","\r\n            Gets the 1-based line number of the start of the node's script function.\r\n            ":"\r\n            获取节点脚本函数的开始的1个基线号。\r\n            \r\n","\r\n            TypeDefinition that represents <PrivateImplementationDetails> class.\r\n            The main purpose of this class so far is to contain mapped fields and their types.\r\n            ":"\r\n            代表<privateImplementationDetails>类的Typedefinition。\r\n            到目前为止，该课程的主要目的是包含映射的字段及其类型。\r\n            \r\n","\r\n            Must be a non-null interface property, method, or event.\r\n            ":"\r\n            必须是非NULL接口属性，方法或事件。\r\n            \r\n","\r\n            will shadow-copy assemblies, and the mutex created to mark that the owner of it is still active.\r\n            ":"会暗示副本的组件，并创建静音的人，以标志着它的所有者仍然活跃。\r\n            \r\n","\r\n            EnC generation.\r\n            ":"\r\n            ENC生成。\r\n            \r\n","\r\n            The total number of descriptors in the set.\r\n            ":"\r\n            集合中的描述符总数。\r\n            \r\n","\r\n            Represents a clause of a C# case or a VB Case.\r\n            ":"\r\n            表示C＃案例或VB案例的条款。\r\n            \r\n","\r\n            The syntax tree this location is located in or ":"\r\n            语法树此位置位于或\r\n","\r\n            The offset of the first operation outside of the scope, or the method body length.\r\n            If zero then ":"\r\n            示波器之外的第一个操作的偏移或方法的身体长度。\r\n            如果为零\r\n","\r\n            For more information about the mapping between host members and script-callable\r\n            properties and methods, see ":"\r\n            有关主机成员与脚本可听点之间映射的更多信息\r\n            属性和方法，请参阅\r\n","\r\n            Gets the size of the ":"\r\n            获得大小\r\n",".\r\n            The given ":"。\r\n            给定\r\n","The source text to embed.":"要嵌入的源文本。\r\n","\r\n             and returns a value indicating whether one value is less than,\r\n             equal to, or greater than the other.\r\n             ":"\r\n             并返回一个值，指示一个值是否小于\r\n             等于或大于另一个。\r\n             \r\n","\r\n            Return whether early decoded attribute data has been computed and stored on the bag and it is safe to access ":"\r\n            返回是否已经计算并存储在袋子上的早期解码属性数据，并且可以安全访问\r\n","\r\n            Is this a symbol for an anonymous type (including anonymous VB delegate).\r\n            ":"\r\n            这是匿名类型的符号（包括匿名VB代表）。\r\n            \r\n","Span within the tree.":"树内的跨度。\r\n","\r\n            AssemblySymbol instance to check for suitability.\r\n            ":"\r\n            汇编符号实例检查适用性。\r\n            \r\n"," or any\r\n            default manifest.\r\n            ":" 或任何\r\n            默认清单。\r\n            \r\n","\r\n            Tries to execute symbol and declaration actions for the given symbol.\r\n            ":"\r\n            试图为给定符号执行符号和声明动作。\r\n            \r\n"," instances, considering that a reference type and the same nullable reference type are not equal.\r\n            ":" 实例，考虑到参考类型和相同的无效参考类型并不相等。\r\n            \r\n"," not found.":" 未找到。\r\n","\r\n            Gets or sets the maximum size of the new object heap in\r\n            ":"\r\n            获取或设置新对象堆的最大大小\r\n            \r\n","\r\n            Argument to name of expression.\r\n            ":"\r\n            表达名称的论点。\r\n            \r\n","\r\n            Flag indicating if the ":"\r\n            标志指示是否\r\n","\r\n            The chain is a spine of a tree in a forest of import scopes. A tree of import scopes is created by the language for each source file\r\n            based on namespace declarations. In VB each tree is trivial single-node tree that declares the imports of a file.\r\n            In C# the tree copies the nesting of namespace declarations in the file. There is a separate scope for each dotted component in \r\n            the namespace type name. For instance namespace type x.y.z will have two namespace scopes, the first is for the x and the second\r\n            is for the y.\r\n            ":"\r\n            该链是进口范围的森林中一棵树的脊柱。每个源文件的语言创建了导入范围的树\r\n            基于名称空间声明。在VB中，每个树是琐碎的单节点树，声明了文件的导入。\r\n            在C＃中，树复制了文件中名称空间声明的嵌套。每个虚拟组件都有一个单独的范围\r\n            名称空间类型名称。例如，实例名称空间类型X.Y.Z将具有两个命名空间范围，第一个是x和第二个名称空间范围\r\n            是y。\r\n            \r\n","\r\n            Represents a logical location of the image, not the content of the image. \r\n            The content might change in time. A snapshot is taken when the compiler queries the reference for its metadata.\r\n            ":"\r\n            表示图像的逻辑位置，而不是图像的内容。\r\n            内容可能会随时间变化。当编译器对其元数据的参考查询时，会拍摄快照。\r\n            \r\n","\r\n            Returns null if the parameter type is a struct and the default value of the parameter\r\n            is the default value of the struct type.\r\n            ":"\r\n            如果参数类型为struct和参数的默认值，则返回null\r\n            是结构类型的默认值。\r\n            \r\n","\r\n            Condition of the loop. For C#, this comes from the second clause of the for statement.\r\n            ":"\r\n            循环的条件。对于C＃，这来自for语句的第二条。\r\n            \r\n"," is equal to this instance.\r\n            ":" 等于此实例。\r\n            \r\n","\r\n            Creates a new compilation by attaching diagnostic analyzers to an existing compilation.\r\n            ":"通过将诊断分析仪附加到现有汇编中来创建新的汇编。\r\n            \r\n","\r\n            Absolute path of the output directory (could only be null if there is an error reported).\r\n            ":"\r\n            输出目录的绝对路径（仅在报告错误时才能为null）。\r\n            \r\n","\r\n            This version also accepts ":"\r\n            此版本也接受\r\n"," if the method that corresponds to the specified handle\r\n            has no debug information.\r\n            ":" 如果与指定的句柄相对应的方法\r\n            没有调试信息。\r\n            \r\n"," method and the\r\n            ":" 方法和\r\n            \r\n","\r\n            Read a Boolean value from the stream. This value must have been written using ":"\r\n            从流中读取布尔值。该值必须使用\r\n","\r\n            Represents kind of conditional branch from a ":"\r\n            代表一种有条件分支\r\n","\r\n            var StringT = host.type(\"System.String\");\r\n            var name = host.typeOf(StringT).AssemblyQualifiedName;\r\n            ":"\r\n            var stringt = host.type（“ system.string”）;\r\n            var name = host.typeof（stringt）.semblyqualifiedName;\r\n            \r\n","\r\n            Start point of the span.\r\n            ":"\r\n            跨度的起点。\r\n            \r\n","A cancellation token that can be used to abort analysis.":"可以用于中止分析的取消令牌。\r\n","Suppressor to be executed.":"抑制器要执行。\r\n","\r\n            // create and populate an array of strings\r\n            var StringT = host.type(\"System.String\");\r\n            var array = host.newArr(StringT, 3);\r\n            array.SetValue(\"first\", 0);\r\n            array.SetValue(\"second\", 1);\r\n            array.SetValue(\"third\", 2);\r\n            // use Array.ForEach to generate console output\r\n            var ArrayT = host.type(\"System.Array\");\r\n            var ConsoleT = host.type(\"System.Console\");\r\n            ArrayT.ForEach(array, host.proc(1, function (value) { ConsoleT.WriteLine(value); }));\r\n            ":"\r\n            //创建并填充一系列字符串\r\n            var stringt = host.type（“ system.string”）;\r\n            var array = host.newarr（Stringt，3）;\r\n            array.setValue（“ first”，0）;\r\n            array.setValue（“第二”，1）;\r\n            array.setValue（“第三”，2）;\r\n            //使用array.foreach生成控制台输出\r\n            var arrayt = host.type（“ system.Array”）;\r\n            var consolet = host.type（“ system.console”）;\r\n            arrayt.foreach（array，host.proc（1，function（value）{consolet.writeline（value）;}））;\r\n            \r\n","The default script access setting for type members.":"类型成员的默认脚本访问设置。\r\n","\r\n            The compile time value of the field. This value should be used directly in IL, rather than a reference to the field.\r\n            If the field does not have a valid compile time value, Dummy.Constant is returned.\r\n            ":"\r\n            字段的编译时间值。该值应直接在IL中使用，而不是对字段的引用。\r\n            如果字段没有有效的编译时间值，则返回虚拟。\r\n            \r\n","\r\n            Specifies the target CPU. ":"\r\n            指定目标CPU。\r\n"," body is updated.\r\n            False if ":" 身体已更新。\r\n            错误如果\r\n","Analyzer to get session wide analyzer actions.":"分析仪以获取会话广泛的分析仪。\r\n","\r\n            Gets whether this editorconfig is a topmost editorconfig.\r\n            ":"\r\n            获取此EditorConfig是否是最高的EditorConfig。\r\n            \r\n","\r\n            Gets a string containing the characters in specified span.\r\n            ":"\r\n            在指定的跨度中获取包含字符的字符串。\r\n            \r\n","The assembly name in metadata format (case sensitive)":"元数据格式的组装名称（敏感）\r\n","#line hidden":"#line隐藏\r\n","\r\n            Represents a node in a V8 CPU profile's call tree.\r\n            ":"\r\n            表示V8 CPU配置文件的调用树中的节点。\r\n            \r\n"," property. The\r\n            information contained can be used to perform final generation.\r\n            \r\n            A new instance of ":" 财产。这\r\n            包含的信息可用于执行最终代表。\r\n            \r\n            一个新实例\r\n"," to use when parsing any generated sources.":" 解析任何生成的来源时使用。\r\n"," added by each generator.\r\n            ":" 由每个发电机添加。\r\n            \r\n","\r\n            Returns the RefKind of the method.\r\n            ":"\r\n            返回该方法的反映。\r\n            \r\n","\r\n            Returns full string representation of this node including its leading and trailing trivia.\r\n            ":"\r\n            返回该节点的完整字符串表示形式，包括其领先和尾随的琐事。\r\n            \r\n","\r\n            Return full metadata handle of the member reference, adding\r\n            the reference to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回会员参考的完整元数据句柄，添加\r\n            如果丢失了这一代的索引的引用。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            True if the type is a value type. \r\n            Value types are sealed and extend System.ValueType or System.Enum.\r\n            A type parameter for which MustBeValueType (the struct constraint in C#) is true also returns true for this property.\r\n            ":"\r\n            如果类型是值类型，则为true。\r\n            价值类型是密封并扩展系统的。valuetype或system.Enum。\r\n            必须返回此属性的类型参数（C＃中的结构约束）也是如此。\r\n            \r\n","\r\n            Get an optional localizable title for the given diagnostic code.\r\n            ":"\r\n            获取给定诊断代码的可选本地化标题。\r\n            \r\n","\r\n            Represents a exception instance passed by an execution environment to an exception filter or handler.\r\n            This node is produced only as part of a ":"\r\n            代表执行环境传递给异常过滤器或处理程序的异常实例。\r\n            该节点仅作为一个\r\n","\r\n            Imports enumerations defined within or referenced from a COM/ActiveX type library.\r\n            ":"\r\n            从com/activex类型库中定义或引用的导入枚举。\r\n            \r\n","\r\n            Order matters: least processing to most processing.\r\n            ":"\r\n            订单事项：最少处理大多数处理。\r\n            \r\n"," is specified, the responsibility for disposal of the stream is transferred upon entry of the constructor\r\n            unless the arguments given are invalid.\r\n            ":" 已指定，处置流的责任是在构造函数进入时转移的\r\n            除非给出的论点无效。\r\n            \r\n","\r\n            Context for initializing an analyzer.\r\n            Analyzer initialization can use an ":"\r\n            初始化分析仪的上下文。\r\n            分析仪初始化可以使用\r\n","\r\n            The references are in the order they appear in syntax trees. This order is currently preserved \r\n            as syntax trees are added or removed, but we might decide to share reference manager between compilations\r\n            with different order of #r's. It doesn't seem this would be an issue since all #r's within the compilation\r\n            have the same \"priority\" with respect to each other.\r\n            ":"\r\n            这些参考是按照语法树出现的顺序。该订单目前保留\r\n            由于添加或删除了语法树，但我们可能决定在编译之间共享参考管理器\r\n            ＃r的不同顺序。似乎这不是一个问题，因为汇编中的所有＃r\r\n            相互依靠相同的“优先级”。\r\n            \r\n","\r\n            A type definition that is a member of a namespace definition.\r\n            ":"\r\n            是名称空间定义的成员的类型定义。\r\n            \r\n","\r\n            An absolute path of the app.config file or null if not specified.\r\n            ":"\r\n            如果未指定，则app.config文件或null的绝对路径。\r\n            \r\n","\r\n              Looks up a localized string similar to Can't create a metadata reference to a dynamic assembly..\r\n            ":"\r\n              查找类似于类似的本地化字符串，无法创建对动态组件的元数据引用。\r\n            \r\n","\r\n            Returns true if this is a speculative semantic model created with any of the TryGetSpeculativeSemanticModel methods.\r\n            ":"\r\n            如果这是使用任何TryGetSpeculativeManticModel方法创建的投机语义模型，则返回true。\r\n            \r\n","\r\n            32-bit native executable\r\n            ":"\r\n            32位本地可执行文件\r\n            \r\n","\r\n            This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n            change it in the future.\r\n            ":"\r\n            该界面保留用于通过其关联的API实现。我们保留权利\r\n            将来更改它。\r\n            \r\n","\r\n              Looks up a localized string similar to Total analyzer execution time: {0} seconds..\r\n            ":"\r\n              查找类似于总分析仪执行时间的本地化字符串：{0}秒..\r\n            \r\n",", nullable ":"，无效\r\n","\r\n            Return full metadata handle of the type reference, adding\r\n            the reference to the index for this generation if missing.\r\n            Deltas are not required to return rows from previous generations.\r\n            ":"\r\n            返回类型参考的完整元数据句柄，添加\r\n            如果丢失了这一代的索引的引用。\r\n            三角洲不需要从前几代返回行。\r\n            \r\n","\r\n            Operation to be evaluated if ":"\r\n            如果要评估的操作是否\r\n","\r\n            Number of slots reserved for awaiters.\r\n            ":"\r\n            为等待者保留的老虎机数量。\r\n            \r\n","\r\n            Returns the list of custom modifiers, if any, associated with the returned value. Evaluate this property only if ReturnValueIsModified is true.\r\n            ":"\r\n            返回与返回值关联的自定义修饰符列表。仅当returnValueismified是正确的时，才评估此属性。\r\n            \r\n","\r\n            True if the method is a constructor.\r\n            ":"\r\n            如果该方法是构造函数，则为正确。\r\n            \r\n","\r\n            Compute the hashcode of a sub-string using FNV-1a\r\n            See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\r\n            ":"\r\n            使用FNV-1A计算子弦的哈希码\r\n            请参阅http://en.wikipedia.org/wiki/fowler%E2%80%93NOLL%E2%80%93VO_HASH_FUNCONT\r\n            \r\n","\r\n            Represents a diagnostic, such as a compiler error or a warning, along with the location where it occurred.\r\n            ":"\r\n            表示诊断，例如编译器错误或警告，以及发生的位置。\r\n            \r\n","\r\n            A verbose format for displaying symbols (useful for testing).\r\n            ":"\r\n            用于显示符号的详细格式（用于测试）。\r\n            \r\n","\r\n            Information decoded from well-known custom attributes applied on a property.\r\n            ":"\r\n            从应用于属性的众所周知的自定义属性解码的信息。\r\n            \r\n"," about an ":" 大约一个\r\n","Relative path.":"相对路径。\r\n","\r\n            Indicates disposable locations that have escaped the declaring method's scope.\r\n            For example, a disposable allocation assigned to a field/property or\r\n            escped as a return value for a function, or assigned to a ref or out parameter, etc.\r\n            ":"\r\n            指示逃脱了声明方法范围的一次性位置。\r\n            例如，分配给字段/属性或\r\n            作为函数的返回值逃脱，或分配给REF或OUT参数，等等。\r\n            \r\n"," is disposable,\r\n            and thus can be used in a ":" 是一次性，\r\n            因此可以在\r\n","\r\n            The kinds of custom debug info that we know how to interpret.\r\n            The values correspond to possible values of the \"kind\" byte\r\n            in the record header.\r\n            ":"\r\n            我们知道如何解释的自定义调试信息。\r\n            值对应于“类”字节的可能值\r\n            在记录标题中。\r\n            \r\n","\r\n            Return whether all decoded attribute data has been computed and stored on the bag and it is safe to access ":"\r\n            返回是否已经计算并存储所有解码属性数据，并且可以安全访问\r\n","List of the compilation's managed resources.  Null to indicate that there are none.":"汇编的托管资源列表。 null表示没有。\r\n","\r\n            A type ref with attributes attached directly to the type reference\r\n            itself. Unlike ":"\r\n            带有直接附加到类型参考的属性的类型参考\r\n            本身。与众不同\r\n","\r\n            If you need conversion information that is language specific, use either\r\n            ":"\r\n            如果您需要特定语言的转换信息，请使用\r\n            \r\n","\r\n              Looks up a localized string similar to A value in the pathMap is null..\r\n            ":"\r\n              查找类似于PathMap中值的本地化字符串为null ..\r\n            \r\n","\r\n            Represents an operation to throw an exception.\r\n            ":"\r\n            代表一个抛出异常的操作。\r\n            \r\n","\r\n            Represents an argument to a method invocation.\r\n            ":"\r\n            代表方法调用的参数。\r\n            \r\n","\r\n            Writes a compressed 30 bit integer to the stream. (not 32 bit)\r\n            ":"\r\n            将压缩的30位整数写入流。 （不是32位）\r\n            \r\n","\r\n             The initializer of this node is applied to all individual declarations in ":"\r\n             该节点的初始化程序应用于所有单独声明\r\n","notnull":"Notnull\r\n","\r\n            Current usage:\r\n             (1) VB parenthesized expression.\r\n            ":"\r\n            当前用法：\r\n             （1）VB括号的表达。\r\n            \r\n","Invalid characters in assembly culture name":"集会文化名称中的无效字符\r\n","\r\n            Method body or expression subject to analysis.\r\n            ":"\r\n            方法的身体或表达受到分析。\r\n            \r\n","\r\n            The full string representation of the nodes in this list including \r\n            the first node's leading trivia and the last node's trailing trivia.\r\n            ":"\r\n            此列表中节点的完整字符串表示，包括\r\n            第一个节点的领先琐事和最后一个节点的尾随琐事。\r\n            \r\n","\r\n            The leading trivia associated with the node or token is kept.\r\n            ":"\r\n            保留了与节点或令牌相关的领先琐事。\r\n            \r\n","Should case be ignored for name comparison?":"对于姓名比较，应该忽略盒子吗？\r\n","\r\n            The first part of a two part version number indicating the version of the linker that produced this module. For example, the 0 in 8.0.\r\n            ":"\r\n            两部分版本号的第一部分指示产生该模块的链接器的版本。例如，0在8.0中。\r\n            \r\n","\r\n            The name of an entry point method synthesized for top-level statements.\r\n            ":"\r\n            用于顶级语句合成的入口点方法的名称。\r\n            \r\n","\r\n            By default, all exposed extension methods appear as enumerable properties of all host\r\n            objects, regardless of type. Setting this property to ":"\r\n            默认情况下，所有裸露的扩展方法均为所有主机的枚举属性\r\n            物体，无论类型如何。将此属性设置为\r\n","\r\n            Gets the document's name.\r\n            ":"\r\n            获取文档的名称。\r\n            \r\n","\r\n            This method allows a generator to opt-in to an extra phase in the generator lifecycle called PostInitialization. After being initialized\r\n            any generators that have opted in will have their provided callback invoked with a ":"\r\n            这种方法允许发电机选择在称为启动后的生命周期中进入额外的阶段。初始化后\r\n            任何选择加入的发电机都会将其提供的回调调用\r\n","\r\n            Writes the PDB data to specified stream. Once called no more changes to the data can be made using this writer.\r\n            May be called multiple times. Always writes the same data. \r\n            ":"\r\n            将PDB数据写入指定的流。一旦被称为，就可以使用此作者对数据进行更多更改。\r\n            可能被称为多次。始终写入相同的数据。\r\n            \r\n"," will never provide attributes\r\n            for the \"pointed at\" declaration, and all attributes will be emitted\r\n            directly on the type ref, rather than the declaration.\r\n            ":" 永远不会提供属性\r\n            对于“指向”声明，所有属性将发出\r\n            直接在类型参考上，而不是声明。\r\n            \r\n"," doesn't throw if there is more than one element in the sequence.\r\n            ":" 如果序列中有多个元素，则不会投掷。\r\n            \r\n"," argument can be a class identifier (CLSID) in standard\r\n            GUID format with braces (e.g., \"{F414C260-6AC0-11CF-B6D1-00AA00BBBB58}\").\r\n            ":" 参数可以是标准中的类标识符（CLSID）\r\n            带有牙套的GUID格式（例如，“ {F414C260-6AC0-11CF-B6D1-00AA00BBBBBB58}”）。\r\n            \r\n","\r\n            Indicates an entry block for a ":"\r\n            指示一个入口块\r\n","\r\n            Defines caching options for V8 script compilation.\r\n            ":"\r\n            定义V8脚本编译的缓存选项。\r\n            \r\n","\r\n            Errors while parsing the command line arguments.\r\n            ":"\r\n            解析命令行参数时出错。\r\n            \r\n","\r\n            objects exposed in Windows Script engines.\r\n            ":"\r\n            在Windows脚本引擎中暴露的对象。\r\n            \r\n"," is marked as automatically generated.\r\n            ":" 被标记为自动生成的。\r\n            \r\n","\r\n            Diagnostic info that should be reported at the use site of the symbol, or null if there is none.\r\n            ":"\r\n            应在符号的使用站点上报告的诊断信息，如果没有，则应在符号的使用站点上报告。\r\n            \r\n","\r\n            Determine if the given integer appears in the set.\r\n            ":"\r\n            确定给定的整数是否出现在集合中。\r\n            \r\n","\r\n            Builds a list of types, and their documents, that would otherwise not be referenced by any document info\r\n            of any methods in those types, or any nested types. This data is helpful for navigating to the source of\r\n            types that have no methods in one or more of the source files they are contained in.\r\n            \r\n            For example:\r\n            \r\n            First.cs:\r\n            ":"\r\n            构建类型及其文档的列表，否则任何文档信息都不会引用这些列表\r\n            这些类型或任何嵌套类型中的任何方法。此数据有助于导航到\r\n            在其中包含的一个或多个源文件中没有方法的类型。\r\n            \r\n            例如：\r\n            \r\n            First.CS：\r\n            \r\n","Delegate.Method":"委托\r\n","The character.":"性格。\r\n","\r\n            Returns true if the symbol or some child symbol has changed and needs to be compiled.\r\n            ":"\r\n            如果符号或某些子符号已更改并且需要编译，则返回true。\r\n            \r\n"," with the specified token insert at the index.\r\n            ":" 用指定的令牌插件处于索引。\r\n            \r\n","\r\n            This is the maximum length of a type or member name in metadata, assuming\r\n            the name is in UTF-8 format and not (yet) null-terminated.\r\n            ":"\r\n            这是元数据中类型或成员名称的最大长度，假设\r\n            该名称为UTF-8格式，尚未（尚未）为无效。\r\n            \r\n","\r\n            Returns true if the parameter is a discard parameter.\r\n            ":"\r\n            如果参数是丢弃参数，则返回true。\r\n            \r\n","A sequence of trivia to insert into the tree immediately after the specified trivia.":"指定的琐事后，一系列琐事立即插入树上。\r\n","\r\n            An optional hyperlink that provides more detailed information regarding the diagnostic.\r\n            ":"\r\n            可选的超链接，可提供有关诊断的更详细信息。\r\n            \r\n"," if the module is not available.\r\n            ":" 如果该模块不可用。\r\n            \r\n","\r\n            Represents a symbol (namespace, class, method, parameter, etc.)\r\n            exposed by the compiler.\r\n            ":"\r\n            表示一个符号（名称空间，类，方法，参数等）\r\n            由编译器暴露。\r\n            \r\n","The target symbol.":"目标符号。\r\n","\r\n            Represents an expression that includes a ? or ?. conditional access instance expression.\r\n            ":"\r\n            代表一个包括？或者 ？。有条件的访问实例表达式。\r\n            \r\n","The typed array's element type.":"键入数组的元素类型。\r\n","\r\n            This class represents the PermissionSetAttribute specified in source which needs fixup during codegen.\r\n            ":"\r\n            该类表示源中指定的PermissionsetAttribute，它需要在CodeGen期间进行修复。\r\n            \r\n"," contains * and wildcard is allowed the version build and/or revision numbers are set to ":" 包含 *和通配符的版本构建和/或修订号设置为\r\n","\r\n            Points to unknown set of locations, which is known to be null.\r\n            Note that this value kind is theoretically not needed, as the underlying\r\n            value is null, but it has been added to ensure monotonicity of value merge.\r\n            ":"\r\n            指向未知的位置集，已知为null。\r\n            请注意，理论上不需要这种值，因为基础\r\n            值是无效的，但已添加以确保价值合并的单调性。\r\n            \r\n"," that contains file, line and column information,\r\n            or an invalid span (see ":" 其中包含文件，行和列信息，\r\n            或无效的跨度（请参阅\r\n"," in case not found (e.g. no loop or switch syntax, or the branch is not a break or continue)":" 如果找不到（例如，没有循环或开关语法，或分支不是断裂或继续）\r\n","Assembly aliases. Can't be set for a module.":"组装别名。无法为模块设置。\r\n","\r\n            The format of the parameters will be determined by the other flags passed.\r\n            ":"参数的格式将由传递的其他标志确定。\r\n            \r\n","\r\n            True if this token has the specified annotation.\r\n            ":"\r\n            如果该令牌具有指定的注释，则为正确。\r\n            \r\n","\r\n            The operation being visited is not necessarily equal to statements[startIndex]. \r\n            When traversing down a set of labels, we set operation to the label.Operation and recurse, but statements[startIndex] still refers to the original parent label \r\n            as we haven't actually moved down the original statement list\r\n            ":"\r\n            访问的操作不一定等于语句[StartIndex]。\r\n            在浏览一组标签时，我们将操作设置为标签。操作和重复，但语句[StartIndex]仍然是指原始的父母标签\r\n            因为我们实际上还没有从原始语句列表中移动\r\n            \r\n"," from the given stream using the given encoding.\r\n            ":" 使用给定的编码从给定的流。\r\n            \r\n","\r\n            Checks whether the current type contains one of the following count property:\r\n                - ":"\r\n            检查当前类型是否包含以下计数属性之一：\r\n                 - \r\n"," is used to determine the behavior in case of a tie (i.e. a node having the same span as its parent).\r\n            If ":" 用于确定领带的行为（即，与父母相同的跨度的节点）。\r\n            如果\r\n","\r\n            For signed integer types return number of bits for their representation minus 1. \r\n            I.e. 7 for Int8, 31 for Int32, etc.\r\n            Used for checking loop end condition for VB for loop.\r\n            ":"\r\n            对于签名的整数类型，其表示形式返回位数减去1。\r\n            IE。 7对于INT8，INT32，31，等等。\r\n            用于检查循环的VB循环端条件。\r\n            \r\n","\r\n            The candidate symbol was in a place where a value was required, but was not a value\r\n            (e.g., was a type or namespace).\r\n            ":"\r\n            候选符号是需要一个值的地方，但不是一个值\r\n            （例如，是类型或名称空间）。\r\n            \r\n","\r\n            Represents a C# pattern case clause.\r\n            ":"\r\n            表示C＃模式案例子句。\r\n            \r\n","\r\n             requesting cancellation, is treated as an error by this method.":"\r\n             请求取消，通过此方法将其视为错误。\r\n","\r\n            Use this routine, rather than ITypeReference.Dispatch, to call the appropriate derived overload of an ITypeReference.\r\n            The former routine will call Visit(INamespaceTypeDefinition) rather than Visit(INamespaceTypeReference), etc., \r\n            in the case where a definition is used as a reference to itself.\r\n            ":"\r\n            使用此例程，而不是ItypeReference.dispatch，以调用iTypeeference的适当派生过载。\r\n            以前的例行程序将致电访问（InamespaceTypeDefinition），而不是访问（InamespaceTypeReference）等，等等\r\n            在定义用作自身的引用的情况下。\r\n            \r\n","The compiled script to evaluate.":"编译的脚本进行评估。\r\n","\r\n            The method eagerly reads the entire content of the file into native heap. The native memory block is released \r\n            when the resulting reference becomes unreachable and GC collects it. To decrease memory footprint of the reference and/or manage\r\n            the lifetime deterministically use ":"\r\n            该方法热切地将文件的整个内容读为本机堆。本机内存块已发布\r\n            当结果参考变得无法到达并收集GC时。减少参考和/或管理的记忆足迹\r\n            生命周期确定使用\r\n"," converts values on the stack into captures.\r\n            - Error scenarios from initial binding need to be handled.\r\n            ":" 将堆栈上的值转换为捕获。\r\n             - 需要处理最初绑定的错误方案。\r\n            \r\n","\r\n            The definition of a type parameter of a generic type or method.\r\n            ":"\r\n            通用类型或方法的类型参数的定义。\r\n            \r\n","\r\n            Enumerates the different kinds of variance a generic method or generic type parameter may have.\r\n            ":"\r\n            列举不同种类的方差一种通用方法或通用类型参数可能具有的。\r\n            \r\n"," basic block to a ":" 基本块\r\n","\r\n            Either visits a single operation, or a using ":"\r\n            访问单个操作或使用\r\n","This object may allocate significant resources or lock files depending upon how it is constructed.":"该对象可能会根据其构造方式分配大量资源或锁定文件。\r\n","\r\n            An integer representing the language specific kind of this trivia.\r\n            ":"\r\n            代表这种琐事的语言特定种类的整数。\r\n            \r\n","File size exceeds maximum allowed size of a valid metadata file.":"文件大小超过有效元数据文件的最大允许大小。\r\n","\r\n            Returns true if this is a warning treated as an error.\r\n            ":"\r\n            如果这是被视为错误的警告，则返回true。\r\n            \r\n","string?":"细绳？\r\n","\r\n            Represents an operation to compute the size of a given type.\r\n            ":"\r\n            表示一个操作以计算给定类型的大小。\r\n            \r\n"," generation pass.\r\n            ":" 生成通行证。\r\n            \r\n","\r\n            Represents creation of an object instance.\r\n            ":"\r\n            代表创建对象实例。\r\n            \r\n","\r\n            The assembly file version of this compiler, used in logo and /version output.\r\n            ":"\r\n            该编译器的汇编文件版本，用于徽标和 /版本输出。\r\n            \r\n","\r\n            Reads EnC debug information of a method from the initial baseline PDB.\r\n            The function shall throw ":"\r\n            从初始基线PDB中读取方法的ENC调试信息。\r\n            功能应投掷\r\n","The following example shows the use of a pooled delegate to avoid capturing allocations for the same\r\n             predicate:":"以下示例显示了使用合并的代表以避免捕获相同的分配\r\n             谓词：\r\n","\r\n            True if the character is any recognized directory separator character.\r\n            ":"\r\n            如果字符是任何公认的目录分离器字符，则为true。\r\n            \r\n","\r\n            \"C:dir\\file\"\r\n            ":"\r\n            \"C:dir\\file\"\r\n            \r\n","\r\n            Body of the lambda.\r\n            ":"\r\n            Lambda的身体。\r\n            \r\n","\r\n            Accessible wherever either protected or internal members are accessible\r\n            (less restrictive than ":"\r\n            可以访问受保护或可以访问内部成员的地方\r\n            （比限制少于\r\n","\r\n            Compare two source locations, using their containing trees, and then by Span.First within a tree.\r\n            Can be used to get a total ordering on declarations, for example.\r\n            ":"\r\n            比较两个源位置，使用其包含的树，然后在树中首先通过跨度进行比较。\r\n            例如，可以用来在声明上进行总订购。\r\n            \r\n","Delegate to identify if analysis should be skipped on generated code.":"委托确定是否应在生成的代码上跳过分析。\r\n","\r\n            Converts an array to an immutable array.\r\n            ":"\r\n            将数组转换为不变的阵列。\r\n            \r\n","\r\n            An array with 3 elements\r\n            ":"\r\n            一个具有3个元素的数组\r\n            \r\n","\r\n            Original reference that was unified to the identity of the ":"\r\n            统一的原始参考\r\n","\r\n            Loads and compiles a document with the specified category.\r\n            ":"\r\n            加载并与指定类别一起编译文档。\r\n            \r\n","\r\n            Indicates the condition kind for the branch out of the basic block.\r\n            ":"\r\n            指示基本块的分支的条件种类。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# local function statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃本地函数语句。\r\n            \r\n"," will generate 3 ":" 将生成3\r\n","The rooting marker for the set of tlogs":"TLOG集的生根标记\r\n","\r\n            We calculate a \"syntax offset\" for each user-defined and long-lived synthesized variable. \r\n            Every such variable symbol has to be associated with a syntax node (its declarator). \r\n            In usual cases this is the textual distance of the declarator from the start of the method body. \r\n            It gets a bit complicated when the containing method body is not contiguous (constructors). \r\n            If the variable is in the body of the constructor the definition of syntax offset is the same. \r\n            If the variable is defined in a constructor  initializer or in a member initializer \r\n            (this is only possible when declaration expressions or closures in primary constructors are involved) \r\n            then the distance is a negative sum of the widths of all the initializers that succeed the declarator \r\n            of the variable in the emitted constructor body plus the relative offset of the declarator from \r\n            the start of the containing initializer.\r\n            ":"\r\n            我们为每个用户定义且寿命长的合成变量计算一个“语法偏移”。\r\n            每个这样的变量符号都必须与语法节点（其声明器）关联。\r\n            在通常的情况下，这是宣告者从方法开始的开始的文本距离。\r\n            当包含方法主体不连续（构造函数）时，它会变得有些复杂。\r\n            如果变量位于构造函数中，则语法偏移的定义是相同的。\r\n            如果变量是在构造函数初始化器或成员初始化器中定义的\r\n            （仅当涉及主构造函数中的声明表达式或封闭时，这才有可能）\r\n            那么距离是成功宣告者的所有初始化器的宽度的负和\r\n            发出的构造主体中的变量，以及声明器的相对偏移\r\n            包含初始化器的开始。\r\n            \r\n","\r\n            Last created snapshot of our data.  We hand this out instead of exposing our raw\r\n            data so that ":"\r\n            最后创建了我们数据的快照。我们分发了这一点，而不是揭露我们的原始\r\n            数据这样\r\n","Argument cannot have a null element.":"参数不能具有零元素。\r\n","\r\n            When this property has a value, ":"\r\n            当此属性具有值时\r\n","Function to be invoked to generate the key, if necessary.":"如有必要，可以调用以生成密钥的功能。\r\n","\r\n            Represents a case clause.\r\n            ":"\r\n            代表一个案例条款。\r\n            \r\n","\r\n            Indicates if a symbol has at least one location in source.\r\n            ":"\r\n            指示符号是否至少有一个位置。\r\n            \r\n","\r\n            Marks the given tree as fully syntactically analyzed for the given analyzer.\r\n            ":"\r\n            标记给定的树是给定分析仪的完全句法分析。\r\n            \r\n"," the parameters on indexer accessor methods (not on the indexer itself), ":" 索引器访问者方法上的参数（不在索引本身上）​​，\r\n","\r\n              Looks up a localized string similar to enum.\r\n            ":"\r\n              查找类似于枚举的本地化字符串。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified name.\r\n            ":"\r\n            用指定名称初始化新的V8运行时实例。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# default value expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃默认值表达式。\r\n            \r\n","\r\n            Gets the resolver for resolving XML document references for the compilation.\r\n            Null if the compilation is not allowed to contain XML file references, such as XML doc comment include tags and permission sets stored in an XML file.\r\n            ":"\r\n            获取用于解析XML文档参考的分解器。\r\n            null如果不允许编译包含XML文件引用，例如XML Doc评论包括标签和存储在XML文件中的权限集。\r\n            \r\n","\r\n            Return true if there is a source declaration symbol name that meets given predicate.\r\n            ":"\r\n            如果有一个符合给定谓词的源声明符号名称，则返回true。\r\n            \r\n"," is empty and ":" 是空的\r\n",", the script engine attempts to use\r\n            reflection-based method binding when the default method binding algorithm fails. This\r\n            approach reduces type safety, but it may be useful for running legacy scripts that rely\r\n            on the specific behavior of reflection-based method binding.\r\n            ":"，脚本引擎尝试使用\r\n            当默认方法绑定算法失败时，基于反射的方法绑定。这个\r\n            方法可降低类型安全性，但对于运行依赖的旧脚本可能很有用\r\n            关于基于反射的方法结合的特定行为。\r\n            \r\n","\r\n            Argument is a default value supplied automatically by the compilers.\r\n            ":"\r\n            参数是编译器自动提供的默认值。\r\n            \r\n"," was successfully started.\r\n            ":" 成功开始。\r\n            \r\n",",\r\n            while unary operator expression does not mutate it's operand.\r\n            ":"，，，，\r\n            虽然单一操作员的表达不会突变其操作数。\r\n            \r\n","\r\n            A list exception data within the method body IL.\r\n            ":"\r\n            方法主体IL中的异常数据。\r\n            \r\n","\r\n            Tries to load the implementation of the PDB writer from Microsoft.DiaSymReader.Native.{platform}.dll library first.\r\n            It searches for this library in the directory Microsoft.DiaSymReader.dll is loaded from, \r\n            the application directory, the %WinDir%\\System32 directory, and user directories in the DLL search path, in this order.\r\n            If not found in the above locations and ":"\r\n            尝试从Microsoft.diasymreader.native。\r\n            它在目录Microsoft.diasymreader.dll中搜索此库。\r\n            应用程序目录，％windir％\\ system32目录和DLL搜索路径中的用户目录按此顺序。\r\n            如果在上述位置找不到\r\n","\r\n            In some script languages the distinction between statements and expressions is\r\n            significant but ambiguous for certain syntactic elements. This method always\r\n            interprets the specified script code as a statement.\r\n            ":"\r\n            在某些脚本语言中，语句和表达式之间的区别是\r\n            对于某些句法元素而言，重要但模棱两可。总是这个方法\r\n            将指定的脚本代码解释为语句。\r\n            \r\n","\r\n            Represents an analyzer reference that can't be resolved.\r\n            ":"\r\n            代表无法解决的分析仪参考。\r\n            \r\n"," only receives diagnostics whose IDs were declared suppressible in its ":" 仅收到其ID在其中被抑制的诊断\r\n"," API.\r\n            The result is undefined if the compilation contains errors.\r\n            ":"API。\r\n            如果汇编包含错误，则结果是不确定的。\r\n            \r\n","\r\n            Used to compare keys in ":"\r\n            用于比较键\r\n","\r\n            Returns marshalling data or null of MarshalAs attribute isn't applied on the parameter.\r\n            ":"返回编组数据或MARSHALAS属性的null不会在参数上应用。\r\n            \r\n","\r\n            The wall clock time that elapsed while this generator was running.\r\n            ":"\r\n            该发电机运行时经过的壁时钟时间。\r\n            \r\n","Win32 resources, assumed to be in COFF object format, have one or more invalid symbol values.":"Win32资源假定为Coff对象格式，具有一个或多个无效的符号值。\r\n","\r\n            We need a CCI representation for local constants because they are emitted as locals in\r\n            PDB scopes to improve the debugging experience (see LocalScopeProvider.GetConstantsInScope).\r\n            ":"\r\n            我们需要当地常数的CCI代表，因为它们被当作当地人\r\n            PDB范围可改善调试体验（请参见LocalsCopRovider.getConstantsinScope）。\r\n            \r\n",".\r\n            \r\n            We make sure not to query the resolver for the same identity multiple times (across submissions).\r\n            Doing so ensures that we don't create multiple assembly symbols within the same chain of script compilations \r\n            for the same implicitly resolved identity. Failure to do so results in cast errors like \"can't convert T to T\".\r\n            \r\n            The method only records successful resolution results by updating ":"。\r\n            \r\n            我们确保不要多次（跨提交）查询分辨率相同的身份。\r\n            这样做可确保我们不会在同一脚本汇编链中创建多个汇编符号\r\n            对于同一隐式解决的身份。不这样做会导致诸如“不能将t转换为t”之类的铸造错误。\r\n            \r\n            该方法仅通过更新来记录成功的分辨率结果\r\n","CommonJS":"commonjs\r\n","\r\n            Write tracking logs corresponding to the current tracking context.  \r\n            ":"\r\n            编写跟踪日志对应于当前跟踪上下文。\r\n            \r\n","\r\n            Split a string by a set of separators, taking quotes into account.\r\n            ":"\r\n            用一组分离器将字符串分开，考虑到引号。\r\n            \r\n","An instance of an ":"一个实例\r\n","\r\n            Assigning this property has no effect on CPU profiles already active in the V8 runtime.\r\n            The default value is 1000.\r\n            ":"分配此属性对在V8运行时已经活跃的CPU配置文件没有影响。\r\n            默认值为1000。\r\n            \r\n","Cancellable operations are only expected to throw ":"可取消操作只预计会投掷\r\n","\r\n             Simple assembly name, or null if not specified.\r\n             ":"\r\n             简单的汇编名称，如果未指定为空名称。\r\n             \r\n","\r\n            Begins collecting a new CPU profile.\r\n            ":"\r\n            开始收集新的CPU配置文件。\r\n            \r\n","\r\n            Referenced parameter.\r\n            ":"\r\n            引用参数。\r\n            \r\n","\r\n            for all other locals.\r\n            ":"\r\n            对于所有其他当地人。\r\n            \r\n","\r\n            Represents a JavaScript\r\n            ":"\r\n            代表JavaScript\r\n            \r\n","\r\n            A tuple type will always have default elements such as Item1, Item2, Item3...\r\n            This API allows matching a field that represents a named element, such as \"Alice\" \r\n            to the corresponding default element field such as \"Item1\"\r\n            ":"\r\n            元组类型将始终具有默认元素，例如item1，item2，item3 ...\r\n            此API允许匹配代表命名元素的字段，例如“ Alice”\r\n            到相应的默认元素字段，例如“ item1”\r\n            \r\n","\r\n            var StringT = host.type(\"System.String\");\r\n            var array = host.newArr(StringT, 5, 3);\r\n            ":"\r\n            var stringt = host.type（“ system.string”）;\r\n            var array = host.newarr（Stringt，5，3）;\r\n            \r\n","\r\n            Called to initialize the generator and register generation steps via callbacks\r\n            on the ":"\r\n            打电话给发电机和注册生成步骤初始回调\r\n            在\r\n","\r\n            This indicates that friend access should not be granted because the other assembly \r\n            does not name this assembly as a friend in any way whatsoever.\r\n            ":"\r\n            这表明不应授予朋友访问，因为另一个集会\r\n            不会以任何方式将此大会命名为朋友。\r\n            \r\n","Prefix of path that represents a directory":"代表目录的路径前缀\r\n"," is provided, it catches exceptions that may be generated while reading the metadata file and\r\n            reports appropriate diagnostics.\r\n            Otherwise, if ":" 提供了，它会发现在阅读元数据文件时可能会生成的例外，并且\r\n            报告适当的诊断。\r\n            否则，如果\r\n"," it\r\n                doesn't check for invalid path characters, \r\n            ":" 它\r\n                不检查无效的路径字符, \r\n            \r\n","Uint16Array":"uint16array\r\n","\r\n            Label that can be the target of branches.\r\n            ":"\r\n            可以成为分支的目标的标签。\r\n            \r\n","\r\n            The input is newer than the tracking file.\r\n            ":"\r\n            输入比跟踪文件更新。\r\n            \r\n","\r\n            Returns a new INamedTypeSymbol with the given underlying type and (optional) element names.\r\n            ":"\r\n            返回具有给定的基础类型和（可选）元素名称的新的InamedTypeSymbol。\r\n            \r\n","Name to get alias info for.":"名称获取别名信息。\r\n","\r\n            Semantics associated with this branch (such as \"regular\", \"return\", \"throw\", etc).\r\n            ":"\r\n            与该分支相关的语义（例如“常规”，“返回”，“抛出”等）。\r\n            \r\n","s, and can also collect\r\n            state information to be used by other operation actions or code block end actions.\r\n            ":"S，也可以收集\r\n            其他操作操作或代码块结束操作将使用的状态信息。\r\n            \r\n","\r\n            If this option is combined with ":"\r\n            如果此选项与\r\n","\r\n            Format object using default options.\r\n            ":"\r\n            使用默认选项格式对象。\r\n            \r\n","\r\n            Exposes a host object to script code with the specified type restriction and options.\r\n            ":"\r\n            将主机对象公开具有指定类型限制和选项的脚本代码。\r\n            \r\n","\r\n            Checks if the given method has the signature \"Task CloseAsync()\".\r\n            ":"\r\n            检查给定方法是否具有签名“ task colleasync（）”。\r\n            \r\n","\r\n            Options that do not have any special compiler behavior and are passed to analyzers as-is.\r\n            ":"\r\n            没有任何特殊编译器行为并将其传递给分析仪的选项。\r\n            \r\n","\r\n            Creates a new syntax node with all whitespace and end of line trivia replaced with\r\n            regularly formatted trivia.\r\n            ":"\r\n            创建一个新的语法节点，并用所有空格和线路的结尾替换为\r\n            定期格式化的琐事。\r\n            \r\n","\r\n            Underlying string on which this SourceText instance is based\r\n            ":"\r\n            此SourceText实例所基于的基础字符串\r\n            \r\n","Analyzers whose diagnostics are required. All the given analyzers must be from the analyzers passed into the constructor of ":"需要诊断的分析仪。所有给定的分析仪都必须来自分析仪进入的构造函数\r\n","New C() From {do1, do2, do3}":"{do1，do2，do3}的新C（）\r\n","\r\n            The original definition of the property. If the property is constructed from another\r\n            symbol by type substitution, OriginalDefinition gets the original symbol, as it was \r\n            defined in source or metadata.\r\n            ":"\r\n            属性的原始定义。如果该物业是从另一个构建的\r\n            按类型替代的符号，原始定义获得原始符号，因为它是\r\n            在源或元数据中定义。\r\n            \r\n","\r\n            Gets the node's child node collection.\r\n            ":"\r\n            获取节点的子节点集合。\r\n            \r\n","\r\n            Method is an ordinary method.\r\n            ":"\r\n            方法是一种普通方法。\r\n            \r\n","\r\n            Get the static constructors for this type.\r\n            ":"\r\n            获取此类型的静态构造函数。\r\n            \r\n","\r\n            The path of the included file.\r\n            ":"\r\n            随附的文件的路径。\r\n            \r\n","\r\n            Failed binding.\r\n            ":"\r\n            绑定失败。\r\n            \r\n","\r\n            Creates metadata module from a file containing a portable executable image.\r\n            ":"\r\n            从包含便携式可执行映像的文件中创建元数据模块。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified options and debug port.\r\n            ":"\r\n            用指定选项和调试端口初始化新的V8运行时实例。\r\n            \r\n","Property - type is unsupported":"属性 - 类型不支持\r\n","\r\n            Returns true if this method returns by ref readonly.\r\n            ":"\r\n            如果此方法由ReadOnly返回，则返回true。\r\n            \r\n","An optional span within the tree to scope analysis.":"树内的可选跨度范围分析。\r\n","\r\n            More specialized diagnostics with additional information (e.g., ambiguity errors) can derive from this class to\r\n            provide access to additional information about the error, such as what symbols were involved in the ambiguity.\r\n            ":"\r\n            具有其他信息（例如，歧义错误）的更多专业诊断可以从此课程得出\r\n            提供有关错误的其他信息，例如歧义中涉及哪些符号。\r\n            \r\n","\r\n            Represents the results of an ":"\r\n            代表一个结果\r\n","\r\n            Used for logging all the paths which are \"touched\" (used) in any way\r\n            in the process of compilation.\r\n            ":"\r\n            用于以任何方式记录“触摸”（使用）的所有路径\r\n            在汇编过程中。\r\n            \r\n","The script engine in which the host object was exposed.":"主机对象暴露的脚本引擎。\r\n","\r\n            Clauses of the case.\r\n            ":"\r\n            案件的条款。\r\n            \r\n"," at the end.\r\n            ":" 在最后。\r\n            \r\n","MoveNextAsync":"moveNextAsync\r\n","\r\n            Merges aliases of the first observed reference (":"\r\n            合并第一个观察到的参考的别名（\r\n","\r\n            Gets the typed array's length.\r\n            ":"\r\n            获取打字阵列的长度。\r\n            \r\n","\r\n            if not specified (/moduleassemblyname command line option).\r\n            ":"\r\n            如果未指定（/moduleassemblyName命令行选项）。\r\n            \r\n","\r\n            This is the maximum length of a string in the PDB, assuming it is in UTF-8 format \r\n            and not (yet) null-terminated.\r\n            ":"\r\n            假设它是UTF-8格式，这是PDB中字符串的最大长度\r\n            而且还没有（尚未）终止。\r\n            \r\n","\r\n            Append analyzer actions from ":"\r\n            附加分析仪的操作\r\n","\r\n            Determines whether the underlying node or token or any of its descendant nodes, tokens or trivia have any\r\n            diagnostics on them. \r\n            ":"\r\n            确定基础节点或令牌或其任何后代节点，令牌或琐事是否有任何\r\n            他们的诊断。\r\n            \r\n","\r\n            Represents a Windows Script object.\r\n            ":"\r\n            代表Windows脚本对象。\r\n            \r\n","\r\n            Represents a metadata reference that can't be or is not yet resolved.\r\n            ":"\r\n            代表无法或尚未解决的元数据参考。\r\n            \r\n","\r\n            Represents a case clause with a pattern and an optional guard operation.\r\n            ":"\r\n            代表具有模式和可选警卫操作的案例子句。\r\n            \r\n","\r\n            operator. It is overloaded with ":"操作员。它超载\r\n","\r\n            The 'raise' accessor of the event.  Null if there is no raise method.\r\n            ":"\r\n            活动的“加薪”登录器。如果没有加薪方法，则为null。\r\n            \r\n"," instance that represents the loaded document.":" 代表加载文档的实例。\r\n","The version string to parse.":"解析版本字符串。\r\n"," method as well as\r\n            the actions registered during ":" 方法和\r\n            在期间注册的动作\r\n","\r\n            Current usage:\r\n             (1) C# this or base expression.\r\n             (2) VB Me, MyClass, or MyBase expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃或基本表达式。\r\n             （2）VB我，myclass或mybase表达。\r\n            \r\n","\r\n            3. Partially processed by one or more older requests that was either completed or cancelled: ":"\r\n            3.由一个或多个已完成或取消的旧请求部分处理：\r\n","The name of the property to locate.":"要查找的属性名称。\r\n","A new COM/ActiveX object of the specified type.":"指定类型的新com/activex对象。\r\n"," to ensure\r\n            dataflow function is a monotically increasing function. See https://en.wikipedia.org/wiki/Monotonic_function for understanding monotonic functions.\r\n            ":" 确保\r\n            数据流函数是单独增加的函数。请参阅https://en.wikipedia.org/wiki/monotonic_function，以了解单调功能。\r\n            \r\n"," to override it for individual type members.\r\n            ":" 为单个类型成员覆盖它。\r\n            \r\n","\r\n            The effective action to apply on this included ruleset.\r\n            ":"\r\n            适用此包含规则集的有效措施。\r\n            \r\n","First identifier to compare":"第一个标识符比较\r\n","\r\n            Checks if the given method has the signature \"void Close()\".\r\n            ":"\r\n            检查给定方法是否具有签名“ void Close（）”。\r\n            \r\n","\r\n            Represents a global method in symbol table.\r\n            ":"\r\n            代表符号表中的全局方法。\r\n            \r\n"," generic type. A generic type is\r\n            considered ":" 通用类型。通用类型是\r\n            经过考虑的\r\n"," is non-null, it succeeds for the ancestor.\r\n            Returns null if there is no such ancestor.\r\n            ":" 是非无效的，它为祖先成功。\r\n            如果没有这样的祖先，返回零。\r\n            \r\n","\r\n            Determines if the string 'value' end with string 'possibleEnd'.\r\n            ":"\r\n            确定字符串“值”端是否使用字符串'可能端'。\r\n            \r\n","\r\n            Exposes extension methods for displaying symbol descriptions.\r\n            ":"\r\n            揭示用于显示符号描述的扩展方法。\r\n            \r\n","\r\n            Represents a goto branch kind.\r\n            ":"\r\n            代表一个goto分支。\r\n            \r\n","\r\n            For implicitly declared delegate types returns the EventSymbol that caused this\r\n            delegate type to be generated.\r\n            For all other types returns null.\r\n            Note, the set of possible associated symbols might be expanded in the future to \r\n            reflect changes in the languages.\r\n            ":"\r\n            对于隐式宣布的委托类型，返回造成此的事件符号\r\n            要生成的委托类型。\r\n            对于所有其他类型，返回null。\r\n            注意，将来可能会扩展一组可能的相关符号\r\n            反映语言的变化。\r\n            \r\n","\r\n            String option to configure names of null check validation methods (separated by '|') that validate arguments passed to the method are non-null for CA1062 (https://docs.microsoft.com/visualstudio/code-quality/ca1062).\r\n            Allowed method name formats:\r\n              1. Method name only (includes all methods with the name, regardless of the containing type or namespace)\r\n              2. Fully qualified names in the symbol's documentation ID format: https://github.com/dotnet/csharplang/blob/master/spec/documentation-comments.md#id-string-format\r\n                 with an optional \"M:\" prefix.\r\n            ":"\r\n            配置NULL检查验证方法的名称（由'|'分开）的字符串选项，验证传递给该方法的参数为CA1062（https://docs.microsoft.com/visalstudio/code-quode-quality/ca1062）。\r\n            允许的方法名称格式：\r\n              1.仅方法名称（包括所有具有名称的方法，无论包含类型或名称空间如何）\r\n              2.符号文档ID格式中的完全合格名称：https：//github.com/dotnet/csharplang/blob/blob/master/spec/documentation-comments.md#id-string-format\r\n                 带有可选的“ M：”前缀。\r\n            \r\n",") if not available.\r\n            ":"）如果没有。\r\n            \r\n","\r\n            Symbol is a pointer type.\r\n            ":"\r\n            符号是指针类型。\r\n            \r\n","\r\n             In VB, the initializer for this node is only ever used for explicit array bounds initializers. This node corresponds to\r\n             the VariableDeclaratorSyntax in C# and the ModifiedIdentifierSyntax in VB.\r\n            \r\n             This interface is reserved for implementation by its associated APIs. We reserve the right to\r\n             change it in the future.\r\n             ":"\r\n             在VB中，该节点的初始化程序仅用于显式数组界初始化器。该节点对应于\r\n             C＃中的variabledeclaratorsyntax和Vb中的修改后识别器元素。\r\n            \r\n             该界面保留用于通过其关联的API实现。我们保留权利\r\n             将来更改它。\r\n             \r\n","\r\n            An argument string (cookie) passed to the custom marshaller at run time.\r\n            ":"\r\n            一个参数字符串（cookie）在运行时传递给自定义卫生员。\r\n            \r\n","\r\n            The input ":"\r\n            输入\r\n","\r\n            Zero or more positional arguments for the attribute constructor.\r\n            ":"\r\n            属性构造函数的零或更多位置参数。\r\n            \r\n","\r\n            Maps a subset of immutable array to another immutable array.\r\n            ":"\r\n            将一部分阵列的子集映射到另一个不可变的阵列。\r\n            \r\n",") of the last ":"）\r\n","Null if the type can't be found.":"null如果找不到类型。\r\n","\r\n            For each assembly referenced by this assembly (":"\r\n            对于此组件引用的每个组件（\r\n","\r\n            The kind of token, given its position in the syntax. This differs from ":"\r\n            鉴于其在语法中的位置，这种令牌的种类。这与\r\n","\r\n              Looks up a localized string similar to Windows PDB writer is not available -- could not find Microsoft.DiaSymReader.Native.{0}.dll.\r\n            ":"\r\n              查找与Windows PDB Writer类似的本地化字符串 - 找不到Microsoft.diasymreader.native。{0} .dll。\r\n            \r\n","\r\n            A symbol representing a discarded value, e.g. a symbol in the result of\r\n            GetSymbolInfo for ":"\r\n            代表废弃值的符号，例如一个符号\r\n            GetSymbolinfo\r\n","Invalid characters in assembly name":"汇编名称中无效的字符\r\n","\r\n            Count of Operation actions.\r\n            ":"\r\n            操作动作计数。\r\n            \r\n","base":"根据\r\n","\r\n            Skip execution of ":"\r\n            跳过执行\r\n","Reference to the target location.":"参考目标位置。\r\n","\r\n            A helper used to efficiently cache ":"\r\n            用于有效缓存的助手\r\n","\r\n            Returns the sequence of just the separator tokens.\r\n            ":"\r\n            返回仅分离器令牌的序列。\r\n            \r\n"," differ in length.":" 长度不同。\r\n","\r\n            Represents a C# lock or a VB SyncLock statement.\r\n            ":"\r\n            表示C＃锁定或VB Synclock语句。\r\n            \r\n","The script engine in which the host type will be used.":"将使用主机类型的脚本引擎。\r\n","\r\n            Array of names for types from Cor Library.\r\n            The names should correspond to ids from TypeId enum so\r\n            that we could use ids to index into the array\r\n            ":"\r\n            COR库中的类型名称数组。\r\n            名称应与TypeID枚举的ID相对应\r\n            我们可以使用ID索引到数组\r\n            \r\n","\r\n            Combine two paths, the first of which may be absolute.\r\n            ":"\r\n            结合两个路径，其中第一个可能是绝对的。\r\n            \r\n","A IEqualityComparer used to compare keys.":"一个用来比较键的iequalityComparer。\r\n","The type of the first parameter of the bound function.":"绑定函数的第一个参数的类型。\r\n","\r\n            Writes a Boolean value to the stream.\r\n            ":"\r\n            写下布尔值。\r\n            \r\n","\r\n            Gets a FileLinePositionSpan for a TextSpan and the information whether this span is considered to be hidden or not. \r\n            FileLinePositionSpans are used primarily for diagnostics and source locations.\r\n            This method combines a call to GetLineSpan and IsHiddenPosition.\r\n            ":"\r\n            获取用于文本SPAN的FilelinePositionSpan以及是否认为该跨度是否被隐藏的信息。\r\n            FilelinePositionSpans主要用于诊断和源位置。\r\n            此方法结合了呼叫Linespan和IshidendPosition的呼吁。\r\n            \r\n",") and\r\n             catch the exception, unless the operation was cancelled at the request of\r\n             ":"） 和\r\n             捕获例外，除非按要求取消操作\r\n             \r\n","The input string as a char array":"输入字符串作为char数组\r\n","To cancel the emit process.":"取消发射过程。\r\n","\r\n            This method adds computed outputs for the given source key to the output graph\r\n            ":"\r\n            此方法将给定源键的计算输出添加到输出图中\r\n            \r\n","\r\n            A signed 8 bit integer.\r\n            ":"\r\n            一个签名的8位整数。\r\n            \r\n","\r\n            List of entries sorted in source order, each of which captures a\r\n            position in the supplied syntax tree and the set of diagnostics (warnings)\r\n            whose reporting should either be suppressed or enabled at this position.\r\n            ":"\r\n            源顺序排序的条目列表，每个条目都捕获了\r\n            在提供的语法树和诊断集（警告）中的位置\r\n            其报告应在此职位上被抑制或启用。\r\n            \r\n","A formatted string representation of the symbol with the given nullability.":"符号的格式字符串表示，具有给定的可取消性。\r\n","\r\n            Get all the files involved in resolving this ruleset.\r\n            ":"\r\n            获取所有涉及解决此规则集的文件。\r\n            \r\n","\r\n            Accessible wherever either protected or friend members are accessible\r\n            (less restrictive than ":"\r\n            可以访问的地方可访问或可以访问朋友的会员\r\n            （比限制少于\r\n"," method must have been invoked and ":" 方法必须被调用，并且\r\n",",\r\n            but can be done more efficiently.\r\n            ":"，，，，\r\n            但是可以更有效地完成。\r\n            \r\n","\r\n            The base implementation is a linear search. This should be overridden\r\n            if a derived class can implement it more efficiently.\r\n            ":"\r\n            基本实现是线性搜索。这应该被覆盖\r\n            如果派生类可以更有效地实现它。\r\n            \r\n","\r\n            Gets a list of all the tokens in the full span of this node.\r\n            ":"\r\n            在此节点的整个跨度中获取所有令牌的列表。\r\n            \r\n","\r\n            Binds the given expression using the normal expression binding rules\r\n            that would occur during normal binding of expressions.\r\n            ":"\r\n            使用正常表达式结合规则绑定给定表达式\r\n            这将在表达正常结合期间发生。\r\n            \r\n","\r\n            The resolved path or null if the path can't be resolved or does not exist.\r\n            ":"\r\n            解析的路径或null，如果路径无法解析或不存在。\r\n            \r\n"," method used in a deconstruction.\r\n            ":" 解构中使用的方法。\r\n            \r\n","\r\n            Optional parent control flow graph for this graph.\r\n            Non-null for a control flow graph generated for a local function or a lambda.\r\n            Null otherwise.\r\n            ":"\r\n            此图的可选父对照流程图。\r\n            对于本地函数或lambda生成的控制流程图的非null。\r\n            否则为无效。\r\n            \r\n","\r\n            Representation of a resource whose contents are to be embedded in the output assembly.\r\n            ":"\r\n            将内容嵌入到输出组件中的资源的表示。\r\n            \r\n"," with the specified nodes or tokens added to the end.\r\n            ":" 将指定的节点或令牌添加到末端。\r\n            \r\n","\r\n            Represents a conversion operation.\r\n            ":"\r\n            代表转换操作。\r\n            \r\n"," whose compilation start actions are to be executed.":" 将执行其编译起始操作。\r\n","Diagnostic bag where to report resolution errors.":"诊断袋在哪里报告分辨率错误。\r\n"," if the encoding is unspecified.\r\n            If the encoding is not specified the resulting ":" 如果未指定编码。\r\n            如果未指定编码\r\n","\r\n            Returns the number of weak references in this list. \r\n            Note that some of them might not point to live objects anymore.\r\n            ":"\r\n            返回此列表中弱参考的数量。\r\n            请注意，其中一些可能不再指向活物体。\r\n            \r\n","\r\n            Gets a collection of property names from the ":"\r\n            从\r\n","\r\n              Indicates the default options for word parsing.\r\n            ":"\r\n              指示单词解析的默认选项。\r\n            \r\n","\r\n            Exposed for testing purposes only.\r\n            ":"\r\n            仅用于测试目的。\r\n            \r\n","\r\n            Task to compute HostSessionStartAnalysisScope for session wide analyzer actions, i.e. AnalyzerActions registered by analyzer's Initialize method.\r\n            These are run only once per every analyzer. \r\n            ":"\r\n            计算会话范围分析仪操作的hostsessionstartanalysisscope的任务，即分析仪的初始化方法注册的分析操作。\r\n            每个分析仪仅运行一次。\r\n            \r\n","\r\n            Absolute path of the error log file or null if not specified.\r\n            ":"\r\n            如果未指定，则错误日志文件或null的绝对路径。\r\n            \r\n","\r\n            Contains aggregated information about a control flow branch.\r\n            ":"\r\n            包含有关控制流分支的汇总信息。\r\n            \r\n","\r\n            Stores all the tracked ":"\r\n            存储所有跟踪的\r\n","An array containing optional arguments and the new property value.":"包含可选参数和新属性值的数组。\r\n","\r\n            The common name used for the Visual Basic language.\r\n            ":"\r\n            视觉基本语言使用的通用名称。\r\n            \r\n"," may have\r\n            ":" 可能有\r\n            \r\n"," The metadata name of generic types includes the \"`1\", \"`2\" etc. suffix that\r\n            indicates the number of type parameters (it does not include, however, names of\r\n            containing types or namespaces). ":" 通用类型的元数据名称包括“ 1”，'2“等。后缀\r\n            指示类型参数的数量（不包括\r\n            包含类型或名称空间）。\r\n","\r\n            Determines whether the position lies within the span.\r\n            ":"\r\n            确定位置是否位于跨度。\r\n            \r\n"," directive (if any) and for ":" 指令（如果有）和\r\n"," if it doesn't exist.":" 如果不存在。\r\n","\r\n            Optional semantic model provider for this compilation.\r\n            ":"\r\n            此汇编的可选语义模型提供商。\r\n            \r\n","True if display name parsed correctly.":"如果显示名称正确解析，则为正确。\r\n"," recursively on the target assembly and on all its transitive dependencies.\r\n            False to apply ":" 在目标组件及其所有传递依赖性上递归。\r\n            错误申请\r\n"," (C#) or outside of ":" （C＃）或外部\r\n","Specifies whether slot type should have pinned modifier and whether slot should have byref constraint.":"指定插槽类型是否应该固定修饰符以及插槽是否应具有ByRef约束。\r\n"," will have 3 ":" 将有3个\r\n","\r\n            Gets the maximum ordinal of a conditional or fall through successor of the given basic block.\r\n            Returns -1 if the block has no conditional or fall through successor,\r\n            for example, if the block only has a structured exception handling branch for throw operation.\r\n            ":"\r\n            通过给定基本块的后继者获得有条件的最大序列或跌落。\r\n            返回-1如果块没有条件或通过后继者跌倒，\r\n            例如，如果块仅具有结构化的异常处理分支以进行投掷操作。\r\n            \r\n","\r\n              Looks up a localized string similar to Roslyn compiler server reports different protocol version than build task..\r\n            ":"\r\n              查找类似于Roslyn编译器服务器类似的本地化字符串，报告的协议版本与构建任务不同。\r\n            \r\n","\r\n            Generate a ConstantValue of the same integer type as the argument\r\n            and offset by the given non-negative amount. Return ConstantValue.Bad\r\n            if the generated constant would be outside the valid range of the type.\r\n            ":"\r\n            生成与参数相同整数类型的常数\r\n            并抵消给定的非负数。返回ConstantValue.bad\r\n            如果生成的常数将超出类型的有效范围。\r\n            \r\n"," is false),\r\n            or lambda body syntax (":" 是错误的），\r\n            或lambda身体语法（\r\n","An ordered set of fully qualified paths which are searched when locating a cryptographic key file.":"定位加密密钥文件时搜索的一组有序的完全合格的路径。\r\n","\r\n            Walks down consequtive parenthesized operations until an operand is reached that isn't a parenthesized operation.\r\n            ":"\r\n            沿着连接的括号操作走去，直到达到操作数而不是括号的操作为止。\r\n            \r\n"," is used to refer to the value\r\n            of ":" 用于参考值\r\n            的\r\n","\r\n            Returns true if the field should be imported. Visibility\r\n            and the value of ":"\r\n            如果应该导入该字段，则返回为true。能见度\r\n            和价值\r\n","\r\n                 nodes with 1, 2, and 3 as their arguments, respectively.\r\n            ":"\r\n                 以1、2和3为论点的节点。\r\n            \r\n","\r\n            The following code demonstrates delegating a callback to a script function.\r\n            It assumes that an instance of ":"\r\n            以下代码演示了将回调委托到脚本函数。\r\n            它假设一个实例\r\n","One or more indices that identify the element to set.":"一个或多个识别要设置的元素的索引。\r\n","\r\n            Represents a binary (\"and\" or \"or\") pattern.\r\n            ":"\r\n            代表二进制（“和“或“或”）模式。\r\n            \r\n","\r\n            Doesn't lock.\r\n            ":"\r\n            不锁定。\r\n            \r\n","The length of the sequence.":"序列的长度。\r\n","GetResult":"GetResult\r\n","\r\n            Represents a binding of an event.\r\n            ":"\r\n            代表事件的绑定。\r\n            \r\n","\r\n            Analyzer telemetry info (register action counts and execution times).\r\n            ":"\r\n            分析仪遥测信息（登记措施计数和执行时间）。\r\n            \r\n","\r\n            Returns true if the given analyzer has enabled concurrent execution by invoking ":"\r\n            如果给定的分析仪通过调用启用并发执行，则返回true\r\n","\r\n            References to analyzers supplied on the command line.\r\n            ":"\r\n            在命令行上提供的分析仪的引用。\r\n            \r\n","\r\n            Specifies the kinds of a piece of classified text (SymbolDisplayPart).\r\n            ":"\r\n            指定一件分类文本（SymboldisPlayPart）的种类。\r\n            \r\n","\r\n            Represents one arm of a switch expression.\r\n            ":"\r\n            代表开关表达式的一个臂。\r\n            \r\n","Delegate to get a semantic model for the given syntax tree which can be shared across analyzers.":"委托获得给定语法树的语义模型，该模型可以在分析仪之间共享。\r\n","\r\n            Represents a late-bound reference to a member of a class or struct.\r\n            ":"\r\n            代表对类或结构的成员的后期引用。\r\n            \r\n","\r\n            This property is used as an alternative to ":"\r\n            此属性被用作替代\r\n","\r\n              Looks up a localized string similar to Previous submission has errors..\r\n            ":"查找类似于先前提交的本地化字符串有错误。\r\n            \r\n"," returns non-null.\r\n            ":" 返回非编号。\r\n            \r\n","\r\n            Get the current ":"\r\n            获取电流\r\n","\r\n            Marks the given file as fully syntactically analyzed for the given analyzers.\r\n            ":"\r\n            标记给定的文件是针对给定的分析仪的完全句法分析。\r\n            \r\n","\r\n            Underlying operation to test.\r\n            ":"\r\n            测试的基础操作。\r\n            \r\n","This property can only be accessed on the bag after ":"此属性只能在袋子上访问\r\n","type parameter":"类型参数\r\n"," Field - type is unsupported ":" 字段 - 类型不支持\r\n","Options that are passed to analyzers.":"传递给分析仪的选项。\r\n","\r\n             Gets the available named static member symbols in the context of the specified location and optional container.\r\n             Only members that are accessible and visible from the given location are returned.\r\n            \r\n             Non-reduced extension methods are considered, since they are static methods.\r\n             ":"\r\n             在指定位置和可选容器的上下文中获取可用的静态成员符号。\r\n             仅返回从给定位置可访问和可见的成员。\r\n            \r\n             由于它们是静态方法，因此考虑了未还原的扩展方法。\r\n             \r\n"," with the specified trivia added to the end.\r\n            ":" 随着指定的琐事添加到末端。\r\n            \r\n","\r\n            Open a special custom data section to emit token to source span mapping information into. \r\n            Opening this section while a method is already open or vice versa is an error.\r\n            ":"\r\n            打开一个特殊的自定义数据部分，以发出令牌以源映射信息。\r\n            在方法已经打开时打开此部分，反之亦然是错误。\r\n            \r\n","\r\n            The length of the text represented by ":"\r\n            文本的长度由\r\n","\r\n            Count of code block actions.\r\n            ":"\r\n            代码块操作的计数。\r\n            \r\n"," is false.\r\n            If the line mapping directive marks hidden code ":" 是错误的。\r\n            如果行映射指令标记隐藏代码\r\n","\r\n            Context for a code block action or code block end action.\r\n            A code block action or code block end action can use a ":"\r\n            代码块操作或代码块结束操作的上下文。\r\n            代码块操作或代码块结束操作可以使用\r\n"," for a span in a file.\r\n            ":" 对于文件中的跨度。\r\n            \r\n","\r\n            Returns all the descendant operations of the given ":"\r\n            返回给定的所有后代行动\r\n","\r\n            Initializes a new VBScript engine instance with the specified programmatic\r\n            identifier, name, list of supported file name extensions, and options.\r\n            ":"\r\n            用指定的程序化初始化新的VBScript引擎实例\r\n            标识符，名称，支持的文件名扩展名列表和选项。\r\n            \r\n","The custom attribute's namespace in metadata format (case sensitive)":"自定义属性的命名空间以元数据格式（情况敏感）\r\n","Normalized path, or null if ":"标准化路径或null如果\r\n","\r\n            No scripting. Used for .cs/.vb file parsing.\r\n            ":"\r\n            没有脚本。用于.cs/.vb文件解析。\r\n            \r\n","\r\n            The source language of the IOperation. Possible values are ":"\r\n            ioperation的源语言。可能的值是\r\n"," to re-allocate storage space for a single array variable.\r\n            ":" 重新分配单个数组变量的存储空间。\r\n            \r\n","\r\n            Collection value over which the loop iterates.\r\n            ":"循环迭代的收集价值。\r\n            \r\n","\r\n            Creates a new list with the specified element replaced with the new node.\r\n            ":"\r\n            创建一个新列表，指定元素被新节点替换。\r\n            \r\n","\r\n            Variable declaration in the statement.\r\n            ":"\r\n            声明中的可变声明。\r\n            \r\n"," when creating the diagnostic message with this descriptor.\r\n            ":" 使用此描述符创建诊断消息时。\r\n            \r\n","\r\n            A type used as a tag that indicates which type of modification applies to the storage location.\r\n            ":"\r\n            用作标签的类型，指示哪种修改适用于存储位置。\r\n            \r\n","\r\n            The CSP container containing the key with which to sign the output.\r\n            ":"\r\n            CSP容器，其中包含可以签署输出的密钥。\r\n            \r\n","\r\n            Creates a single-module assembly.\r\n            ":"\r\n            创建一个单模型组件。\r\n            \r\n","The file path to the rule set file":"规则集文件的文件路径\r\n","\r\n            This is the first header in the custom debug info blob.\r\n            ":"这是自定义调试信息BLOB中的第一个标题。\r\n            \r\n","\r\n            Kinds of cases.\r\n            ":"\r\n            种类。\r\n            \r\n"," prior to generation to \r\n            obtain an instance of ":" 发电之前\r\n            获得一个实例\r\n","\r\n            Symbol is a named type (e.g. class).\r\n            ":"\r\n            符号是命名类型（例如类）。\r\n            \r\n"," uses this provider to ensure that semantic model instances\r\n            are shared between the compiler and analyzers for improved analyzer execution performance. The underlying\r\n            ":" 使用此提供商确保语义模型实例\r\n            在编译器和分析仪之间共享，以提高分析仪的执行绩效。基础\r\n            \r\n","using Roslyn.Utilities":"使用Roslyn.utilities\r\n"," if not specified.\r\n            ":" 如果未指定。\r\n            \r\n","A disposable ":"一次性\r\n","\r\n            Method to be invoked.\r\n            ":"\r\n            被调用的方法。\r\n            \r\n","\r\n            Represents the combination of an IL offset and a source text span.\r\n            ":"\r\n            表示IL偏移量和源文本跨度的组合。\r\n            \r\n","The new syntax trees.":"新的语法树。\r\n","signingStream":"标志流\r\n","\r\n            Abstract value content data value for ":"\r\n            抽象价值内容数据值的\r\n","\r\n            Models an explicit implementation or override of a base class virtual method or an explicit implementation of an interface method.\r\n            ":"\r\n            建模基类虚拟方法的明确实现或覆盖接口方法的显式实现。\r\n            \r\n","s are equal.":"S相等。\r\n","\r\n            Returns a new anonymous type symbol with the given member types, names, and source locations.\r\n            Anonymous type members will be readonly by default.  Writable properties are\r\n            supported in VB and can be created by passing in ":"\r\n            返回具有给定成员类型，名称和源位置的新的匿名类型符号。\r\n            默认情况下，匿名类型成员将被阅读。可写的特性是\r\n            在VB中支持，可以通过传递来创建\r\n","Returns true if there were any errors, false otherwise.":"如果有任何错误，则返回为true，否则为false。\r\n","\r\n            Some string constant values can have large costs to realize. To compensate, we realize\r\n            constant values lazily, and hold onto a weak reference. If the next time we're asked for the constant\r\n            value the previous one still exists, we can avoid rerealizing it. But we don't want to root the constant\r\n            value if it's not being used.\r\n            ":"\r\n            某些字符串恒定值可以实现巨大的成本。为了补偿，我们意识到\r\n            固定的值懒惰，并保持弱参考。如果下次我们要求常数\r\n            值仍然存在，我们可以避免重新化它。但是我们不想扎根常数\r\n            值如果不使用它。\r\n            \r\n","\r\n            Current Usage:\r\n             (1) C# null-coalescing assignment operation ":"\r\n            当前用法：\r\n             （1）C＃NULL-COALESCING分配操作\r\n","\r\n            Recursively pop nested tuple values off the stack after visiting\r\n            ":"\r\n            访问后递归弹出的嵌套元组值\r\n            \r\n","\r\n            Constants for producing and consuming streams of binary custom debug info.\r\n            ":"\r\n            用于生产和消费二进制定制调试信息流的常数。\r\n            \r\n","A delegate which calls ":"呼叫的代表\r\n","\r\n            Called to compare two weakly named identities with the same name.\r\n            ":"\r\n            被称为比较两个弱命名的身份和同名的身份。\r\n            \r\n","\r\n            Values for ErrorCode/ERRID that are used internally by the compiler but are not exposed.\r\n            ":"\r\n            编译器内部使用但未暴露的错误代码/错误值。\r\n            \r\n","true if the specified object is a ":"如果指定的对象是一个\r\n","\r\n            Specifies whether building compilation may use multiple threads.\r\n            ":"\r\n            指定建筑汇编是否可以使用多个线程。\r\n            \r\n","The file path (pre-normalization) to use in the PDB.":"在PDB中使用的文件路径（预归一化）。\r\n","\r\n            following.\r\n            ":"\r\n            下列的。\r\n            \r\n","True if a non-null literal value was found, false otherwise.":"如果发现了非零文字价值，则为否则为错误。\r\n","\r\n            Current text to validate.\r\n            ":"\r\n            当前的文本要验证。\r\n            \r\n","The reference path to resolve. May be absolute or relative path.":"解决的参考路径。可能是绝对的或相对路径。\r\n"," that is needed to store all final trivia in a ":" 需要将所有最终琐事存储在\r\n"," or allocation for the ":" 或分配\r\n"," to favor speed over completeness.":" 偏爱速度而不是完整性。\r\n","\r\n            Total execution time.\r\n            ":"\r\n            总执行时间。\r\n            \r\n",".\r\n            Depending on analyzers' behavior, some diagnostics that would be reported for the tree by an analysis of the complete compilation can be absent.\r\n            ":"。\r\n            根据分析仪的行为，可能不存在通过完整汇编的分析来报告树的某些诊断。\r\n            \r\n","Type handling assembly's resource management. Typically, this is the static class generated for the resources file from which resources are accessed.":"类型处理组件的资源管理。通常，这是用于访问资源的资源文件生成的静态类。\r\n","\r\n            Option to configure analyzed output kinds, i.e. ":"\r\n            配置分析的输出类型的选项，即\r\n"," will return a meaningful value.\r\n            ":" 将返回有意义的价值。\r\n            \r\n","\r\n            Syntax trees on which we need to perform syntax analysis.\r\n            ":"\r\n            我们需要执行语法分析的语法树。\r\n            \r\n","\r\n            Refers to the operation for declaring a new local variable or reference an existing variable or an expression.\r\n            ":"\r\n            请参考声明新的本地变量或引用现有变量或表达式的操作。\r\n            \r\n","\r\n            Gets or sets the maximum cache size for the document category.\r\n            ":"\r\n            获取或设置文档类别的最大缓存大小。\r\n            \r\n","\r\n            Represents a file referenced by an assembly.\r\n            ":"\r\n            代表一个由程序集引用的文件。\r\n            \r\n"," from bulk configuration analyzer config options, i.e.\r\n                'dotnet_analyzer_diagnostic.category-%RuleCategory%.severity = %severity%'\r\n                    or\r\n                'dotnet_analyzer_diagnostic.severity = %severity%'\r\n            ":" 从批量配置分析仪配置选项，即\r\n                'dotnet_analyzer_diagnostic.category-％rulecategory％.severity =％严重性％'\r\n                    或者\r\n                'dotnet_analyzer_diagnostic.severity =％严重性％'\r\n            \r\n","\r\n            The type of the event. \r\n            ":"\r\n            事件的类型。\r\n            \r\n"," is true the reference manager attempts to resolve assembly identities,\r\n            that do not match any explicit metadata references passed to the compilation (or specified via #r directive).\r\n            For each such assembly identity ":" 是真的，参考管理器试图解决汇编身份，\r\n            不匹配任何传递到汇编的明确元数据引用（或通过#R指令指定）。\r\n            对于每个这样的装配身份\r\n","\r\n            Immutable span represented by a pair of line number and index within the line.\r\n            ":"\r\n            不可变的跨度由行中的一对线号和索引表示。\r\n            \r\n","\r\n            This represents the set of document names for the #line / #ExternalSource directives\r\n            that we need to emit into the PDB (in the order specified in the array).\r\n            ":"\r\n            这代表#Line / #externalsource指令的一组文档名称\r\n            我们需要发射到PDB中（按数组中指定的顺序）。\r\n            \r\n","\r\n            This property specifies the maximum number of prepared or compiled documents of the\r\n            current category to be cached by script engines. Its initial value is 1024.\r\n            ":"\r\n            此属性指定了最大数量的准备或编译文档\r\n            当前类别将由脚本引擎缓存。它的初始值为1024。\r\n            \r\n","\r\n            Gets the document category for standard ":"\r\n            获取标准的文档类别\r\n","\r\n            Declaration introduced by the using statement. Null if the using statement does not declare any variables.\r\n            ":"\r\n            使用语句引入的声明。 null如果使用语句未声明任何变量。\r\n            \r\n","\r\n              Looks up a localized string similar to The span does not include the start of a line..\r\n            ":"\r\n              查找类似于跨度的局部字符串不包括行的开始。\r\n            \r\n","\r\n            Gets the available named namespace and type symbols in the context of the specified location and optional container.\r\n            Only members that are accessible and visible from the given location are returned.\r\n            ":"\r\n            在指定位置和可选容器的上下文中获取可用的名称名称命名空间和类型符号。\r\n            仅返回从给定位置可访问和可见的成员。\r\n            \r\n","\r\n            Filters out operations that are implicit and have no explicit descendant with a constant value or a non-null type.\r\n            ":"\r\n            过滤式操作，这些操作是隐式的，并且没有具有恒定值或非NULL类型的显式后代。\r\n            \r\n","The element type for the host array type to import.":"主机数组类型的元素类型导入。\r\n","\r\n            PERF: Track if we are within an ":"\r\n            perf：跟踪我们是否在\r\n","\r\n            Returns semantic diagnostics produced by all ":"\r\n            所有人产生的返回语义诊断\r\n","\r\n            The unmanaged element type of the unmanaged array.\r\n            -1 if it should be omitted from the marshal blob.\r\n            ":"\r\n            非托管阵列的非托管元素类型。\r\n            -1如果应该从元帅斑点中省略它。\r\n            \r\n","\r\n            Gets symbol information about a syntax node.\r\n            ":"\r\n            获取有关语法节点的符号信息。\r\n            \r\n","\r\n            Bound type of the attribute to decode.\r\n            ":"\r\n            属性的绑定类型为解码。\r\n            \r\n","The rules node from which to loop through each child rule node":"从每个子规则节点循环的规则节点\r\n","\r\n            Add another DiagnosticBag to the bag and free the argument.\r\n            ":"\r\n            将另一个诊断袋添加到包中，并释放论点。\r\n            \r\n","\r\n            Reads content of a source file.\r\n            ":"\r\n            读取源文件的内容。\r\n            \r\n","\r\n            The path passed to ":"\r\n            路径传递给\r\n","\r\n            For a type written as \"int[][,]\" in C#, then\r\n              a) setting this option will produce \"int[,][]\", and\r\n              b) not setting this option will produce \"int[][,]\".\r\n            ":"\r\n            对于C＃中写入“ int [] [，]”的类型\r\n              a）设置此选项将产生“ int [，] []”，并且\r\n              b）不设置此选项会产生“ int [] [，]”。\r\n            \r\n","\r\n             Get metadata representation for the PE file.\r\n             ":"\r\n             获取PE文件的元数据表示。\r\n             \r\n","\r\n            Abstract value domain to merge and compare ":"\r\n            抽象价值域合并和比较\r\n","\r\n            Given a path to an assembly, returns its MVID (Module Version ID).\r\n            May throw.\r\n            ":"\r\n            给定一个组件的路径，返回其MVID（模块版本ID）。\r\n            可能会扔。\r\n            \r\n","\r\n            Takes an exception produced while writing to a file stream and produces a diagnostic.\r\n            ":"\r\n            在写入文件流并产生诊断时会产生异常。\r\n            \r\n","\r\n            Try parsing a correctly-formatted float floating-point literal into the nearest representable float\r\n            using IEEE round-to-nearest-ties-to-even rounding mode. Behavior is not defined for inputs that are\r\n            not valid C# floating-point literals.\r\n            ":"\r\n            尝试将正确形成的浮点浮点字面文字解析到最近代表的浮点\r\n            使用IEEE往返界限到连续的圆形模式。行为未针对输入定义\r\n            无效C＃浮点文字。\r\n            \r\n","\r\n            The set of variables that are captured outside a region.\r\n            ":"\r\n            在区域外捕获的一组变量。\r\n            \r\n","The token to be replaced.":"要替换的令牌。\r\n","\r\n            Internal representation of an incremental output\r\n            ":"\r\n            增量输出的内部表示\r\n            \r\n","\r\n            Split a command line by the same rules as Main would get the commands except the original\r\n            state of backslashes and quotes are preserved.  For example in normal Windows command line \r\n            parsing the following command lines would produce equivalent Main arguments:\r\n            \r\n                - /r:a,b\r\n                - /r:\"a,b\"\r\n            \r\n            This method will differ as the latter will have the quotes preserved.  The only case where \r\n            quotes are removed is when the entire argument is surrounded by quotes without any inner\r\n            quotes. \r\n            ":"\r\n            按与MAIN相同规则的命令行分开，除原始命令外\r\n            保留了后斜切和报价的状态。例如在普通Windows命令行中\r\n            解析以下命令行将产生同等的主要参数：\r\n            \r\n                 -  /r：a，b\r\n                 -  /r：“ A，B”\r\n            \r\n            此方法将有所不同，因为后者将保留报价。唯一的情况\r\n            删除引号是当整个论点被引号包围时，没有任何内心\r\n            引号。\r\n            \r\n","\r\n            Get all values associated with K, in the order they were added.\r\n            Returns empty read-only array if no values were present.\r\n            ":"\r\n            按照添加的顺序获取与K相关的所有值。\r\n            如果不存在值，则返回空读数数组。\r\n            \r\n","\r\n            Provides information about statements which transfer control in and out of a region. This\r\n            information is returned from a call to ":"\r\n            提供有关在区域内外转移控制的陈述的信息。这个\r\n            信息从通话中返回\r\n","\r\n            Initializes a new V8 runtime instance with the specified name, resource constraints, options, and debug port.\r\n            ":"\r\n            初始化带有指定名称，资源约束，选项和调试端口的新的V8运行时实例。\r\n            \r\n",".\r\n            The name can be an arbitrary string that doesn't contain NUL character, the legality of the culture name is not validated.\r\n            ":"。\r\n            该名称可以是不包含NUL字符的任意字符串，文化名称的合法性未得到验证。\r\n            \r\n","\r\n              Looks up a localized string similar to Resource data provider should return non-null stream.\r\n            ":"\r\n              查找类似于资源数据提供商的本地化字符串应返回非NULL流。\r\n            \r\n","Stack>int>":"堆栈> int>\r\n","\r\n            Represents a script line observed by the V8 CPU profiler.\r\n            ":"\r\n            代表V8 CPU Profiler观察到的脚本行。\r\n            \r\n","\r\n            Variables to be fixed.\r\n            ":"\r\n            要固定的变量。\r\n            \r\n","\r\n            Lookup a type defined in referenced assembly.\r\n            ":"\r\n            查找引用组件中定义的类型。\r\n            \r\n","The number of elements copied.":"复制元素的数量。\r\n"," with the specified element replaced with new trivia.\r\n            ":" 指定的元素被新的琐事取代。\r\n            \r\n","The current value of the host variable.":"主机变量的当前值。\r\n","\r\n            This property currently applies only to modules. If specified, the callback is invoked\r\n            the first time the module attempts to retrieve its context information. The properties\r\n            it returns are made available to the module implementation. This mechanism can be used\r\n            to expose host resources selectively, securely, and without polluting the script\r\n            engine's global namespace.\r\n            ":"\r\n            此属性当前仅适用于模块。如果指定，请调用回调\r\n            模块第一次尝试检索其上下文信息。属性\r\n            它的返回可用于模块实施。该机制可以使用\r\n            选择性，安全且无需污染脚本\r\n            引擎的全局名称空间。\r\n            \r\n"," instances across a given statement in a basic block.\r\n            ":" 基本块中给定语句的实例。\r\n            \r\n","\r\n            Current Usage:\r\n             (1) C# using declaration\r\n             (1) C# asynchronous using declaration\r\n            ":"\r\n            当前用法：\r\n             （1）C＃使用声明\r\n             （1）使用声明的c＃异步\r\n            \r\n","\r\n            The following code imports the\r\n            ":"\r\n            以下代码导入\r\n            \r\n","\r\n            A signed 16 bit integer.\r\n            ":"\r\n            一个签名的16位整数。\r\n            \r\n"," regions. Doesn't contain any ":"地区。不包含任何\r\n","\r\n            Represents a case clause with custom relational operator for comparison.\r\n            ":"\r\n            代表具有自定义关系运营商的案例子句进行比较。\r\n            \r\n","\r\n            The CLI spec says that custom modifiers must precede the ByRef type code in the encoding of a parameter.\r\n            Unfortunately, the managed C++ compiler emits them in the reverse order.  In order to avoid breaking\r\n            interop scenarios, we need to support such signatures. \r\n            ":"\r\n            CLI规格说，自定义修饰符必须先于参数编码中的BYREF类型代码。\r\n            不幸的是，托管的C ++编译器以相反的顺序排放它们。为了避免破裂\r\n            互动场景，我们需要支持此类签名。\r\n            \r\n","\r\n            Call only while holding ":"\r\n            仅在举行时打电话\r\n","\r\n            Checks if the given method has the signature \"Task DisposeAsync()\" or \"ValueTask DisposeAsync()\".\r\n            ":"\r\n            检查给定方法是否具有签名“任务disposeasync（）”或“ valueTask disposeasync（）”。\r\n            \r\n","\r\n            We start the version at something reasonably random.  That way an older file, with \r\n            some random start-bytes, has little chance of matching our version.  When incrementing\r\n            this version, just change VersionByte2.\r\n            ":"\r\n            我们以合理的随机性启动版本。这样一个旧文件，\r\n            一些随机的起始副词，几乎没有机会匹配我们的版本。增量时\r\n            此版本，只需更改版本Byte2即可。\r\n            \r\n","Module has been disposed.":"模块已被处置。\r\n","\r\n            Checks if the given method has the signature \"void Dispose(bool)\".\r\n            ":"\r\n            检查给定方法是否具有签名“无效处置（bool）”。\r\n            \r\n","\r\n             Stream containing information linking the compilation to a source control.\r\n             ":"流包含将汇编链接到源控件的信息。\r\n             \r\n","\r\n            Creates a COM/ActiveX object on the specified server and exposes it to script code. The\r\n            registered class is specified by class identifier (CLSID).\r\n            ":"\r\n            在指定的服务器上创建COM/ActiveX对象，并将其公开为脚本代码。这\r\n            注册类由类标识符（CLSID）指定。\r\n            \r\n","\r\n            Hash algorithm to use to calculate checksum of the text that's saved to PDB.\r\n            ":"\r\n            哈希算法用于计算保存到PDB的文本的校验和。\r\n            \r\n","The first child in the list.":"名单中的第一个孩子。\r\n"," from this analysis context's ":" 从这个分析上下文\r\n"," for 'System.Runtime.Serialization.SerializationInfo' type />\r\n            ":" 对于'System.Runtime.Serialization.Serializationinfo'type />\r\n            \r\n","\r\n            The following code demonstrates using a strongly typed flag set.\r\n            It assumes that an instance of ":"\r\n            以下代码使用强键入标志集演示。\r\n            它假设一个实例\r\n","\r\n            The UInt32 value 10\r\n            ":"\r\n            UINT32值10\r\n            \r\n","\r\n            Represents a line mapping defined by a single line mapping directive (":"\r\n            表示由单行映射指令定义的线映射（\r\n","The branch operation for which a corresponding operation is looked up":"查找相应操作的分支操作\r\n","\r\n            Metadata reference properties.\r\n            ":"\r\n            元数据参考属性。\r\n            \r\n","\r\n            Type is an enumeration.\r\n            ":"\r\n            类型是枚举。\r\n            \r\n","\r\n            Gets all nodes with the specified annotation kind.\r\n            ":"\r\n            获取所有带有指定注释类型的节点。\r\n            \r\n","Dictionary":"字典\r\n","\r\n            Is always false for the C# local variable\r\n            ":"\r\n            对于C＃本地变量总是错误的\r\n            \r\n","Uint8ClampedArray":"Uint8ClampedArray\r\n","\r\n            Maps definitions being emitted to the corresponding definitions defined in the previous generation (metadata or source).\r\n            ":"\r\n            地图定义被排放到上一代中定义的相应定义（元数据或源）。\r\n            \r\n","\r\n            Label that is the target of the branch.\r\n            ":"\r\n            标签是分支的目标。\r\n            \r\n","\r\n            Count of registered compilation start actions.\r\n            ":"\r\n            注册编译起始操作的计数。\r\n            \r\n"," the generator can obtain the ":" 发电机可以获得\r\n","\r\n            Create a RuleSet.\r\n            ":"\r\n            创建一个规则集。\r\n            \r\n"," for every predicated ":" 对于每个谓词\r\n","The slot to examine.":"要检查的插槽。\r\n","\r\n            The ContextualKind is relevant only on contextual keyword tokens. ContextualKind differs\r\n            from Kind when a token is used in context where the token should be interpreted as a\r\n            keyword.\r\n            ":"\r\n            ContectionualKind仅与上下文关键字令牌相关。 contextulkind有所不同\r\n            从当代币应解释为一个代币时使用令牌\r\n            关键词。\r\n            \r\n","\r\n            Imports the host array type for the specified element type.\r\n            ":"\r\n            导入指定元素类型的主机数组类型。\r\n            \r\n","\r\n            Information decoded from early well-known custom attributes applied on an event.\r\n            ":"\r\n            从事件上应用的早期众所周知的自定义属性解码的信息。\r\n            \r\n","The new options.":"新选项。\r\n","\r\n            to register callbacks required to perform generation.\r\n            ":"\r\n            注册执行发电所需的回调。\r\n            \r\n","\r\n            Returns the visibility for the line at the given position.\r\n            ":"\r\n            返回给定位置处的线路的可见性。\r\n            \r\n","constructor":"构造函数\r\n","\r\n            Scope for setting up analyzers for a compilation, capable of retrieving the actions.\r\n            ":"\r\n            用于设置分析仪进行编译的范围，能够检索动作。\r\n            \r\n","\r\n            Count of registered operation block actions.\r\n            ":"\r\n            注册操作块动作的计数。\r\n            \r\n","\r\n            Enables or disables script code formatting.\r\n            ":"\r\n            启用或禁用脚本代码格式。\r\n            \r\n","\r\n            internal for unit testing\r\n            ":"\r\n            内部测试\r\n            \r\n","\r\n            Gets the specific kind of relative or absolute path.\r\n            ":"\r\n            获取特定类型的相对路径。\r\n            \r\n","The diagnostic's effective severity.":"诊断的有效严重性。\r\n","\r\n            The name assigned to an implicit (widening) conversion.\r\n            ":"\r\n            分配给隐式（扩大）转换的名称。\r\n            \r\n","\r\n            Whenever a document is defined an entry is added to this table. \r\n            If the number of documents is known upfront setting this value may reduce memory consumption.\r\n            ":"\r\n            每当定义文档时，就会将条目添加到此表中。\r\n            如果已知文档的数量预先设置该值可能会减少内存消耗。\r\n            \r\n","\r\n            Determines the segment size to use for call to CombineSegments, that will result in the segment count\r\n            being reduced to less than or equal to the target segment count.\r\n            ":"\r\n            确定要用于组合的段的细分尺寸，这将导致细分计数\r\n            减少到小于或等于目标段计数。\r\n            \r\n","\r\n            This function is provided for script languages that do not support general indexing.\r\n            ":"\r\n            此功能是为不支持一般索引的脚本语言提供的。\r\n            \r\n","\r\n            Exposes a host type to script code with the specified options.\r\n            ":"\r\n            用指定的选项将主机类型公开为脚本代码。\r\n            \r\n","\r\n            Returns interface properties explicitly implemented by this property.\r\n            ":"\r\n            返回该属性明确实现的接口属性。\r\n            \r\n"," to merge and compare analysis data.\r\n            ":" 合并和比较分析数据。\r\n            \r\n","\r\n            Represents an element of a property subpattern, which identifies a member to be matched and the\r\n            pattern to match it against.\r\n            ":"\r\n            代表属性子图案的一个元素，该元素标识要匹配的成员\r\n            将其与之匹配的模式。\r\n            \r\n","\r\n            Dataflow analysis to track ":"\r\n            数据流分析以跟踪\r\n","\r\n            Each Windows Script engine instance in a desktop environment has thread affinity and is\r\n            bound to a ":"\r\n            桌面环境中的每个Windows脚本引擎实例都有线程亲和力，并且\r\n            绑定到\r\n","\r\n              Looks up a localized string similar to Icon stream is not in the expected format..\r\n            ":"\r\n              查找类似于图标流的本地化字符串不在预期格式中。\r\n            \r\n"," visitor that visits only the single IOperation\r\n            passed into its Visit method.\r\n            ":" 仅访问单一偶然的访客\r\n            传递到访问方法。\r\n            \r\n"," called for every syntax node\r\n            in the compilation.\r\n            \r\n            The ":" 要求每个语法节点\r\n            在汇编中。\r\n            \r\n            这\r\n","A new host array with the specified element type.":"带有指定元素类型的新主机数组。\r\n","\r\n            Analyzer configuration options that are parsed into general and specific configuration options.\r\n            \r\n            .editorconfig format:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.OptionName = OptionValue\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.RuleId.OptionName = OptionValue\"\r\n                (b) \"dotnet_code_quality.RuleCategory.OptionName = OptionValue\"\r\n               \r\n            .editorconfig examples to configure API surface analyzed by analyzers:\r\n             1) General configuration option:\r\n                (a) \"dotnet_code_quality.api_surface = all\"\r\n             2) Specific configuration option:\r\n                (a) \"dotnet_code_quality.CA1040.api_surface = public, internal\"\r\n                (b) \"dotnet_code_quality.Naming.api_surface = public\"\r\n             See ":"\r\n            分析仪配置选项将分解为一般和特定配置选项。\r\n            \r\n            .EditorConfig格式：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.optionname = optionValue”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ruleid.optionname = optionValue”\r\n                （b）“ dotnet_code_quality.rulecategory.optionname = optionValue”\r\n               \r\n            .eDitorConfig示例以配置分析仪分析的API表面：\r\n             1）一般配置选项：\r\n                （a）“ dotnet_code_quality.api_surface = all”\r\n             2）特定配置选项：\r\n                （a）“ dotnet_code_quality.ca1040.api_surface = public，内部”\r\n                （b）“ dotnet_code_quality.naming.api_surface = public”\r\n             看\r\n","True to catch the exception.":"真是个例外。\r\n","\r\n            Indicates a value for disposable locations that are not feasible on the given program path.\r\n            For example,\r\n            ":"\r\n            指示在给定程序路径上不可行的一次性位置的值。\r\n            例如，\r\n            \r\n"," will write out the index into\r\n            the stream, and ":" 将把索引写入\r\n            流，以及\r\n","true if the value in the slot either now contains, or already contained ":"true如果插槽中的值现在包含或已经包含\r\n","Standalone signature token":"独立的签名令牌\r\n","\r\n            By setting this property to a type you declare that script code running in the current\r\n            script engine is to be treated as if it were part of that type's implementation. Doing\r\n            so does not expose any host resources to script code, but it affects which host\r\n            resources are importable and which members of exposed resources are accessible.\r\n            ":"\r\n            通过将此属性设置为一个类型，您可以声明该脚本代码在当前\r\n            脚本引擎应被视为该类型实现的一部分。正在做\r\n            因此，不会将任何主机资源暴露于脚本代码，但会影响哪个主机\r\n            资源是可以进口的，可以访问暴露资源的哪些成员。\r\n            \r\n"," that allows reading the content of the specified file.\r\n            ":" 这允许阅读指定文件的内容。\r\n            \r\n","Variable declaration group":"可变声明组\r\n","\r\n            Resolves metadata references stored in ":"\r\n            解决存储在中的元数据参考\r\n"," may also be hidden.\r\n            \r\n            Hidden locals must still be emitted because they participate in evaluation.\r\n            ":" 也可能被隐藏。\r\n            \r\n            隐藏的当地人仍然必须发放，因为他们参与了评估。\r\n            \r\n","\r\n            Use this function to test field, property, and method return values when ":"\r\n            使用此功能测试字段，属性和方法返回值\r\n","\r\n            Eval stack's high watermark.\r\n            ":"\r\n            Eval Stack的高水印。\r\n            \r\n","\r\n            Gets a stream that provides read access to the document.\r\n            ":"\r\n            获取一个流提供对文档的访问的流。\r\n            \r\n"," is created per-generation, meaning the instance\r\n            is free to store state without worrying about lifetime or reuse. \r\n            \r\n            An ":" 是创建人均的，意思是实例\r\n            可以自由存储状态，而不必担心终身或重用。\r\n            \r\n            一个\r\n"," structures describing the result. It has the same amount of items as\r\n             the input assemblies array, ":" 描述结果的结构。它具有与\r\n             输入组件阵列，\r\n","\r\n            Returns true if all the diagnostics that can be produced by this analyzer are suppressed through options.\r\n            ":"\r\n            如果该分析仪可以通过选项抑制该分析仪可以产生的所有诊断，则返回是正确的。\r\n            \r\n","\r\n            Adds types from an assembly to a host type collection.\r\n            ":"\r\n            将从程序集添加到主机类型集合。\r\n            \r\n","\r\n            Assemblies referenced directly by the source module of the compilation.\r\n            ":"\r\n            编译的源模块直接引用的组件。\r\n            \r\n","Dynamic or late bound operation.":"动态或晚期操作。\r\n","The name of the task calling this function, used to determine the \r\n            names of the tracking log files":"调用此功能的任务的名称，用于确定\r\n            跟踪日志文件的名称\r\n","\r\n            This property has no effect if ":"\r\n            如果此属性没有影响\r\n","\r\n            Contains all symbols explicitly updated/added to the source and \r\n            their containing types and namespaces. \r\n            ":"\r\n            包含所有明确更新/添加到源的符号和\r\n            它们包含类型和名称空间。\r\n            \r\n"," with kind ":" 善良\r\n","\r\n            Absolute path of the error log file.\r\n            ":"错误日志文件的绝对路径。\r\n            \r\n","End position.":"结束位置。\r\n","\r\n            Symbol corresponding to the metric data.\r\n            ":"对应于度量数据的符号。\r\n            \r\n","\r\n            Argument is a param array created by compilers for the matching C# params or VB ParamArray parameter. \r\n            Note, the value is a an array creation expression that encapsulates all the elements, if any.\r\n            ":"\r\n            参数是编译器为匹配的C＃参数或VB Paramarray参数创建的参数数组。\r\n            请注意，该值是一个数组创建表达式，它封装了所有元素（如果有）。\r\n            \r\n"," with scope spanning across this entire ":" 范围跨越了整个\r\n","HostFunctions":"宿主功能\r\n"," cannot be specified for an argument in VB.\r\n            ":" 不能在VB中指定参数。\r\n            \r\n","\r\n            Defines script access settings for type members.\r\n            ":"\r\n            定义类型成员的脚本访问设置。\r\n            \r\n","\r\n            Ordinal of the basic block where this exception is thrown.\r\n            ":"\r\n            抛出此例外的基本块的序数。\r\n            \r\n"," module, use ":" 模块，使用\r\n"," for entity data values and\r\n            the predicated values based on true/false runtime values of predicated entities.\r\n            ":" 用于实体数据值和\r\n            基于预测实体的真/错误运行时值的预测值。\r\n            \r\n","Can't create a reference to a submission.":"无法创建对提交的引用。\r\n",",\r\n            etc.\r\n            Never set for C# at the moment.\r\n            ":"，，，，\r\n            等等\r\n            目前切勿为C＃设定。\r\n            \r\n","\r\n            when the cached value has a cyclic reference to the key preventing early garbage collection of entries.\r\n            ":"\r\n            当缓存值对钥匙的循环引用时，可以防止早期垃圾收集条目。\r\n            \r\n","\r\n             The maximum number of bytes in to write out uncompressed.\r\n            \r\n             This prevents wasting resources on compressing tiny files with little to negative gain\r\n             in PDB file size.\r\n            \r\n             Chosen as the point at which we start to see > 10% blob size reduction using all\r\n             current source files in corefx and roslyn as sample data. \r\n             ":"\r\n             在未压缩的情况下，最大的字节数。\r\n            \r\n             这样可以防止浪费资源，以压缩几乎没有收益的微小文件\r\n             在PDB文件大小中。\r\n            \r\n             选择作为我们开始看到> 10％斑点尺寸减小的点\r\n             CoreFX中的当前源文件和Roslyn作为示例数据。\r\n             \r\n","\r\n            Current usage:\r\n             (1) C# argument to an invocation expression, object creation expression, etc.\r\n             (2) VB argument to an invocation expression, object creation expression, etc.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃参数为调用表达式，对象创建表达式等。\r\n             （2）VB参数为调用表达式，对象创建表达式等。\r\n            \r\n","\r\n            Writes the full text of this node to the specified ":"\r\n            将此节点的全文写入指定的\r\n","\r\n            Returns \"goo\" for path \"goo.\".\r\n            Returns \"goo..\" for path \"goo...\".\r\n            ":"\r\n            返回“ Goo” for Path“ Goo”。\r\n            返回“ Goo ..” for Path“ Goo ...”。\r\n            \r\n","\r\n            Gets the underlying syntax node.\r\n            ":"\r\n            获取基础语法节点。\r\n            \r\n"," are different.\r\n            ":" 是不同的。\r\n            \r\n","\r\n            Represents unknown branch kind.\r\n            ":"\r\n            代表未知分支。\r\n            \r\n","\r\n            Creates an id string used to reference type symbols (not strictly declarations, includes\r\n            arrays, pointers, type parameters, etc.)\r\n            ":"\r\n            创建一个用于引用类型符号的ID字符串（不是严格声明，包括\r\n            数组，指针，类型参数等）\r\n            \r\n","\r\n            Create an instance of the concurrent dictionary.\r\n            ":"\r\n            创建并发字典的实例。\r\n            \r\n"," to an index of a resolved assembly or module in ":" 到已解决的组件或模块的索引\r\n",", either through caching the result or by using ValueTask.":"，通过缓存结果或使用ValueTask。\r\n"," to perform such a comparison.\r\n            ":" 进行这样的比较。\r\n            \r\n","True if there were no errors or warnings-as-errors.":"如果没有错误或错误的警告，则为真实。\r\n",", which is the second operand that is conditionally evaluated and is the result of the operation iff ":"，这是有条件评估的第二个操作数，是操作的结果IFF\r\n","\r\n            Topmost declaration node for analysis.\r\n            ":"\r\n            最高的声明节点用于分析。\r\n            \r\n"," if the position intersects, otherwise ":" 如果位置相交，则\r\n","\r\n            Returns true if the conversion is a numeric conversion.\r\n            ":"\r\n            如果转换是数字转换，则返回true。\r\n            \r\n","\r\n            Gets the top-level nullability of the return type of the method.\r\n            ":"\r\n            获取该方法的返回类型的顶级无效性。\r\n            \r\n","\r\n            \r\n            The XmlCharType class is used for quick character type recognition\r\n            which is optimized for the first 127 ascii characters.\r\n            \r\n        ":"\r\n            \r\n            XMLchartype类用于快速字符类型识别\r\n            它针对前127个ASCII字符进行了优化。\r\n            \r\n        \r\n"," registered during Initialize are invoked only once per-compilation per-":" 初始化期间注册的人每次计算一次仅调用\r\n","\r\n            Gets the type of this field.\r\n            ":"\r\n            获取此字段的类型。\r\n            \r\n","\r\n            Represents an interpolated string expression.\r\n            ":"\r\n            表示插值字符串表达式。\r\n            \r\n","\r\n            Used in VB when the position is not hidden, but it's not known yet that there is a (nonempty) ":"\r\n            当位置没有隐藏时，在VB中使用，但尚不知道有一个（非空）\r\n","\r\n            These opcodes represent control transfer.\r\n            They should not appear inside basic blocks.\r\n            ":"\r\n            这些操作码代表控制转移。\r\n            它们不应出现在基本块中。\r\n            \r\n",", or\r\n            their subclasses to override this property for individual types and members. Note that\r\n            this property has no effect on the method binding algorithm. If a script-based call is\r\n            bound to a method that is blocked by this property, it will be rejected even if an\r\n            overload exists that could receive the call.\r\n            ":"， 或者\r\n            他们的子类覆盖该属性的单个类型和成员。注意\r\n            该属性对方法结合算法没有影响。如果基于脚本的呼叫是\r\n            绑定到该属性阻止的方法，即使\r\n            存在可能会接收电话的过载。\r\n            \r\n","Error occurred while writing data to the stream.":"将数据写入流时发生了错误。\r\n","instance\r\n            ":"实例\r\n            \r\n","VT_ARRAY":"VT_Array\r\n","\r\n            Create documentation provider for the reference.\r\n            ":"\r\n            创建文档提供商供参考。\r\n            \r\n","\r\n            The input or output are newer than the tracking file.\r\n            ":"\r\n            输入或输出比跟踪文件更新。\r\n            \r\n","Error opening file ":"打开错误文件\r\n"," is true the assembly is marked as fully signed\r\n            but only signed with the public key (aka \"OSS signing\").\r\n            ":" 是真的，组件被标记为完全签名\r\n            但仅使用公共密钥签名（又名“ OSS签名”）。\r\n            \r\n","\r\n            Parameter the argument matches. This can be null for __arglist parameters.\r\n            ":"\r\n            参数匹配参数。对于__ARGLIST参数可能为null。\r\n            \r\n"," with the token at the specified index removed.\r\n            ":" 在指定的索引处取出令牌。\r\n            \r\n","\r\n            Exposed for ":"\r\n            暴露于\r\n","\r\n            Method body corresponding to BaseMethodDeclarationSyntax.ExpressionBody or AccessorDeclarationSyntax.ExpressionBody\r\n            ":"\r\n            与basemethoddeclarationsyntax.expression body或accessodeClarationsyntax.expression dectersepression.expression Bodys相对应的方法主体\r\n            \r\n","\r\n            Additional arguments supplied to the declarator in error cases, ignored by the compiler. This only used for the C# case of\r\n            DeclaredArgumentSyntax nodes on a VariableDeclaratorSyntax.\r\n            ":"\r\n            编译器忽略了错误案件中提供给声明者的其他参数。这仅用于\r\n            在variabledeclaratorsyntax上声明argumentsyntax节点。\r\n            \r\n"," for the calling assembly.":" 用于通话组件。\r\n","\r\n            A utility to log all operations and arguments to the native PDB writing\r\n            library, so that we can hash that log to generate a deterministic GUID and\r\n            timestamp.\r\n            ":"\r\n            将所有操作和争论记录到本机PDB写作的实用程序\r\n            库，以便我们可以放置该日志来生成确定性的GUID和\r\n            时间戳。\r\n            \r\n","\r\n            Count of code block end actions.\r\n            ":"\r\n            代码块结束操作的计数。\r\n            \r\n","\r\n            Represents an invocation of a method.\r\n            ":"\r\n            表示方法的调用。\r\n            \r\n","\r\n            If a debugger is attached, it will present the specified script code to the user as a\r\n            document with the specified name. Discarding this document removes it from view but\r\n            has no effect on the script engine. Only Windows Script engines honor\r\n            ":"\r\n            如果附加了调试器，它将将指定的脚本代码呈现给用户\r\n            带有指定名称的文档。丢弃本文档将其从视图中删除，但是\r\n            对脚本引擎没有影响。只有Windows脚本引擎荣誉\r\n            \r\n",".\r\n            \r\n            The compiler will invoke the ":"。\r\n            \r\n            编译器将调用\r\n","\r\n            A compile time constant value that should be supplied as the corresponding argument value by callers that do not explicitly specify an argument value for this parameter.\r\n            Null if the parameter doesn't have default value.\r\n            ":"\r\n            编译时常数值应由未明确指定此参数的参数值的呼叫者作为相应的参数值。\r\n            null如果参数没有默认值。\r\n            \r\n","\r\n            Checks if the method is the getter for an indexer.\r\n            ":"\r\n            检查该方法是否是索引器的获取器。\r\n            \r\n"," when it is not null/Nothing.\r\n            \r\n            Identity if result type of the operation is the same as type of ":" 当它不是零/什么都没有的时候。\r\n            \r\n            身份如果结果类型的操作类型与类型相同\r\n","Reported diagnostic with ID '{0}' is not supported by the analyzer.":"分析仪不支持具有ID'{0}'的诊断。\r\n","\r\n            Represents a C# or VB method invocation.\r\n            ":"\r\n            表示C＃或VB方法调用。\r\n            \r\n","\r\n            For delegate types, gets the delegate's invoke method.  Returns null on\r\n            all other kinds of types.  Note that it is possible to have an ill-formed\r\n            delegate type imported from metadata which does not have an Invoke method.\r\n            Such a type will be classified as a delegate but its DelegateInvokeMethod\r\n            would be null.\r\n            ":"\r\n            对于委托类型，获取代表的调用方法。返回null\r\n            所有其他类型。请注意，可能有一个不良的\r\n            从元数据中导入的委托类型，该类型没有调用方法。\r\n            这种类型将被归类为代表，但其委托\r\n            将是无效的。\r\n            \r\n","ReadOnly":"只读\r\n",", if any is found.\r\n            Returns null if none is found.\r\n            ":"，如果发现有。\r\n            如果没有找到返回零。\r\n            \r\n","\r\n            Updates the current PDB signature.\r\n            ":"\r\n            更新当前的PDB签名。\r\n            \r\n","\r\n            Receives notifications of each ":"\r\n            收到每个通知\r\n","\r\n            Gets the end position of the line including the line break.\r\n            ":"\r\n            获取线路的结束位置，包括线路断路。\r\n            \r\n","\r\n            Kind of the branch.\r\n            ":"\r\n            分支机构。\r\n            \r\n","\r\n            Creates a new tree of nodes with new nodes inserted before the specified node.\r\n            ":"\r\n            在指定的节点之前创建一个新的节点的新节点。\r\n            \r\n","\r\n            Class used to store and interrogate inputs and outputs recorded by tracking operations.\r\n            ":"\r\n            用于存储和询问通过跟踪操作记录的输入和输出的类。\r\n            \r\n","\r\n            Determines whether the underlying node or token has any descendant preprocessor directives.\r\n            ":"\r\n            确定基础节点或令牌是否具有任何后代预处理器指令。\r\n            \r\n","\r\n            The list of trivia that appear after the underlying node or token in the source code and are attached to a\r\n            token that is a descendant of the underlying node or token.\r\n            ":"\r\n            源代码中的基础节点或令牌之后出现的琐事列表，并附加到\r\n            代币是基础节点或令牌的后代。\r\n            \r\n","\r\n            Represents a pattern comparing the input with a given type.\r\n            ":"\r\n            表示将输入与给定类型进行比较的模式。\r\n            \r\n","\r\n            The values of the array elements. May be empty to represent an empty array.\r\n            ":"\r\n            数组元素的值。可能是空的，代表一个空数组。\r\n            \r\n","\r\n            Tries to execute compilation actions.\r\n            ":"\r\n            试图执行汇编操作。\r\n            \r\n","The name of the assembly that contains the type to add.":"包含要添加类型的组件的名称。\r\n","Read-only content of the stream.":"流的只读内容。\r\n","An ImmutableArray containing all the members of this symbol with the given name. If there are\r\n            no members with this name, returns an empty ImmutableArray. Never returns Null.":"一个immutablearray包含带有给定名称的所有符号成员。如果有\r\n            没有这个名字的成员返回一个空的Immutablearray。永远不会返回零。\r\n","\r\n            Returns the intersection with the given span, or null if there is no intersection.\r\n            ":"\r\n            返回与给定跨度的交点，如果没有交叉点，则返回空。\r\n            \r\n","\r\n            Determines whether a descendant trivia of this node is structured.\r\n            ":"\r\n            确定该节点的后代琐事是否是构造的。\r\n            \r\n","\r\n            Provides a null ":"\r\n            提供一个空\r\n","\r\n            The complete width of the node in characters, including leading and trailing trivia.\r\n            ":"\r\n            该节点的完整宽度在字符中，包括领导和尾随的琐事。\r\n            \r\n","\r\n            A generic type instantiated with a list of type arguments\r\n            ":"\r\n            与类型参数列表实例化的通用类型\r\n            \r\n","\r\n            Returns a symbol that given token resolves to or null of the token represents an entity that isn't represented by a symbol,\r\n            such as vararg MemberRef.\r\n            ":"\r\n            返回一个给定令牌为代币的符号或null代表一个不由符号表示的实体\r\n            例如Vararg MemberRef。\r\n            \r\n","\r\n            The UInt32 value 4\r\n            ":"\r\n            UINT32值4\r\n            \r\n","The immediate type arguments to be replaced for type\r\n            parameters in the type.":"直接类型的参数要替换为类型\r\n            类型中的参数。\r\n","\r\n            Represents a C# foreach statement or a VB For Each staement.\r\n            ":"\r\n            代表每次演出的C＃foreach语句或VB。\r\n            \r\n","\r\n            Represents the default state of nullable analysis in this compilation.\r\n            ":"\r\n            代表本汇编中可随机分析的默认状态。\r\n            \r\n","\r\n              Looks up a localized string similar to Cannot target net module when emitting ref assembly..\r\n            ":"\r\n              在发射参考汇编时查找类似于无法定位网络模块的本地化字符串。\r\n            \r\n"," representing partial syntax analysis state for the given tree for the given analyzer.\r\n            ":" 代表给定分析仪给定树的部分语法分析状态。\r\n            \r\n","\r\n            The kind of reference that is being made.\r\n            ":"\r\n            正在提出的参考。\r\n            \r\n"," and doesn't pass the exception through (the method returns true).\r\n            ":" 并且不会通过异常（方法返回true）。\r\n            \r\n","\r\n            Compute ":"\r\n            计算\r\n","fall through label for the jump table.":"通过标签进入跳台。\r\n","\r\n            Comparer for sorting ":"\r\n            分类的比较\r\n","\r\n            The Int32 value 3\r\n            ":"\r\n            INT32值3\r\n            \r\n","\r\n            The possible types of up to date check that we can support\r\n            ":"\r\n            我们可以支持的最新检查的可能类型\r\n            \r\n","\r\n            Register an action to be executed at compilation start.\r\n            A compilation start action can register other actions and/or collect state information to be used in diagnostic analysis,\r\n            but cannot itself report any ":"\r\n            注册一个要在汇编开始时执行的操作。\r\n            汇编行动可以注册其他操作和/或收集用于诊断分析的状态信息，\r\n            但本身不能报告任何\r\n","\r\n            Identity of assemblies referenced by this assembly.\r\n            References should always be returned in the same order.\r\n            ":"\r\n            该组件引用的组件的身份。\r\n            参考应始终以相同的顺序返回。\r\n            \r\n","\r\n            This class can be extended to accommodate custom document loaders.\r\n            ":"\r\n            可以扩展此类以容纳自定义文档装载机。\r\n            \r\n"," must be non-null.":" 必须是非记器。\r\n","\r\n            True if the loop is a while loop; false if the loop is an until loop.\r\n            ":"\r\n            如果循环为ther循环，则为是真的；假，如果循环为直到循环。\r\n            \r\n","An error occurred while loading the included rule set file {0} - {1}":"加载随附的规则集文件{0}  -  {1}时发生错误\r\n","\r\n            Indicates that the diagnostic is related to build.\r\n            ":"\r\n            表明诊断与构建有关。\r\n            \r\n"," will be null.\r\n            The only arity in that case will be encoded in the symbol. \r\n            ":" 将是无效的。\r\n            在这种情况下，唯一的ARITY将在符号中编码。\r\n            \r\n","\r\n            Condition of the loop.\r\n            ":"\r\n            循环的条件。\r\n            \r\n","Session scope to store register session wide analyzer actions.":"会话范围以存储注册会话范围的分析仪操作。\r\n","\r\n            True if the invocation uses a virtual mechanism, and false otherwise.\r\n            ":"\r\n            如果调用使用虚拟机制，则为否则为否则。\r\n            \r\n","\r\n            The member is visible only within the union of its family and assembly. \r\n            ":"\r\n            该成员仅在其家庭和集会的联盟内才能看到。\r\n            \r\n","\r\n            Converts a type to a host type for use with script code running in the specified\r\n            script engine.\r\n            ":"\r\n            将类型转换为主机类型，用于在指定的脚本代码中使用\r\n            脚本引擎。\r\n            \r\n","\r\n            Name of the output file or null if not specified.\r\n            ":"\r\n            如果未指定，输出文件的名称或null的名称。\r\n            \r\n","\r\n            Create metadata module from a stream.\r\n            ":"\r\n            从流创建元数据模块。\r\n            \r\n","\r\n            A reference to a type parameter of a generic type.\r\n            ":"\r\n            对通用类型的类型参数的引用。\r\n            \r\n","\r\n            Optional delegate which is invoked when an analyzer throws an exception.\r\n            Delegate can do custom tasks such as report the given analyzer exception diagnostic, report a non-fatal watson for the exception, etc.\r\n            ":"\r\n            当分析仪引发异常时调用的可选委托。\r\n            委托可以执行自定义任务，例如报告给定的分析仪例外诊断，报告异常的非致命Watson等。\r\n            \r\n","\r\n            Provides a string representation for ":"\r\n            提供一个字符串表示\r\n","\r\n            End of the span.\r\n            ":"\r\n            跨度结束。\r\n            \r\n"," instance which is localizable.\r\n            ":" 实例可本地化。\r\n            \r\n",", may be efficient for parallel entry\r\n            points (few direct calls but large amounts of iterative work), but are problematic when called inside the\r\n            iterations themselves. Performance-sensitive code should avoid the use of heavy parallization APIs except\r\n            for known entry points to the parallel portion of code.":"，对于并行进入可能有效\r\n            要点（很少有直接调用，但大量迭代工作），但是在内部打电话时是有问题的\r\n            迭代本身。性能敏感的代码应避免使用重量分配API，除非\r\n            有关代码并行部分的已知输入点。\r\n","\r\n            Represents a reference to an indexed property.\r\n            ":"\r\n            代表对索引属性的引用。\r\n            \r\n","\r\n            At this level there are two kinds of local variables:\r\n            ":"\r\n            在这个级别上，有两种局部变量：\r\n            \r\n","Arguments to the invoked method.":"对调用方法的论点。\r\n","\r\n            The expression is annotated (does have a ?).\r\n            ":"\r\n            该表达式被注释（有一个吗？）。\r\n            \r\n","\r\n            Gets the variable initializer for the given ":"\r\n            获取给定的变量初始化器\r\n","\r\n            Writes a JSON representation of the profile to the given text writer.\r\n            ":"\r\n            将简介的json表示写给给定的文本作者。\r\n            \r\n","\r\n            Includes files specified directly on command line as well as files matching patterns specified \r\n            on command line using '*' and '?' wildcards or /recurse option.\r\n            ":"\r\n            包括直接在命令行上指定的文件以及指定的文件匹配模式\r\n            在命令行上使用'*'和'？'通配符或 /recurse选项。\r\n            \r\n","\r\n            to the next generation (rather than e.g. create new ":"\r\n            到下一代（例如创建新的\r\n","\r\n            Gets the 1-based column number of the start of the node's script function.\r\n            ":"\r\n            获取节点脚本函数的开始的1个基列号。\r\n            \r\n","\r\n            Tries to execute compilation unit actions.\r\n            ":"\r\n            试图执行汇编单元操作。\r\n            \r\n","\r\n            Symbol is a local.\r\n            ":"\r\n            符号是本地。\r\n            \r\n"," is greater, and the conversion\r\n            to an unsigned value after negation in ":" 更大，转换\r\n            在否定后无符号价值\r\n","An optional associated symbol.":"可选的相关符号。\r\n"," is a sufficient, but not a necessary, condition for hiding the\r\n            local in the debugger.  Locals with value ":" 是一个足够但没有必要的条件来隐藏\r\n            调试器中的本地。具有价值的当地人\r\n","\r\n            Current usage:\r\n             (1) C# lock statement.\r\n             (2) VB SyncLock statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃锁定语句。\r\n             （2）VB Synclock语句。\r\n            \r\n","Bad data.":"不良数据。\r\n","\r\n                    keyword provides a convenient way to access them.\r\n                    ":"\r\n                    关键字提供了一种访问它们的方便方式。\r\n                    \r\n","\r\n            The base directory for shadow copies. Each instance of\r\n            ":"\r\n            影子副本的基本目录。每个实例\r\n            \r\n","\r\n            or directly via ":"\r\n            或直接通过\r\n","\r\n            Define a hidden sequence point at the first statement of\r\n            the method so that step-into will find the method body.\r\n            ":"\r\n            在第一个语句中定义一个隐藏的序列点\r\n            该方法使得插入可以找到方法主体。\r\n            \r\n",".\r\n            Assumes that all references prior ":"。\r\n            假设所有参考先验\r\n","\r\n            Base class for all the aggregate analysis data with predicated analysis data,\r\n            whose ":"\r\n            使用鉴定分析数据的所有聚合分析数据的基类，\r\n            谁的\r\n","\r\n            Check whether given parameters contains any parameter with given type.\r\n            ":"\r\n            检查给定参数是否包含带有给定类型的任何参数。\r\n            \r\n"," parameter and produces a value of the type specified by\r\n            the ":" 参数并产生由指定类型的值\r\n            这\r\n","\r\n            Current Usage:\r\n              (1) C# local declaration statement\r\n              (2) C# fixed statement\r\n              (3) C# using statement\r\n              (4) C# using declaration\r\n              (5) VB Dim statement\r\n              (6) VB Using statement\r\n            ":"\r\n            当前用法：\r\n              （1）C＃本地声明声明\r\n              （2）C＃固定语句\r\n              （3）C＃使用语句\r\n              （4）C＃使用声明\r\n              （5）VB DIM语句\r\n              （6）使用语句的VB\r\n            \r\n","\r\n            This class does not enforce thread affinity and should be used with caution. Windows Script\r\n            engines can behave unpredictably when thread affinity is violated.\r\n            ":"\r\n            该类不强制执行线程亲和力，应谨慎使用。 Windows脚本\r\n            当违反线程亲和力时，发动机可能会表现得不可预测。\r\n            \r\n"," modules.\r\n            ":" 模块。\r\n            \r\n","A new delegate that invokes the specified script function and returns no value.":"调用指定脚本功能并返回没有值的新委托。\r\n","\r\n            Use \r\n            ":"\r\n            利用\r\n            \r\n"," will not return equal. Use ":" 不会返回相等。利用\r\n","\r\n            Overall size of metadata stream storage (stream headers, table stream, heaps, additional streams).\r\n            Aligned to ":"\r\n            元数据流存储（流标头，表流，堆，附加流）的总体大小。\r\n            对齐\r\n","\r\n            Represents a reference through a pointer.\r\n            ":"\r\n            通过指针代表参考。\r\n            \r\n","\r\n             int x = 3;\r\n             RunWithActionCallback(() => this.DoSomething(x));\r\n             ":"\r\n             int x = 3;\r\n             runwithactionCallback（（）=> this.dosomething（x））;\r\n             \r\n","\r\n            Zero or more events defined by this type.\r\n            ":"\r\n            零或更多事件由此类型定义。\r\n            \r\n"," on a basic block.\r\n            It store copy values for each ":" 在基本块上。\r\n            它存储每个复制值\r\n","\r\n            Returns false if the symbol has already been processed for the analyzer OR is currently being processed by another task.\r\n            If true, then it returns a non-null ":"\r\n            如果已经为分析仪处理符号或目前正在另一项任务处理该符号，则返回false。\r\n            如果是真的，那么它将返回一个非编号\r\n","\r\n            C# and VB. Encodes EnC lambda map.\r\n            See https://github.com/dotnet/corefx/blob/main/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#EditAndContinueLambdaAndClosureMap.\r\n            ":"\r\n            C＃和VB。编码ENC LAMBDA地图。\r\n            请参阅https://github.com/dotnet/corefx/blob/main/src/system.reflection.metadata/specs/portablepdb-metadata.md#editandandandcontinandcontinelambdaandclosuremap。\r\n            \r\n","\r\n            Performance considerations: \r\n            ":"\r\n            性能注意事项：\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# invalid expression or invalid statement.\r\n             (2) VB invalid expression or invalid statement.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃无效的表达式或无效语句。\r\n             （2）VB无效的表达或无效语句。\r\n            \r\n","\r\n            The type reference.\r\n            ":"\r\n            类型参考。\r\n            \r\n","\r\n            The maximum number of elements on the evaluation stack during the execution of the method.\r\n            ":"\r\n            该方法执行过程中评估堆栈上的最大元素数量。\r\n            \r\n","\r\n            Local that stores an expression value which needs to be spilled.\r\n            This local should either be hoisted or its lifespan ends before \r\n            the end of the containing await expression.\r\n            ":"\r\n            存储需要溢出的表达值的本地。\r\n            该当地的吊架应该悬挂，或者其寿命在之前结束\r\n            包含等待表达的末端。\r\n            \r\n",",\r\n            this method returns all symbols declared by a given declaration syntax node. Specifically, in the case of field declaration syntax nodes,\r\n            which can declare multiple symbols, this method returns all declared symbols.\r\n            ":"，，，，\r\n            此方法返回由给定声明语法节点声明的所有符号。具体而言，对于字段声明语法节点，\r\n            可以声明多个符号，此方法返回所有声明的符号。\r\n            \r\n","\r\n            Provider that caches semantic models for requested trees, with a strong reference to the model.\r\n            Clients using this provider are responsible for maintaining the lifetime of the entries in this cache,\r\n            and should invoke ":"\r\n            提供的提供者可以为请求的树缓存语义模型，并有很大的提及。\r\n            使用此提供商的客户负责维护此缓存中条目的寿命，\r\n            应该调用\r\n","\r\n            Represents a C# nested collection element initializer expression within a collection initializer.\r\n            ":"\r\n            代表集合初始化器中的C＃嵌套集合元素初始化器表达式。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# simple assignment expression.\r\n             (2) VB simple assignment expression.\r\n            ":"当前用法：\r\n             （1）C＃简单分配表达式。\r\n             （2）VB简单分配表达式。\r\n            \r\n","Only invoked if the properties changed.":"仅当属性更改时才调用。\r\n"," to match\r\n             ":" 匹配\r\n             \r\n"," metadata object and \r\n            ":" 元数据对象和\r\n            \r\n","\r\n            Closes map of tokens to source spans previously opened using ":"\r\n            关闭令牌图以先前使用的源跨度\r\n","\r\n            An object specifying parameters on how namespace symbols should be formatted.\r\n            ":"\r\n            指定命名空间符号的对象应格式化。\r\n            \r\n","\r\n            Creates a new compilation with additional metadata references.\r\n            ":"\r\n            通过其他元数据参考创建新的汇编。\r\n            \r\n","\r\n            If this is a non-speculative member semantic model, then returns the containing semantic model for the entire tree.\r\n            Otherwise, returns this instance of the semantic model.\r\n            ":"\r\n            如果这是一个非指定成员语义模型，则将返回整个树的包含语义模型。\r\n            否则，返回语义模型的实例。\r\n            \r\n","Stream to which the compilation's XML documentation will be written.  Null to forego XML generation.":"汇编的XML文档将被编写为流。 null至Orego XML生成。\r\n","\r\n            True if we need to perform analysis for a single tree.\r\n            ":"\r\n            如果我们需要对一棵树进行分析，则是真的。\r\n            \r\n","AnalyzerManager to manage analyzers for the lifetime of analyzer host.":"Analyzermanager管理分析仪宿主寿命的分析仪。\r\n"," if there are none.\r\n            ":" 如果没有。\r\n            \r\n",".  The latter\r\n            relies on global state individual compilations should ignore.\r\n            ":"。后者\r\n            依靠全球国家个人汇编应忽略。\r\n            \r\n","\r\n            Returns the value of a constructor argument as type ":"\r\n            将构造函数参数的值返回为类型\r\n","\r\n            True if the type is serializable (has Serializable metadata flag).\r\n            ":"\r\n            如果类型可序列化（具有可序列化的元数据标志），则为正确。\r\n            \r\n"," has a single value, this always returns ":" 有一个值，这总是返回\r\n","\r\n            The zero based index of the parameter in the unmanaged method that contains the number of elements in the variable portion of unmanaged array.\r\n            If -1, the variable portion is of size zero, or the caller conveys the size of the variable portion of the array to the unmanaged method in some other way.\r\n            ":"\r\n            在非管理方法中，参数的基于零的索引，该索引包含非托管数组变量部分中的元素数。\r\n            如果-1，则变量部分的大小为零，或者呼叫者以其他方式将数组的变量部分的大小传达为无管理的方法。\r\n            \r\n","\r\n            Compare two source locations, using their containing trees, and then by Span.First within a tree. \r\n            Can be used to get a total ordering on declarations, for example.\r\n            ":"\r\n            比较两个源位置，使用其包含的树，然后在树中首先通过跨度进行比较。\r\n            例如，可以用来在声明上进行总订购。\r\n            \r\n","\r\n            Get the information about the diagnostic: the code, severity, message, etc.\r\n            ":"\r\n            获取有关诊断的信息：代码，严重性，消息等。\r\n            \r\n","Partial or full assembly display name.":"部分或完整的组件显示名称。\r\n",", you must\r\n            release all references to the V8 runtime so the garbage collector can reclaim the\r\n            memory that the V8 runtime was occupying.\r\n            ":"， 你必须\r\n            发布所有对V8运行时的引用，以便垃圾收集器可以收回\r\n            V8运行时的记忆。\r\n            \r\n","\r\n            Very special corner case involving filters, await and lambdas.\r\n            ":"\r\n            涉及过滤器的非常特殊的角案件，等待和lambdas。\r\n            \r\n","\r\n            Given the ExecutableType of the tool being wrapped and information that we \r\n            know about our current bitness, figures out and returns the path to the correct\r\n            FileTracker.dll. \r\n            ":"\r\n            鉴于要包装的工具的执行程序和我们的信息\r\n            了解我们当前的位置，弄清楚并返回正确的道路\r\n            FileTracker.dll。\r\n            \r\n","\r\n            Determines if two VB identifiers are equal according to the VB identifier comparison rules.\r\n            ":"\r\n            根据VB标识符比较规则，确定两个VB标识符是否相等。\r\n            \r\n","A read-only array of string parts.":"仅读取的字符串零件。\r\n"," if arithmetic operations behind this loop are 'checked'.\r\n            ":" 如果“检查”此循环背后的算术操作。\r\n            \r\n","The name of a module.":"模块的名称。\r\n","ByRef":"Byref\r\n","The trivia to add.":"要添加的琐事。\r\n","\r\n            Represents a value on #Blob heap that has not been serialized yet.\r\n            ":"\r\n            代表#BLOB堆的价值，尚未序列化。\r\n            \r\n","\r\n            The size of #Pdb stream. Aligned.\r\n            ":"\r\n            #PDB流的大小。对齐。\r\n            \r\n"," to find the symbol.\r\n            ":" 找到符号。\r\n            \r\n","\r\n            Method is an explicit interface implementation.\r\n            ":"\r\n            方法是显式接口实现。\r\n            \r\n","\r\n            Fully processed.\r\n            ":"\r\n            完全处理。\r\n            \r\n","\r\n            Current usage:\r\n             (1) C# increment expression or decrement expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃增量表达或减少表达。\r\n            \r\n","as":"作为\r\n","\r\n            A list of objects representing persisted instances of types that extend System.Attribute. Provides an extensible way to associate metadata\r\n            with this module.\r\n            ":"\r\n            代表持续的类型实例的对象列表。提供了一种可扩展的方式来关联元数据\r\n            使用此模块。\r\n            \r\n","\r\n            True if this is an asynchronous using declaration.\r\n            ":"\r\n            如果这是使用声明的异步，则为true。\r\n            \r\n","'s type argument.":"的类型参数。\r\n","\r\n            Initializes a new host type collection.\r\n            ":"\r\n            初始化新的主机类型集合。\r\n            \r\n","The value of the specified element.":"指定元素的值。\r\n","\r\n            Register an action to be executed at completion of parsing of a code document.\r\n            A syntax tree action reports ":"\r\n            注册一个措施，将在完成代码文档的解析后执行。\r\n            语法树动作报告\r\n","\r\n            If true, use UTF8 for output.\r\n            ":"\r\n            如果为true，请使用UTF8进行输出。\r\n            \r\n"," is incrementally parsed using ":" 使用\r\n","\r\n            This interface models the metadata representation of a method or property parameter.\r\n            ":"\r\n            该接口对方法或属性参数的元数据表示形式进行建模。\r\n            \r\n","\r\n            Initializes a new V8 runtime instance with the specified resource constraints.\r\n            ":"\r\n            用指定的资源约束初始化新的V8运行时实例。\r\n            \r\n","\r\n            If this symbol represents a metadata assembly returns the underlying ":"\r\n            如果此符号代表元数据组件返回基础\r\n"," instance associated with this symbol.\r\n            In general, this API is not safe to use. Transition from symbols to Cci interfaces\r\n            should be handled by PEModuleBuilder translation layer. One relatively safe scenario\r\n            is to use it on a symbol that is a definition.\r\n            ":" 与此符号关联的实例。\r\n            通常，此API不安全。从符号到CCI接口的过渡\r\n            应通过Pemodulebuilder翻译层处理。一个相对安全的情况\r\n            是在定义的符号上使用它。\r\n            \r\n","\r\n            Tuple element names for locals.\r\n            ":"\r\n            当地人的元组元素名称。\r\n            \r\n"," is a nested tuple,\r\n            gets the parenting tuple operation and the tuple element of that parenting tuple\r\n            which contains the given tupleOperation as a descendant operation.\r\n            ":" 是一个嵌套元组，\r\n            获取该育儿元组的育儿元组操作和元组元素\r\n            其中包含给定的术增加作为后代操作。\r\n            \r\n","\r\n            Local declared in and scoped to the ":"\r\n            当地宣布并掌握到\r\n","\r\n            Initializes a new script engine instance.\r\n            ":"\r\n            初始化一个新的脚本引擎实例。\r\n            \r\n",".\r\n            This method must be invoked after successful analysis completion AND on analysis cancellation.\r\n            ":"。\r\n            成功分析完成并取消分析后，必须调用此方法。\r\n            \r\n","\r\n            The index of the method in member list of the containing type, or ":"\r\n            包含类型的成员列表中该方法的索引，或\r\n","The statement or expression to be analyzed.":"要分析的陈述或表达。\r\n","switch case labels":"开关案例标签\r\n"," from bytes.\r\n            ":" 来自字节。\r\n            \r\n","\r\n            Place this attribute onto a type to cause it to be considered a diagnostic analyzer.\r\n            ":"\r\n            将此属性放在一种类型上，以使其被视为诊断分析仪。\r\n            \r\n","Typically a user analyzer has a reference to the compiler and some of the compiler's\r\n             dependencies such as System.Collections.Immutable. For the analyzer to correctly\r\n             interoperate with the compiler that created it, we need to ensure that we always use the\r\n             compiler's version of a given assembly over the analyzer's version.":"通常，用户分析仪会引用编译器和一些编译器\r\n             依赖项，例如system.collections.mmutable。为了使分析仪正确\r\n             与创建它的编译器互操作，我们需要确保我们始终使用\r\n             编译器在分析仪版本上的给定组件版本。\r\n","\r\n            Represents the creation of an array instance.\r\n            ":"\r\n            表示数组实例的创建。\r\n            \r\n","\r\n            Returns a value indicating whether the presence of the specified symbol\r\n            disqualifies a class from being considered a static holder class.\r\n            ":"\r\n            返回一个值，指示是否存在指定符号\r\n            取消一类被视为静态持有人的资格。\r\n            \r\n","\r\n            The default concurrency level is 2. That means the collection can cope with up to two\r\n            threads making simultaneous modifications without blocking.\r\n            Note ConcurrentDictionary's default concurrency level is dynamic, scaling according to\r\n            the number of processors.\r\n            ":"\r\n            默认并发级别为2。这意味着该集合最多可以应对两个\r\n            线程进行同时修改而不会阻止。\r\n            注意contrentDictionary的默认并发级别是动态的，根据\r\n            处理器数量。\r\n            \r\n","\r\n             Gets the available named namespace and type symbols in the context of the specified location and optional container.\r\n             Only members that are accessible and visible from the given location are returned.\r\n             ":"\r\n             在指定位置和可选容器的上下文中获取可用的名称名称命名空间和类型符号。\r\n             仅返回从给定位置可访问和可见的成员。\r\n             \r\n","\r\n            Gets the checksum + algorithm id to use in the PDB.\r\n            ":"\r\n            获取在PDB中使用的校验和算法ID。\r\n            \r\n"," is *not* part of that built-in\r\n                equatability, but we do write them out, and so descriptors differening only\r\n                by CustomTags (rare) would cause only one set of tags to be reported in the\r\n                log.\r\n             ":" 是 *不是 *该内置的一部分\r\n                平等性，但我们确实将它们写出，因此描述符只有区别\r\n                通过惯例（稀有）将仅报告一组标签\r\n                日志。\r\n             \r\n","The imported COM/ActiveX type.":"导入的COM/ActiveX类型。\r\n","Could not locate the rule set file '{0}'.":"无法找到规则集文件'{0}'。\r\n","\r\n            Merge content of ":"\r\n            合并内容\r\n","\r\n            Gets the syntax tree's text if it is available.\r\n            ":"\r\n            如果可用，请获取语法树的文本。\r\n            \r\n","\r\n            Operation that will be evaluated and accessed if non null.\r\n            ":"\r\n            如果非零，将评估和访问的操作。\r\n            \r\n",". \r\n            Returns ":"。\r\n            返回\r\n","\r\n            Specifies that a document path must begin with a segment of \".\" or \"..\" to be\r\n            considered a relative path. By default, any path that is not explicitly a top-level\r\n            or root path is eligible.\r\n            ":"\r\n            指定文档路径必须以“”段开始。或“ ..”\r\n            被认为是相对路径。默认情况下，任何没有明确的顶级路径\r\n            或根路径符合条件。\r\n            \r\n"," as a type for atomicity.\r\n            ":" 作为原子性的一种类型。\r\n            \r\n","The node at the specified index.":"指定索引处的节点。\r\n","The callers will dispose the result after use.\r\n            This allows the resources to be opened and read one at a time.\r\n            ":"使用后，呼叫者将处置结果。\r\n            这允许开放资源并一次阅读。\r\n            \r\n","The type of the value the syntax node is transformed into":"语法节点的值类型转换为\r\n","\r\n            Synthesized local variables are either \r\n            1) Short-lived (temporary)\r\n               The lifespan of an temporary variable shall not cross a statement boundary (a PDB sequence point).\r\n               These variables are not tracked by EnC and don't have names.\r\n             \r\n            2) Long-lived\r\n               All variables whose lifespan might cross a statement boundary (include a PDB sequence point)\r\n               must be named in a build configuration that supports EnC. Some of them might need to be named in release, to support EE.\r\n               The kind of such local must be encoded in the name, so that we can retrieve it from debug metadata during EnC.\r\n            \r\n               The integer value of the kind must match corresponding Dev11/12 TEMP_KIND enum values for\r\n               compatibility with assemblies generated by the native compiler.\r\n            \r\n               Long-lived local variables must be assigned slots in source order.\r\n            ":"\r\n            合成的本地变量是\r\n            1）短暂的（临时）\r\n               临时变量的寿命不得越过语句边界（PDB序列点）。\r\n               这些变量不会通过enc跟踪，也没有名称。\r\n             \r\n            2）长寿\r\n               所有寿命都可能越过语句边界的变量（包括一个PDB序列点）\r\n               必须在支持ENC的构建配置中命名。其中一些可能需要在发行版中命名，以支持EE。\r\n               这种本地的类型必须以名称编码，以便我们可以在ENC期间从Debug Metadata中检索它。\r\n            \r\n               类型的整数值必须匹配相应的dev11/12 temp_kind枚举值\r\n               与天然编译器生成的组件的兼容性。\r\n            \r\n               长寿命的本地变量必须按源顺序分配插槽。\r\n            \r\n","\r\n            If a specific analyzer failed to load the namespace-qualified name of its type, null otherwise.\r\n            ":"\r\n            如果特定的分析仪未能加载其类型的名称空间合格名称，则否则为空。\r\n            \r\n"," array must contain at least one element. The new\r\n            property value must be the last element of the array.\r\n            ":" 数组必须至少包含一个元素。新的\r\n            属性值必须是数组的最后一个元素。\r\n            \r\n"," \r\n            Set of IL offsets where await operators are to be resumed \r\n            ":" \r\n            等待运营商的IL偏移集\r\n            \r\n","\r\n            Report a diagnostic as hidden.\r\n            ":"\r\n            报告隐藏的诊断。\r\n            \r\n","\r\n            The global option specified by the IncludeAll tag.\r\n            ":"\r\n            IncludeAll标签指定的全局选项。\r\n            \r\n","\r\n            This will check whether context around the operation has any error such as syntax or semantic error\r\n            ":"\r\n            这将检查操作周围的上下文是否有任何错误，例如语法或语义错误\r\n            \r\n","\r\n            The string representation of the nodes in this list, not including \r\n            the first node's leading trivia and the last node's trailing trivia.\r\n            ":"\r\n            此列表中节点的字符串表示，不包括\r\n            第一个节点的领先琐事和最后一个节点的尾随琐事。\r\n            \r\n","The rule node from which to create a rule object":"创建规则对象的规则节点\r\n","\r\n            Expresson that is conditionally accessed.\r\n            ":"\r\n            有条件访问的expresson。\r\n            \r\n","\r\n            A type that denotes the absence of a value.\r\n            ":"\r\n            一种表示没有值的类型。\r\n            \r\n","\r\n            Return the lexically first of multiple locations.\r\n            ":"\r\n            多个位置中的词汇首先返回。\r\n            \r\n"," that was added by the generator.\r\n            ":" 这是由发电机添加的。\r\n            \r\n","\r\n            Serialize the method local signature to the blob.\r\n            ":"\r\n            序列化该方法局部签名到斑点。\r\n            \r\n","\r\n            Region's kind\r\n            ":"\r\n            地区的\r\n            \r\n",".\r\n            It contains the set of ":"。\r\n            它包含一组\r\n","\r\n            The assembly references to be emitted, in row order. These\r\n            are just the assembly references from the current generation.\r\n            ":"\r\n            汇编引用以行顺序排列。这些\r\n            只是当前一代的组装参考。\r\n            \r\n","\r\n            This method should be invoked when the analyzer host is disposing off the given ":"\r\n            当分析仪主机处置给定时，应调用此方法\r\n"," in the\r\n            appropriate locations in ":" 在里面\r\n            适当的位置\r\n","\r\n            The compiler prefers performance over debuggability. Use for code running in a production environment.\r\n            ":"\r\n            编译器更喜欢性能而不是讨论。用于在生产环境中运行的代码。\r\n            \r\n","PrintMembers":"版画成员\r\n","True if the two objects are equal.":"如果两个对象相等，则为正确。\r\n","The statement to visit":"访问的声明\r\n","IVariableDeclarationOpertion":"ivariabledeclarationopertion\r\n","HostFunctions.newObj(T)":"hostfunctions.newobj（t）\r\n","\r\n            instance and uses it to list the drives on the local machine.\r\n            It assumes that an instance of ":"\r\n            实例并使用它列出本地计算机上的驱动器。\r\n            它假设一个实例\r\n","\r\n            Returns the major Unknown or MayBe top value of the domain.\r\n            ":"\r\n            返回域的主要未知数或最高价值。\r\n            \r\n","\r\n            Returns a collection of interfaces implemented by given type.\r\n            ":"\r\n            返回通过给定类型实现的接口集合。\r\n            \r\n"," methods, respectively. Calling ":" 方法分别。打电话\r\n","\r\n            Path of the source file (":"\r\n            源文件的路径（\r\n","\r\n            Evaluates script code.\r\n            ":"\r\n            评估脚本代码。\r\n            \r\n","\r\n            This type is 8 bytes on a 32-bit platforms and 16 bytes on 64-bit platforms.\r\n            ":"\r\n            这种类型是32位平台上的8个字节和64位平台上的16个字节。\r\n            \r\n","\r\n            List of operations to execute before entry to the loop. This comes from the first clause of the for statement.\r\n            ":"\r\n            进入循环之前要执行的操作列表。这来自for语句的第一个条款。\r\n            \r\n","\r\n            Gets or sets the value of an indexed script object property.\r\n            ":"\r\n            获取或设置索引脚本对象属性的值。\r\n            \r\n","\r\n            Base type for analysis contexts for execution of ":"用于执行分析上下文的基本类型\r\n","\r\n            Used in C# for spans preceding the first ":"\r\n            在C＃中用于第一个之前的跨度\r\n","\r\n            Attempts to add a ":"\r\n            尝试添加一个\r\n","Annotations to be added to the new node.":"注释要添加到新节点。\r\n","\r\n            Argument becomes an element of an array that matches a trailing C# params or VB ParamArray parameter.\r\n            ":"\r\n            参数成为与尾随C＃参数或VB Paramarray参数匹配的数组的元素。\r\n            \r\n"," (\"Add\", \"AddOrUpdate\", \"GetOrAdd\", \"TryAdd\", or \"TryUpdate\")\r\n                b. Method's name begins with \"Add\" (FxCop compat)\r\n            ":" （“ add”，“ addorupdate”，“ getoradd”，“ tryadd”或“ tryupdate”）\r\n                b。方法的名称以“添加”（fxcop compat）开头\r\n            \r\n","The number of unique operands found.":"找到了独特的操作数的数量。\r\n"," on. \r\n            ":"上。\r\n            \r\n"," if the specified System.Object is a ":" 如果指定的system.Object是一个\r\n","null, if ":"null，如果 \r\n","\r\n            In VB, the initializer for this node is only ever used for explicit array bounds initializers. This node corresponds to\r\n            the VariableDeclaratorSyntax in C# and the ModifiedIdentifierSyntax in VB.\r\n            ":"\r\n            在VB中，该节点的初始化程序仅用于显式数组界初始化器。该节点对应于\r\n            C＃中的variabledeclaratorsyntax和Vb中的修改后识别器元素。\r\n            \r\n","GetAsyncEnumerator":"getAsyncenumerator\r\n"," with the exception that it\r\n            does not marshal a result value to the host. It can provide a performance advantage\r\n            when the result value is not needed.\r\n            ":" 除了它\r\n            不会将结果值带到主机。它可以提供性能优势\r\n            当不需要结果值时。\r\n            \r\n","\r\n            Locals declared within the switch arm (e.g. pattern locals and locals declared in the guard) scoped to the arm.\r\n            ":"\r\n            在开关臂中声明的当地人（例如，警卫中宣布的当地人和当地人）被瞄准了手臂。\r\n            \r\n","\r\n            True if the given symbol is fully analyzed for the given analyzer.\r\n            ":"\r\n            如果给定的分析仪对给定符号进行了充分的分析，则是正确的。\r\n            \r\n","\r\n            Test hook for intercepting File.Open.\r\n            ":"\r\n            测试挂钩用于拦截文件。\r\n            \r\n","\r\n            Specifies how this field is marshalled when it is accessed from unmanaged code.\r\n            ":"\r\n            指定该字段是如何从非托管代码访问的。\r\n            \r\n","\r\n            A string that may possibly be formatted differently depending on culture.\r\n            NOTE: Types implementing ":"\r\n            根据文化，可能会以不同的格式进行格式化的弦。\r\n            注意：实施类型\r\n","\r\n            Factory method used to create this Range value. Can be null if appropriate\r\n            symbol was not found.\r\n            ":"\r\n            用于创建此范围值的工厂方法。如果适当的话，可以无效\r\n            找不到符号。\r\n            \r\n"," to the exit block, i.e. the destination block has ":" 到出口块，即目标块具有\r\n","\r\n            A reference to a field.\r\n            ":"\r\n            对字段的引用。\r\n            \r\n","\r\n            Maps the given metadata token to the given source line span in the specified source file. \r\n            Must be called between calls to ":"\r\n            将给定的元数据令牌映射到指定源文件中给定的源线跨度。\r\n            必须在两次呼叫之间调用\r\n","\r\n            Adds source code in the form of a ":"\r\n            以A的形式添加源代码\r\n","\r\n                    at the beginning of the argument list. Doing so for methods that do not require\r\n                    explicit type arguments is optional.\r\n                    ":"\r\n                    在参数列表的开头。这样做不需要的方法\r\n                    显式类型参数是可选的。\r\n                    \r\n","The current node that the walker is visiting.":"沃克正在访问的当前节点。\r\n","The index of the property to get.":"属性的索引要获得。\r\n","Unlike ":"与众不同\r\n","\r\n            Casts the immutable array of a Type to an immutable array of its base type.\r\n            ":"\r\n            将类型的不变阵列铸成其基本类型的不可变阵列。\r\n            \r\n","\r\n            Construct a concurrent set using the specified equality comparer.\r\n            ":"\r\n            使用指定的平等比较构建并发集。\r\n            \r\n","\r\n            True if this type or some containing type has type parameters.\r\n            ":"\r\n            如果此类型或某些包含类型具有类型参数，则为true。\r\n            \r\n","\r\n            Initializes a new JScript engine instance with the specified name, options, and\r\n            synchronous invoker.\r\n            ":"\r\n            初始化带有指定名称，选项和的新JScript引擎实例\r\n            同步调用者。\r\n            \r\n","\r\n            Is result a managed reference\r\n            ":"\r\n            结果是托管参考\r\n            \r\n","The statement or expression is not with a method\r\n            body or field or property initializer.":"语句或表达不使用方法\r\n            车身或字段或属性初始化器。\r\n","\r\n            Delegate to compute string hash code.\r\n            This piece is language-specific because VB treats \"\" and null as equal while C# does not.\r\n            ":"\r\n            委托来计算字符串哈希代码。\r\n            该作品是特定于语言的，因为VB将“将”和null视为平等，而C＃则不将其视为。\r\n            \r\n","\r\n            The Mantissa buffer stores the mantissa digits as characters in a string.  \r\n            The MantissaCount gives the number of digits present in the Mantissa buffer.\r\n            There shall be neither leading nor trailing zero digits in the Mantissa.\r\n            Note that this represents only nonnegative floating-point literals; the\r\n            negative sign in C# and VB is actually a separate unary negation operator.\r\n            ":"\r\n            Mantissa缓冲区将Mantissa Digits存储在字符串中。\r\n            Mantissacount给出了Mantissa缓冲区中存在的数字数量。\r\n            曼蒂萨（Mantissa）既不有领先和落后数字。\r\n            请注意，这仅表示非负浮点文字；这\r\n            C＃和VB中的负符号实际上是一个单独的单一否定操作员。\r\n            \r\n","\r\n            Creates a strongly typed flag set.\r\n            ":"\r\n            创建一个强烈键入的标志集。\r\n            \r\n","\r\n            Checks if the given method overrides Object.GetHashCode.\r\n            ":"\r\n            检查给定的方法是否覆盖对象.gethashcode。\r\n            \r\n","\r\n            A set of values that are reserved for special use for the editorconfig specification\r\n            and will always be lower-cased by the parser.\r\n            ":"\r\n            一组保留用于特殊用途的值\r\n            并将始终由解析器降低。\r\n            \r\n","\r\n            This property is effective only when heap size monitoring is enabled (see\r\n            ":"\r\n            仅当启用堆大小监视时，此属性才有效（请参阅\r\n            \r\n"," structure and is equal to the current instance; otherwise, false.":" 结构，等于当前实例；否则，错误。\r\n","\r\n            When set to a value greater than 1, this property enables on-demand heap expansion,\r\n            which automatically increases the maximum heap size by the specified multiplier\r\n            whenever the script engine is close to exceeding the current limit. Note that a buggy\r\n            or malicious script can still cause an application to fail by exhausting its address\r\n            space or total available memory. On-demand heap expansion is recommended for use in\r\n            conjunction with heap size monitoring (see ":"\r\n            当设置为大于1的值时，此属性启用按需堆扩展，\r\n            这会自动增加最大堆大小通过指定的乘数\r\n            每当脚本引擎接近超过当前限制时。注意一个越野车\r\n            或恶意脚本仍然会导致应用程序通过用尽地址而失败\r\n            空间或总内存。建议使用按需堆扩展\r\n            与堆大小监视的连接（请参阅\r\n","\r\n            True to emit PDB information (to a standalone PDB file or embedded into the PE file).\r\n            ":"\r\n            忠实于发射PDB信息（到独立的PDB文件或嵌入到PE文件中）。\r\n            \r\n","\r\n            In C# these aliases can be used in \"extern alias\" syntax to disambiguate type names. \r\n            ":"\r\n            在C＃中，这些别名可在“外部别名”语法中使用，以消除类型名称。\r\n            \r\n","\r\n            Project level imports (VB only, TODO: C# scripts).\r\n            ":"\r\n            项目级导入（仅VB，TODO：C＃脚本）。\r\n            \r\n","\r\n            Initialize the value referenced by ":"\r\n            初始化由\r\n","\r\n            Specifies whether to import members with accessibility other than public or protected by default. \r\n            Default value is ":"\r\n            指定是否要导入以外的可访问性或默认保护成员。\r\n            默认值是\r\n","\r\n            If this method is a reduced extension method, returns a type inferred during reduction process for the type parameter. \r\n            ":"\r\n            如果此方法是减少的扩展方法，请返回类型参数减少过程中推断出的类型。\r\n            \r\n","A delegate that returns the language-specific kind for a given syntax node":"返回给定语法节点的语言特定种类的委托\r\n","Also see ":"也看\r\n","Analyzers whose state needs to be cleared.":"国家需要清除的分析仪。\r\n","\r\n            C# or VB namespace import.\r\n            ":"\r\n            C＃或VB名称空间导入。\r\n            \r\n"," clause.\r\n            ":" 条款。\r\n            \r\n","\r\n            Context for an operation action.\r\n            An operation action can use an ":"\r\n            操作操作的上下文。\r\n            操作操作可以使用\r\n","\r\n            Gets a list of all the diagnostics associated with this trivia.\r\n            This method does not filter diagnostics based on #pragmas and compiler options\r\n            like nowarn, warnaserror etc.\r\n            ":"\r\n            获取与此琐事相关的所有诊断列表。\r\n            此方法不会根据#Pragmas和编译器选项过滤诊断\r\n            像Nowarn，Warnaserror等\r\n            \r\n","Event - type is unsupported":"事件 - 类型不支持\r\n","\r\n            Per-analyzer analysis state.\r\n            ":"\r\n            每个分析仪分析状态。\r\n            \r\n","\r\n             The content that will be written to the PDB.\r\n             ":"\r\n             将写入PDB的内容。\r\n             \r\n","\r\n            A 64 bit IEEE floating point number.\r\n            ":"\r\n            一个64位IEEE浮点数。\r\n            \r\n","A string that represents the current exception.":"表示当前异常的字符串。\r\n","\r\n            Expand wildcards in the item list.\r\n            ":"\r\n            扩展项目列表中的通配符。\r\n            \r\n","\r\n            Evaluates script code with an associated document name, optionally discarding the document after execution.\r\n            ":"\r\n            用关联的文档名称评估脚本代码，可选地在执行后丢弃文档。\r\n            \r\n","\r\n            Multiple ambiguous symbols were available with the same name. This can occur if \"using\"\r\n            statements bring multiple namespaces into scope, and the same type is available in\r\n            multiple. This can also occur if multiple properties of the same name are available in a\r\n            multiple interface inheritance situation.\r\n            ":"\r\n            具有相同名称的多个模棱两可的符号。如果“使用”\r\n            语句将多个名称空间带入范围，并且在\r\n            多。如果同名的多个属性可在\r\n            多个接口继承情况。\r\n            \r\n","\r\n            Map from non-concurrent analyzers to the gate guarding callback into the analyzer. \r\n            ":"\r\n            从非电流分析仪到分析仪的登机守卫回调。\r\n            \r\n"," is written to a file a ":" 写入文件\r\n","\r\n            Constructor arguments on the attribute.\r\n            ":"\r\n            关于属性的构造函数参数。\r\n            \r\n","\r\n            Make a copy of a bit array.\r\n            ":"\r\n            制作一点数组的副本。\r\n            \r\n","\r\n            Creates a reference to a loaded assembly.\r\n            ":"\r\n            创建对加载组件的引用。\r\n            \r\n","\r\n            Provides information about how data flows into and out of a region. This information is\r\n            returned from a call to\r\n            ":"\r\n            提供有关数据如何流入和流出区域的信息。此信息是\r\n            从电话回来\r\n            \r\n","\r\n            function dispose(value)\r\n            {\r\n                var IDisposableT = host.type(\"System.IDisposable\");\r\n                var disposable = host.asType(IDisposableT, value);\r\n                if (disposable) {\r\n                    disposable.Dispose();\r\n                }\r\n            }\r\n            ":"\r\n            功能处置（值）\r\n            {\r\n                var idisposablet = host.type（“ system.idisposable”）;\r\n                var dorposable = host.astype（idisposablet，value）;\r\n                if（销售）{\r\n                    dorposable.dispose（）;\r\n                }\r\n            }\r\n            \r\n","\r\n            A container for a list of IL instructions providing the implementation (if any) of this method.\r\n            ":"\r\n            一个用于IL指令列表的容器，可提供此方法的实现（如果有）。\r\n            \r\n","\r\n            A rope that represents the concatenation of two ropes.\r\n            ":"\r\n            一条代表两个绳索串联的绳索。\r\n            \r\n","\r\n            Examples include (this list is not exhaustive):\r\n            ":"\r\n            示例包括（此列表并不详尽）：\r\n            \r\n",". \r\n            The default is the page size for the architecture.\r\n            ":"。\r\n            默认值是架构的页面大小。\r\n            \r\n","\r\n            Creates a new tree of nodes with the specified trivia replaced with new trivia.\r\n            ":"\r\n            创建一棵新的节点树，指定的琐事被新的琐事代替。\r\n            \r\n","A character position used to identify a declaration scope and\r\n            accessibility. This character position must be within the FullSpan of the Root syntax\r\n            node in this SemanticModel.\r\n            ":"用于识别声明范围的角色位置和\r\n            可访问性。此字符位置必须在根语法的成面内\r\n            该语义模型中的节点。\r\n            \r\n","\r\n            Indicates how to marshal string parameters and controls name mangling.\r\n            ":"指示如何元使用字符串参数并控制名称杂交。\r\n            \r\n","\r\n            Resource held by the using. Can be null if Declaration is not null.\r\n            ":"\r\n            使用的资源。如果声明不是零，则可以为null。\r\n            \r\n","\r\n            Resolves assembly strong name key file path.\r\n            Internal for testing.\r\n            ":"\r\n            解决汇编强名称密钥文件路径。\r\n            内部测试。\r\n            \r\n","\r\n            Argument is specified positionally and matches the parameter of the same ordinality.\r\n            ":"\r\n            参数是定位指定的，并匹配同一法规的参数。\r\n            \r\n","\r\n            Count of registered code block end actions.\r\n            ":"\r\n            注册代码块末端操作的计数。\r\n            \r\n","\r\n            partial class Outer\r\n            {\r\n                partial class Inner\r\n                {\r\n                }\r\n            }\r\n            ":"\r\n            部分类外部\r\n            {\r\n                部分级别的内部\r\n                {\r\n                }\r\n            }\r\n            \r\n","'end' must not be less than 'start'":"“结束”不得小于“开始”\r\n","\r\n            Gets or sets optional document attributes.\r\n            ":"\r\n            获取或设置可选文档属性。\r\n            \r\n","Name of the most recently modified file.":"最近修改的文件的名称。\r\n","\r\n            Convert the bits of its representation to a float\r\n            ":"\r\n            将其代表的位转换为浮标\r\n            \r\n","\r\n            Represents a bag of custom attributes and the associated decoded well-known attribute data.\r\n            ":"\r\n            代表一袋自定义属性和相关的解码众所周知的属性数据。\r\n            \r\n","\r\n            The generic type that defines this type parameter.\r\n            ":"\r\n            定义此类型参数的通用类型。\r\n            \r\n","Stream from which the compilation's Win32 resources will be read (in RES format).\r\n             Null to indicate that there are none. The RES format begins with a null resource entry.":"汇编的WIN32资源将被读取（以RES格式）。\r\n             null表示没有。 RES格式从零资源条目开始。\r\n","The trivia to insert after; a descendant of the root node.":"插入的琐事；根节点的后代。\r\n","\r\n            Current usage:\r\n             (1) C# lambda expression.\r\n             (2) VB anonymous delegate expression.\r\n            ":"\r\n            当前用法：\r\n             （1）C＃lambda表达式。\r\n             （2）VB匿名代表表达式。\r\n            \r\n"," that contains the given ":" 包含给定的\r\n","The uninitialized value.":"非初始化的价值。\r\n","Indicates different kinds of switch case clauses as defined by ":"指示由不同类型的开关案例子句定义\r\n"," for analysis. If ":" 用于分析。如果\r\n","\r\n             int x = 3;\r\n             RunWithPredicate((a, b) => this.IsSomething(a, b, x));\r\n             ":"\r\n             int x = 3;\r\n             runwithPredicate（（（a，b）=> this.issomething（a，b，x））;\r\n             \r\n","An enum field that specifies the flag.":"指定标志的枚举字段。\r\n","\r\n            Top-level embedded types (e.g. attribute types that are not present in referenced assemblies).\r\n            ":"顶级嵌入式类型（例如，参考组件中不存在的属性类型）。\r\n            \r\n","Reported diagnostic '{0}' has a source location in file '{1}', which is not part of the compilation being analyzed.":"报告的诊断'{0}'具有文件'{1}'中的源位置，这不是要分析的汇编的一部分。\r\n"," error code if one is available, zero otherwise.\r\n            ":" 错误代码如果可用，否则为零。\r\n            \r\n","\r\n            Invokes a delegate that returns no value on the script engine's thread.\r\n            ":"\r\n            调用一个委托，该委托返回脚本引擎线程的价值。\r\n            \r\n"," delegate, which calls ":" 委托，打电话\r\n","True if the reference identity matches the definition identity.":"如果参考身份与定义身份匹配，则为true。\r\n"}