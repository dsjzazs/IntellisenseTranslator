{"java.sql.ResultSet.updateObject(int, java.lang.Object)":"java.sql.Resultset.updateObject（int，java.lang.object）\r\n","when the capacity is less than zero.\n":"当容量小于零时。\r\n\r\n","java.security.DomainLoadStoreParameter.getProtectionParameter()":"java.security.domainloadstoreparameter.getProtectionParameter（）\r\n"," to represent bit values.":" 表示位值。\r\n"," has been canceled, or if the task has been\n                scheduled or canceled.\n":" 已被取消，或者任务已被取消\r\n                计划或取消。\r\n\r\n"," was called, or the barrier\n         action (if present) failed due to an exception\n":" 被称为或障碍\r\n         由于异常而失败的动作（如果存在）\r\n\r\n","Indicates that the function  returns a table.":"指示该函数返回表。\r\n","java.util.Calendar.FRIDAY":"java.util.calendar.friday\r\n","if the time cannot be computed from the current field\n                values.\n":"如果无法从当前字段计算时间\r\n                值。\r\n\r\n","when removing from this set is not supported.":"从该集合中删除时，不支持。\r\n","java.util.Scanner.next(java.util.regex.Pattern)":"java.util.scanner.next（java.util.regex.pattern）\r\n","Useful constant for MINUTE field alignment.":"有用的常数可用于分钟对齐。\r\n","java.nio.file.InvalidPathException.getReason()":"java.nio.file.invalidpathexception.getReason（）\r\n","java.nio.file.Files.createTempFile(java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createtempfile（java.lang.string，java.lang.string，java.nio.file.file.attribute.fileattribute）\r\n","java.util.Calendar.OCTOBER":"java.util.calendar.octbor\r\n","Marks the millisecond part of a time.":"标志着毫秒的一部分。\r\n","java.sql.ResultSet.getDate(java.lang.String)":"java.sql.Resultset.getDate（java.lang.string）\r\n","\n entry.":"\r\n 入口。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>TIME</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>时间</code>。\r\n","Left-justifies the output.":"左侧输出。\r\n","Clears all warnings reported on this <code>ResultSet</code> object.":"清除有关此<code> Resultset </code>对象的所有警告。\r\n"," object that, when\n            called, runs the given privileged action and returns its result.":" 对象，当\r\n            称为，运行给定的特权动作并返回其结果。\r\n","java.sql.Blob.truncate(long)":"java.sql.blob.truncate（long）\r\n","java.util.Hashtable.rehash()":"java.util.hashtable.harash（）\r\n","Get the maximum number of hex characters in an in-line binary literal for\n this database.":"在串联二进制文字中获取最大数量的十六进制字符\r\n 此数据库。\r\n","java.nio.charset.UnsupportedCharsetException.getCharsetName()":"java.nio.charset.unsupportedCharsetException.getCharSetName（）\r\n","java.util.Arrays.sort(java.lang.Object[], int, int, java.util.Comparator)":"java.util.arrays.sort（java.lang.object []，int，int，java.util.comparator）\r\n","This constant stands for the integer part of the number.":"这个常数代表数字的整数部分。\r\n"," if there is no such element.":" 如果没有这样的元素。\r\n"," is negative\n":" 负面\r\n\r\n","Copy a file to a target file.":"将文件复制到目标文件。\r\n","instance has been\n initialized for verification.":"实例已经过去了\r\n 初始化以进行验证。\r\n","java.nio.file.Path.toAbsolutePath()":"java.nio.file.path.toabsolutepath（）\r\n","java.util.OptionalDouble.orElseGet(java.util.function.DoubleSupplier)":"java.util.optionaldouble.orelseget（java.util.function.doublesupplier）\r\n","java.sql.ResultSet.updateNCharacterStream(java.lang.String, java.io.Reader)":"java.sql.Resultset.updatencharacterstream（java.lang.string，java.io.reader）\r\n","java.nio.file.spi.FileSystemProvider.readAttributes(java.nio.file.Path, java.lang.Class, java.nio.file.LinkOption)":"java.nio.file.spi.filesystemprovider.readattributes（java.nio.file.path，java.lang.class，java.nio.file.linkoption）\r\n"," with the\n given ":" 与\r\n 给出\r\n","java.util.OptionalDouble.of(double)":"java.util.optionaldouble.of（double）\r\n","java.text.DecimalFormatSymbols.setCurrencySymbol(java.lang.String)":"java.text.decimalformatsymbols.setcurrencysymbol（java.lang.string）\r\n","A class for retrieving ":"检索课程\r\n","java.util.TimeZone.SHORT":"java.util.timezone.short\r\n","java.security.PrivateKey.serialVersionUID":"java.security.privatekey.serialversionuid\r\n","java.util.concurrent.CountedCompleter.firstComplete()":"java.util.concurrent.countedcompleter.firstcomplete（）\r\n","java.text.Normalizer":"java.text.normalizer\r\n","java.sql.ResultSet.FETCH_FORWARD":"java.sql.Resultset.fetch_forward\r\n","java.util.Currency.getCurrencyCode()":"java.util.currency.getCurrencyCode（）\r\n","java.security.cert.CertificateFactory":"java.security.cert.certificateFactory\r\n","java.util.Collections.synchronizedMap(java.util.Map)":"java.util.collections.synchronizedmap（java.util.map）\r\n","Sets the daylight saving time start rule to a weekday before or after the given date within\n            a month, e.":"将日光节省时间开始规则设置为在给定日期之前或之后的工作日\r\n            一个月，e。\r\n","java.nio.file.attribute.AclEntryPermission.LIST_DIRECTORY":"java.nio.file.attribute.aclentrypermission.list_directory\r\n","trailerField":"拖车菲尔德\r\n","java.text.DecimalFormatSymbols.setExponentSeparator(java.lang.String)":"java.text.decimalformatsymbols.setepteptonentseparator（java.lang.string）\r\n","if the an exception occurred while loading the certificates\n             of this code ":"如果加载证书时发生异常\r\n             此代码\r\n","java.text.ChoiceFormat.previousDouble(double)":"java.text.ChoiceFormat.previousDouble（double）\r\n","Returns the provider of this ":"返回提供商\r\n","Move or rename a file to a target file.":"将文件移动或重命名为目标文件。\r\n","java.sql.ResultSet.updateRef(java.lang.String, java.sql.Ref)":"java.sql.Resultset.updateref（java.lang.string，java.sql.ref）\r\n"," field indicating the\n            first month of the year in the Gregorian and Julian calendars.":" 指示\r\n            Gregorian和Julian日历中的一年中的第一个月。\r\n","Retrieves a description of the stored procedures available in the given\n            catalog.":"检索给定的存储过程的描述\r\n            目录。\r\n","Is the value range fixed and fully known.":"是固定且完全知道的值范围。\r\n","java.sql.Statement.SUCCESS_NO_INFO":"java.sql.statement.success_no_info\r\n","java.sql.PreparedStatement.setNString(int, java.lang.String)":"java.sql.preparedstatement.setnstring（int，java.lang.string）\r\n","Creates an empty enum map with the specified key type.":"使用指定的密钥类型创建一个空的枚举映射。\r\n","java.security.Certificate.decode(java.io.InputStream)":"java.security.certificate.decode（java.io.inputstream）\r\n","java.util.NoSuchElementException.NoSuchElementException()":"java.util.nosuchelementException.nosuchelementException（）\r\n","java.util.LinkedHashSet.LinkedHashSet(int, float)":"java.util.linkedhashset.linkedhashset（int，float）\r\n","java.util.Set.remove(java.lang.Object)":"java.util.set.remove（java.lang.Object）\r\n","CertPathBuilderResult":"certPathBuilderresult\r\n","java.security.IdentityScope.IdentityScope(java.lang.String)":"Java.Security.IdentityScope.IdentityScope（Java.lang.String）\r\n","Unchecked exception thrown when path string cannot be converted into a\n            ":"当路径字符串无法转换为一个\r\n            \r\n","java.util.BitSet.clear(int, int)":"java.util.bitset.clear（int，int）\r\n","java.util.ConcurrentModificationException.ConcurrentModificationException(java.lang.String)":"Java.util.concurrentModificationException.concurrentModificationException（java.lang.string）\r\n","java.text.Collator.getAvailableLocales()":"java.text.collat​​or.getAvailableLocales（）\r\n","pattern":"图案\r\n","if an error occurs accessing the database or if max ":"如果发生错误访问数据库或最大\r\n","A file attribute view that provides a view of a file's user-defined\n            attributes, sometimes known as <em>extended attributes</em>.":"文件属性视图，提供文件的用户定义的视图\r\n            属性，有时称为<em>扩展属性</em>。\r\n","Returns this identity's name.":"返回此身份的名称。\r\n","Field constant used to construct a FieldPosition object.":"字段常数用于构造字段置对象。\r\n","Retrieves a description of the user-defined type (UDT) hierarchies defined in a\n            particular schema in this database.":"检索用户定义类型（UDT）层次结构的描述\r\n            此数据库中的特定模式。\r\n","java.util.Arrays.hashCode(short[])":"java.util.arrays.hashcode（short []）\r\n","java.security.cert.CRLException.CRLException(java.lang.Throwable)":"java.security.cert.crexception.crexception（java.lang.throwable）\r\n","Trims the capacity of this vector to be the vector's current\n            size.":"修剪该向量的能力是向量的当前\r\n            尺寸。\r\n","java.sql.DatabaseMetaData.bestRowUnknown":"java.sql.databasemetadata.bestrowunknown\r\n","java.nio.file.AtomicMoveNotSupportedException":"java.nio.file.AtomicMovenotSupportedException\r\n","java.util.Arrays":"java.util.arrays\r\n","The interface to an elliptic curve (EC) private key.":"椭圆曲线（EC）私钥的接口。\r\n","Returns the minimum value recorded, or ":"返回记录的最低值，或\r\n","java.sql.ResultSet.getBlob(int)":"java.sql.Resultset.getBlob（int）\r\n","Indicates that the scope of the best row identifier is\n            the remainder of the current transaction.":"表示最佳行标识符的范围是\r\n            当前交易的其余部分。\r\n","The constant indicating that a\n            parameter will allow <code>NULL</code> values.":"常数表明\r\n            参数将允许<code> null </code>值。\r\n","Returns the number of seconds past the minute represented by this date. -or- Sets the seconds of this ":"返回该日期代表的分钟的秒数。 - 或 - 设置其中的秒\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.String)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.string）\r\n"," associated with this array.":" 与此数组相关联。\r\n","Retrieves whether this database stores tables in a local file.":"检索该数据库是否将表存储在本地文件中。\r\n","java.text.FieldPosition.getFieldAttribute()":"java.text.fieldposition.getFieldAttribute（）\r\n","java.security.Identity.removeCertificate(java.security.Certificate)":"Java.security.Identity.RemoveCertificate（Java.security.certificate）\r\n","java.sql.CallableStatement.getNClob(java.lang.String)":"java.sql.callablestatement.getnclob（java.lang.string）\r\n","java.util.concurrent.ConcurrentLinkedDeque.size()":"java.util.concurrent.concurrentlinkeddeque.size（）\r\n","java.sql.ResultSet.updateObject(int, java.lang.Object, int)":"java.sql.Resultset.updateObject（int，java.lang.object，int）\r\n","Returns a reverse order ":"返回反向订单\r\n","Registers the parameter in ordinal position\n            <code>parameterIndex</code> to be of JDBC type\n            <code>sqlType</code>.":"注册序列位置的参数\r\n            <code>参数index </code>是JDBC类型的\r\n            <code> sqltype </code>。\r\n","Resets the digest for further use.":"重置摘要以进一步使用。\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.String, java.lang.Throwable)":"java.sql.sqlRecoverableException.sqlrecoverableException（java.lang.string，java.lang.throwablable）\r\n","java.security.cert.PolicyQualifierInfo":"java.security.cert.policyqualifierinfo\r\n","\n            for all of its operations.":"\r\n            对于其所有操作。\r\n","java.util.EnumSet.allOf(java.lang.Class)":"java.util.enumset.allof（java.lang.class）\r\n","java.nio.file.FileSystemException.FileSystemException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.filesystemexception.filesystemexception（java.lang.string，java.lang.string，java.lang.string）\r\n","Returns a synchronized (thread-safe) map backed by the specified\n            map.":"返回由指定的同步（线程安全）映射\r\n            地图。\r\n","if error(s) occur.\n":"如果发生错误。\r\n\r\n","java.sql.Ref":"java.sql.ref\r\n","Returns the next element in the list and advances the cursor position.":"返回列表中的下一个元素，并推进光标位置。\r\n","java.sql.DatabaseMetaData.procedureReturnsResult":"java.sql.databasemetadata.procedurereturnsresult\r\n","Constructs a new <code>IllformedLocaleException</code> with the\n            given message and -1 as the error index.":"使用\r\n            给定消息，-1作为错误索引。\r\n","The interface to an RSA public key.":"RSA公钥的接口。\r\n","java.nio.file.WatchService.poll()":"java.nio.file.watchservice.poll（）\r\n","Returns a general-purpose number format for the specified locale.":"返回指定语言环境的通用数字格式。\r\n","Verifies the passed-in signature in the specified array\n            of bytes, starting at the specified offset.":"验证指定数组中传递的签名\r\n            字节，从指定偏移开始。\r\n","Converts a string in JDBC time escape format to a <code>Time</code> value.":"将JDBC时间逃逸格式的字符串转换为<code> time </code>值。\r\n","java.security.GuardedObject.GuardedObject(java.lang.Object, java.security.Guard)":"java.security.guardedobject.guardedobject（java.lang.object，java.security.guard）\r\n","if there is an error while accessing the database.\n":"如果在访问数据库时存在错误。\r\n\r\n","java.security.cert.PKIXParameters.PKIXParameters(java.util.Set)":"java.security.cert.pkixparameters.pkixparameters（java.util.set）\r\n","java.security.MessageDigestSpi":"java.security.messagedigestspi\r\n","java.sql.CallableStatement.getBigDecimal(int, int)":"java.sql.callablestatement.getbigdecimal（int，int）\r\n","java.security.KeyStoreException.KeyStoreException(java.lang.Throwable)":"Java.Security.KeystoreException.KeystoreException（java.lang.throwable）\r\n","Gets the optional OCSP request extensions. -or- Sets the optional OCSP request extensions.":"获取可选的OCSP请求扩展。 - 或设置可选的OCSP请求扩展。\r\n","Formattable#formatTo\n            Formattable.formatTo()":"格式＃formatto\r\n            格式化。formatto（）\r\n",", and so on) are implemented by\n            making a fresh copy of the underlying array.":"，等等）由\r\n            制作基础阵列的新副本。\r\n","Constructs a <code>BatchUpdateException</code> object initialized with\n            a given <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            <code>cause</code> and <code>updateCounts</code>.":"构建<code> batchupdateException </code>对象初始化的对象\r\n            给定的<code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            <code>原因</code>和<code> UpdateCounts </code>。\r\n","java.nio.file.Path.endsWith(java.lang.String)":"java.nio.file.path.endswith（java.lang.string）\r\n","ExecutorService":"执行人员服务\r\n","Constructs a <code>NoSuchElementException</code> with ":"用\r\n","java.util.Comparator.comparingInt(java.util.function.ToIntFunction)":"java.util.comparator.comparingint（java.util.function.tointfunction）\r\n","Decodes a certificate from an input stream.":"从输入流解码证书。\r\n","java.util.concurrent.ForkJoinTask.adapt(java.lang.Runnable)":"java.util.concurrent.forkjointask.adapt（java.lang.runnable）\r\n","LinkedList":"LinkedList\r\n"," if underlying\n             ":" 如果是基础\r\n             \r\n","FULL_DECOMPOSITION":"full_decomposition\r\n","java.util.Arrays.toString(char[])":"java.util.arrays.tostring（char []）\r\n","The number of elements or the size of the vector.":"元素的数量或向量的大小。\r\n","This constant stands for the grouping separator.":"该常数代表分组分离器。\r\n","Retrieves an Enumeration with all of the currently loaded JDBC drivers\n            to which the current caller has access.":"检索所有当前加载的JDBC驱动程序的枚举\r\n            当前呼叫者可以访问该呼叫者。\r\n","java.util.concurrent.ForkJoinTask.adapt(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.forkjointask.adapt（java.lang.runnable，java.lang.object）\r\n","A GuardedObject is an object that is used to protect access to\n            another object.":"护罩对象是用于保护访问访问的对象\r\n            另一个对象。\r\n","Returns the provider of this parameter object.":"返回此参数对象的提供商。\r\n","Retrieves a description of the given table's primary key columns.":"检索给定表的主键列的描述。\r\n","java.util.Calendar.getTimeInMillis()":"java.util.calendar.getTimeinmillis（）\r\n","java.text.CharacterIterator.first()":"java.text.characteriter.first（）\r\n","java.sql.CallableStatement.setBinaryStream(java.lang.String, java.io.InputStream, int)":"java.sql.callablestatement.setbinarystream（java.lang.string，java.io.inputstream，int）\r\n",", which executes\n            ":"，执行\r\n            \r\n","provider == null":"提供者== null\r\n","java.util.Spliterator.SUBSIZED":"java.util.spliterator.subsized\r\n","java.security.cert.LDAPCertStoreParameters.clone()":"java.security.cert.ldapcertstoreparameters.clone（）\r\n","Sets the daylight saving time end rule to a weekday before or after the given date within\n            a month, e.":"将日光节省时间末端规则设置为在给定日期之前或之后的一个工作日\r\n            一个月，e。\r\n","java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.addifabsent（java.lang.object）\r\n","java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int, float)":"java.util.concurrent.concurrenthashmap.concurrenthashmap（int，float）\r\n","Searches a range of\n            the specified array of ints for the specified value using the\n            binary search algorithm.":"搜索一系列\r\n            使用\r\n            二进制搜索算法。\r\n","java.util.Calendar.getDisplayName(int, int, java.util.Locale)":"java.util.calendar.getdisplayname（int，int，java.util.locale）\r\n"," that additionally supports operations\n            that wait for the queue to become non-empty when retrieving an\n            element, and wait for space to become available in the queue when\n            storing an element.":" 另外支持操作\r\n            等待队列在检索一个\r\n            元素，等待空间在队列中可用时\r\n            存储一个元素。\r\n","Inserts the specified element at the end of this deque,\n            waiting up to the specified wait time if necessary for space to\n            become available.":"在此Deque的末尾插入指定元素，\r\n            等待指定的等待时间，如有必要\r\n            可用。\r\n","java.util.NavigableMap.lowerKey(java.lang.Object)":"java.util.navigablemap.lowerkey（java.lang.Object）\r\n","Returns an <a href=\"#unmodifiable\">unmodifiable Map</a> containing the entries\n            of the given Map.":"返回<a href=\"#unmodifable\">无法解码的地图</a>包含条目\r\n            给定的地图。\r\n","Retreives a slice of the SQL <code>ARRAY</code> value\n            designated by this <code>Array</code> object, beginning with the specified\n            <code>index</code> and containing up to <code>count</code>\n            successive elements of the SQL array.":"重取出SQL <code>数组的切片</code>值\r\n            由此<code> array </code>对象指定，以指定\r\n            <code>索引</code>，最多包含<code> count </code>\r\n            SQL数组的连续元素。\r\n","Sets weekday strings.":"设置工作日弦。\r\n","java.security.KeyRep":"java.security.keyrep\r\n","natural\n                    ordering":"自然\r\n                    订购\r\n","Returns an immutable map containing eight mappings.":"返回一张包含八个映射的不变地图。\r\n","if an error occurrs accessing the database.\n":"如果出现错误访问数据库。\r\n\r\n","#SIZED":"＃大小\r\n","java.util.concurrent.CopyOnWriteArrayList.clear()":"java.util.concurrent.copyonwritearraylist.clear（）\r\n","java.time.format.DateTimeFormatter.ofLocalizedDate(java.time.format.FormatStyle)":"java.time.format.datetimeformatter.oflocalizeddate（java.time.format.formatstyle）\r\n","java.sql.ResultSet.updateBlob(java.lang.String, java.io.InputStream)":"java.sql.Resultset.updateBlob（java.lang.string，java.io.inputstream）\r\n","java.sql.SQLException.getSQLState()":"java.sql.sqlexception.getsqlstate（）\r\n","java.text.ChoiceFormat.getFormats()":"java.text.choiceformat.getFormats（）\r\n","java.security.cert.Certificate.getEncoded()":"java.security.cert.certificate.getencoded（）\r\n","Sixteen-bit UCS Transformation Format, big-endian byte order":"16位UCS转换格式，大型字节订单\r\n","java.util.InvalidPropertiesFormatException.InvalidPropertiesFormatException(java.lang.String)":"java.util.invalidpropertiesformatexception.invalidpropertiesformatexception（java.lang.string）\r\n","For languages that have different reading directions of text (like\n Japanese), this attribute allows to define which reading should be\n used.":"对于具有不同文本的阅读指示的语言（例如\r\n 日语），此属性允许定义哪个读数应该是\r\n 用过的。\r\n","\n             instance fails, or if it cannot process certificates in the\n             specified order.\n":"\r\n             实例失败，或者如果无法处理\r\n             指定订单。\r\n\r\n","java.nio.file.FileStore.supportsFileAttributeView(java.lang.String)":"java.nio.file.file.filestore.supportsfileattributeview（java.lang.string）\r\n","The ISO date-time formatter that formats or parses a date-time with an\n            offset, such as '2011-12-03T10:15:30+01:00'.":"ISO日期格式格式或解析日期时间\r\n            偏移，例如'2011-12-03T10：15：30+01：00'。\r\n","closed":"关闭\r\n"," over the elements in this set in the order\n            in which these elements were added.":" 按顺序上的元素上的元素\r\n            其中添加了这些元素。\r\n","Generates the hash code for the table-based collation object":"生成基于表的整理对象的哈希代码\r\n","CertPathValidatorSpi":"certPathvalidatorspi\r\n","java.sql.Connection.TRANSACTION_NONE":"java.sql.connection.transaction_none\r\n","java.text.DecimalFormatSymbols.setInfinity(java.lang.String)":"java.text.decimalformatsymbols.setinfinity（java.lang.string）\r\n","java.util.LinkedHashSet.LinkedHashSet()":"java.util.linkedhashset.linkedhashset（）\r\n","FileVisitor FileVisitor":"fileVisitor fileVisitor\r\n","if a problem occurred while reading from the stream.":"如果从流中阅读时出现问题。\r\n","Retrieves the value of the designated JDBC <code>DATE</code> parameter as a\n            <code>java.":"检索指定的JDBC <code>日期</code>参数为一个\r\n            <code> Java。\r\n","java.security.cert.X509CertSelector.setSubjectPublicKey(java.security.PublicKey)":"java.security.cert.x509certselector.setsubjectpublickey（java.security.publickey）\r\n","java.util.EmptyStackException":"java.util.emptystackexception\r\n","java.util.Arrays.parallelPrefix(double[], int, int, java.util.function.DoubleBinaryOperator)":"java.util.arrays.parallelprefix（double []，int，int，java.util.function.doublebinaryoperator）\r\n","Retrieves the value of a JDBC <code>BIT</code> or <code>BOOLEAN</code>\n            parameter as a\n            <code>boolean</code> in the Java programming language.":"检索JDBC <code>位的值</code>或<code> boolean </code>\r\n            参数为a\r\n            <code>布尔值</code>在Java编程语言中。\r\n","java.text.CollationElementIterator.secondaryOrder(int)":"java.text.Collat​​ionElementiter.SecondaryOrder（INT）\r\n","java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue(int)":"java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue（INT）\r\n","java.util.Collection.toArray()":"java.util.collection.toArray（）\r\n","Checked exception thrown when an attempt is made to access a file that does\n            not exist.":"试图访问执行文件\r\n            不存在。\r\n","Gets a specified property for an algorithm.":"获取算法的指定属性。\r\n","java.security.SignatureException.SignatureException(java.lang.String, java.lang.Throwable)":"java.security.signatureexception.signatureexception（java.lang.string，java.lang.throwable）\r\n","Records another value into the summary information.":"将另一个值记录到摘要信息中。\r\n","java.security.UnrecoverableKeyException.UnrecoverableKeyException(java.lang.String)":"java.security.unrecoverableykeyexception.unrecoverableykeyexception（java.lang.string）\r\n","java.sql.CallableStatement.getTimestamp(java.lang.String)":"java.sql.callablestatement.gettimestamp（java.lang.string）\r\n","This class is a simple holder for a key pair (a public key and a\n            private key).":"该课程是钥匙对的简单持有人（公钥和一个\r\n            私钥）。\r\n","Returns an immutable set containing five elements.":"返回一个不变的套件，其中包含五个元素。\r\n","java.util.Collections.lastIndexOfSubList(java.util.List, java.util.List)":"java.util.collections.lastindexofsofsublist（java.util.list，java.util.list）\r\n","java.util.concurrent.CountDownLatch":"java.util.concurrent.countdownlatch\r\n","java.util.Observable.addObserver(java.util.Observer)":"java.util.observable.addobserver（java.util.observer）\r\n","java.text.CollationElementIterator.previous()":"java.text.collat​​ionElementiter.previous（）\r\n","java.security.cert.CRLException.CRLException(java.lang.String, java.lang.Throwable)":"java.security.cert.crexception.crexception（java.lang.string，java.lang.throwable）\r\n","java.security.cert.PKIXParameters.isPolicyMappingInhibited()":"java.security.cert.pkixparameters.ispolicymappedinbisting（）\r\n","Returns an array containing all installed providers that satisfy the\n            specified selection criterion, or null if no such providers have been\n            installed.":"返回一个包含满足所有已安装的提供商的数组\r\n            指定的选择标准或null如果没有这样的提供者\r\n            安装。\r\n","Generates a certificate revocation list (CRL) object and initializes it\n            with the data read from the input stream ":"生成证书吊销列表（CRL）对象并初始化它\r\n            通过从输入流读取数据\r\n","Returns the set of flags which contains an illegal combination.":"返回包含非法组合的标志集。\r\n","java.text.DecimalFormatSymbols.getMinusSign()":"java.text.decimalformatsymbols.getminussign（）\r\n","Checked exception thrown when a file system loop, or cycle, is encountered.":"当遇到文件系统循环或周期时，检查的异常。\r\n","java.sql.Types.TIMESTAMP":"java.sql.types.timestamp\r\n","Returns an unmodifiable view of the specified sorted set.":"返回指定排序集的无可置改的视图。\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            week number within the current year.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            本年度的周数。\r\n"," is not one of the expected constant values.\n":" 不是预期恒定值之一。\r\n\r\n","if the specified key is null\n":"如果指定的键为null\r\n\r\n","#LONG":"＃长\r\n","Returns an iterator over the chained SQLExceptions.":"返回迭代器上的链式链条感受。\r\n","Creates a thread pool that maintains enough threads to support\n            the given parallelism level, and may use multiple queues to\n            reduce contention.":"创建一个线程池，可维护足够的线程以支持\r\n            给定的并行级别，可能会使用多个队列\r\n            减少争议。\r\n","java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.lastindexof（java.lang.object）\r\n","java.security.AllPermission":"java.security.allpermission\r\n","java.util.Locale.ITALY":"java.util.locale.italy\r\n","java.sql.ResultSet.updateCharacterStream(java.lang.String, java.io.Reader, int)":"java.sql.Resultset.updatecharacterstream（java.lang.string，java.io.Reader，int）\r\n","java.util.TimeZone.getDisplayName(java.util.Locale)":"java.util.timezone.getDisplayname（java.util.locale）\r\n","java.security.Provider.getOrDefault(java.lang.Object, java.lang.Object)":"java.security.provider.getordefault（java.lang.object，java.lang.object）\r\n","java.text.DecimalFormat.applyPattern(java.lang.String)":"java.text.decimalformat.applypattern（java.lang.string）\r\n","java.security.cert.CertPath.getEncoded()":"java.security.cert.certpath.getencoded（）\r\n","Retrieves and removes the head of the queue represented by this deque.":"检索并取下该deque代表的队列的头部。\r\n","java.util.Locale.getDisplayLanguage()":"java.util.locale.getDisplayLanguage（）\r\n","java.util.AbstractList.listIterator()":"java.util.abstractlist.listiterator（）\r\n","Spliterator.OfDouble":"拆分器\r\n","java.util.Objects.hash(java.lang.Object)":"java.util.objects.hash（java.lang.object）\r\n","java.util.Properties.getProperty(java.lang.String, java.lang.String)":"java.util.properties.getProperty（java.lang.string，java.lang.string）\r\n","Returns the provider of this key factory object.":"返回此关键工厂对象的提供商。\r\n"," that compares by that sort key using\n            the specified ":" 通过使用该排序键进行比较\r\n            指定的\r\n","java.security.DigestOutputStream.digest":"java.security.digestoutputstream.digest\r\n","java.util.SplittableRandom":"java.util.splittablerandom\r\n","java.security.spec.ECParameterSpec":"java.security.spec.ecparameterspec\r\n","Constructs a new, empty map, sorted according to the specified\n            comparator.":"构建一个新的空图，根据指定的\r\n            比较器。\r\n","java.time.zone.ZoneOffsetTransition.isOverlap()":"java.time.zone.zoneoffsettransition.isoverlap（）\r\n","java.security.cert.CertPathValidator.getInstance(java.lang.String, java.lang.String)":"java.security.cert.certpathvalidator.getinstance（java.lang.string，java.lang.string）\r\n"," because\n            a ":" 因为\r\n            一个\r\n","Sets the bit at the specified index to the specified value.":"将钻头设置为指定的索引到指定的值。\r\n","Gets the URI that identifies the location of the OCSP responder. -or- Sets the URI that identifies the location of the OCSP responder.":"获取识别OCSP响应者位置的URI。 - 或设置识别OCSP响应者位置的URI。\r\n","Write lines of text to a file.":"将文本行写入文件。\r\n","Finds the least double greater than ":"发现最少的两倍大于\r\n","java.util.concurrent.CopyOnWriteArrayList.subList(int, int)":"java.util.concurrent.copyonwritearraylist.sublist（int，int）\r\n","certpathvalidator.type":"certPathvalidator.type\r\n","Exception thrown when attempting to retrieve the result of a task\n            that aborted by throwing an exception.":"试图检索任务结果时引发的例外\r\n            这是通过抛出例外的中止。\r\n","Gets the currency of these DecimalFormatSymbols. -or- Sets the currency of these DecimalFormatSymbols.":"获取这些十进制成分的货币。 - 或设置这些十进制成分的货币。\r\n","Removes the element at the specified position in this list (optional\n            operation).":"在此列表中的指定位置上删除元素（可选\r\n            手术）。\r\n","java.util.Collection#size()":"java.util.Collection＃size（）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            day of the month.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            一个月的一天。\r\n","Marks the hour of the day part of a date (1-12).":"标记日期（1-12）一天的时间。\r\n","A style specifier for ":"样式说明符\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>NCLOB</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，可以标识通用SQL类型<code> nclob </code>。\r\n","java.util.Calendar.roll(int, boolean)":"java.util.calendar.roll（int，boolean）\r\n","java.security.Signature.getParameters()":"java.security.signature.getParameters（）\r\n","Returns an estimate of the total number of tasks stolen from\n            one thread's work queue by another.":"返回对从中偷走的任务总数的估计值\r\n            一个线程的工作队列另一​​个线程。\r\n","java.util.FormatFlagsConversionMismatchException.getConversion()":"java.util.formatflagsconversionmismatchexception.getConversion（）\r\n","Marks the day of the month part of a date.":"标记日期的一个月部分。\r\n","Sets the specified algorithm parameter to the specified value.":"将指定算法参数设置为指定值。\r\n","java.util.Vector.removeElement(java.lang.Object)":"java.util.vector.removelement（java.lang.Object）\r\n","Creates a signer.":"创建一个签名者。\r\n","java.util.concurrent.Executors.privilegedCallable(java.util.concurrent.Callable)":"java.util.concurrent.executors.privilegedcallable（java.util.concurrent.callable）\r\n","Constant for long style pattern.":"长期样式的恒定。\r\n","#load(InputStream) load(InputStream)":"#load（InputStream）加载（Inputstream）\r\n","java.nio.file.attribute.FileAttributeView":"java.nio.file.attribute.fileattributeview\r\n","java.util.concurrent.ConcurrentLinkedDeque.remove()":"java.util.concurrent.concurrentlinkeddeque.remove（）\r\n","java.util.ServiceLoader":"java.util.serviceloader\r\n","Indicates whether the designated column is automatically numbered.":"指示指定的列是否自动编号。\r\n","Returns a Result for setting the XML value designated by this SQLXML instance.":"返回设置此SQLXML实例指定的XML值的结果。\r\n","Creates an ExecutorCompletionService using the supplied\n            executor for base task execution and a\n            ":"使用所提供的\r\n            基本任务执行的执行人和\r\n            \r\n","java.util.concurrent.ForkJoinTask.getSurplusQueuedTaskCount()":"java.util.concurrent.forkjointask.getSurplusqueuedtaskcount（）\r\n","Returns the maximum number of tables permitted in a ":"返回在\r\n","java.nio.file.FileAlreadyExistsException.FileAlreadyExistsException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.FileAredReadyExistSexception.filealReadyExistSexception（java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.ArrayList.ArrayList()":"java.util.arraylist.arraylist（）\r\n","java.sql.ResultSet.getNCharacterStream(int)":"java.sql.Resultset.getNCharacterStream（int）\r\n","Provides information about the columns returned in a ":"提供有关返回的列的信息\r\n","java.util.BitSet.xor(java.util.BitSet)":"java.util.bitset.xor（java.util.bitset）\r\n","java.security.spec.DSAPublicKeySpec.getG()":"java.security.spec.dsapublickeyspec.getg（）\r\n","\n instance.":"\r\n 实例。\r\n","if the offset is invalid.\n":"如果偏移无效。\r\n\r\n","java.text.BreakIterator.last()":"java.text.breakiterator.last（）\r\n","java.text.MessageFormat.setLocale(java.util.Locale)":"java.text.messageformat.setlocale（java.util.locale）\r\n","java.sql.Driver.getPropertyInfo(java.lang.String, java.util.Properties)":"java.sql.driver.getPropertyinfo（java.lang.string，java.util.properties）\r\n","indicating the\n week number within the current year. ":"指示\r\n 本年度的周数。\r\n","java.sql.CallableStatement.getString(int)":"java.sql.callablestatement.getstring（int）\r\n","java.text.DateFormatSymbols.getInstance(java.util.Locale)":"java.text.dateformatsymbols.getInstance（java.util.locale）\r\n","java.text.DateFormatSymbols.setShortMonths(java.lang.String[])":"java.text.dateformatsymbols.setshortmonths（java.lang.string []）\r\n","Constructs an identity with the specified name and no scope.":"用指定名称构建身份，没有范围。\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object.":"构造A <code> SQLINVALIDAUTHOUTHORIZATIONSPECEXCEPTION </code>对象。\r\n","Creates a KeyPairGenerator object for the specified algorithm.":"为指定算法创建按键机对象。\r\n","java.util.NavigableMap.descendingKeySet()":"java.util.navigablemap.descendingkeyset（）\r\n","java.text.NumberFormat.setGroupingUsed(boolean)":"java.text.numberformat.setGroupingused（boolean）\r\n","Returns an enumeration of the components of this vector.":"返回该向量的组件的枚举。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String)":"java.sql.sqlintegrityConstrationContrationException.SQLINTEGRITYCONSTRATENTVIOLATIONEXCEPTION（JAVA.LANG.STRING）\r\n"," should be selected.":" 应该选择。\r\n","Returns a list of the math functions available with this database.":"返回此数据库可用的数学功能的列表。\r\n","RuleBasedCollator constructor.":"RuleBasedCollat​​or构造函数。\r\n","java.util.NavigableSet.tailSet(java.lang.Object, boolean)":"java.util.navigableset.tailset（java.lang.Object，boolean）\r\n","java.sql.Wrapper.unwrap(java.lang.Class)":"java.sql.wrapper.unwrap（java.lang.class）\r\n","java.util.Base64.getMimeEncoder()":"java.util.base64.getMimeCoder（）\r\n","java.util.Collections.emptyMap()":"java.util.collections.ementMap（）\r\n","objectStart":"objectStart\r\n","Retrieves the contents of the SQL ":"检索SQL的内容\r\n","java.security.KeyException.KeyException(java.lang.String)":"java.security.keyexception.keyexception（java.lang.string）\r\n"," from a serialized ":" 来自一个序列化\r\n","java.nio.file.spi.FileSystemProvider.getFileStore(java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.getfilestore（java.nio.file.path）\r\n","if a needed algorithm is not present.":"如果不存在所需算法。\r\n","java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage, java.lang.Runnable, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.runafterbothasync（java.util.concurrent.completionstage，java.lang.runnable，java.util.concurrent.executor）\r\n","Retrieves whether updates made by others are visible.":"检索他人进行的更新是否可见。\r\n"," if this task threw an exception or was cancelled.":" 如果此任务引发了异常或被取消。\r\n","Inserts the specified element at the tail of this queue, waiting\n            up to the specified wait time for space to become available if\n            the queue is full.":"将指定元素插入该队列的尾部，等待\r\n            直到指定的等待时间以使空间可用\r\n            队列已满。\r\n","An instance of this class is used to generate a stream of\n            pseudorandom numbers.":"该类的实例用于生成\r\n            伪数字。\r\n","java.security.MessageDigestSpi.engineUpdate(java.nio.ByteBuffer)":"java.security.messagedigestspi.engineupdate（java.nio.bytebuffer）\r\n","java.time.format.DecimalStyle.withZeroDigit(char)":"java.time.format.decimalstyle.withzerodigit（char）\r\n","Constructs a CertificateEncodingException with the specified detail\n            message.":"用指定的详细信息构建证书登录exception\r\n            信息。\r\n"," if this deque is empty.":" 如果这个露水是空的。\r\n","Parses a Number from the input text.":"从输入文本中解析数字。\r\n","Updates the designated column with a <code>byte</code> array value.":"使用<code>字节</code>数组值更新指定的列。\r\n","Retrieves and removes the Future representing the next\n completed task, waiting if necessary up to the specified wait\n time if none are yet present.":"检索并删除代表下一个的未来\r\n 完成任务，如有必要，请等待指定等待\r\n 如果没有的话，时间。\r\n","Returns the number of worker threads that have started but not\n            yet terminated.":"返回已开始但未启动的工人线程数\r\n            尚未终止。\r\n","java.util.IllegalFormatConversionException":"Java.util.IllegalFormatConversionException\r\n","Retrieves a description of the tables available in the given catalog.":"检索给定目录中可用的表。\r\n","java.security.SignatureSpi.engineUpdate(byte[], int, int)":"java.security.signaturespi.engineupdate（byte []，int，int）\r\n"," that performs the ":" 执行\r\n","java.util.concurrent.ForkJoinPool.awaitTermination(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.forkjoinpool.awaittermination（long，java.util.concurrent.timeunit）\r\n","Assigns the specified float value to each element of the specified\n            range of the specified array of floats.":"将指定的浮点值分配给指定的每个元素\r\n            指定的浮子阵列的范围。\r\n","Constructs a <code>SQLDataException</code> object.":"构造<code> sqldataexception </code>对象。\r\n","Denotes the output is to be left-justified. ":"表示输出应为左侧。\r\n","java.sql.ResultSet.updateByte(int, byte)":"java.sql.Resultset.updatebyte（int，byte）\r\n","If a value is present, apply the provided ":"如果存在值，请应用提供的\r\n","Sets the values for the calendar fields <code>YEAR</code>,\n            <code>MONTH</code>, <code>DAY_OF_MONTH</code>,\n            <code>HOUR_OF_DAY</code>, and <code>MINUTE</code>.":"设置日历字段的值<code>年</code>，\r\n            <code>月</code>，<code> day_of_month </code>，\r\n            <code> hour_of_day </code>和<code>分钟</code>。\r\n","), and number of concurrently\n            updating threads (":"）和同时的数量\r\n            更新线程（\r\n","java.sql.ResultSet.getClob(int)":"java.sql.Resultset.getClob（int）\r\n","Returns the result value when complete, or throws an\n            (unchecked) exception if completed exceptionally.":"完成后返回结果值，或者抛出\r\n            （未选中）例外如果已例外。\r\n","Retrieves the value of a JDBC <code>DATALINK</code> parameter as a\n            <code>java.":"检索JDBC <code> datalink </code>参数的值\r\n            <code> Java。\r\n","java.sql.ResultSetMetaData.columnNullable":"java.sql.ResultsetMetadata.columnnullable\r\n","fork":"叉子\r\n","Deque#offerFirst":"Deque＃upersfirst\r\n","Returns the greatest key strictly less than the given key, or\n            ":"严格返回最大的密钥，比给定键少，或者\r\n            \r\n","java.util.MissingFormatWidthException":"Java.util.MissingFormatWidThException\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n             with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n             使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Generates a private key object from the provided key specification\n            (key material).":"从提供的密钥规范中生成私钥对象\r\n            （关键材料）。\r\n","java.time.temporal.ChronoField.checkValidIntValue(long)":"java.time.temporal.chronofield.checkvalidintvalue（长）\r\n","java.sql.CallableStatement.registerOutParameter(java.lang.String, int)":"java.sql.callablestatement.registeroutparameter（java.lang.string，int）\r\n","if the requested provider is not available.":"如果请求的提供商不可用。\r\n","Retrieves all or part of the <code>BLOB</code>\n            value that this <code>Blob</code> object represents, as an array of\n            bytes.":"检索全部或部分<code> blob </code>\r\n            此<code> blob </code>对象表示的值\r\n            字节。\r\n",", or returns -1 if\n            the element is not found.":"，或返回-1如果\r\n            找不到元素。\r\n"," value between 0.":" 值在0之间。\r\n","Writes the next attribute to the stream as a stream of uninterpreted\n            bytes.":"将下一个属性写入流作为未解释的流\r\n            字节。\r\n","Indicates that the column stores results.":"指示该列存储结果。\r\n","Updates the designated column with a <code>RowId</code> value.":"用<code> rowID </code>值更新指定的列。\r\n","if signature generation failed.\n":"如果签名生成失败。\r\n\r\n","java.security.spec.RSAPublicKeySpec.getPublicExponent()":"java.security.spec.rsapublickeyspec.getpublicexponent（）\r\n","java.util.NavigableSet.descendingSet()":"java.util.navigableset.descendingset（）\r\n","java.security.SecureRandom.SecureRandom(byte[])":"java.security.securerandom.securerandom（byte []）\r\n","java.util.WeakHashMap.WeakHashMap(int)":"java.util.weakhashmap.weakhashmap（int）\r\n","java.security.MessageDigest.isEqual(byte[], byte[])":"java.security.messagedigest.isequal（byte []，byte []）\r\n","Scanner":"扫描器\r\n","Indicates that the function  does not return a table.":"表示该函数不会返回表。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>double</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的A <code> double </code>。\r\n","java.util.Scanner.Scanner(java.io.InputStream)":"Java.util.Scanner.Scanner（Java.io.inputstream）\r\n","Constructs a new, empty set; the backing ":"构建一个新的空套；支持\r\n","Returns an unmodifiable view of the specified list.":"返回指定列表的无可置改的视图。\r\n","if any other key related problem occurs.\n":"如果发生任何其他关键有关的问题。\r\n\r\n","java.util.ArrayList.get(int)":"java.util.arraylist.get（int）\r\n","if the specified algorithm is not available.":"如果没有指定的算法。\r\n","java.util.TreeMap.firstEntry()":"java.util.treemap.firstentry（）\r\n","java.security.cert.X509CertSelector.getExtendedKeyUsage()":"java.security.cert.x509certselector.getExtendedKeyusage（）\r\n","#previous":"＃以前的\r\n"," indicating\n whether the ":" 指示\r\n 是否\r\n","Returns an unmodifiable list containing ten elements.":"返回包含十个元素的不可修复列表。\r\n","java.util.concurrent.Executor.execute(java.lang.Runnable)":"java.util.concurrent.executor.execute（java.lang.runnable）\r\n","java.security.interfaces.DSAKeyPairGenerator":"java.security.interfaces.dsakeypairgenerator\r\n","java.util.Locale.KOREAN":"java.util.locale.korean\r\n","java.nio.file.FileSystems":"java.nio.file.filesystems\r\n","maxPathLength":"maxPathLength\r\n","java.util.HashSet.spliterator()":"java.util.hashset.spliterator（）\r\n","java.security.cert.Extension.encode(java.io.OutputStream)":"java.security.cert.extension.encode（java.io.outputstream）\r\n","java.util.Spliterators.spliterator(java.lang.Object[], int, int, int)":"java.util.spliterators.spliterator（java.lang.object []，int，int，int）\r\n","java.security.cert.CertificateEncodingException":"java.security.cert.certificateEncodingException\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>boolean</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            <code>布尔值</code>在Java编程语言中。\r\n","java.util.NavigableMap.floorKey(java.lang.Object)":"java.util.navigablemap.floorkey（java.lang.Object）\r\n","TemporalQuery":"临时\r\n","java.security.spec.RSAKeyGenParameterSpec.RSAKeyGenParameterSpec(int, java.math.BigInteger)":"java.security.spec.rsakeygenparameterspec.rsakeygenparameterspec（int，java.math.biginteger）\r\n","\n            that occurs on or before the specified starting index.":"\r\n            这发生在指定的启动索引上或之前。\r\n"," with the specified initial\n            capacity that orders its elements according to their\n            Comparable natural ordering.":" 指定的初始\r\n            根据其元素命令其元素的能力\r\n            可比的自然顺序。\r\n"," (if\n            ":" （如果\r\n            \r\n","java.text.DateFormat.MINUTE_FIELD":"java.text.dateformat.minute_field\r\n","java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable, java.util.concurrent.Executor)":"java.util.concurrent.completablefuture.runasync（java.lang.runnable，java.util.concurrent.executor）\r\n","java.util.Set.addAll(java.util.Collection)":"java.util.set.addall（java.util.Collection）\r\n","Field number for <code>get</code> and <code>set</code> indicating the day\n            number within the current year.":"<code> get </code>和<code> set </code>指示这一天的字段编号\r\n            本年度的数字。\r\n","Returns the name of the algorithm of this ":"返回此算法的名称\r\n","java.sql.DatabaseMetaData.supportsMinimumSQLGrammar()":"java.sql.databasemetadata.supportsminimumsqlgrammar（）\r\n","java.util.Properties":"java.util.properties\r\n"," indicating whether or not this connection is in\n the ":" 指示此连接是否在\r\n 这\r\n","X509Certificate#getKeyUsage() X509Certificate.getKeyUsage()":"x509certificate＃getKeyusage（）x509certificate.getKeyusage（）\r\n","java.util.Calendar.DAY_OF_MONTH":"java.util.calendar.day_of_month\r\n"," execution time of the most recent\n            ":" 最近的执行时间\r\n            \r\n","java.util.concurrent.CompletableFuture.getNumberOfDependents()":"java.util.concurrent.completablefuture.getnumberofdepentents（）\r\n","The <code>required</code> field is <code>true</code> if a value must be\n            supplied for this property\n            during <code>Driver.":"<code>必需</code>字段是<code> true </code>如果一个值必须为\r\n            为此物业提供\r\n            在<code>驱动程序中。\r\n","Atomically conditionally sets the tag value for this task.":"原子上有条件地设置此任务的标签值。\r\n","java.security.cert.X509CertSelector.setSubjectPublicKey(byte[])":"java.security.cert.x509certselector.setsubjectpublickey（byte []）\r\n","java.util.IntSummaryStatistics.IntSummaryStatistics()":"java.util.intsummarystatistics.intsummarystatistics（）\r\n","java.security.AlgorithmParameters.getEncoded(java.lang.String)":"java.security.algorithmparameters.getencoded（java.lang.string）\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","Gets the character used for decimal sign. -or- Sets the character used for decimal sign.":"获取用于小数符号的字符。 - 或设置用于小数符号的字符。\r\n","Returns the JDBC driver's minor version number.":"返回JDBC驱动程序的次要版本号。\r\n"," of its\n            elements.":" 它的\r\n            元素。\r\n","java.security.AlgorithmParametersSpi":"java.security.algorithmparametersspi\r\n","Returns the value of the public key, ":"返回公共密钥的价值，\r\n"," and no elements have been\n            added yet, that is, when it is empty.":" 而且没有任何元素\r\n            添加，也就是说，当它为空时。\r\n","java.util.Random.nextFloat()":"java.util.random.nextfloat（）\r\n","java.util.NavigableSet.lower(java.lang.Object)":"java.util.navigableset.lower（java.lang.Object）\r\n","java.nio.file.attribute.BasicFileAttributeView.name()":"java.nio.file.attribute.basicfileattributeview.name（）\r\n","java.nio.file.FileSystemNotFoundException.FileSystemNotFoundException()":"java.nio.file.filesystemnotfoundexception.filesystemnotfoundexception（）\r\n"," if none are present.":" 如果没有。\r\n","The ISO-8601 definition, where a week starts on Monday and the first week\n            has a minimum of 4 days.":"ISO-8601定义，其中一个星期从星期一开始\r\n            至少有4天。\r\n","X509Certificates":"x509certificates\r\n","java.sql.PreparedStatement.setCharacterStream(int, java.io.Reader, long)":"java.sql.preparedstatement.setcharacterstream（int，java.io.reader，long）\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code>\n            object with a given <code>reason</code> and <code>SQLState</code>.":"构建<Code> SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION </code>\r\n            具有给定<code>原因的对象</code>和<code> sqlstate </code>。\r\n","Gets the formats used for the format elements in the\n            previously set pattern string.":"获取格式用于格式元素\r\n            先前设置的模式字符串。\r\n","java.util.PriorityQueue.PriorityQueue(java.util.SortedSet)":"java.util.priorityqueue.priorityqueue（java.util.sortedset）\r\n","java.nio.file.attribute.PosixFileAttributeView":"java.nio.file.attribute.posixfileattributeview\r\n","java.security.KeyStore.getCertificateChain(java.lang.String)":"java.security.keystore.getcertificatechain（java.lang.string）\r\n","java.util.concurrent.Executors.newScheduledThreadPool(int, java.util.concurrent.ThreadFactory)":"java.util.concurrent.executors.newscheduledthreadpool（int，java.util.concurrent.threadfactory）\r\n"," object representing the absolute path of this\n            path.":" 代表这绝对路径的对象\r\n            小路。\r\n","Returns the name of the class implementing this ":"返回实施此类的类的名称\r\n","Reads an SQL <code>CLOB</code> value from the stream and returns it as a\n            <code>Clob</code> object in the Java programming language.":"从流中读取SQL <code> clob </code>值，并将其返回为\r\n            <code> clob </code> Java编程语言中的对象。\r\n","Returns the private exponent ":"返回私人指数\r\n","type == null":"type == null\r\n","java.time.temporal.ValueRange.isValidValue(long)":"java.time.temporal.valuerange.isvalidvalue（长）\r\n","The basic service for managing a set of JDBC drivers.":"管理一组JDBC驱动程序的基本服务。\r\n","java.security.CodeSource":"java.security.codesource\r\n","java.util.AbstractList.subList(int, int)":"java.util.abstractlist.Sublist（int，int）\r\n","A specification of certification path algorithm parameters.":"认证路径算法参数的规范。\r\n","Create a DecimalFormatSymbols object for the given locale.":"为给定的位置创建一个十分符号对象。\r\n","Queries if this time zone uses daylight saving time.":"查询如果此时区使用日光节省时间。\r\n","Returns the name constraints criterion.":"返回名称约束标准。\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.String, java.lang.String, int)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.string，java.lang.string，int）\r\n","java.sql.Struct.getAttributes(java.util.Map)":"java.sql.struct.getAttributes（java.util.map）\r\n","java.sql.SQLInput.readDouble()":"java.sql.sqlinput.readdouble（）\r\n","java.sql.ResultSet.updateClob(int, java.io.Reader, long)":"java.sql.Resultset.updateclob（int，java.io.reader，long）\r\n","Returns a dynamically typesafe view of the specified map.":"返回指定地图的动态类型AFTE视图。\r\n","java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream, java.lang.String)":"java.security.cert.certificatefactory.generatecertpath（java.io.inputstream，java.lang.string）\r\n"," holds for each task or an (unchecked) exception\n            is encountered, in which case the exception is rethrown.":" 保留每个任务或（未检查）例外\r\n            遇到了，在这种情况下，例外是重新的。\r\n","Returns the separator that this database uses between a catalog name and\n table name.":"返回该数据库在目录名称和\r\n 表名。\r\n","Sets this ACL entry to be a negative one.":"将此ACL条目设置为负。\r\n","java.sql.SQLInput.readArray()":"java.sql.sqlinput.readarray（）\r\n","java.security.Principal.hashCode()":"java.security.principal.hashcode（）\r\n","java.nio.file.FileSystemLoopException.FileSystemLoopException(java.lang.String)":"java.nio.file.filesystemsloopexception.filesystemsloopexception（java.lang.string）\r\n","java.util.SortedSet.tailSet(java.lang.Object)":"java.util.sortedset.tailset（java.lang.Object）\r\n","This interface represents an elliptic curve (EC) finite field.":"该界面代表椭圆曲线（EC）有限场。\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Sets the subjectPublicKey criterion.":"设置主题广告标准。\r\n","Creates a formatter using the specified pattern and locale.":"使用指定的图案和语言环境创建格式化器。\r\n","if the argument is null.":"如果论点为null。\r\n","Returns true if there is another line in the input of this scanner.":"如果此扫描仪的输入中有另一行，则返回true。\r\n","Returns a (transparent) specification of this parameters\n            object.":"返回此参数的（透明）规范\r\n            目的。\r\n","java.util.Deque.offer(java.lang.Object)":"java.util.deque.offer（java.lang.Object）\r\n","Appends all of the elements in the specified collection to the end\n            of this list, in the order that they are returned by the specified\n            collection's iterator.":"将指定集合中的所有元素附加到最后\r\n            在此列表中，按照指定的顺序将其返回\r\n            收集的迭代器。\r\n","java.util.LinkedList.LinkedList(java.util.Collection)":"java.util.linkedlist.linkedlist（java.util.collection）\r\n"," instance has\n            the specified initial capacity and default load factor (0.":" 实例有\r\n            指定的初始容量和默认负载因子（0。\r\n","java.security.interfaces.DSAPrivateKey":"java.security.interfaces.dsaprivatekey\r\n","java.sql.CallableStatement.getTime(int)":"java.sql.callablestatement.getTime（int）\r\n","Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to\n            the formatter, using the best available zone ID.":"附加时区ID，例如“欧洲/巴黎”或“ +02：00”，\r\n            使用最佳可用区域ID的格式化器。\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.string，java.lang.string，int，int，java.lang.thrang.throwable）\r\n","if parsing the name fails.\n":"如果解析名称失败。\r\n\r\n","java.text.Bidi.reorderVisually(byte[], int, java.lang.Object[], int, int)":"java.text.bidi.reordervisally（byte []，int，java.lang.object []，int，int）\r\n","java.security.KeyStore.KeyStore(java.security.KeyStoreSpi, java.security.Provider, java.lang.String)":"java.security.keystore.keystore（java.security.keystorespi，java.security.provider，java.lang.string）\r\n","java.sql.ResultSet.updateBigDecimal(int, java.math.BigDecimal)":"java.sql.Resultset.updatebigdecimal（int，java.math.bigdecimal）\r\n","Set all elements of the specified array, using the provided\n            generator function to compute each element.":"使用提供的\r\n            发电机功能计算每个元素。\r\n","java.util.List.addAll(int, java.util.Collection)":"java.util.list.addall（int，java.util.collection）\r\n","NavigableMap":"NavigableMap\r\n","java.util.OptionalInt":"java.util.optionalint\r\n","java.util.concurrent.ForkJoinPool.execute(java.util.concurrent.ForkJoinTask)":"java.util.concurrent.forkjoinpool.execute（java.util.concurrent.forkjointask）\r\n","locale == null":"语言环境== null\r\n","Permission to create a subdirectory to a directory (equal to ":"允许创建一个子目录到目录（等于\r\n","Returns a new CompletableFuture that is completed when any of\n            the given CompletableFutures complete, with the same result.":"返回一个新的可完整未图\r\n            给定的完整形式完成，结果相同。\r\n","java.nio.file.attribute.BasicFileAttributeView.setTimes(java.nio.file.attribute.FileTime, java.nio.file.attribute.FileTime, java.nio.file.attribute.FileTime)":"java.nio.file.attribute.basicfileattributeview.settimes（java.nio.file.file.attribute.filetime，java.nio.file.file.attribute.filtimes.filtime，java.nio.nio.file.file.attribute.filime.tribute.filetime）\r\n","If not already completed, completes this CompletableFuture with\n            a ":"如果尚未完成，请与\r\n            一个\r\n","Returns the CRT coefficient, ":"返回CRT系数，\r\n","Creates a <code>Statement</code> object that will generate\n            <code>ResultSet</code> objects with the given type and concurrency.":"创建<code>语句</code>将生成的对象\r\n            <code> resultset </code>具有给定类型和并发的对象。\r\n","java.text.DateFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.dateformat.format（java.lang.object，java.lang.stringbuffer，java.text.fieldposition）\r\n","o":"o\r\n","java.security.cert.X509CertSelector.getIssuerAsBytes()":"java.security.cert.x509certselector.getissuerasbytes（）\r\n","java.sql.ResultSet.getBytes(java.lang.String)":"java.sql.Resultset.getBytes（java.lang.string）\r\n","Retrieves the value of a JDBC <code>BIGINT</code> parameter as a <code>long</code>\n            in the Java programming language.":"检索JDBC <code> bigint </code>参数为<code> long </code>的值\r\n            在Java编程语言中。\r\n","Updates the designated column with a <code>boolean</code> value.":"用<code> boolean </code>值更新指定的列。\r\n","java.security.InvalidKeyException.InvalidKeyException(java.lang.String)":"java.security.invalidkeyexception.invalidkeyexception（java.lang.string）\r\n","java.util.Scanner.findInLine(java.util.regex.Pattern)":"java.util.scanner.findinline（java.util.regex.pattern）\r\n","Updates the digest using the specified array of bytes, starting\n            at the specified offset.":"使用指定的字节数组更新摘要，启动\r\n            在指定的偏移量。\r\n","scheduled":"计划\r\n","java.time.temporal.WeekFields.ISO":"java.time.temporal.weekfields.iso\r\n","java.util.Formatter.Formatter(java.lang.String)":"java.util.formatter.formatter（java.lang.string）\r\n","setKeyEntry":"setKeyentry\r\n","java.nio.file.Files#createFile\n            createFile":"java.nio.file.files＃createfile\r\n            CreateFile\r\n","Map.Entry":"MAP.ENTRY\r\n","java.security.acl.LastOwnerException":"java.security.acl.lastownerexception\r\n","java.util.Dictionary.size()":"java.util.dictionary.size（）\r\n","Returns the built ":"返回内置\r\n","The interface for a PKCS#1 RSA public key.":"PKCS＃1 RSA公共密钥的接口。\r\n","java.util.concurrent.ExecutionException.ExecutionException(java.lang.Throwable)":"java.util.concurrent.executionException.executionException（java.lang.throwable）\r\n","java.security.AlgorithmParametersSpi.engineGetEncoded(java.lang.String)":"java.security.algorithmparametersspi.enginegetenCoded（java.lang.string）\r\n"," that decodes using the\n            <a href=\"#url\">URL and Filename safe</a> type base64\n            encoding scheme.":" 使用\r\n            <a href=\"#url\"> url和文件名安全</a>键入base64\r\n            编码方案。\r\n","Reads the target of a symbolic link ":"读取符号链接的目标\r\n","java.util.AbstractMap.get(java.lang.Object)":"java.util.abstractmap.get（java.lang.Object）\r\n","java.text.NumberFormat.getPercentInstance(java.util.Locale)":"java.text.numberformat.getpercentinstance（java.util.locale）\r\n","WeakHashMap":"虚弱的船\r\n","java.time.temporal.ChronoUnit.isDateBased()":"java.time.temporal.chronounit.isdatebased（）\r\n","java.security.MessageDigestSpi.engineGetDigestLength()":"java.security.messagedigestspi.enginegengetDigestLength（）\r\n","Retrieves and removes the Future representing the next\n completed task, or ":"检索并删除代表下一个的未来\r\n 完成任务，或\r\n","Sets the formats to use for the format elements in the\n            previously set pattern string.":"设置用于用于格式元素的格式\r\n            先前设置的模式字符串。\r\n","java.security.cert.PKIXParameters.setCertStores(java.util.List)":"java.security.cert.pkixparameters.setcertstores（java.util.list）\r\n","java.nio.file.Files.createTempDirectory(java.lang.String, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createtempdirectory（java.lang.string，java.nio.file.tribute.fileattribute）\r\n","Finishes this signature operation and stores the resulting signature\n            bytes in the provided buffer ":"完成此签名操作，并存储由此产生的签名\r\n            提供的缓冲区中的字节\r\n","Gets weekday strings.":"获得工作日的弦。\r\n"," not an instance of either\n             ":" 不是一个实例\r\n             \r\n","java.sql.ResultSet.updateBinaryStream(java.lang.String, java.io.InputStream)":"java.sql.Resultset.updateBinaryStream（java.lang.string，java.io.inputstream）\r\n","java.security.KeyPairGenerator.initialize(java.security.spec.AlgorithmParameterSpec)":"java.security.keypairgenerator.initialize（java.security.spec.algorithmparameterspec）\r\n","Lists all the locales that are supported.":"列出所有支持的地区。\r\n","java.util.Calendar.SHORT":"java.util.calendar.short\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.Throwable)":"java.sql.batchupdateexception.batchupdateexception（java.lang.throwable）\r\n","java.security.KeyStoreSpi.engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[])":"java.security.keystorespi.enginesetkeyentry（java.lang.string，byte []，java.security.cert.certificate []）\r\n","The ISO date formatter that formats or parses the week-based date\n            without an offset, such as '2012-W48-6'.":"格式或解析基于周的日期的ISO日期格式\r\n            没有偏移，例如“ 2012-W48-6”。\r\n"," representing a value at the given unit of\n            granularity.":" 在给定单位的值代表一个值\r\n            粒度。\r\n","Initializes the key pair generator using the DSA family parameters\n            (p,q and g) and an optional SecureRandom bit source.":"使用DSA家族参数初始化关键对生成器\r\n            （P，Q和G）和可选的Securerandom位源。\r\n","java.text.RuleBasedCollator.RuleBasedCollator(java.lang.String)":"java.text.rulebasedcollat​​or.rulebasedcollat​​or（java.lang.string）\r\n","java.security.cert.CertStore.getProvider()":"java.security.cert.certstore.getProvider（）\r\n","java.sql.BatchUpdateException.BatchUpdateException()":"java.sql.batchupdateexception.batchupdateexception（）\r\n","SIZED":"大小\r\n","The representation of a savepoint, which is a point within\n            the current transaction that can be referenced from the\n            <code>Connection.":"保存点的表示，这是\r\n            可以从\r\n            <code>连接。\r\n","java.nio.file.Files.newBufferedReader(java.nio.file.Path)":"java.nio.file.files.newbufferedreader（java.nio.file.path）\r\n","java.nio.file.FileVisitor":"java.nio.file.filevisitor\r\n","Retrieves a description of the  system and user functions available\n            in the given catalog.":"检索可用的系统和用户功能的描述\r\n            在给定的目录中。\r\n","java.sql.DatabaseMetaData.supportsTransactionIsolationLevel(int)":"java.sql.databasemetadata.supporttransactionisolationlevel（int）\r\n","Gets the smallest possible maximum value that the field can take.":"获取该字段可能采取的最大最大值。\r\n","Returns the value to which the specified key is mapped, or\n            ":"返回映射指定密钥的值，或\r\n            \r\n","java.security.cert.PKIXParameters.isExplicitPolicyRequired()":"java.security.cert.pkixparameters.isexpliticpolicyrequired（）\r\n","when removing from this set is not supported.\n":"从该集合中删除时，不支持。\r\n\r\n","Returns the maximum size for a Column name for this database.":"返回此数据库的列名的最大尺寸。\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.RSAMultiPrimePrivateCrtKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.security.spec.RSAOtherPrimeInfo[])":"java.security.spec.RSAMultiPrimePrivateCrtKeySpec.RSAMultiPrimePrivateCrtKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math. biginteger，java.math.biginteger，java.security.spec.rsaotherprimeinfo []）\r\n","Creates a new timer whose associated thread has the specified name,\n            and may be specified to\n            Thread#setDaemon run as a daemon.":"创建一个新计时器，其关联线程具有指定名称，\r\n            并可以指定为\r\n            线程＃setDaemon作为守护程序运行。\r\n","java.util.GregorianCalendar.GregorianCalendar()":"java.util.gregoriancalendar.gregoriancalendar（）\r\n","This class defines the functionality of a certificate factory, which is\n            used to generate certificate, certification path (":"此类定义证书工厂的功能，这是\r\n            用于生成证书，认证路径（\r\n","Adds the specified (signed) amount to the specified calendar field\n            without changing larger fields.":"将指定的（签名）金额添加到指定的日历字段\r\n            没有更改较大的字段。\r\n","A file attribute view that provides a view of the legacy \"DOS\" file attributes.":"提供遗留“ DOS”文件属性视图的文件属性视图。\r\n"," that creates a new ":" 创造了一个新的\r\n",") into ":"） 进入\r\n","Constructs an InvalidPropertiesFormatException with the specified\n            cause.":"用指定的\r\n            原因。\r\n"," contains information.":" 包含信息。\r\n","Sets the maxCRLNumber criterion.":"设置Maxcrlnumber标准。\r\n","java.security.KeyStoreSpi.engineAliases()":"java.security.keystorespi.enginealiases（）\r\n","java.util.concurrent.CountedCompleter.quietlyCompleteRoot()":"java.util.concurrent.countedcompleter.quietlycompleteroot（）\r\n","java.util.LinkedList.pop()":"java.util.linkedlist.pop（）\r\n","java.util.concurrent.ConcurrentSkipListMap.ConcurrentSkipListMap()":"java.util.concurrent.concurrentskiplistmap.concurrentskiplistmap（）\r\n","java.nio.file.Path.toUri()":"java.nio.file.path.touri（）\r\n","java.sql.CallableStatement.registerOutParameter(int, int)":"java.sql.callablestatement.registeroutparameter（int，int）\r\n","PasswordProtection":"密码保护\r\n","Indicates that the column might not allow <code>NULL</code> values.":"指示该列可能不允许<code> null </code>值。\r\n","Constructs a <code>SimpleDateFormat</code> using the default pattern and\n            date format symbols for the default\n            ":"使用默认模式和\r\n            默认的日期格式符号\r\n            \r\n","Gets the value of the specified algorithm parameter.":"获取指定算法参数的值。\r\n","java.util.EnumMap.EnumMap(java.util.Map)":"java.util.enummap.enummap（java.util.map）\r\n","java.security.acl.AclEntry.clone()":"java.security.acl.aclentry.clone（）\r\n"," of the certificate.":" 证书。\r\n","java.util.concurrent.ForkJoinTask.inForkJoinPool()":"java.util.concurrent.forkjointask.inforkjoinpool（）\r\n","java.time.temporal.ChronoField.isDateBased()":"java.time.temporal.chronofield.isdatebased（）\r\n","If the value for the specified key is present, attempts to\n            compute a new mapping given the key and its current mapped\n            value.":"如果存在指定密钥的值，请尝试\r\n            计算给定键及其电流映射的新映射\r\n            价值。\r\n","Signature":"签名\r\n"," field indicating\n            Saturday.":" 指示字段\r\n            周六。\r\n","java.nio.file.LinkPermission.LinkPermission(java.lang.String)":"java.nio.file.linkpermission.linkpermission（java.lang.string）\r\n","java.security.cert.X509Certificate":"java.security.cert.x509certificate\r\n","Creates a directory by creating all nonexistent parent directories first.":"首先创建所有不存在的父目录来创建目录。\r\n","Returns the first argument if it is non-":"如果不是 - \r\n","java.security.cert.CertPathBuilderException.CertPathBuilderException(java.lang.String)":"java.security.cert.certpathbuilderexception.certpathbuilderexception（java.lang.string）\r\n","#nextShort":"#NextShort\r\n","java.util.BitSet.clear()":"java.util.bitset.clear（）\r\n"," describing the specified value, if non-null,\n            otherwise returns an empty ":" 描述指定的值，如果非null，\r\n            否则返回一个空的\r\n","Gets the character used for per mille sign. -or- Sets the character used for per mille sign.":"获取每米符号的字符。 - 或设置用于每米符号的字符。\r\n","CertPathBuilderSpi":"certpathbuilderspi\r\n","start >= size()":"开始> = size（）\r\n","Formats a number and appends the resulting text to the given string\n            buffer.":"格式化数字并将结果文本附加到给定的字符串\r\n            缓冲。\r\n"," with no <a href=\"#def_extensions\">\n            extensions</a>.":" 没有<a href=\"#def_extensions\">\r\n            扩展</a>。\r\n"," with the given field name.":" 带有给定的字段名称。\r\n","Schedules the specified task for repeated ":"安排重复的指定任务\r\n","java.text.Normalizer.Form#NFC":"java.text.normalizer.form＃nfc\r\n","java.nio.file.spi.FileSystemProvider.newAsynchronousFileChannel(java.nio.file.Path, java.util.Set, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute)":"java.nio.file.spi.filesystemprovider.newasynchronousfilechannel（java.nio.file.file.path，java.util.set，java.util.concurrent.execurrent.execurent.executorservice，java.nio.file.file.ttribute.fileattribute.fileattribute）\r\n","subject":"主题\r\n","java.util.Collection.removeIf(java.util.function.Predicate)":"java.util.collection.removeif（java.util.function.predicate）\r\n","java.nio.file.attribute.PosixFileAttributeView.name()":"java.nio.file.attribute.posixfileattributeview.name（）\r\n","Initializes the internal state of this ":"初始化内部状态\r\n","java.time.format.DateTimeFormatter.getDecimalStyle()":"java.time.format.datetimeformatter.getDecimalstyle（）\r\n"," that will, upon running, execute the\n            given ":" 运行后将执行\r\n            给出\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String, java.lang.Throwable)":"java.sql.sqldataexception.sqldataexception（java.lang.string，java.lang.throwable）\r\n","java.util.SimpleTimeZone.getOffset(int, int, int, int, int, int)":"java.util.simpletimezone.getOffset（int，int，int，int，int，int，int）\r\n","The constant indicating that open <code>ResultSet</code> objects with this\n            holdability will be closed when the current transaction is commited.":"常数指示打开<code> resultset </code>对象\r\n            当当前交​​易进行时，可持续性将关闭。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>REAL</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>真实</code>。\r\n","java.security.Security.getProviders()":"java.security.security.getProviders（）\r\n","Returns an estimate of the total number of tasks currently held\n            in queues by worker threads (but not including tasks submitted\n            to the pool that have not begun executing).":"返回当前执行任务总数的估计值\r\n            在工人线程的队列中（但不包括提交的任务\r\n            到尚未开始执行的游泳池。\r\n","Constructs a LastOwnerException.":"构建一种持久感受。\r\n","java.util.AbstractQueue.remove()":"java.util.abstractqueue.remove（）\r\n","java.util.concurrent.ConcurrentHashMap.reduceKeysToInt(long, java.util.function.ToIntFunction, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducekeystoint（long，java.util.function.tointfunction，int，int，java.util.function.intbinaryoperator）\r\n","java.sql.ResultSet.getFloat(java.lang.String)":"java.sql.Resultset.getFloat（java.lang.string）\r\n","Returns an iterator over the name elements of this path.":"通过此路径的名称元素返回迭代器。\r\n","java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)":"java.util.calendar.getinstance（java.util.timezone，java.util.locale）\r\n","Converts a <code>String</code> object in JDBC timestamp escape format to a\n            <code>Timestamp</code> value.":"将<code>字符串</code>在JDBC TIMESTAMP逃脱格式中的对象转换为\r\n            <Code> Timestamp </code>值。\r\n","Indicates that this object has no longer changed, or that it has\n            already notified all of its observers of its most recent change,\n            so that the ":"表明此对象不再更改，或者它具有\r\n            已经将其所有观察员通知其最近的变化，\r\n            所以这样\r\n","Reads the next attribute in the stream and returns it as a <code>long</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> long </code>\r\n            在Java编程语言中。\r\n","Indicates that this table index is a clustered index.":"指示此表索引是群集索引。\r\n","java.util.Optional.ofNullable(java.lang.Object)":"java.util.optional.ofnullable（java.lang.Object）\r\n","The common definition of a week that starts on Sunday and the first week\n            has a minimum of 1 day.":"从周日和第一周开始的一周的共同定义\r\n            至少有1天。\r\n","java.util.concurrent.ConcurrentSkipListMap.firstKey()":"java.util.concurrent.concurrentskiplistmap.firstkey（）\r\n","This constant stands for the exponent symbol.":"此常数代表指数符号。\r\n","Returns a view of the portion of this set whose elements are\n            greater than or equal to ":"返回该集合的部分的视图\r\n            大于或等于\r\n","Executes the SQL statement in this <code>PreparedStatement</code> object,\n            which may be any kind of SQL statement.":"在此<code>准备</code>对象中执行SQL语句，\r\n            这可能是任何类型的SQL语句。\r\n","java.util.concurrent.ConcurrentSkipListMap.higherEntry(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.higherentry（java.lang.object）\r\n","ScheduledExecutorService":"计划ExecutorService\r\n","java.sql.ResultSet.getDate(java.lang.String, java.util.Calendar)":"java.sql.Resultset.getDate（java.lang.string，java.util.calendar）\r\n"," with the default initial\n            capacity (16) and load factor (0.":" 带有默认字母\r\n            容量（16）和负载因子（0。\r\n","Writes an SQL <code>REF</code> value to the stream.":"将SQL <code> Ref </code>值写入流。\r\n","java.security.spec.RSAPrivateCrtKeySpec.getPrimeQ()":"java.security.spec.rsaprivatecrtkeyspec.getprimeq（）\r\n","Returns a general-purpose number format for the current default\n            ":"返回当前默认值的通用数字格式\r\n            \r\n","Creates a new DSAParameterSpec with the specified parameter values.":"使用指定的参数值创建一个新的DSAPARAMETERSPEC。\r\n","timestamp":"时间戳\r\n","Retrieves and removes the last element of this deque.":"检索并删除该Deque的最后一个元素。\r\n","java.sql.SQLInput.readShort()":"java.sql.sqlinput.readshort（）\r\n","java.sql.ResultSet.updateShort(int, short)":"java.sql.Resultset.updateshort（int，short）\r\n","', or under vendor-specified conditions.":"'，或在供应商指定条件下。\r\n","java.nio.file.spi.FileSystemProvider.FileSystemProvider()":"java.nio.file.spi.filesystemprovider.filesystemprovider（）\r\n","java.util.SimpleTimeZone.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int)":"java.util.simpletimezone.simpletimezone（int，java.lang.string，int，int，int，int，int，int，int，int，int，int，int）\r\n","Copies all bytes from a file to an output stream.":"将所有字节从文件复制到输出流。\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlRecoverableException.sqlrecoverableException（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","java.util.IllformedLocaleException":"java.util.illformedlocalexception\r\n","if a database error happens., including if the current row is\n             the Insert row.\n":"如果发生数据库错误发生。\r\n             插入行。\r\n\r\n","java.sql.DatabaseMetaData.supportsCoreSQLGrammar()":"java.sql.databasemetadata.supportscorsqlgrammar（）\r\n","java.util.Arrays.toString(float[])":"java.util.arrays.tostring（float []）\r\n","java.sql.CallableStatement.setCharacterStream(java.lang.String, java.io.Reader)":"java.sql.callablestatement.setcharacterstream（java.lang.string，java.io.reader）\r\n"," instance is not initialized\n             properly.":" 实例未初始化\r\n             适当地。\r\n"," have already been called after\n             the last call to ":" 已经被调用了\r\n             最后一个电话\r\n","java.util.Optional.ifPresent(java.util.function.Consumer)":"java.util.optional.ifpresent（java.util.function.consumer）\r\n","java.text.DateFormat.parse(java.lang.String, java.text.ParsePosition)":"java.text.dateformat.parse（java.lang.string，java.text.parseposition）\r\n","Constructs a new formatter with the specified file name, charset, and\n            locale.":"用指定的文件名，charset和\r\n            语言环境。\r\n","A class can implement the <code>Observer</code> interface when it\n            wants to be informed of changes in observable objects.":"一类可以实现<code>观察者</code>接口时\r\n            希望被告知可观察到的对象的变化。\r\n","Indicates if the ":"指示是否\r\n"," last thrown by this formatter's ":" 最后被这个格式化的人投掷\r\n","other.getAsLong()":"other.getaslong（）\r\n","Value of the <code>ERA</code> field indicating\n            the common era (Anno Domini), also known as CE.":"<code> ERA的值</code>指示字段\r\n            共同时代（Anno Domini），也称为CE。\r\n","java.text.FieldPosition.getBeginIndex()":"java.text.fieldposition.getBeginIndex（）\r\n","Constructs an InvalidPropertiesFormatException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","RSAMultiPrimePrivateCrtKeySpec":"rsamultimeprimeprivatecrtkeyspec\r\n","seed":"种子\r\n","java.time.zone.ZoneRules.isFixedOffset()":"Java.Time.Zone.Zonerules.ISFIXEDOFFSET（）\r\n","java.util.List.iterator()":"java.util.list.iterator（）\r\n","java.util.Observable.setChanged()":"java.util.observable.setchanged（）\r\n","Use normal decimal/float style for BigDecimals.":"使用普通的十进制/浮点样式进行大数目。\r\n","Generates a user-specified number of random bytes.":"生成用户指定数量的随机字节。\r\n","if the package to which this class is to be added, already\n             contains classes which were signed by different certificates,\n             or if the class name begins with \"java.\"\n":"如果要添加此类的包裹，已经\r\n             包含由不同证书签名的类\r\n             或类名称以“ Java”开头。\r\n\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>NCHAR</code>":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型<code> NCHAR </code>\r\n","java.text.DateFormatSymbols.getLocalPatternChars()":"java.text.dateformatsymbols.getLocalPatternchars（）\r\n","java.sql.ResultSet.getByte(int)":"java.sql.Resultset.getbyte（int）\r\n","Returns the type mapping associated with this ":"返回与此关联的类型映射\r\n","subjectPolicyKey":"主题POLYCYKEY\r\n","java.util.Scanner.nextBoolean()":"java.util.scanner.nextboolean（）\r\n","java.util.Scanner.nextBigDecimal()":"java.util.scanner.nextbigdecimal（）\r\n","Tests to see if this <code>Timestamp</code> object is\n            equal to the given <code>Timestamp</code> object.":"测试以查看此<code> timestamp </code>对象是否是\r\n            等于给定的<code>时间戳</code>对象。\r\n","This class represents the set of symbols (such as the decimal separator,\n            the grouping separator, and so on) needed by <code>DecimalFormat</code>\n            to format numbers.":"该类代表一组符号（例如小数分离器，\r\n            <code> demalformat </code>需要分组分隔符等）\r\n            格式数字。\r\n","privateKey":"私人关键\r\n","java.security.spec.InvalidKeySpecException.InvalidKeySpecException(java.lang.String, java.lang.Throwable)":"java.security.spec.invalidkeyspecexception.invalidkeyspecexception（java.lang.string，java.lang.thrang.throwable）\r\n","java.util.DoubleSummaryStatistics.getMax()":"java.util.doublesummarystatistics.getmax（）\r\n","java.util.Calendar.ALL_STYLES":"java.util.calendar.all_styles\r\n"," field indicating the\n            ninth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            在格里高利和朱利安日历中的一年中的第九个月。\r\n","java.sql.DatabaseMetaData.storesMixedCaseIdentifiers()":"java.sql.databasemetadata.storesmixedcaseidendifiers（）\r\n","Constructs a new, empty tree set, sorted according to the\n            natural ordering of its elements.":"构建一个新的空树集，根据\r\n            自然订购其元素。\r\n","Returns an estimate of how many more locally queued tasks are\n            held by the current worker thread than there are other worker\n            threads that might steal them, or zero if this thread is not\n            operating in a ForkJoinPool.":"返回估计多本地排队的任务是\r\n            由当前的工人线持有的其他工人\r\n            可能会窃取它们的线程，或者如果此线程不是零\r\n            在Forkjoinpool中运行。\r\n","java.nio.file.FileStore":"java.nio.file.filestore\r\n","java.security.spec.PSSParameterSpec.getDigestAlgorithm()":"java.security.spec.pssparameterspec.getDigeStalgorithm（）\r\n","java.security.Signature.update(java.nio.ByteBuffer)":"java.security.signature.update（java.nio.bytebuffer）\r\n","Returns the public key of the most-trusted CA.":"返回最受信任的CA的公共密钥。\r\n","java.util.BitSet.nextClearBit(int)":"java.util.bitset.nextclearbit（int）\r\n","java.util.PriorityQueue":"java.util.priorityqueue\r\n","\n            that occurs on or after the specified starting index.":"这发生在指定的起始索引上或之后。\r\n","java.util.LinkedList.offerFirst(java.lang.Object)":"java.util.linkedlist.offerfirst（java.lang.Object）\r\n","java.security.cert.X509CRL.verify(java.security.PublicKey)":"java.security.cert.x509crl.verify（java.security.publickey）\r\n","java.text.BreakIterator.next(int)":"java.text.breakiterator.next（int）\r\n","SQLWarning":"sqlwarning\r\n","Sets the name constraints criterion.":"设置名称约束标准。\r\n","Certificate":"证书\r\n","This class consists of ":"该课程包括\r\n","Returns the result of accumulating the given transformation\n            of all keys using the given reducer to combine values, or\n            null if none.":"返回累积给定转换的结果\r\n            使用给定还原器组合值的所有键中的所有密钥\r\n            如果没有，则为空。\r\n","java.util.Set.copyOf(java.util.Collection)":"java.util.set.copyof（java.util.Collection）\r\n","java.util.EventListener":"Java.util.EventListener\r\n","Returns an iterator over the elements in this deque.":"返回迭代器上的元素。\r\n","Registers the OUT parameter named\n            <code>parameterName</code> to the JDBC type\n            <code>sqlType</code>.":"登录名称的OUT参数\r\n            <code> parametername </code>到JDBC类型\r\n            <code> sqltype </code>。\r\n","java.security.KeyStore.containsAlias(java.lang.String)":"java.security.keystore.containsalias（java.lang.string）\r\n","Reads the next attribute in the stream and returns it as a <code>boolean</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> boolean </code>\r\n            在Java编程语言中。\r\n","Inner class used to represent ":"内部班级用来表示\r\n","java.util.OptionalInt.orElseGet(java.util.function.IntSupplier)":"java.util.optionalint.orelseget（java.util.function.intsupplier）\r\n","Initializes the key pair generator using the specified parameter\n            set and user-provided source of randomness.":"使用指定参数初始化密钥对生成器\r\n            设置和用户提供的随机性来源。\r\n"," if this map maps one or more keys to the\n            specified value.":" 如果此地图将一个或多个键映射到\r\n            指定值。\r\n","java.util.AbstractMap.put(java.lang.Object, java.lang.Object)":"java.util.abstractmap.put（java.lang.Object，java.lang.object）\r\n","CertSelector":"CERTSELECTOR\r\n","Returns the provider that created this file system.":"返回创建此文件系统的提供商。\r\n","java.util.ArrayDeque.getLast()":"java.util.arraydeque.getlast（）\r\n","Retrieves whether this database supports only data manipulation\n            statements within a transaction.":"检索此数据库是否仅支持数据操纵\r\n            交易中的语句。\r\n"," value between the specified\n            origin (inclusive) and the specified bound (exclusive).":" 指定的价值\r\n            原点（包含）和指定的界限（独家）。\r\n","java.security.SignatureSpi.engineInitSign(java.security.PrivateKey, java.security.SecureRandom)":"java.security.signaturespi.endineinitsign（java.security.privatekey，java.security.securerandom）\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.String)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.string）\r\n","ResultSet":"结果集\r\n","The constant indicating that all <code>ResultSet</code> objects that\n            have previously been kept open should be closed when calling\n            <code>getMoreResults</code>.":"常数表示所有<code> resultset </code>对象\r\n            以前一直保持打开状态应关闭\r\n            <code> getmoreresults </code>。\r\n","Constructs an instance of this class with the specified width.":"用指定的宽度构建此类的实例。\r\n","java.security.DigestOutputStream.setMessageDigest(java.security.MessageDigest)":"java.security.digestoutputstream.setMessageDigest（java.security.messagedigest）\r\n"," if the two specified arrays are ":" 如果两个指定的数组是\r\n","If this object has changed, as indicated by the\n            <code>hasChanged</code> method, then notify all of its observers\n            and then call the <code>clearChanged</code> method to indicate\n            that this object has no longer changed.":"如果此对象已更改，如\r\n            <code> haschanged </code>方法，然后通知其所有观察者\r\n            然后调用<code> ClearChanged </code>方法以指示\r\n            该对象不再更改。\r\n","java.util.Calendar.isLenient()":"java.util.calendar.islenient（）\r\n","Returns the certificateValid criterion. -or- Sets the certificateValid criterion.":"返回证书值标准。 - 或设置证书库标准。\r\n","Waits if necessary for this future to complete, and then\n            returns its result.":"如有必要等待这个未来完成，然后\r\n            返回结果。\r\n","java.util.SimpleTimeZone.getRawOffset()":"java.util.simpletimezone.getRawoffset（）\r\n","DST_OFFSET":"dst_offset\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a <code>Ref</code> object\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> ref </code>对象\r\n            在Java编程语言中。\r\n","java.sql.CallableStatement.setObject(java.lang.String, java.lang.Object)":"java.sql.callablestatement.setObject（java.lang.string，java.lang.object）\r\n","Creates a new, empty map with an initial table size based on\n            the given number of elements (":"创建一个基于初始表大小的新的空图\r\n            给定的元素数（\r\n","Retrieves whether this database supports positioned <code>DELETE</code>\n            statements.":"检索此数据库是否支持定位<code> delete </code>\r\n            语句。\r\n","java.util.concurrent.BlockingQueue.contains(java.lang.Object)":"java.util.concurrent.blockingqueue.contains（java.lang.Object）\r\n","java.security.Principal.equals(java.lang.Object)":"java.security.principal.equals（java.lang.Object）\r\n","java.sql.CallableStatement.setNull(java.lang.String, int)":"java.sql.callablestatement.setnull（java.lang.string，int）\r\n"," thrown when the SQLState class value is '":" 当SQLState类值为'\r\n","Returns an immutable set containing one element.":"返回一个不变的集合包含一个元素。\r\n","Gets the date/time formatter with the default formatting style\n            for the default ":"使用默认格式样式获取日期/时间格式\r\n            对于默认值\r\n"," otherwise\n            returns ":" 否则\r\n            返回\r\n"," is thrown in situations where a\n            previoulsy failed operation might be able to succeed when the operation is\n            retried without any intervention by application-level functionality.":"在某种情况下被扔\r\n            当操作是\r\n            通过应用程序级功能进行任何干预而无需进行。\r\n","Generates the parameters.":"生成参数。\r\n","java.text.Format":"java.text.format\r\n","java.util.Timer.schedule(java.util.TimerTask, java.util.Date)":"java.util.timer.schedule（java.util.timertask，java.util.date）\r\n","if the validation fails, or the algorithm of the specified\n             certification path cannot be validated using the algorithm of\n             this instance.":"如果验证失败或指定的算法\r\n             认证路径无法使用算法进行验证\r\n             此实例。\r\n","java.sql.CallableStatement.getDate(int, java.util.Calendar)":"java.sql.callablestatement.getdate（int，java.util.calendar）\r\n","Constructs a new formatter with the specified output stream, charset,\n            and locale.":"用指定的输出流构建一个新的格式器，charset，\r\n            和语言环境。\r\n","LinkPermission":"linkpermission\r\n","java.util.concurrent.DelayQueue.iterator()":"java.util.concurrent.delayqueue.iterator（）\r\n","CopyOnWriteArrayList":"copyOnwritearRaylist\r\n","java.util.concurrent.CopyOnWriteArrayList.containsAll(java.util.Collection)":"java.util.concurrent.copyonwritearraylist.containsall（java.util.Collection）\r\n","Releases this <code>Connection</code> object's database and JDBC resources\n            immediately instead of waiting for them to be automatically released.":"释放此<code>连接</code>对象的数据库和JDBC资源\r\n            立即而不是等待它们自动释放。\r\n","java.util.concurrent.ConcurrentHashMap.keys()":"java.util.concurrent.concurrenthashmap.keys（）\r\n","Allocates a <code>Date</code> object and initializes it so that\n            it represents the instant at the start of the minute specified by\n            the <code>year</code>, <code>month</code>, <code>date</code>,\n            <code>hrs</code>, and <code>min</code> arguments, in the local\n            time zone.":"分配<code> date </code>对象并初始化它，以便\r\n            它表示在指定的分钟开始时的瞬间\r\n            <code>年</code>，<code>月</code>，<code>日期</code>，\r\n            <code> hrs </code>和<code> min </code>参数，在本地\r\n            时区。\r\n"," is invoked or method ":" 被调用或方法\r\n","java.sql.SQLClientInfoException.getFailedProperties()":"java.sql.sqlclientinfoexception.getFailedProperties（）\r\n","java.sql.Statement":"java.sql.Statement\r\n","java.text.Normalizer.Form#NFKC":"java.text.normalizer.form＃nfkc\r\n","java.util.LinkedList.element()":"java.util.linkedlist.element（）\r\n","Common implementations of ":"共同的实现\r\n","An object to lookup user and group principals by name.":"用名称查找用户和组校长的对象。\r\n","Compares the source string to the target string according to the\n            collation rules for this Collator.":"根据\r\n            该碰撞器的整理规则。\r\n"," as its initial size.":" 作为其初始尺寸。\r\n","java.nio.file.Files.isSymbolicLink(java.nio.file.Path)":"java.nio.file.files.issymboliclink（java.nio.file.path）\r\n","java.nio.file.AtomicMoveNotSupportedException.AtomicMoveNotSupportedException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.atomicmovenotsupportedexception.atomicmovenotsupportedexception（java.lang.string，java.lang.string，java.lang.lang.string）\r\n","Returns the last (highest) key currently in this map.":"返回此地图中当前的最后一个（最高）密钥。\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String, java.lang.String)":"java.sql.sqldataexception.sqldataexception（java.lang.string，java.lang.string）\r\n","java.security.interfaces.ECPublicKey":"java.security.interfaces.ecpublickey\r\n","java.util.Comparator.compare(java.lang.Object, java.lang.Object)":"java.util.comparator.compare（java.lang.object，java.lang.object）\r\n","if this operation fails.":"如果此操作失败。\r\n","Comparator<T>":"比较器<t>\r\n","java.security.AlgorithmConstraints.permits(java.util.Set, java.lang.String, java.security.AlgorithmParameters)":"java.security.algorithmconstraints.permits（java.util.set，java.lang.string，java.security.algorithmparameters）\r\n","java.security.InvalidAlgorithmParameterException.InvalidAlgorithmParameterException()":"java.security.invalidalgorithmparameterexception.invalidalgorithmparameterexception（）\r\n","lineStart ":"Linestart\r\n","java.util.Objects.requireNonNull(java.lang.Object)":"java.util.objects.requirenonnull（java.lang.object）\r\n"," cannot be created, or if any error rises when opening or\n             creating the ":" 无法创建，或者是否在打开时出现任何错误或\r\n             创建\r\n","Constructs an instance of this class with the mismatched conversion and\n            the corresponding argument class.":"用不匹配的转换和\r\n            相应的参数类。\r\n","java.util.IdentityHashMap.IdentityHashMap(int)":"java.util.InderityHashmap.IdentityHashmap（int）\r\n","Gets the locale to be used during formatting.":"在格式化期间获取要使用的语言环境。\r\n","Tells whether or not this file store supports the file attributes\n            identified by the given file attribute view.":"告诉该文件存储是否支持文件属性\r\n            通过给定文件属性视图识别。\r\n","Retrieves the field identifier.":"检索字段标识符。\r\n","java.security.KeyFactory.getKeySpec(java.security.Key, java.lang.Class)":"java.security.keyfactory.getkeyspec（java.security.key，java.lang.class）\r\n","Gets the DecimalStyle to be used during formatting.":"在格式化过程中获取用于使用的十分态。\r\n","java.nio.file.Files.walkFileTree(java.nio.file.Path, java.nio.file.FileVisitor)":"java.nio.file.files.walkfiletree（java.nio.file.path，java.nio.file.filevisitor）\r\n","Inserts the specified element into this queue, waiting if necessary\n            for space to become available.":"将指定元素插入此队列，如有必要\r\n            使空间可用。\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n"," implementations to indicate that\n            they support fast (generally constant time) random access.":" 实施以表明\r\n            它们支持快速（通常恒定的时间）随机访问。\r\n","Reads the next attribute in the stream and returns it as an <code>int</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> int </code>\r\n            在Java编程语言中。\r\n","Compares two Dates for ordering.":"比较订购的两个日期。\r\n","start  end":"开始结束\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>float</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            <code> float </code>在Java编程语言中。\r\n","Returns an estimate of the number of tasks that have been\n            forked by the current worker thread but not yet executed.":"返回对已任务数量的估计\r\n            由当前的工作线程分叉，但尚未执行。\r\n","java.util.Properties.store(java.io.OutputStream, java.lang.String)":"java.util.properties.store（java.io.outputstream，java.lang.string）\r\n","b.position() + b.limit() -1":"b.position（） + b.limit（）-1\r\n","java.security.DigestOutputStream.getMessageDigest()":"java.security.digestoutputstream.getMessagedigest（）\r\n","Retrieves the designated parameter's number of digits to right of the decimal point.":"检索指定的参数的数字数量到小数点的右侧。\r\n","java.security.spec.PSSParameterSpec.getMGFParameters()":"java.security.spec.pssparameterspec.getmgfparameters（）\r\n","Characteristic value signifying that an encounter order is defined for\n            elements.":"特征值表示定义的遭遇顺序\r\n            元素。\r\n","Retrieves the byte position at which the specified byte array\n            <code>pattern</code> begins within the <code>BLOB</code>\n            value that this <code>Blob</code> object represents.":"检索指定字节数组的字节位置\r\n            <code>模式</code>在<code> blob </code>内开始\r\n            该<code> blob </code>对象表示的值。\r\n","java.text.DateFormat.setNumberFormat(java.text.NumberFormat)":"java.text.dateformat.setnumberformat（java.text.numberformat）\r\n","Principal":"主要的\r\n","Constructs a <code>GregorianCalendar</code> with the given date\n            and time set for the default time zone with the default locale.":"在给定日期构建<code> GregorianCalendar </code>\r\n            并设置默认场所的默认时区域。\r\n","toKey":"tokey\r\n"," that is a subsequence of the name\n            elements of this path.":" 那是名字的子序列\r\n            这条路径的要素。\r\n","Sets the subject criterion.":"设置主题标准。\r\n","Gets the default direction for fetching rows for ":"获取获取行的默认方向\r\n","end >\n                size()":"结束>\r\n                尺寸（）\r\n","Returns the EC key parameters.":"返回EC密钥参数。\r\n","Retrieves whether this database supports batch updates.":"检索此数据库是否支持批处理更新。\r\n","Sets the bits from the specified ":"设置指定的位\r\n","java.security.cert.CertStoreSpi.engineGetCRLs(java.security.cert.CRLSelector)":"java.security.cert.certstorespi.enginegetcrls（java.security.cert.crlselector）\r\n","Returns the Unicode locale type associated with the specified Unicode locale key\n            for this locale.":"返回与指定Unicode Locale键关联的Unicode语言环境类型\r\n            对于这个地方。\r\n","java.security.cert.PolicyQualifierInfo.PolicyQualifierInfo(byte[])":"java.security.cert.policyqualifierinfo.policyqualifierinfo（byte []）\r\n","java.util.InvalidPropertiesFormatException.InvalidPropertiesFormatException(java.lang.Throwable)":"java.util.invalidpropertiesformatexception.invalidpropertiesformatexception（java.lang.throwable）\r\n","java.nio.file.attribute.AclEntry.newBuilder()":"java.nio.file.attribute.aclentry.newbuilder（）\r\n","java.nio.charset.UnmappableCharacterException.getInputLength()":"java.nio.charset.unmappablecharacterexception.getInputlength（）\r\n","Creates an Executor that uses a single worker thread operating\n            off an unbounded queue, and uses the provided ThreadFactory to\n            create a new thread when needed.":"创建使用单个工人线程操作的执行者\r\n            卸下无界队列，并使用提供的螺纹效果到\r\n            在需要时创建一个新线程。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>LONGVARCHAR</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> longvarchar </code>。\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n             with a given <code>reason</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n             使用给定的<code>原因</code>。\r\n","Updates any or all of the file's last modified time, last access time,\n            and create time attributes.":"更新文件的最后一个修改时间，最后一次访问时间，\r\n            并创建时间属性。\r\n","java.util.concurrent.ForkJoinPool.isTerminating()":"java.util.concurrent.forkjoinpool.isterminating（）\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String, java.lang.String)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string，java.lang.string）\r\n","Retrieves whether this database supports subqueries in\n            <code>IN</code> expressions.":"检索此数据库是否支持子查询\r\n            </code>在</code>表达式中。\r\n","The constant indicating that the parameter's mode is IN.":"表示参数模式为中的常数。\r\n","A visitor of files.":"文件的访问者。\r\n","java.sql.DatabaseMetaData.supportsCorrelatedSubqueries()":"java.sql.databasemetadata.supportscortscortedsubqueries（）\r\n","Specialization of format.":"格式的专业化。\r\n","Returns the serial number of the revoked certificate.":"返回被吊销证书的序列号。\r\n","java.util.concurrent.CompletableFuture.get()":"java.util.concurrent.completablefuture.get（）\r\n","java.sql.ResultSet.getNString(int)":"java.sql.Resultset.getnstring（int）\r\n","java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator()":"java.time.zone.zoneoffsetTransitionrule.getDayofMonthIndicator（）\r\n","indicating the\n raw offset from GMT in milliseconds.":"指示\r\n 从GMT毫秒偏移的原始偏移。\r\n","java.sql.Connection.close()":"java.sql.connection.close（）\r\n","Returns an array of all locales for which the <code>getInstance</code>\n            methods of this class can return localized instances.":"返回<code> getInstance </code>的所有地区的数组\r\n            此类方法可以返回本地化实例。\r\n","java.util.Arrays.toString(boolean[])":"java.util.arrays.tostring（boolean []）\r\n","Indicates whether updates made to a LOB are made on a copy or directly\n            to the LOB.":"指示对LOB进行的更新是在副本上还是直接进行\r\n            到叶。\r\n","java.nio.file.FileSystem":"java.nio.file.filesystem\r\n","Sets the given calendar field to the given value.":"将给定的日历字段设置为给定值。\r\n","Constructs an InvalidKeyException with no detail message.":"构造无详细信息的无效Keyexception。\r\n","java.sql.ResultSet.updateClob(int, java.sql.Clob)":"java.sql.Resultset.updateclob（int，java.sql.clob）\r\n","sequence":"序列\r\n","Returns an empty map (immutable).":"返回一个空的地图（不变）。\r\n","java.util.BitSet.BitSet(int)":"java.util.bitset.bitset（int）\r\n","java.util.EnumSet.clone()":"java.util.enumset.clone（）\r\n","java.util.SortedSet.comparator()":"java.util.sortedset.comparator（）\r\n","java.nio.file.WatchEvent.context()":"java.nio.file.watchevent.context（）\r\n","java.util.TreeSet.descendingSet()":"java.util.treeset.descendingset（）\r\n","Constructs a <code>SimpleDateFormat</code> using the given pattern and\n            the default date format symbols for the given locale.":"使用给定模式和\r\n            给定语言环境的默认日期格式符号。\r\n","java.util.concurrent.CopyOnWriteArraySet.iterator()":"java.util.concurrent.copyonwritearrayset.iterator（）\r\n","Retains only the elements in this set that are contained in the\n            specified collection (optional operation).":"仅保留该集合中包含的元素\r\n            指定收集（可选操作）。\r\n","java.sql.ResultSet.updateBytes(java.lang.String, byte[])":"java.sql.Resultset.updatebytes（java.lang.string，byte []）\r\n","Tests for equality between the specified object and this identity.":"测试指定对象和该身份之间的平等。\r\n"," to be\n            less than non-null.":" 成为\r\n            小于非无效。\r\n","if parsing the issuer fails.\n":"如果解析发行人失败。\r\n\r\n","Returns a lexicographic-order comparator with a function that\n            extracts a ":"返回具有一个功能的词典订单比较器\r\n            提取a\r\n","java.security.Signature.sign()":"java.security.signature.sign（）\r\n","ThreadFactory":"线程捕获\r\n","java.security.cert.PKIXRevocationChecker.getOcspResponder()":"java.security.cert.pkixrevocation checker.getocspresponder（）\r\n","java.util.Scanner.nextInt()":"java.util.scanner.nextint（）\r\n","java.security.cert.X509CertSelector.clone()":"java.security.cert.x509certselector.clone（）\r\n","A simple text scanner which can parse primitive types and strings using\n            regular expressions.":"一个简单的文本扫描仪，可以使用原始类型和字符串使用\r\n            常用表达。\r\n","java.sql.Blob.setBinaryStream(long)":"java.sql.blob.setbinarystream（long）\r\n","Gets the string used to represent \"not a number\". -or- Sets the string used to represent \"not a number\".":"获取用来表示“非数字”的字符串。 - 或 - 设置用于表示“非数字”的字符串。\r\n","Returns true if the specified subject is implied by this principal.":"如果该本金暗示指定的主题，则返回为真。\r\n","java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue(int, boolean)":"java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue（INT，Boolean）\r\n","if initialization of this ":"如果初始化\r\n","java.security.KeyPairGenerator.generateKeyPair()":"java.security.keypairgenerator.generateKeypair（）\r\n","Adds a name to the pathToNames criterion.":"在Pathtonames标准中添加一个名称。\r\n"," from this certificate.":" 从此证书。\r\n","Returns the value of the attribute with the specified ":"用指定的属性返回属性的值\r\n","java.time.temporal.ChronoUnit.isDurationEstimated()":"java.time.temporal.chronounit.isdurationeStimated（）\r\n","InvalidKeySpecException":"无效的Keyspecexception\r\n"," type setting for ":" 类型设置\r\n","java.sql.DatabaseMetaData.supportsSchemasInTableDefinitions()":"java.sql.databasemetadata.supportsschemasintabledfinitions（）\r\n","java.security.cert.CertPathBuilder.build(java.security.cert.CertPathParameters)":"java.security.cert.certpathbuilder.build（java.security.cert.certpathparameters）\r\n","Returns an array list containing the elements returned by the\n            specified enumeration in the order they are returned by the\n            enumeration.":"返回一个数组列表，其中包含由\r\n            指定的枚举按顺序归还\r\n            枚举。\r\n","Adds all of the specified elements to the specified collection.":"将所有指定元素添加到指定的集合中。\r\n","java.util.Hashtable.elements()":"java.util.hashtable.elements（）\r\n","The default constructor.":"默认构造函数。\r\n","Indicates that all <code>WHERE</code> search clauses can be\n            based on this type.":"指示所有<code> where </code>搜索条款可以是\r\n            基于这种类型。\r\n","if this connection is closed, or there's a problem creating\n the array.\n":"如果关闭此连接，或者存在问题\r\n 数组。\r\n\r\n","java.security.cert.CertificateFactory.generateCertificates(java.io.InputStream)":"java.security.cert.certificatefactory.generatecertificates（java.io.inputstream）\r\n","java.util.Enumeration":"Java.util.Enumeration\r\n","if an unsupported algorithm is detected.":"如果检测到不支持的算法。\r\n","java.util.concurrent.BlockingDeque.peek()":"java.util.concurrent.blockingdeque.peek（）\r\n","<strong>Denigrated</strong>, use #getSubject() or\n            #getSubjectAsBytes() instead.":"<strong> den毁</strong>，使用#getSubject（）或\r\n            #getSubjectAsbytes（）。\r\n","java.security.Guard.checkGuard(java.lang.Object)":"java.security.guard.checkguard（java.lang.Object）\r\n","java.util.ArrayDeque.peek()":"java.util.arraydeque.peek（）\r\n","Initializes this signature object with the specified\n            public key for verification operations.":"用指定的对象初始化此签名对象\r\n            验证操作的公钥。\r\n","This method closes this object and releases the resources that it held.":"该方法关闭此对象并释放其持有的资源。\r\n","java.sql.Blob.setBytes(long, byte[])":"java.sql.blob.setbytes（long，byte []）\r\n","iterator":"迭代器\r\n","Clears all warnings reported for this <code>Connection</code> object.":"清除此<code>连接</code>对象报告的所有警告。\r\n","Generates random bytes and places them into a user-supplied\n            byte array.":"生成随机字节并将其放入用户提供\r\n            字节阵列。\r\n","Returns an enumeration of the keys in this hashtable.":"返回此标签中的键枚举。\r\n","java.security.KeyStore.getCertificateAlias(java.security.cert.Certificate)":"java.security.keystore.getcertificatealias（java.security.cert.certificate）\r\n","Returns the name of this attribute view.":"返回此属性视图的名称。\r\n"," of the given type.":" 给定类型。\r\n","Returns a synchronized (thread-safe) collection backed by the specified\n            collection.":"返回由指定的同步（线程安全）集合\r\n            收藏。\r\n","java.security.AlgorithmParametersSpi.engineGetEncoded()":"java.security.algorithmparametersspi.enginegetencoded（）\r\n","java.security.Signature.update(byte[], int, int)":"java.security.signature.update（byte []，int，int）\r\n","java.sql.DataTruncation.getParameter()":"java.sql.datatruncation.getParameter（）\r\n","Returns the number of identities within this identity scope.":"返回此身份范围内的身份数量。\r\n","Returns the number of elements in this deque.":"返回此Deque中的元素数量。\r\n","CertPathValidator CertPathValidator":"CERTPATHVALIDATOR CERT PATHIDATOR\r\n","java.security.AlgorithmParameterGeneratorSpi.engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"java.security.algorithmparametergeneratorspi.engineinit（java.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","Updates the designated column with a <code>byte</code> value.":"用<code>字节</code>值更新指定的列。\r\n","if the specified provider cannot provide the requested\n             certificate store type.":"如果指定的提供商无法提供请求的\r\n             证书存储类型。\r\n","Marks this ":"标记这个\r\n","java.security.spec.RSAPrivateCrtKeySpec.getCrtCoefficient()":"java.security.spec.rsaprivatecrtkeyspec.getcrtceefficity（）\r\n","java.sql.CallableStatement.getBytes(int)":"java.sql.callablestatement.getbytes（int）\r\n","Returns the currency symbol for the currency of these\n            DecimalFormatSymbols in their locale. -or- Sets the currency symbol for the currency of these\n            DecimalFormatSymbols in their locale.":"返回这些货币的货币符号\r\n            将其位置中的十进制成分。 - 或设置这些货币的货币符号\r\n            将其位置中的十进制成分。\r\n","The root class from which all event state objects shall be derived.":"所有事件状态对象的根类都应得出。\r\n","java.util.Locale.UNICODE_LOCALE_EXTENSION":"java.util.locale.unicode_locale_extension\r\n","java.util.AbstractCollection.toArray()":"java.util.abstractcollection.toArray（）\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String, java.lang.String, int)":"java.sql.sqltransactionRollbacKexception.sqltransactionRollbacKexception（java.lang.string，java.lang.string，int）\r\n","java.util.concurrent.ConcurrentHashMap.reduceKeys(long, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reduceys（long，java.util.function.bifunction）\r\n","CRLSelector":"CRLSELECTOR\r\n"," using a given ":" 使用给定\r\n","java.util.IllegalFormatPrecisionException.IllegalFormatPrecisionException(int)":"Java.util.IllegalFormatPrecisionException.IllegaLformatPrecisionException（int）\r\n","java.util.Set.toArray(java.lang.Object[])":"java.util.set.toArray（java.lang.object []）\r\n","java.security.cert.CertificateParsingException.CertificateParsingException(java.lang.Throwable)":"java.security.cert.certificateParsingException.certificateParsingException（java.lang.throwable）\r\n","java.nio.file.attribute.PosixFilePermissions":"java.nio.file.attribute.posixfilepermissions\r\n","A file attribute view that provides a view of a <em>basic set</em> of file\n            attributes common to many file systems.":"文件属性视图，该视图提供了文件的<em>基本集</em>的视图\r\n            许多文件系统共有的属性。\r\n","java.security.spec.PKCS8EncodedKeySpec.getFormat()":"java.security.spec.pkcs8encodedkeyspec.getformat（）\r\n","Gets the keystore protection parameters for this domain.":"获取此域的密钥库保护参数。\r\n","java.util.Arrays.hashCode(double[])":"java.util.arrays.hashcode（double []）\r\n","java.text.Annotation.getValue()":"java.text.annotation.getValue（）\r\n","Verifies that the signature in this SignedObject is the valid\n            signature for the object stored inside, with the given\n            verification key, using the designated verification engine.":"验证此签名的签名是否有效\r\n            内部存储的对象的签名，带有给定的\r\n            验证键，使用指定的验证引擎。\r\n","java.security.cert.TrustAnchor.TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[])":"java.security.cert.trustanchor.trustanchor（javax.security.auth.x500.x500.x500principal，java.security.publickey，byte []）\r\n","Returns a name in the specified ":"返回指定的名称\r\n","java.security.cert.CertPathBuilderException":"java.security.cert.certpathbuilderexception\r\n","Possible ":"可能的\r\n","Constant for full style pattern.":"恒定样式模式。\r\n","Reads the next attribute in the stream and returns it as a stream of uninterpreted\n            bytes.":"读取流中的下一个属性，并将其返回为未解释的流\r\n            字节。\r\n","java.util.Arrays.copyOf(int[], int)":"java.util.arrays.copyof（int []，int）\r\n","java.security.AccessControlException":"Java.security.AccessControlexception\r\n","java.security.CodeSigner":"java.security.codesigner\r\n","java.security.acl.Owner.isOwner(java.security.Principal)":"java.security.acl.owner.isower（java.security.principal）\r\n","Probes the given file to guess its content type.":"探索给定文件以猜测其内容类型。\r\n","java.util.Stack.empty()":"java.util.stack.empty（）\r\n","Gets the maximum value that the field can take.":"获取该字段可以采取的最大值。\r\n","java.util.concurrent.CompletableFuture.newIncompleteFuture()":"java.util.concurrent.completablefuture.newincompletefuture（）\r\n","java.text.SimpleDateFormat.toLocalizedPattern()":"java.text.simpledateformat.tolocalizedpattern（）\r\n","Removes the first occurrence of the specified element in this\n            list (when traversing the list from head to tail).":"删除此中指定元素的第一次出现\r\n            列表（从头到尾遍历列表时）。\r\n","java.security.cert.TrustAnchor":"java.security.cert.trustanchor\r\n","Creates a proxy for the specified listener.":"为指定的侦听器创建代理。\r\n","Current state of this signature object.":"此签名对象的当前状态。\r\n","java.util.Scanner.hasNextBigInteger(int)":"java.util.scanner.hasnextbiginteger（int）\r\n","java.sql.CallableStatement.setTimestamp(java.lang.String, java.sql.Timestamp)":"java.sql.callablestatement.settimestamp（java.lang.string，java.sql.timestamp）\r\n","java.nio.file.ProviderNotFoundException.ProviderNotFoundException(java.lang.String)":"java.nio.file.providernotfoundexception.providernotfoundexception（java.lang.string）\r\n","java.security.Identity.Identity(java.lang.String, java.security.IdentityScope)":"java.security.Identity.Identity（Java.lang.String，Java.Security.IdentityScope）\r\n","Sets the designated parameter to a <code>Reader</code> object.":"将指定的参数设置为<code>读取器</code>对象。\r\n","java.util.TreeSet.tailSet(java.lang.Object)":"java.util.treeset.tailset（java.lang.Object）\r\n","java.security.interfaces.DSAPrivateKey.serialVersionUID":"java.security.interfaces.dsaprivatekey.serialversionuid\r\n","Creates a new bit set.":"创建一个新的位集。\r\n","java.security.KeyPairGenerator.initialize(int, java.security.SecureRandom)":"java.security.keypairgenerator.initialize（int，java.security.securerandom）\r\n","java.util.IdentityHashMap.IdentityHashMap()":"java.util.indityhashmap.InderityHashmap（）\r\n","Appends a character literal to the formatter.":"将字符字面的字面添加到格式化。\r\n","Creates an Executor that uses a single worker thread operating\n            off an unbounded queue.":"创建使用单个工人线程操作的执行者\r\n            脱下无限队列。\r\n","Returns the affine y-coordinate ":"返回仿射Y坐标\r\n","Reads the next attribute in the stream and returns it as a <code>double</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> double </code>\r\n            在Java编程语言中。\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.String, java.lang.Throwable)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.string，java.lang.throwable）\r\n","Returns the offset of this time zone from UTC at the specified\n            date.":"在指定的\r\n            日期。\r\n","java.util.Arrays.sort(float[], int, int)":"java.util.arrays.sort（float []，int，int）\r\n"," (opaque\n            cryptographic keys of type ":" （不透明\r\n            加密键\r\n","java.sql.Statement.addBatch(java.lang.String)":"java.sql.statement.addbatch（java.lang.string）\r\n","Retrieves the value of the designated JDBC <code>REF(&lt;structured-type&gt;)</code>\n            parameter as a ":"检索指定的JDBC <code> ref（＆lt; structred-type＆gt;）</code>的值\r\n            参数为a\r\n"," which is used to protect data\n in the ":" 用于保护数据\r\n 在里面\r\n","Returns an existing ":"返回现有\r\n","Returns the sub-prime ":"返回子选项\r\n","Returns the result of calling ":"返回通话结果\r\n","instance has not yet\n been initialized.":"实例尚未\r\n 被初始化。\r\n","java.nio.file.NotLinkException.NotLinkException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.notlinkexception.notlinkexception（java.lang.string，java.lang.string，java.lang.string）\r\n","Returns the number of mappings.":"返回映射数。\r\n","java.nio.file.SecureDirectoryStream.move(java.lang.Object, java.nio.file.SecureDirectoryStream, java.lang.Object)":"java.nio.file.securedirectorystream.move（java.lang.object，java.nio.file.securedirectorystream，java.lang.object）\r\n","Creates a single-threaded executor that can schedule commands\n            to run after a given delay, or to execute periodically.":"创建一个可以安排命令的单线读取器\r\n            在给定的延迟或定期执行后运行。\r\n","Gets the time formatter with the given formatting style\n            for the given locale.":"使用给定格式的样式获取时间格式化\r\n            对于给定的地方。\r\n","Constructs a GeneralSecurityException with no detail message.":"构建一个GeneralSecurityException，没有详细信息。\r\n","Read all lines from a file.":"从文件中读取所有行。\r\n","java.util.Calendar.DAY_OF_YEAR":"java.util.calendar.day_of_year\r\n","java.security.Certificate":"java.security.certificate\r\n","if the class of the encapsulated object can not be found.\n":"如果找不到封装对象的类。\r\n\r\n","java.util.concurrent.ConcurrentLinkedDeque.iterator()":"java.util.concurrent.concurrentlinkeddeque.itque.iterator（）\r\n","java.util.EnumSet.range(java.lang.Enum, java.lang.Enum)":"java.util.enumset.range（java.lang.enum，java.lang.enum）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>java.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            <Code> Java。\r\n","java.nio.file.Files.createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createsymboliclink（java.nio.file.path，java.nio.file.path，java.nio.file.file.attribute.fileattribute）\r\n","java.util.concurrent.CancellationException.CancellationException()":"java.util.concurrent.cancellationException.cancellationException（）\r\n","java.util.concurrent.BlockingQueue.add(java.lang.Object)":"java.util.concurrent.blockingqueue.add（java.lang.Object）\r\n","Creates a new random number generator.":"创建一个新的随机数生成器。\r\n",", and returns a ":"，并返回\r\n","Waits if necessary for at most the given time for the computation\n to complete, and then retrieves its result, if available.":"如有必要等待计算的给定时间\r\n 完成，然后检索其结果（如果有）。\r\n","Returns a new bit set containing all the bits in the given long array.":"返回一个新的位集，其中包含给定长数组中的所有位。\r\n","FIELD_COUNT":"field_count\r\n","java.util.Collections.emptySortedSet()":"java.util.collections.emptySortedSet（）\r\n","java.sql.DatabaseMetaData.othersUpdatesAreVisible(int)":"java.sql.databasemetadata.othersupdatesarevisible（int）\r\n","java.security.cert.CertPathValidator.getAlgorithm()":"java.security.cert.certpathvalidator.getalgorithm（）\r\n","The constant indicating that the order in which rows in a\n            result set will be processed is unknown.":"常数表明排在一个中的顺序\r\n            结果集将被处理未知。\r\n"," representing a <em>group identity</em>, used to\n            determine access rights to objects in a file system.":" 代表<em>组身份</em>\r\n            确定文件系统中对象的访问权限。\r\n"," in\n ":" 在\r\n \r\n","Returns the variant code for this locale.":"返回此语言环境的变体代码。\r\n","java.security.KeyStore.setEntry(java.lang.String, java.security.Entry, java.security.ProtectionParameter)":"java.security.keystore.setentry（java.lang.string，java.security.entry，java.security.protectionparameter）\r\n","java.util.Base64":"java.util.base64\r\n","java.util.TimeZone.getDisplayName(boolean, int, java.util.Locale)":"java.util.timezone.getDisplayname（boolean，int，java.util.locale）\r\n","Inserts the specified element at the end of this deque,\n            waiting if necessary for space to become available.":"在此Deque的末尾插入指定元素，\r\n            如有必要，以便空间可用。\r\n","java.sql.CallableStatement.setBlob(java.lang.String, java.io.InputStream, long)":"java.sql.callablestatement.setBlob（java.lang.string，java.io.inputstream，long）\r\n","java.sql.Connection.nativeSQL(java.lang.String)":"java.sql.connection.nationsql（java.lang.string）\r\n","Removes an ACL entry from this ACL.":"从此ACL中删除ACL条目。\r\n","Returns a shallow copy of this ":"返回此的浅副本\r\n","Removes all components from this vector and sets its size to zero.":"从该矢量中删除所有组件，并将其大小设置为零。\r\n","Indicates that the data type\n            can be only be used in <code>WHERE</code> search clauses\n            that  use <code>LIKE</code> predicates.":"表示数据类型\r\n            只能在<code>中使用</code>搜索条款\r\n            使用<code>喜欢</code>谓词。\r\n","Runtime exception thrown when an attempt is made to create a file system that\n            already exists.":"当尝试创建一个文件系统时，运行时异常\r\n            已经存在。\r\n","java.time.format.DateTimeFormatter.ISO_TIME":"java.time.format.datetimeformatter.iso_time\r\n","Retrieves the value of the designated JDBC <code>BIT</code>\n            or <code>BOOLEAN</code> parameter as a\n            <code>boolean</code> in the Java programming language.":"检索指定的JDBC <code>位</code>的值\r\n            或<code> boolean </code>参数作为一个\r\n            <code>布尔值</code>在Java编程语言中。\r\n","Updates the designated column with an ascii stream value.":"使用ASCII流值更新指定的列。\r\n","java.sql.SQLException.SQLException()":"java.sql.sqlexception.sqlexception（）\r\n","Returns an unmodifiable list containing zero elements.":"返回包含零元素的不可变化列表。\r\n","Closes this formatter.":"关闭此格式化。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String, java.lang.String, int)":"java.sql.sqlintegrityConstrationContrationException.SQLINTEGRITYCONSTRITYCONDRATENTVIOLATIONEXCEPTION（JAVA.LANG.STRING，JAVA.LANG.STRING，INT）\r\n","Set a new text string to be scanned.":"设置一个要扫描的新文本字符串。\r\n","java.util.concurrent.Executors.callable(java.security.PrivilegedAction)":"java.util.concurrent.executors.callable（java.security.privilegedAction）\r\n","The short display name style, such as ":"简短的显示名称样式，例如\r\n","java.util.concurrent.ForkJoinPool.getPoolSize()":"java.util.concurrent.forkjoinpool.getpoolsize（）\r\n","java.sql.ResultSet.refreshRow()":"java.sql.Resultset.refreshrow（）\r\n","Returns the name of this locale's country, localized to ":"返回该地区国家的名称，本地\r\n","java.util.concurrent.ConcurrentHashMap.computeIfPresent(java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.computeifpresent（java.lang.object，java.util.function.bifunction）\r\n","s used in finding certificates and CRLs.":"S用于查找证书和CRL。\r\n","java.time.format.DateTimeFormatter.ISO_OFFSET_DATE_TIME":"java.time.format.datetimeformatter.iso_offset_date_time\r\n","Returns a hash code based on the contents of the specified array.":"根据指定数组的内容返回哈希代码。\r\n","java.sql.PreparedStatement.executeQuery()":"java.sql.preparedstatement.executequery（）\r\n","java.sql.PreparedStatement.setObject(int, java.lang.Object, int, int)":"java.sql.preparedstatement.setObject（int，java.lang.object，int，int）\r\n","java.util.Collections.list(java.util.Enumeration)":"java.util.collections.list（java.util.enumeration）\r\n","Retrieves whether a result set's own deletes are visible.":"检索结果集是否可见。\r\n","Returns the CRT exponent of the prime ":"返回Prime的CRT指数\r\n","Returns the term that the database vendor prefers term for \"catalog\".":"返回数据库供应商更喜欢“目录”的术语的术语。\r\n","Causes the next added printer/parser to pad to a fixed width.":"导致下一个添加的打印机/解析器将其粘贴到固定宽度上。\r\n","\n            given the modulus, publicExponent, privateExponent,\n            primeP, primeQ, primeExponentP, primeExponentQ, and\n            crtCoefficient as defined in PKCS#1.":"\r\n            给定模量，publicexponent，privateeptonent，\r\n            PrimeP，PrimeQ，PrimeExponentP，PrimeExponents和\r\n            PKCS＃1中定义的CRTCOFED。\r\n","java.util.concurrent.CountedCompleter.CountedCompleter()":"java.util.concurrent.countedcompleter.countedcompleter（）\r\n","java.util.PropertyPermission":"java.util.propertypermission\r\n","java.sql.ParameterMetaData.parameterModeIn":"java.sql.parametermetadata.parametermodein\r\n","#getTableTypes":"#getTableTypes\r\n","java.sql.ResultSet.cancelRowUpdates()":"java.sql.Resultset.cancelrowupdates（）\r\n","Gets the indicator of the day-of-month of the transition.":"获取过渡日期的指标。\r\n","java.security.cert.CertPathParameters.clone()":"java.security.cert.certpathparameters.clone（）\r\n","Sets the authorityKeyIdentifier criterion.":"设置AuthorityKeyentifier标准。\r\n","java.util.UnknownFormatConversionException.getConversion()":"java.util.unknownformatConversionException.getConversion（）\r\n","java.util.HashSet.size()":"java.util.hashset.size（）\r\n","Deletes a user-defined attribute.":"删除用户定义的属性。\r\n","java.util.concurrent.CyclicBarrier.await()":"java.util.concurrent.cyclarer.await（）\r\n","Retrieves whether a schema name can be used in a privilege definition statement.":"检索是否可以在特权定义语句中使用模式名称。\r\n","java.util.Arrays.equals(short[], short[])":"java.util.arrays.equals（short []，short []）\r\n","Gets the date/time formatter with the given date and time\n            formatting styles for the default ":"获得给定日期和时间的日期/时间格式\r\n            默认的格式化样式\r\n"," if this deque contains the specified element.":" 如果此Deque包含指定的元素。\r\n","java.sql.Clob.setCharacterStream(long)":"java.sql.clob.setcharacterstream（long）\r\n","\n            using the specified locale.":"\r\n            使用指定的语言环境。\r\n","if executor null\n":"如果执行人为null\r\n\r\n","java.text.AttributedCharacterIterator.getAttribute(java.text.Attribute)":"java.text.AttributedCharacterator.getAttribute（java.text.attribute）\r\n","Constructs a new, empty tree map, using the natural ordering of its\n            keys.":"使用其自然顺序构建一个新的空的树地图\r\n            钥匙。\r\n","The constant indicating that the rows in a result set will be\n            processed in a reverse direction; last-to-first.":"常数表明结果集中的行将是\r\n            在相反的方向上处理；最后。\r\n","java.time.format.DateTimeFormatterBuilder.appendInstant(int)":"java.time.format.datetimeformatterbuilder.appendinstant（int）\r\n","Returns a Signature object that implements the specified\n            signature algorithm.":"返回一个实现指定的签名对象\r\n            签名算法。\r\n","java.util.concurrent.CountedCompleter.setRawResult(java.lang.Object)":"java.util.concurrent.countedcompleter.setrawresult（java.lang.object）\r\n","java.lang.Comparable\n            Comparable":"java.lang.comparable\r\n            可比\r\n","java.util.List.lastIndexOf(java.lang.Object)":"java.util.list.lastindexof（java.lang.Object）\r\n","Adds a set of attributes to a subrange of the string.":"将一组属性添加到字符串的子范围内。\r\n"," with the given (fixed)\n            capacity and default access policy.":" 给定（固定）\r\n            容量和默认访问策略。\r\n","java.util.GregorianCalendar.GregorianCalendar(java.util.Locale)":"java.util.gregoriancalendar.gregoriancalendar（java.util.locale）\r\n","java.sql.Types.TINYINT":"java.sql.types.tinyint\r\n","if the given ":"如果给定\r\n","java.text.DecimalFormatSymbols.getZeroDigit()":"java.text.decimalformatsymbols.getzerodigit（）\r\n","Sets the value of the designated parameter using the given object.":"使用给定对象设置指定参数的值。\r\n","java.util.Arrays.hashCode(boolean[])":"java.util.arrays.hashcode（boolean []）\r\n","entryClass":"入门级\r\n","java.security.cert.PKIXParameters.getTrustAnchors()":"java.security.cert.pkixparameters.getTrustanchers（）\r\n","X509CRLEntry":"x509crlentry\r\n","java.security.InvalidKeyException.InvalidKeyException()":"java.security.invalidkeyexception.invalidkeyexception（）\r\n","java.util.Arrays.parallelSort(float[], int, int)":"java.util.arrays.parallelsort（float []，int，int）\r\n","Formatter":"格式化\r\n","Returns an estimate of the number of worker threads that are\n            not blocked waiting to join tasks or for other managed\n            synchronization.":"返回对工人线程数量的估计值\r\n            没有阻止等待加入任务或其他托管\r\n            同步。\r\n","Returns whether this ":"返回是否这样\r\n","\n            with the given throwable as its cause, unless this future has\n            already been set or has been cancelled.":"\r\n            以给定的抛出作为其原因，除非这个未来有\r\n            已经设置或已取消。\r\n","java.util.Comparator.nullsFirst(java.util.Comparator)":"java.util.comparator.nullsfirst（java.util.comparator）\r\n","This exception may be thrown by methods that have detected concurrent\n            modification of an object when such modification is not permissible.":"可以通过检测到并发的方法来抛出此例外\r\n            当不允许进行修改时，对象修改对象。\r\n","java.text.DecimalFormat.isDecimalSeparatorAlwaysShown()":"java.text.decimalformat.isdecimalseparatoralwaysshown（）\r\n","java.nio.file.Path.equals(java.lang.Object)":"java.nio.file.path.equals（java.lang.Object）\r\n","Clears this hashtable so that it contains no keys.":"清除此标题，以便它不包含钥匙。\r\n","java.nio.file.Path.startsWith(java.nio.file.Path)":"java.nio.file.path.startswith（java.nio.file.path）\r\n","java.text.CharacterIterator.setIndex(int)":"java.text.Characteriter.setIndex（int）\r\n","java.time.format.DateTimeFormatter.toFormat()":"java.time.format.datetimeformatter.toformat（）\r\n","Constructs a Timestamp.":"构建时间戳。\r\n","The ISO date formatter that formats or parses a date without an\n            offset, such as '20111203'.":"格式或解析日期的ISO日期格式\r\n            偏移，例如“ 20111203”。\r\n"," is null\n":" 一片空白\r\n\r\n","java.util.Scanner.nextFloat()":"java.util.scanner.nextfloat（）\r\n","Returns a reverse order view of the mappings contained in this map.":"返回此地图中包含的映射的反向顺序视图。\r\n","ConcurrentModificationException":"consurrentModificationException\r\n","Compares the specified object to this ":"将指定的对象与此进行比较\r\n","\"posix:permissions\"":"“ POSIX：权限”\r\n","Returns a locale specific date-time formatter for the ISO chronology.":"返回ISO年表的区域特定日期时间格式。\r\n","The CRLReason enumeration specifies the reason that a certificate\n            is revoked, as defined in <a href=\"http://www.":"CRLREASON枚举指定了证书的原因\r\n            被撤销，如<a href =“ http：// www中的定义”。\r\n","Returns the ISO 4217 currency code of the currency of these\n            DecimalFormatSymbols. -or- Sets the ISO 4217 currency code of the currency of these\n            DecimalFormatSymbols.":"返回这些货币的ISO 4217货币代码\r\n            十进制成符号。 - 或设置这些货币的ISO 4217货币代码\r\n            十进制成符号。\r\n","java.util.Calendar.LONG":"java.util.calendar.long\r\n","Returns the prime factor ":"返回主要因素\r\n"," containing the elements in the\n            specified sorted set.":" 包含元素\r\n            指定的排序集。\r\n","Submits a Runnable task for execution and returns a Future\n representing that task.":"提交可运行的任务以执行并返回未来\r\n 代表该任务。\r\n","KeyPairGeneratorSpi":"Keypairgeneratorspi\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String, java.lang.Throwable)":"java.sql.sqltransactionRollbacKexception.sqltransactionRollbackexception（java.lang.string，java.lang.thrang.throwable）\r\n","Determine whether a fully qualified table name is prefixed or suffixed to\n a fully qualified table name.":"确定是否将完全合格的表名称前缀或后缀为\r\n 一个完全合格的表名。\r\n","File attributes associated with files on file systems used by operating systems\n            that implement the Portable Operating System Interface (POSIX) family of\n            standards.":"与操作系统使用的文件系统上的文件系统关联的文件属性\r\n            实现便携式操作系统接口（POSIX）家族\r\n            标准。\r\n","java.util.Dictionary.get(java.lang.Object)":"java.util.dictionary.get（java.lang.Object）\r\n","The constant indicating that generated keys should be made\n            available for retrieval.":"常数表示应制作生成的密钥\r\n            可用于检索。\r\n","if blocker.block did so\n":"如果阻止器。块这样做\r\n\r\n","Creates a new incomplete CompletableFuture.":"创建一个新的不完整的完整图。\r\n","Moves the cursor to the last row in\n            this <code>ResultSet</code> object.":"将光标移至最后一行\r\n            此<code> Resultset </code>对象。\r\n","java.security.KeyPair.getPrivate()":"java.security.keypair.getPrivate（）\r\n"," extension, (OID = 2.":" 扩展，（OID = 2。\r\n","Unchecked exception thrown when an attempt is made to invoke an operation on\n            a directory stream that is closed.":"当尝试调用操作时，未选中的例外\r\n            关闭的目录流。\r\n","java.util.concurrent.CompletionException.CompletionException(java.lang.String)":"java.util.concurrent.completionexception.completionexception（java.lang.string）\r\n","Constructs a calendar with the specified time zone and locale.":"用指定的时区和语言区域构建日历。\r\n","Sets the formats to use for the values passed into\n            <code>format</code> methods or returned from <code>parse</code>\n            methods.":"设置用于用于传递到的值的格式\r\n            <code>格式</code>方法或从<code>解析</code>返回\r\n            方法。\r\n"," for the given callable task.":" 对于给定的可召唤任务。\r\n","Interface for an X.":"X的接口。\r\n","if an error occurs accessing the database or if seconds ":"如果发生错误访问数据库或秒\r\n","Creates a new, empty map with an initial table size\n            accommodating the specified number of elements without the need\n            to dynamically resize.":"创建一个具有初始表大小的新的空图\r\n            无需适应指定数量的元素\r\n            动态调整大小。\r\n","An iterator for lists that allows the programmer\n            to traverse the list in either direction, modify\n            the list during iteration, and obtain the iterator's\n            current position in the list.":"允许程序员的列表的迭代器\r\n            要沿任一方向遍历列表，请修改\r\n            迭代期间的列表，并获得迭代器的\r\n            当前位置在列表中。\r\n","java.sql.SQLInput.readBlob()":"java.sql.sqlinput.readblob（）\r\n","Constructs an InvalidAlgorithmParameterException with no detail\n            message.":"构建无效的无效algorithmeterexception\r\n            信息。\r\n","Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.":"将年表ID（例如“ ISO”或“ Thaibuddhist”）附加到格式化器中。\r\n","java.util.Scanner.skip(java.lang.String)":"java.util.scanner.skip（java.lang.string）\r\n","Determines if the given sequence of char values is normalized.":"确定给定的CHAR值的序列是否标准化。\r\n","java.util.concurrent.DelayQueue.take()":"java.util.concurrent.delayqueue.take（）\r\n","java.util.concurrent.ConcurrentHashMap.computeIfAbsent(java.lang.Object, java.util.function.Function)":"java.util.concurrent.concurrenthashmap.computeifabsent（java.lang.object，java.util.function.function.function）\r\n","java.sql.CallableStatement":"java.sql.callablestatement\r\n","Constructs a KeyException with the specified detail message.":"用指定的详细信息构造关键示例。\r\n","java.util.Scanner.reset()":"java.util.scanner.reset（）\r\n","java.util.ArrayDeque.clone()":"java.util.arraydeque.clone（）\r\n"," for the current character.":" 对于当前字符。\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.util.PropertyResourceBundle.PropertyResourceBundle(java.io.Reader)":"java.util.propertyresourcebundle.propertyresourcebundle（java.io.reader）\r\n","java.util.concurrent.ForkJoinPool.ForkJoinPool()":"java.util.concurrent.forkjoinpool.forkjoinpool（）\r\n","java.util.Observer.update(java.util.Observable, java.lang.Object)":"java.util.observer.update（java.util.observable，java.lang.object）\r\n","java.util.Collection.contains(java.lang.Object)":"java.util.collection.contains（java.lang.Object）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>String</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            <code>字符串</code>在Java编程语言中。\r\n","Creates an ECPoint from the specified affine x-coordinate\n            ":"从指定的仿射X坐标中创建一个EC点\r\n            \r\n","Returns, but does not unschedule or execute, a task queued by\n            the current thread but not yet executed, if one is immediately\n            available.":"返回，但不安排或执行，任务排队\r\n            当前线程但尚未执行，如果立即\r\n            可用的。\r\n","java.sql.SQLInput.readRowId()":"java.sql.sqlinput.readrowid（）\r\n","Retrieves, but does not remove, the first element of this deque.":"检索但不会删除该deque的第一个元素。\r\n"," with the\n            specified server name and a default port of 389.":" 与\r\n            指定的服务器名称和389的默认端口。\r\n","java.nio.file.Files.newByteChannel(java.nio.file.Path, java.nio.file.OpenOption)":"java.nio.file.files.newbytechannel（java.nio.file.path，java.nio.file.openoption）\r\n","-bearing\n            mapping function to it, return that result, otherwise return an empty\n            ":"-轴承\r\n            映射功能，返回结果，否则返回空的\r\n            \r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n              with a given  <code>cause</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n              使用给定的<code>原因</code>。\r\n","java.text.CharacterIterator.DONE":"java.text.Characteriter.Done\r\n","java.sql.Types.LONGVARCHAR":"java.sql.types.longvarchar\r\n","java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String)":"java.util.stringtokenizer.stringtokenizer（java.lang.string，java.lang.string）\r\n",", else ":"， 别的\r\n","Returns the calendar type of this ":"返回此的日历类型\r\n","java.sql.SQLWarning":"java.sql.sqlwarning\r\n","java.util.concurrent.ConcurrentHashMap.reduceEntriesToInt(long, java.util.function.ToIntFunction, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.concurrenthashmap.reduceentriestoint（long，java.util.function.tointfunction，int，int，java.util.function.intbinaryoperator）\r\n","java.sql.CallableStatement.getShort(java.lang.String)":"java.sql.callablestatement.getShort（java.lang.string）\r\n","Writes this object to the given SQL data stream, converting it back to\n            its SQL value in the data source.":"将此对象写入给定的SQL数据流，将其转换回\r\n            其SQL值在数据源中。\r\n","Creates an empty property list with no default values.":"创建一个没有默认值的空属性列表。\r\n","java.util.IntSummaryStatistics":"java.util.intsummarystatistics\r\n","java.util.Collections.rotate(java.util.List, int)":"java.util.collections.rotate（java.util.list，int）\r\n","Returns whether there are previous elements to iterate.":"返回是否有以前的迭代元素。\r\n","java.nio.file.attribute.PosixFilePermission":"java.nio.file.attribute.posixfilepermission\r\n","The Key interface is the top-level interface for all keys.":"钥匙接口是所有密钥的顶级接口。\r\n","Returns a key-value mapping associated with the greatest\n key in this map, or ":"返回与最大相关的键值映射\r\n 此地图中的键或\r\n","Creates a new link (directory entry) for an existing file ":"为现有文件创建一个新链接（目录条目）\r\n","AclEntry entry":"Aclentry进入\r\n","java.security.spec.EncodedKeySpec.getEncoded()":"java.security.spec.encodedkeyspec.getencoded（）\r\n","java.security.IdentityScope.getSystemScope()":"java.security.IdentityScope.getSystemscope（）\r\n","java.util.Scanner.nextBigInteger(int)":"java.util.scanner.nextbiginteger（int）\r\n","java.util.Arrays.parallelPrefix(long[], int, int, java.util.function.LongBinaryOperator)":"java.util.arrays.parallelprefix（long []，int，int，java.util.function.longbinaryoperator）\r\n","java.util.ArrayDeque.addFirst(java.lang.Object)":"java.util.arraydeque.addfirst（java.lang.Object）\r\n","Initializes this parameter generator for a certain size.":"初始化此参数生成器的特定大小。\r\n","Returns the private key ":"返回私钥\r\n"," if there is no current\n            mapping).":" 如果没有电流\r\n            映射）。\r\n","CertPathBuilderException":"CERTPATHBUILDEREXCEPTION\r\n"," on this barrier.":"在这个障碍上。\r\n","if the match result is not available, of if the last match\n             was not successful.\n":"如果匹配结果不可用，则上一场比赛\r\n             没有成功。\r\n\r\n","java.util.Random.nextBytes(byte[])":"java.util.random.nextbytes（byte []）\r\n","Retrieves and removes the head of this queue.":"检索并取下该队列的头部。\r\n","A facility for threads to schedule tasks for future execution in a\n            background thread.":"线程的设施，以安排任务以供将来执行\r\n            背景线程。\r\n","Returns a name for the locale that is appropriate for display to the\n            user.":"返回适合显示的语言环境的名称\r\n            用户。\r\n","Returns the OID of the signature algorithm.":"返回签名算法的OID。\r\n"," describing the value, otherwise return an\n            empty ":" 描述值，否则返回\r\n            空的\r\n","java.util.Calendar.after(java.lang.Object)":"java.util.calendar.fter（java.lang.Object）\r\n","Updates the designated column with a <code>long</code> value.":"用<code>长</code>值更新指定的列。\r\n","java.util.Arrays.parallelPrefix(int[], int, int, java.util.function.IntBinaryOperator)":"java.util.arrays.parallelprefix（int []，int，int，java.util.function.intbinaryoperator）\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code> and <code>SQLState</code>.":"用给定的\r\n            <code>原因</code>和<code> sqlstate </code>。\r\n","\n            and related methods to throw the given exception, whether or\n            not already completed.":"\r\n            以及提出给定例外的相关方法，无论是\r\n            尚未完成。\r\n","Updates the designated column with a byte array value.":"使用字节数组值更新指定的列。\r\n"," on this\n            task's completer, if one exists.":" 关于这个\r\n            任务的完成者，如果存在。\r\n","Saves a keystore ":"保存一个密钥库\r\n","java.sql.SQLException.SQLException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlexception.sqlexception（java.lang.string，java.lang.string，java.lang.lang.throwable）\r\n","java.security.cert.X509CRL.getIssuerX500Principal()":"java.security.cert.x509crl.getissuerx500principal（）\r\n","java.security.SignatureSpi.engineVerify(byte[])":"java.security.signaturespi.EngineVerify（byte []）\r\n","java.security.interfaces.RSAPrivateCrtKey.serialVersionUID":"java.security.interfaces.rsaprivatecrtkey.serialversionuid\r\n","Constructs a <code>BatchUpdateException</code> object initialized with\n            a given <code>reason</code>, <code>SQLState</code>,<code>cause</code>, and\n            <code>updateCounts</code>.":"构建<code> batchupdateException </code>对象初始化的对象\r\n            给定的<code>原因</code>，<code> sqlstate </code>，<code>原因</code>和\r\n            <code> UpdateCounts </code>。\r\n","Sets the daylight saving time end rule to a fixed date within a month.":"将日光节省时间末端规则设置为一个月内的固定日期。\r\n","<code>Format</code> is an abstract base class for formatting locale-sensitive\n            information such as dates, messages, and numbers.":"<code>格式</code>是用于格式化语言环境敏感的抽象基类\r\n            诸如日期，消息和数字之类的信息。\r\n","Gets the default number of rows for a fetch for the ":"获取获取的默认行号\r\n","<strong>Denigrated</strong>, use #getIssuer() or\n            #getIssuerAsBytes() instead.":"<strong>贬低</strong>，使用#getissuer（）或\r\n            #getissuerasbytes（）。\r\n","java.util.Optional.orElseThrow(java.util.function.Supplier)":"java.util.optional.orelsethrow（java.util.function.supplier）\r\n","Retrieves whether this database supports subqueries in comparison\n            expressions.":"检索该数据库是否支持亚克斯\r\n            表达。\r\n","A trust anchor or most-trusted Certification Authority (CA).":"信托主持人或最受信任的认证机构（CA）。\r\n","Tests if this date is after the specified date.":"测试此日期是否在指定的日期之后。\r\n","java.security.cert.PKIXParameters.setTrustAnchors(java.util.Set)":"java.security.cert.pkixparameters.settrustanchers（java.util.set）\r\n","Returns an immutable list consisting of ":"返回一个不变的列表，包括\r\n","java.security.acl.AclEntry.setNegativePermissions()":"java.security.acl.aclentry.setnegativepermissions（）\r\n","Returns the modulus.":"返回模量。\r\n","\n            if this queue has no elements with an expired delay.":"\r\n            如果该队列没有过期延迟的元素。\r\n","Returns the string explaining why the file system operation failed.":"返回字符串，说明文件系统操作失败的原因。\r\n","java.util.ArrayDeque.pop()":"java.util.arraydeque.pop（）\r\n","java.nio.file.FileSystemNotFoundException":"java.nio.file.filesystemnotfoundexception\r\n","Returns a list of the schema names in the database.":"返回数据库中的模式名称列表。\r\n","java.security.spec.ECGenParameterSpec":"java.security.spec.ecgenparameterspec\r\n","java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)":"java.text.decimalformat.setdecimalseparatoralwaysshown（布尔值）\r\n","java.util.SimpleTimeZone.setRawOffset(int)":"java.util.simpletimezone.setrawoffset（int）\r\n","java.util.Objects.checkIndex(int, int)":"java.util.objects.checkindex（int，int）\r\n","java.util.concurrent.CountedCompleter.complete(java.lang.Object)":"java.util.concurrent.countedcompleter.complete（java.lang.object）\r\n"," elements.\n":" 元素。\r\n\r\n","java.util.Currency.getDisplayName(java.util.Locale)":"java.util.currency.getDisplayname（java.util.locale）\r\n","Tests whether a file is readable.":"测试文件是否可读。\r\n","java.security.Security.getProviders(java.util.Map)":"java.security.security.getProviders（java.util.map）\r\n","java.util.WeakHashMap.WeakHashMap(int, float)":"java.util.weakhashmap.weakhashmap（int，float）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as an <code>Object</code>\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code>对象</code>\r\n            在Java编程语言中。\r\n","java.sql.DatabaseMetaData.supportsSubqueriesInQuantifieds()":"java.sql.databasemetadata.supportssubqueriesinquantifieds（）\r\n","Inserts the specified element at the beginning of this list.":"将指定元素插入此列表的开头。\r\n"," represents a parameter that specifies how a\n ":" 表示一个参数，该参数指定了\r\n \r\n","java.util.Hashtable.keySet()":"java.util.hashtable.keyset（）\r\n","java.sql.ResultSet.updateObject(java.lang.String, java.lang.Object)":"java.sql.Resultset.updateObject（java.lang.string，java.lang.object）\r\n","java.util.UUID.getLeastSignificantBits()":"java.util.uuid.getleastsimpificantbits（）\r\n","Retrieves whether the return value for the method\n            <code>getMaxRowSize</code> includes the SQL data types\n            <code>LONGVARCHAR</code> and <code>LONGVARBINARY</code>.":"检索该方法的返回值是否\r\n            <code> getmaxrowsize </code>包括SQL数据类型\r\n            <code> longvarchar </code>和<code> longvarbinary </code>。\r\n","java.sql.ResultSetMetaData.getColumnLabel(int)":"java.sql.ResultsetMetadata.getColumnlabel（int）\r\n","if the object passed is not of the correct type.":"如果对象传递不是正确的类型。\r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Allocates a <code>Date</code> object and initializes it so that\n            it represents the time at which it was allocated, measured to the\n            nearest millisecond.":"分配<code> date </code>对象并初始化它，以便\r\n            它代表分配的时间，测量到\r\n            最近的毫秒。\r\n","java.util.Arrays.sort(float[])":"java.util.arrays.sort（float []）\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.lang.String, java.util.Map)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.lang.string，java.lang.string，java.util.map）\r\n","java.util.concurrent.FutureTask.setException(java.lang.Throwable)":"java.util.concurrent.futuretask.setException（java.lang.throwable）\r\n","java.util.TreeMap.navigableKeySet()":"java.util.treemap.navigablekeyset（）\r\n","Returns an enumeration that has no elements.":"返回没有任何要素的枚举。\r\n","Constructs an <code>InputMismatchException</code> with ":"用\r\n","Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque).":"检索并卸下该Deque代表的队列的头部\r\n （换句话说，这是该deque的第一个要素）。\r\n","java.security.SignatureSpi.engineUpdate(byte)":"java.security.signaturespi.engineupdate（字节）\r\n","java.sql.Connection.prepareStatement(java.lang.String, int)":"java.sql.connection.preparestatement（java.lang.string，int）\r\n","java.text.StringCharacterIterator.setText(java.lang.String)":"java.text.StringCharacterator.setText（java.lang.string）\r\n","\n            with the specified cause and a detail message of\n            ":"\r\n            带有指定原因和一条详细信息\r\n            \r\n","java.text.NumberFormat.getIntegerInstance(java.util.Locale)":"java.text.numberformat.getintegerinstance（java.util.locale）\r\n","java.sql.DatabaseMetaData.supportsSubqueriesInComparisons()":"java.sql.databasemetadata.supportssubqueriesincomparisons（）\r\n","java.time.temporal.ValueRange.isIntValue()":"java.time.temporal.valuerange.isintvalue（）\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.String)":"java.sql.sqlrecoverableException.sqlrecoverableException（java.lang.string）\r\n","java.security.cert.CertificateRevokedException.getRevocationReason()":"java.security.cert.certificaterevokedexception.getRevocationReason（）\r\n","Gets the date formatter with the given formatting style\n            for the default ":"获取给定格式样式的日期格式化\r\n            对于默认值\r\n","java.text.NumberFormat.isGroupingUsed()":"java.text.numberformat.isgroupinged（）\r\n","if the public key is invalid.":"如果公钥无效。\r\n","java.sql.Types.VARCHAR":"java.sql.types.varchar\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>NUMERIC</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>数字</code>。\r\n","java.util.IllegalFormatPrecisionException.getPrecision()":"java.util.illegalformatprecisionException.getPrecision（）\r\n","java.security.spec.ECFieldF2m.getFieldSize()":"java.security.spec.ecfieldf2m.getfieldsize（）\r\n","java.security.spec.PSSParameterSpec.DEFAULT":"java.security.spec.pssparameterspec.default\r\n","java.security.cert.X509CertSelector.setSubjectPublicKeyAlgID(java.lang.String)":"java.security.cert.x509certselector.setsubjectpublickeyalgid（java.lang.string）\r\n","java.security.MessageDigestSpi.engineUpdate(byte[], int, int)":"java.security.messagedigestspi.engineupdate（byte []，int，int）\r\n","java.util.concurrent.ConcurrentHashMap.forEachValue(long, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachvalue（long，java.util.function.consumer）\r\n","java.util.Collection.hashCode()":"java.util.collection.hashcode（）\r\n","Queries if this barrier is in a broken state.":"查询该障碍是否处于破裂状态。\r\n","java.security.spec.RSAOtherPrimeInfo.getExponent()":"java.security.spec.rsaotherprimeinfo.getexponent（）\r\n","Returns a String representing the value of the SQL ROWID designated by this\n            <code>java.":"返回一个表示由此指定的SQL ROWID值的字符串\r\n            <code> Java。\r\n","location  size()":"位置大小（）\r\n","Returns the basic constraints constraint. -or- Sets the basic constraints constraint.":"返回基本约束约束。 - 或设置基本约束约束。\r\n","Appends the zone offset, such as '+01:00', to the formatter.":"将区域偏移量（例如'+01：00'）附加到格式化器中。\r\n","If not already completed, causes invocations of ":"如果尚未完成，则导致\r\n","java.security.cert.CertPathChecker.check(java.security.cert.Certificate)":"java.security.cert.certpathchecker.check（java.security.cert.certificate）\r\n","Returns the certificate chain associated with the given alias.":"返回与给定别名相关的证书链。\r\n","java.util.Comparator.thenComparing(java.util.function.Function)":"java.util.comparator.thencomparing（java.util.function.function.function）\r\n","Retrieves the index of the column or parameter that was truncated.":"检索截断的列或参数的索引。\r\n","Doubly-linked list implementation of the ":"双关联列表的实现\r\n","Writes the next attribute to the stream as a Java float.":"将下一个属性作为Java Float写入流。\r\n","java.security.cert.CertStoreException.CertStoreException()":"java.security.cert.certstoreexception.certstoreexception（）\r\n","Returns an iterator over all the elements (both expired and\n            unexpired) in this queue.":"在所有元素上返回迭代器（既到期又\r\n            未过期）在这个队列中。\r\n"," that wraps the specified\n            throwable.":" 包裹指定的\r\n            可投掷。\r\n","Commences performing this task and awaits its completion if\n            necessary, without returning its result or throwing its\n            exception.":"开始执行此任务并等待完成\r\n            必要的，而无需返回结果或投掷\r\n            例外。\r\n","Returns the parameters used to initialize this ":"返回用于初始化此的参数\r\n","Creates an enum map initialized from the specified map.":"创建从指定地图初始化的枚举图。\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","Construct an Observable with zero Observers.":"用零观察者构建可观察的。\r\n","Retrieves the value of a JDBC <code>REF(&lt;structured-type&gt;)</code>\n            parameter as a ":"检索JDBC <code> ref（＆lt; structred-type＆gt;）</code>的值\r\n            参数为a\r\n","java.nio.file.Path.hashCode()":"java.nio.file.path.hashcode（）\r\n","Reads the datum at the head of the stream and returns it as an\n            <code>Object</code> in the Java programming language.":"在流的头部读取基准，并将其返回为\r\n            <code>对象</code>在Java编程语言中。\r\n","java.security.acl.NotOwnerException.NotOwnerException()":"java.security.acl.notownerexception.notownerexception（）\r\n","java.util.LinkedList.removeLast()":"java.util.linkedlist.removelast（）\r\n","Returns a string representation of this certificate.":"返回此证书的字符串表示。\r\n","java.util.TimeZone.getDSTSavings()":"java.util.timezone.getDstsavings（）\r\n","Gets information about the parameters of the ":"获取有关参数的信息\r\n","java.util.concurrent.AbstractExecutorService.newTaskFor(java.util.concurrent.Callable)":"java.util.concurrent.abstractexecutorservice.newtaskfor（java.util.concurrent.callable）\r\n","Constructs a DigestException with the specified detail\n            message.":"用指定的细节构造DigestException\r\n            信息。\r\n","java.sql.CallableStatement.getShort(int)":"java.sql.callablestatement.getShort（int）\r\n","java.util.Scanner.remove()":"java.util.scanner.remove（）\r\n"," with no characters in it, with no\n            ":" 没有字符，没有\r\n            \r\n","The interface for a Digital Signature Algorithm (DSA) private key.":"数字签名算法（DSA）私钥的接口。\r\n","java.security.KeyRep.KeyRep(java.security.Type, java.lang.String, java.lang.String, byte[])":"java.security.keyrep.keyrep（java.security.type，java.lang.string，java.lang.string，byte []）\r\n","Compares this principal to the specified object.":"将此本金与指定对象进行比较。\r\n","Constructs a CertificateNotYetValidException with no detail message.":"构建一个证书肾上腺素的validexception，没有详细信息。\r\n","java.nio.file.Files.isExecutable(java.nio.file.Path)":"java.nio.file.files.isexecutable（java.nio.file.path）\r\n","java.nio.file.attribute.AclEntry":"java.nio.file.attribute.aclentry\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCRL(java.io.InputStream)":"java.security.cert.certificatefactoryspi.enginegeneratecrl（java.io.inputstream）\r\n","Returns an enumeration of the keys in this dictionary.":"返回该词典中键的列举。\r\n","java.security.Provider.compute(java.lang.Object, java.util.function.BiFunction)":"java.security.provider.com upute（java.lang.object，java.util.function.bifunction）\r\n","java.sql.SQLInput.readFloat()":"java.sql.sqlinput.readfloat（）\r\n","java.text.DecimalFormat.setNegativeSuffix(java.lang.String)":"java.text.decimalformat.setnegativesuffix（java.lang.string）\r\n","Returns the index of the first character of the run\n            with respect to all attributes containing the current character.":"返回运行的第一个字符的索引\r\n            关于所有包含当前字符的属性。\r\n","lineStart > lineLimit":"Linestart> LineLimit\r\n","java.util.Deque.remove(java.lang.Object)":"java.util.deque.remove（java.lang.Object）\r\n","java.util.Timer.Timer(java.lang.String)":"java.util.timer.timer（java.lang.string）\r\n","update":"更新\r\n","Constructs a <code>BatchUpdateException</code> object initialized with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code> and\n            <code>updateCounts</code>.":"构建<code> batchupdateException </code>用给定的对象\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>和\r\n            <code> UpdateCounts </code>。\r\n","An interface for an object which represents a database table entry, returned\n as the result of the query to the database.":"代表数据库表条目的对象的接口，返回\r\n 作为数据库的查询结果。\r\n","The number of times this list has been ":"此列表的次数是\r\n","Retrieves the index of the first character in the requested field. -or- Sets the begin index.":"检索请求字段中第一个字符的索引。 - 或设置开始索引。\r\n"," that selects ":" 选择\r\n","Queue":"队列\r\n","java.util.Arrays.copyOf(long[], int)":"java.util.arrays.copyof（long []，int）\r\n","java.util.Calendar.setMinimalDaysInFirstWeek(int)":"java.util.calendar.setminimaldaysinfirstweek（int）\r\n","java.util.Observable.deleteObservers()":"java.util.observable.deleteobservers（）\r\n","Undoes all changes made in the current transaction\n            and releases any database locks currently held\n            by this <code>Connection</code> object.":"撤消当前交易中的所有更改\r\n            并发布当前持有的任何数据库锁\r\n            通过此<code>连接</code>对象。\r\n","Returns the certificate path for the Timestamping Authority.":"返回时间戳授权的证书路径。\r\n"," to iterate over the entries in the directory.":" 迭代目录中的条目。\r\n","java.sql.SQLXML":"java.sql.sqlxml\r\n","Marks the week of the year part of a date.":"标记日期的一年一周。\r\n","The ISO date-time formatter that formats or parses a date-time without\n            an offset, such as '2011-12-03T10:15:30'.":"ISO日期格式格式或解析没有日期时间的时间\r\n            偏移，例如'2011-12-03T10：15：30'。\r\n","java.sql.ResultSetMetaData.isWritable(int)":"java.sql.ResultsetMetadata.issritable（int）\r\n","natural\n                   ordering":"自然\r\n                   订购\r\n","Constructs an empty ":"构造一个空\r\n","java.util.NavigableMap.headMap(java.lang.Object)":"java.util.navigablemap.headmap（java.lang.Object）\r\n","Performs the given action for each entry in this map until all entries\n            have been processed or the action throws an exception.":"在此地图中为每个条目执行给定的动作，直到所有条目\r\n            已经处理过或动作引发了例外。\r\n","if input has been exhausted.":"如果输入已经用尽。\r\n","java.security.KeyStore.store(java.io.OutputStream, char[])":"java.security.keystore.store（java.io.outputstream，char []）\r\n","java.util.concurrent.FutureTask.FutureTask(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.futuretask.futuretask（java.lang.runnable，java.lang.Object）\r\n","x, y":"x，y\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.Throwable)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalideuthorizationspecexception（java.lang.thable.throwable）\r\n","Retrieves and removes the first (lowest) element,\n            or returns ":"检索并删除第一个（最低）元素，\r\n            或返回\r\n","Returns an immutable map containing two mappings.":"返回一张包含两个映射的不变地图。\r\n","java.util.Collection.iterator()":"java.util.collection.iterator（）\r\n","java.sql.ResultSet.updateBlob(int, java.sql.Blob)":"java.sql.Resultset.updateBlob（int，java.sql.blob）\r\n","java.sql.ResultSet.clearWarnings()":"java.sql.Resultset.clearwarnings（）\r\n","java.util.Hashtable":"java.util.hashtable\r\n","java.security.interfaces.RSAKey":"java.security.interfaces.rsakey\r\n","Common and useful TemporalAdjusters.":"常见且有用的颞贾斯特。\r\n","java.sql.CallableStatement.setClob(java.lang.String, java.sql.Clob)":"java.sql.callablestatement.setClob（java.lang.string，java.sql.clob）\r\n","Returns an empty sorted set (immutable).":"返回一个空排序集（不变）。\r\n","java.util.UnknownFormatFlagsException.UnknownFormatFlagsException(java.lang.String)":"java.util.unknownformatflagsexception.unknownformatflagsexception（java.lang.string）\r\n","Searches a range of\n            the specified array of doubles for the specified value using\n            the binary search algorithm.":"搜索一系列\r\n            使用\r\n            二进制搜索算法。\r\n","Returns true if the specified ":"如果指定\r\n","Removes and returns a key-value mapping associated with\n the least key in this map, or ":"删除并返回与之关联的键值映射\r\n 此地图中的最低关键，或\r\n","java.sql.ResultSet.updateSQLXML(java.lang.String, java.sql.SQLXML)":"java.sql.Resultset.updatesqlxml（java.lang.string，java.sql.sqlxml）\r\n","original == null":"原始== null\r\n","Removes and returns a key-value mapping associated with\n            the least key in this map, or ":"删除并返回与之关联的键值映射\r\n            此地图中的最低关键，或\r\n","java.util.Locale.getISOLanguages()":"java.util.locale.getisolanguages（）\r\n","if there is a problem with the database or if the value of\n             ":"如果数据库有问题或\r\n             \r\n","java.sql.CallableStatement.getURL(int)":"java.sql.callablestatement.geturl（int）\r\n","Retrieves the value of a JDBC <code>BINARY</code> or <code>VARBINARY</code>\n            parameter as an array of <code>byte</code> values in the Java\n            programming language.":"检索JDBC <code>二进制</code>或<code> varbinary </code>的值\r\n            参数作为<code> byte </code>值的数组\r\n            编程语言。\r\n","java.security.KeyStore.size()":"java.security.keystore.size（）\r\n","java.util.Deque.removeFirstOccurrence(java.lang.Object)":"java.util.deque.removefirstoccurrence（java.lang.object）\r\n","Returns the certificate chain.":"返回证书链。\r\n","Creates an ExecutorCompletionService using the supplied\n            executor for base task execution and the supplied queue as its\n            completion queue.":"使用所提供的\r\n            基本任务执行的执行人和所提供的队列\r\n            完成队列。\r\n","Copies all of the mappings from the specified map to this hashtable.":"将所有映射从指定的地图复制到该标签。\r\n","Returns the index where the error was found.":"返回发现错误的索引。\r\n","Executes the given SQL statement, which may return multiple results.":"执行给定的SQL语句，该语句可能返回多个结果。\r\n","Returns the string that is used to escape wildcard characters.":"返回用于逃脱通配符字符的字符串。\r\n"," property to have the specified\n            ":" 已指定的属性\r\n            \r\n"," is greater\n             than the length of this object's paragraph text.\n":" 更伟大\r\n             比此对象的段落文本的长度。\r\n\r\n","java.sql.PreparedStatement.setDate(int, java.sql.Date)":"java.sql.preparedstatement.setdate（int，java.sql.date）\r\n"," value from this random number generator's\n            sequence.":" 从这个随机数生成器的价值\r\n            序列。\r\n","java.nio.file.ProviderMismatchException.ProviderMismatchException(java.lang.String)":"java.nio.file.providermismatchexception.providermismatchexception（java.lang.string）\r\n","Returns the time for which the validity of the certification path\n            should be determined. -or- Sets the time for which the validity of the certification path\n            should be determined.":"返回认证路径的有效性的时间\r\n            应确定。 - 或设置认证路径有效性的时间\r\n            应确定。\r\n","Closes this watch service.":"关闭此手表服务。\r\n","Skips input that matches a pattern constructed from the specified\n            string.":"跳过输入，与指定的模式匹配\r\n            细绳。\r\n","java.security.Identity.addCertificate(java.security.Certificate)":"Java.security.Identity.Addcertificate（Java.security.certificate）\r\n","Returns the name of this ":"返回此名称\r\n","java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.add（java.lang.object）\r\n","java.util.FormatterClosedException":"java.util.formatterclosedexception\r\n","java.security.cert.PolicyQualifierInfo.getPolicyQualifierId()":"java.security.cert.policyqualifierinfo.getpolicyqualifierid（）\r\n","This is the generic Message Digest exception.":"这是通用消息摘要异常。\r\n","java.text.FieldPosition.getField()":"java.text.fieldposition.getfield（）\r\n","java.time.temporal.ValueRange.isFixed()":"java.time.temporal.valuerange.isfixed（）\r\n","Unchecked exception thrown when the format width is required.":"当需要格式宽度时，未选中的异常。\r\n","java.text.NumberFormat.parseObject(java.lang.String, java.text.ParsePosition)":"java.text.numberformat.parseobject（java.lang.string，java.text.parseposition）\r\n","Assigns the specified double value to each element of the specified\n            range of the specified array of doubles.":"将指定的双重值分配给指定的每个元素\r\n            指定的双重阵列的范围。\r\n","Returns the set of permissions corresponding to a given ":"返回对应于给定的权限集\r\n","java.util.GregorianCalendar.GregorianCalendar(java.util.TimeZone, java.util.Locale)":"java.util.gregoriancalendar.gregoriancalendar（java.util.timezone，java.util.locale）\r\n","java.security.KeyStore.getKey(java.lang.String, char[])":"java.security.keystore.getkey（java.lang.string，char []）\r\n","Returns the authorityKeyIdentifier criterion.":"返回权限关键标准。\r\n","Performs cleanup associated with termination of this worker\n            thread.":"执行与该工人终止相关的清理\r\n            线。\r\n","Tests whether a file is a directory.":"测试文件是否为目录。\r\n","java.security.KeyStore.getInstance(java.lang.String, java.security.Provider)":"java.security.keystore.getinstance（java.lang.string，java.security.provider）\r\n","java.util.Locale.stripExtensions()":"java.util.locale.stripextensions（）\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String)":"java.sql.sqlwarning.sqlwarning（java.lang.string）\r\n","Retrieves the value of a JDBC <code>CHAR</code>, <code>VARCHAR</code>,\n            or <code>LONGVARCHAR</code> parameter as a <code>String</code> in\n            the Java programming language.":"检索JDBC <code> char </code>，<code> varchar </code>，\r\n            或<code> longvarchar </code>参数为<code>字符串</code> in\r\n            Java编程语言。\r\n","PublicKey":"publickey\r\n","java.sql.CallableStatement.getNClob(int)":"java.sql.callablestatement.getnclob（int）\r\n","Retrieves whether a data definition statement within a transaction forces\n            the transaction to commit.":"检索交易力中的数据定义语句是否\r\n            提交的交易。\r\n","if the object to look for is ":"如果要寻找的对象是\r\n","java.text.CollationKey.toByteArray()":"java.text.collat​​ionkey.tobytearray（）\r\n","Characteristic value signifying that, for each pair of\n            encountered elements ":"特征值表示，每对\r\n            遇到的元素\r\n","java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)":"java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)\r\n","java.util.concurrent.BlockingQueue.drainTo(java.util.Collection)":"java.util.concurrent.blockingqueue.drainto（java.util.collection）\r\n","Returns the string used to separate the mantissa from the exponent. -or- Sets the string used to separate the mantissa from the exponent.":"返回用于将Mantissa与指数分开的字符串。 - 或 - 设置用于将Mantissa与指数分开的字符串。\r\n"," that the\n ":" 那是\r\n \r\n","java.security.cert.CRL":"java.security.cert.crl\r\n","Returns the string used to quote SQL identifiers.":"返回用于引用SQL标识符的字符串。\r\n","java.sql.CallableStatement.getNString(int)":"java.sql.callablestatement.getnstring（int）\r\n","Indicates that <code>NULL</code> values are not allowed.":"表示不允许<code> null </code>值。\r\n","Retrieves whether <code>NULL</code> values are sorted low.":"检索<code> null </code>值是否为低排序。\r\n","Waits until all #getParties parties have invoked\n            ":"等到所有#getParties派对都已经调用\r\n            \r\n","BitSet":"比特斯特\r\n","java.util.concurrent.CopyOnWriteArrayList.clone()":"java.util.concurrent.copyonwritearraylist.clone（）\r\n","java.util.AbstractCollection.containsAll(java.util.Collection)":"java.util.abstractcollection.containsall（java.util.collection）\r\n","Returns the value.":"返回值。\r\n","Constructs a CodeSigner object.":"构建一个代码签名对象。\r\n"," with the default initial capacity\n            (16) and the default load factor (0.":" 具有默认初始容量\r\n            （16）和默认负载因子（0。\r\n","java.sql.ParameterMetaData.getParameterMode(int)":"java.sql.parametermetadata.getParametermode（int）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a <code>BigDecimal</code> using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用该解释为<code> bigdecimal </code>使用\r\n            \r\n","Provider":"提供者\r\n","Causes the current thread to wait until the latch has counted down to\n            zero, unless the thread is Thread#interrupt interrupted,\n            or the specified waiting time elapses.":"导致当前线程等到闩锁计算为\r\n            零，除非线程是线程＃中断中断，否则\r\n            或指定的等待时间。\r\n","Supplier":"供应商\r\n","java.sql.Clob.getSubString(long, int)":"java.sql.clob.getSubstring（long，int）\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.util.concurrent.ConcurrentHashMap.reduceToDouble(long, java.util.function.ToDoubleBiFunction, double, java.util.function.DoubleBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducetodouble（long，java.util.function.todoublebifunction，double，java.util.function.doublebinarleoperator）\r\n","LinkedBlockingQueue":"LinkedBlockingqueue\r\n","java.security.DigestException.DigestException(java.lang.Throwable)":"java.security.digestexception.digestexception（java.lang.throwable）\r\n","This interface defines a protocol for bidirectional iteration over text.":"该界面定义了通过文本进行双向迭代的协议。\r\n","java.text.BreakIterator.first()":"java.text.breakiterator.first（）\r\n","Returns the value of the given calendar field.":"返回给定日历字段的值。\r\n","java.sql.DatabaseMetaData.typeSearchable":"java.sql.databasemetadata.typesearchable\r\n","java.util.Map.values()":"java.util.map.values（）\r\n","Unchecked exception thrown when the format width is a negative value other\n            than ":"当格式宽度为负值其他时，未选中的例外\r\n            比\r\n","Creates a new CountedCompleter with the given completer\n            and initial pending count.":"使用给定的完成者创建一个新的计数收费器\r\n            和最初的待处理计数。\r\n","java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate, java.util.Collection)":"java.security.cert.pkixcertpathchecker.check（java.security.cert.certificate，java.util.collection）\r\n","Constructs a new identity scope with the specified name and scope.":"用指定的名称和范围构建新的身份范围。\r\n","java.sql.CallableStatement.setObject(java.lang.String, java.lang.Object, int, int)":"java.sql.callablestatement.setObject（java.lang.string，java.lang.object，int，int）\r\n","java.util.StringJoiner.StringJoiner(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence)":"Java.util.StringJoiner.StringJoiner（Java.lang.CharSequence，Java.lang.Charsequence，Java.lang.CharSequence）\r\n","Gets the Permission object associated with this exception, or\n            null if there was no corresponding Permission object.":"获取与此异常关联的权限对象，或\r\n            null如果没有相应的权限对象。\r\n","Returns an enumeration for the set of allowed permissions for the\n            specified principal (representing an entity such as an individual or\n            a group).":"返回一组允许权限的枚举\r\n            指定的委托人（代表个人或诸如个人或\r\n            一组）。\r\n","java.security.Provider.getInfo()":"java.security.provider.getinfo（）\r\n","java.util.Hashtable.isEmpty()":"java.util.hashtable.isempty（）\r\n","java.sql.Statement.execute(java.lang.String, int[])":"java.sql.statement.execute（java.lang.string，int []）\r\n","java.util.List.contains(java.lang.Object)":"java.util.list.contains（java.lang.Object）\r\n","Retrieves the value of the designated <code>NCHAR</code>,\n            <code>NVARCHAR</code>\n            or <code>LONGNVARCHAR</code> parameter as\n            a <code>String</code> in the Java programming language.":"检索指定的<code> nchar </code>的值\r\n            <code> nvarchar </code>\r\n            或<code> longnvarcharch </code>参数为\r\n            <code>字符串</code>在Java编程语言中。\r\n","Normalize a sequence of char values.":"标准化一系列char值。\r\n","java.util.Arrays.parallelPrefix(java.lang.Object[], int, int, java.util.function.BinaryOperator)":"java.util.arrays.parallealprefix（java.lang.object []，int，int，java.util.function.binaryoperator）\r\n","java.nio.file.ClosedWatchServiceException":"java.nio.file.closedwatchserviceException\r\n","java.util.Arrays.binarySearch(char[], char)":"java.util.arrays.binarysearch（char []，char）\r\n","Constructs an InvalidKeySpecException with the specified detail\n            message.":"用指定的详细信息构建无效的Keyspecexception\r\n            信息。\r\n","java.sql.ParameterMetaData.getParameterClassName(int)":"java.sql.parametermetadata.getParameterClassname（int）\r\n","java.sql.SQLOutput.writeBigDecimal(java.math.BigDecimal)":"java.sql.sqloutput.writebigdecimal（java.math.bigdecimal）\r\n","CRLException":"trlexception\r\n","java.sql.ResultSet.getLong(java.lang.String)":"java.sql.Resultset.getlong（java.lang.string）\r\n","Returns the seeding bytes ":"返回播种字节\r\n","java.sql.DatabaseMetaData.typeNoNulls":"java.sql.databasemetadata.typenonulls\r\n","java.sql.Connection.rollback(java.sql.Savepoint)":"java.sql.connection.rollback（java.sql.savepoint）\r\n","Invoked for a directory after entries in the directory, and all of their\n            descendants, have been visited.":"在目录中的条目及其所有目录后被调用到目录\r\n            后代已被拜访。\r\n","Unchecked exception thrown when duplicate flags are provided in the format\n            specifier.":"以格式提供重复的标志时，未选中的例外\r\n            说明符。\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException()":"java.sql.sqltransientConnectionException.sqltransientConnectionException（）\r\n","Creates a list containing the elements of the specified\n            collection, in the order they are returned by the collection's\n            iterator.":"创建包含指定元素的列表\r\n            收集，按照收藏的顺序归还它们\r\n            迭代器。\r\n","java.util.Collections.synchronizedNavigableSet(java.util.NavigableSet)":"java.util.collections.synchronizednavigableset（java.util.navigableset）\r\n","java.util.concurrent.ConcurrentSkipListMap.lowerKey(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.lowerkey（java.lang.object）\r\n","Updates the designated column using the given input stream, which\n            will have the specified number of bytes.":"使用给定的输入流更新指定的列\r\n            将具有指定的字节数。\r\n","#resolve(Path) resolve":"#Resolve（路径）解决\r\n"," indicating a narrow name used for format.":" 指示用于格式的狭窄名称。\r\n","The constant indicating the type for a <code>ResultSet</code> object\n            whose cursor may move only forward.":"常数指示<code> resultset的类型</code>对象\r\n            其光标可能只向前移动。\r\n","java.security.ProviderException.ProviderException(java.lang.String)":"java.security.providerexception.providerexception（java.lang.string）\r\n","#tryComplete":"#trycomplete\r\n","java.sql.NClob":"java.sql.nclob\r\n","Checked exception thrown when a lookup of ":"查找的检查例外\r\n","java.util.Deque.pollFirst()":"java.util.deque.pollfirst（）\r\n","java.security.interfaces.RSAPrivateKey.serialVersionUID":"java.security.interfaces.rsaprivatekey.serialversionuid\r\n"," object as having been changed; the\n            ":" 对象已更改；这\r\n            \r\n","java.security.KeyException.KeyException(java.lang.Throwable)":"java.security.keyexception.keyexception（java.lang.throwable）\r\n","java.sql.SQLOutput.writeBlob(java.sql.Blob)":"java.sql.sqloutput.writeblob（java.sql.blob）\r\n","Emits an XML document representing all of the properties contained\n            in this table.":"排放一个代表所有包含的属性的XML文档\r\n            在此表中。\r\n","java.util.concurrent.ConcurrentSkipListMap.firstEntry()":"java.util.concurrent.concurrentskiplistmap.firstentry（）\r\n","java.text.Normalizer.Form#NFD":"java.text.normalizer.form＃nfd\r\n","java.util.Locale.getExtensionKeys()":"java.util.locale.getExtensionKeys（）\r\n","java.util.IllegalFormatFlagsException.IllegalFormatFlagsException(java.lang.String)":"java.util.ILLEGALFORMATFLAGSEXCEPTION.ILLEGALFORMATFLAGSEXCEPTION（java.lang.string）\r\n","java.util.function.Consumer":"java.util.function.consumer\r\n","Copies the specified range of the specified array into a new array.":"将指定数组的指定范围复制到新数组中。\r\n","Constant indicating that the base direction depends on the first strong\n            directional character in the text according to the Unicode\n            Bidirectional Algorithm.":"恒定表明基本方向取决于第一个强\r\n            根据Unicode的方向性字符\r\n            双向算法。\r\n","java.util.Collections.checkedSet(java.util.Set, java.lang.Class)":"java.util.collections.Checkedset（Java.util.set，Java.lang.class）\r\n","java.util.LinkedList.pollFirst()":"java.util.linkedlist.pollfirst（）\r\n"," as its action, and returns\n            a null result upon ":" 作为行动，并返回\r\n            无效的结果\r\n","The interface for a Digital Signature Algorithm (DSA) public key.":"数字签名算法（DSA）公钥的接口。\r\n","java.sql.DatabaseMetaData.dataDefinitionCausesTransactionCommit()":"java.sql.databasemetadata.datadefinitioncausestransactionCommit（）\r\n","Constructs a new identity hash map containing the keys-value mappings\n            in the specified map.":"构建包含键值映射的新身份哈希地图\r\n            在指定的地图中。\r\n","java.util.function.IntConsumer":"java.util.function.intconsumer\r\n","java.security.cert.PKIXRevocationChecker.getOcspResponderCert()":"java.security.cert.pkixrevocation checker.getocsprespondercert（）\r\n","Constructs an UnrecoverableKeyException with no detail message.":"构建一个无录制的Keyexception，没有详细信息。\r\n"," method returns in ":" 方法返回\r\n"," is not specified for this\n             method it throws a ":" 未为此指定\r\n             方法它抛出了\r\n","#isDone is\n            done":"#isdone是\r\n            完毕\r\n","Sets the designated parameter to the given Java <code>boolean</code> value.":"将指定的参数设置为给定的Java <code> boolean </code>值。\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","java.util.concurrent.CompletableFuture.isCancelled()":"java.util.concurrent.completablefuture.iscancelled（）\r\n","Returns the least significant 64 bits of this UUID's 128 bit value.":"返回该UUID 128位值的最低64位。\r\n","time":"时间\r\n","java.util.Spliterator.getExactSizeIfKnown()":"java.util.spliterator.getExactsizeifnown（）\r\n","Returns the arithmetic mean of values recorded, or zero if no\n            values have been recorded.":"返回记录值的算术平均值，或者如果没有\r\n            值已记录。\r\n","java.security.Signature.getInstance(java.lang.String, java.lang.String)":"java.security.signature.getInstance（java.lang.string，java.lang.string）\r\n","Gets the metadata for this ":"为此获取元数据\r\n","Retrieves the value of a JDBC <code>TIME</code> parameter as a\n            <code>java.":"检索JDBC <code>时间</code>参数为一个\r\n            <code> Java。\r\n","Returns the set of flags which contains a duplicate flag.":"返回包含重复标志的标志集。\r\n","The enumeration giving the available styles for formatting very large\n decimal numbers.":"枚举提供可用的格式化风格非常大的枚举\r\n 十进制数字。\r\n","Returns a view of a ":"返回一个视图\r\n","CertificateEncodingException":"证书编码Exception\r\n","java.util.concurrent.ArrayBlockingQueue.offer(java.lang.Object)":"java.util.concurrent.ArrayBlockingQueue.offer（java.lang.Object）\r\n","Returns an unmodifiable list containing one element.":"返回包含一个元素的不可修复列表。\r\n","java.sql.DatabaseMetaData.supportsConvert(int, int)":"java.sql.databasemetadata.supportsconvert（int，int）\r\n","Changes the parse style to be strict for the remainder of the formatter.":"将解析样式更改为对格式化的其余部分严格。\r\n","positive":"积极的\r\n","java.text.NumberFormat.setCurrency(java.util.Currency)":"java.text.numberformat.setcurrency（java.util.currency）\r\n","java.util.IdentityHashMap.entrySet()":"java.util.indistityhashmap.entryset（）\r\n","java.util.Arrays.copyOfRange(float[], int, int)":"java.util.arrays.copyofrange（float []，int，int）\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n            with a given <code>reason</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.security.Provider.getVersion()":"java.security.provider.getversion（）\r\n","java.util.Collections.min(java.util.Collection)":"java.util.collections.min（java.util.collection）\r\n","java.util.concurrent.CompletableFuture.minimalCompletionStage()":"java.util.concurrent.completablefuture.minimalcompletionstage（）\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","java.util.Locale.getDisplayCountry()":"java.util.locale.getdisplaycountry（）\r\n","Updates the designated column with a <code>double</code> value.":"用<code> double </code>值更新指定的列。\r\n","java.util.concurrent.ConcurrentLinkedDeque.addFirst(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.addfirst（java.lang.object）\r\n","java.sql.Connection.prepareStatement(java.lang.String, int, int)":"java.sql.connection.preparestatement（java.lang.string，int，int）\r\n","java.util.NavigableMap.lastEntry()":"java.util.navigablemap.lastentry（）\r\n","Constant definitions for the standard ":"标准的恒定定义\r\n",") and\n            initial table density (":"） 和\r\n            初始表密度（\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a <code>BigInteger</code> in the default radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用默认radix中的<code> biginteger </code>使用\r\n            \r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","Returns the number of key-value mappings in this map.":"返回此地图中键值映射的数量。\r\n","java.security.Signature.sign(byte[], int, int)":"java.security.signature.sign（byte []，int，int）\r\n","java.sql.Statement.close()":"java.sql.statement.close（）\r\n","java.util.Optional.of(java.lang.Object)":"java.util.optional.of（java.lang.Object）\r\n","Constructs a <code>SQLTransientException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqltransientException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","Obtains the DecimalStyle for the specified locale.":"获得指定区域的十分态。\r\n","Gets the <code>TimeZone</code> for the given ID.":"获取给定ID的<code> TimeZone </code>。\r\n","java.sql.SQLOutput.writeTimestamp(java.sql.Timestamp)":"java.sql.sqloutput.writetimestamp（java.sql.timestamp）\r\n","java.security.SecureClassLoader.SecureClassLoader(java.lang.ClassLoader)":"java.security.secureclassloader.secureclassloader（java.lang.classloader）\r\n","The key for the private use extension ('x').":"私有使用扩展的钥匙（'x'）。\r\n","java.util.concurrent.ForkJoinTask.setForkJoinTaskTag(short)":"java.util.concurrent.forkjointask.setforkjointasktag（短）\r\n","Completes the hash computation by performing final\n            operations such as padding.":"通过执行最终来完成哈希计算\r\n            诸如填充之类的操作。\r\n","Constructs a <code>SQLTransientException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqltransientException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.util.PriorityQueue.PriorityQueue()":"java.util.priorityqueue.priorityqueue（）\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String, java.lang.String)":"java.sql.sqlintegrityconstrateconterationexception.sqlintegrityconstritycontertaintviolationException（java.lang.string，java.lang.string）\r\n","java.util.Arrays.deepEquals(java.lang.Object[], java.lang.Object[])":"java.util.arrays.deepequals（java.lang.object []，java.lang.object []）\r\n","protectionParameter":"保护参数\r\n","The interface to a DSA public key.":"DSA公钥的接口。\r\n","java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable)":"java.util.concurrent.completablefuture.runasync（java.lang.runnable）\r\n","Transforms the string into a series of characters that can be compared\n            with CollationKey.":"将字符串转换为可以比较的一系列字符\r\n            与Collat​​ionkey。\r\n","Performs one or more checks on each ":"对每个执行一次或多个检查\r\n","java.util.Map.containsValue(java.lang.Object)":"java.util.map.containsvalue（java.lang.Object）\r\n","Appends all of the elements in the specified collection that\n            are not already contained in this list, to the end of\n            this list, in the order that they are returned by the\n            specified collection's iterator.":"附加指定集合中的所有元素\r\n            尚未包含在此列表中\r\n            此列表，按顺序归还\r\n            指定的集合的迭代器。\r\n","java.util.ListIterator.set(java.lang.Object)":"java.util.listiterator.set（java.lang.Object）\r\n","Forces the given value to be returned as a result.":"迫使给定值返回。\r\n","java.util.Arrays.fill(long[], int, int, long)":"java.util.arrays.fill（long []，int，int，long）\r\n","\n and the given ":"\r\n 和给定的\r\n","Gets the time zone. -or- Sets the time zone for the calendar of this ":"获取时区。 - 或 - 设置此日历的时区\r\n","Retrieves whether a result set's own inserts are visible.":"检索结果集是否可见。\r\n","Gets the SQL structured type instance referenced by this ":"获取此引用的SQL结构化类型实例\r\n","java.util.concurrent.BlockingDeque.poll(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.poll（long，java.util.concurrent.timeunit）\r\n","java.util.Collections.indexOfSubList(java.util.List, java.util.List)":"java.util.collections.indexofsublist（java.util.list，java.util.list）\r\n","java.security.DomainLoadStoreParameter.getProtectionParams()":"java.security.domainloadstoreparameter.getProtectionparams（）\r\n","Compares the time values (millisecond offsets from the <a\n            href=\"#Epoch\">Epoch</a>) represented by two\n            <code>Calendar</code> objects.":"比较时间值（毫秒偏移<a\r\n            href =“＃epoch”> epoch </a>）由两个代表\r\n            <code>日历</code>对象。\r\n","java.nio.file.Files.isReadable(java.nio.file.Path)":"java.nio.file.files.issrable（java.nio.file.path）\r\n","java.util.AbstractSequentialList.listIterator(int)":"java.util.abstractsequestentiallist.listiterator（int）\r\n","Returns a new incomplete CompletableFuture of the type to be\n            returned by a CompletionStage method.":"返回新的不完整的可完整future\r\n            通过完整阶段方法返回。\r\n","java.security.cert.PKIXParameters.addCertStore(java.security.cert.CertStore)":"java.security.cert.pkixparameters.addcertstore（java.security.cert.certstore）\r\n","Creates a new service loader for the given service type and class\n            loader.":"为给定的服务类型和类创建一个新的服务加载程序\r\n            加载程序。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.Throwable)":"java.sql.sqlintegrityConstrationConstrationException.SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION（java.lang.thable.throwable）\r\n","Constructs a <code>SQLNonTransientException</code> object.":"构造<code> sqlnontransientException </code>对象。\r\n","Returns the key.":"返回钥匙。\r\n","certstore.type":"certstore.type\r\n","java.text.DecimalFormatSymbols.getExponentSeparator()":"java.text.decimalformatsymbols.getepteptementseparator（）\r\n","Creates a <code>PreparedStatement</code> object that will generate\n            <code>ResultSet</code> objects with the given type and concurrency.":"创建一个将生成的<code>准备的</code>对象\r\n            <code> resultset </code>具有给定类型和并发的对象。\r\n","if the provided strength value is not valid.\n":"如果提供的强度值无效。\r\n\r\n","Returns the maximum number of columns in an Index for this database.":"返回此数据库索引中的最大列数。\r\n","Creates an AlgorithmParameters object.":"创建一个算法Parameters对象。\r\n","java.nio.file.attribute.AclEntryPermission.ADD_FILE":"java.nio.file.attribute.aclentrypermission.add_file\r\n","java.sql.Statement.cancel()":"java.sql.statement.cancel（）\r\n","Factory method for creating Array objects.":"创建数组对象的工厂方法。\r\n","java.util.OptionalLong":"java.util.optionallong\r\n","java.sql.DatabaseMetaData.supportsSubqueriesInExists()":"java.sql.databasemetadata.supportssubqueriesinexists（）\r\n","Returns the field size in bits which is size of prime p\n            for this prime finite field.":"返回位置的场大小，即Prime P的大小\r\n            对于这个主要有限的领域。\r\n","java.sql.DatabaseMetaData.ownDeletesAreVisible(int)":"java.sql.databasemetadata.owndeletesarevisible（int）\r\n","Commences performing this task, awaits its completion if\n            necessary, and returns its result, or throws an (unchecked)\n            ":"开始执行此任务，等待完成\r\n            必要并返回其结果，或抛出（未选中）\r\n            \r\n","Returns the certificate corresponding to the private key.":"返回与私钥相对应的证书。\r\n","The constant in the Java programming language, somtimes referred to\n            as a type code, that identifies the generic SQL type <code>BOOLEAN</code>.":"Java编程语言的常数，Somtime提及\r\n            作为类型代码，可以标识通用SQL类型<code> boolean </code>。\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String, java.lang.String)":"java.sql.sqlwarning.sqlwarning（java.lang.string，java.lang.string）\r\n","java.util.LongSummaryStatistics.getMin()":"java.util.longsummarystatistics.getmin（）\r\n","Unchecked exception thrown when the formatter has been closed.":"格式化构成时，不受组织的例外被抛出。\r\n","Constructs an identity with the specified name and scope.":"用指定的名称和范围构造身份。\r\n","natural ordering":"自然订购\r\n","java.util.Arrays.hashCode(byte[])":"java.util.arrays.hashcode（byte []）\r\n","java.util.Optional.filter(java.util.function.Predicate)":"java.util.optional.filter（java.util.function.predicate）\r\n","java.util.concurrent.CopyOnWriteArrayList.get(int)":"java.util.concurrent.copyonwritearraylist.get（int）\r\n","\n if it can not be encoded.":"\r\n 如果无法编码。\r\n","java.util.SplittableRandom.nextLong()":"java.util.splittablerandom.nextlong（）\r\n"," to match against (or ":" 匹配（或\r\n","java.security.cert.PKIXParameters.setPolicyMappingInhibited(boolean)":"java.security.cert.pkixparameters.setpolicymappingin bunding（boolean）\r\n","java.util.Spliterators.emptySpliterator()":"java.util.spliterators.emptyspliterator（）\r\n"," of the events that were retrieved.":" 检索的事件。\r\n","Runnable":"可运行\r\n","The class <code>Date</code> represents a specific instant\n            in time, with millisecond precision.":"类<code>日期</code>表示特定的瞬间\r\n            及时，具有毫秒的精度。\r\n","Creates a bit set whose initial size is large enough to explicitly\n            represent bits with indices in the range ":"创建有点集，其初始尺寸足够大，可以明确\r\n            表示范围内有指数的位\r\n","Get the maximum number of simultaneously open active statements for this\n database.":"为此获得最大数量的同时打开活动语句\r\n 数据库。\r\n","java.text.Collator.compare(java.lang.String, java.lang.String)":"java.text.collat​​or.compare（java.lang.string，java.lang.string）\r\n","order <= zero":"顺序<=零\r\n","Constructs an <code>InputMismatchException</code>, saving a reference\n            to the error message string ":"构建<code> inputMismatchException </code>，保存参考\r\n            到错误消息字符串\r\n"," with the the given date\n            specifiers - week year, week of year, and day of week.":" 给定日期\r\n            指定者 - 一周，一周和一周的一天。\r\n","java.security.cert.Certificate":"java.security.cert.certificate\r\n","Useful constant for WEEK_OF_YEAR field alignment.":"有用的常数_OF_OF_OF_YEAR场对齐。\r\n","java.sql.DatabaseMetaData.supportsMixedCaseIdentifiers()":"java.sql.databasemetadata.supportsmixedcasediendifiers（）\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","Retrieves the identity with the specified public key.":"用指定的公钥检索身份。\r\n","java.nio.file.attribute.FileTime.to(java.util.concurrent.TimeUnit)":"java.nio.file.attribute.filetime.to（java.util.concurrent.timeunit）\r\n","Inserts the specified element into this queue if it is possible to do\n            so immediately without violating capacity restrictions, returning\n            ":"如果可以执行，将指定元素插入此队列\r\n            因此，立即不违反能力限制，返回\r\n            \r\n","java.time.format.DateTimeFormatterBuilder.appendInstant()":"java.time.format.datetimeformatterbuilder.appendinstant（）\r\n","java.security.KeyManagementException.KeyManagementException(java.lang.Throwable)":"java.security.KeyManagementException.KeyManagementException（java.lang.throwable）\r\n","java.util.Deque.addLast(java.lang.Object)":"java.util.deque.addlast（java.lang.Object）\r\n"," object of the given algorithm,\n            and encapsulates the given provider implementation (SPI object) in it.":" 给定算法的对象，\r\n            并将给定的提供商实现（SPI对象）封装在其中。\r\n","Returns the common pool instance.":"返回公共池实例。\r\n"," that the encapsulated\n            ":" 封装\r\n            \r\n","java.util.ArrayList.ensureCapacity(int)":"java.util.arraylist.ensurecapacity（int）\r\n","java.util.ListResourceBundle.getContents()":"java.util.listresourcebundle.getContents（）\r\n","java.sql.DatabaseMetaData.supportsOpenCursorsAcrossCommit()":"java.sql.databasemetadata.supportsopersorsorcomcommit（）\r\n","java.sql.PreparedStatement.executeUpdate()":"java.sql.preparedstatement.executeupdate（）\r\n","java.security.cert.CertPath.writeReplace()":"java.security.cert.certpath.writereplace（）\r\n","java.sql.ResultSet.getDouble(java.lang.String)":"java.sql.Resultset.getDouble（java.lang.string）\r\n","java.util.Scanner.nextShort()":"java.util.scanner.nextshort（）\r\n","hasChanged":"已经改变\r\n","java.sql.ResultSet.updateAsciiStream(java.lang.String, java.io.InputStream)":"java.sql.Resultset.updateasciistream（java.lang.string，java.io.inputstream）\r\n","Formats an Object producing an <code>AttributedCharacterIterator</code>.":"格式化生成<code>属性Characteriterator </code>的对象。\r\n","java.util.Collections.max(java.util.Collection, java.util.Comparator)":"java.util.collections.max（java.util.collection，java.util.comparator）\r\n","java.nio.file.attribute.DosFileAttributeView.setArchive(boolean)":"java.nio.file.attribute.dosfileattributeview.setarchive（boolean）\r\n","Returns the reason the certificate has been revoked, as specified\n            in the Reason Code extension of this CRL entry.":"返回指定证书已被撤销的原因\r\n            在此CRL条目的原因中，代码扩展。\r\n"," throws ":" 扔\r\n","Returns the name for this savepoint.":"返回此保存点的名称。\r\n","java.util.concurrent.ConcurrentLinkedDeque.element()":"java.util.concurrent.concurrentlinkeddeque.element（）\r\n","Certificate Expired Exception.":"证书过期异常。\r\n","java.text.Bidi.getRunStart(int)":"java.text.bidi.getRunstart（int）\r\n","java.sql.SQLInput.readTime()":"java.sql.sqlinput.readtime（）\r\n","java.util.Deque.peekLast()":"java.util.deque.peeklast（）\r\n","java.security.cert.LDAPCertStoreParameters":"java.security.cert.ldapcertstoreparameters\r\n","A collection designed for holding elements prior to processing.":"在处理之前设计用于保存元素的集合。\r\n","Get the decomposition mode of this Collator. -or- Set the decomposition mode of this Collator.":"获取此碰撞器的分解模式。 - 或设置该碰撞器的分解模式。\r\n","Returns the illegal code point as defined by ":"返回定义的非法代码点\r\n","java.util.concurrent.ConcurrentLinkedDeque.push(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.push（java.lang.object）\r\n","java.security.spec.RSAPrivateCrtKeySpec.getPublicExponent()":"java.security.spec.rsaprivatecrtkeyspec.getpublicexponent（）\r\n","java.nio.file.attribute.AttributeView.name()":"java.nio.file.attribute.attributeview.name（）\r\n","java.util.Collections.newSetFromMap(java.util.Map)":"java.util.collections.newsetfrompap（java.util.map）\r\n","Creates a FieldPosition object for the given field.":"为给定字段创建一个字段置对象。\r\n","java.util.Locale.CANADA_FRENCH":"java.util.locale.canada_french\r\n","A specification of ":"一个规格\r\n","java.sql.Timestamp.setNanos(int)":"java.sql.timestamp.setnanos（int）\r\n","java.util.Arrays.binarySearch(char[], int, int, char)":"java.util.arrays.binarysearch（char []，int，int，char）\r\n","Refreshes/reloads the policy configuration.":"刷新/重新加载策略配置。\r\n","Adds the specified component to the end of this vector,\n            increasing its size by one.":"将指定的组件添加到该向量的末尾，\r\n            将其大小增加一个。\r\n","Returns a view of the portion of this list between\n            ":"返回此列表之间的视图\r\n            \r\n","java.sql.Statement.setEscapeProcessing(boolean)":"java.sql.statement.setescapeprocessing（boolean）\r\n","An exception indicating one of a variety of problems encountered when\n            validating a certification path.":"一个例外，指示当\r\n            验证认证路径。\r\n","ArrayBlockingQueue":"Arrayblockingqueue\r\n","Create a new date format.":"创建新的日期格式。\r\n","Queue.add":"queue.add\r\n","if encoding the subject fails.\n":"如果编码主题失败。\r\n\r\n","java.util.LinkedHashMap.LinkedHashMap(int)":"java.util.linkedhashmap.linkedhashmap（int）\r\n","java.util.Arrays.parallelSort(java.lang.Comparable[], int, int)":"java.util.arrays.parallelsort（java.lang.comparable []，int，int）\r\n","java.sql.ResultSet.getFloat(int)":"java.sql.Resultset.getFloat（int）\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","This MessageDigest class provides applications the functionality of a\n            message digest algorithm, such as SHA-1 or SHA-256.":"此MessagedIgest类提供应用程序的功能\r\n            消息消化算法，例如SHA-1或SHA-256。\r\n","java.security.cert.X509CertSelector.setSubject(java.lang.String)":"java.security.cert.x509certselector.setsubject（java.lang.string）\r\n","java.sql.ResultSet.updateObject(java.lang.String, java.lang.Object, int)":"java.sql.Resultset.updateObject（java.lang.string，java.lang.object，int）\r\n","Changes the parse style to be case sensitive for the remainder of the formatter.":"将解析样式更改为对格式的其余部分敏感。\r\n","Returns the SQL type name of the entries in this array's underlying\n SQL array.":"返回此数组的下面的条目的SQL类型名称\r\n SQL数组。\r\n","java.text.Collator.hashCode()":"java.text.collat​​or.hashcode（）\r\n","java.security.MessageDigestSpi.engineDigest(byte[], int, int)":"java.security.messagedigestspi.enginedigest（byte []，int，int）\r\n","java.nio.file.StandardCopyOption":"java.nio.file.standardcopyoption\r\n","Sets the specified algorithm parameter to the specified\n            value.":"将指定算法参数设置为指定的\r\n            价值。\r\n","java.sql.ResultSet.updateBinaryStream(java.lang.String, java.io.InputStream, long)":"java.sql.Resultset.updatebinarystream（java.lang.string，java.io.inputstream，long）\r\n","Inserts the specified element at the tail of this queue.":"将指定元素插入此队列的尾部。\r\n","corePoolSize ":"CorePoolsize\r\n","java.security.interfaces.RSAMultiPrimePrivateCrtKey.serialVersionUID":"java.security.interfaces.rsamultiprimeprivatecrtkey.serialversionuid\r\n","Compares the value of two ":"比较两个的值\r\n","java.util.PriorityQueue.PriorityQueue(java.util.PriorityQueue)":"java.util.priorityqueue.priorityqueue（java.util.priorityqueue）\r\n","Updates the value of the read-only attribute.":"更新仅读取属性的值。\r\n","Reads the next attribute in the stream and returns it as a <code>float</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> float </code>\r\n            在Java编程语言中。\r\n","java.sql.Statement.execute(java.lang.String, int)":"java.sql.statement.execute（java.lang.string，int）\r\n","Returns the encoded form of this certification path, using the\n            specified encoding.":"返回此认证路径的编码形式，使用\r\n            指定的编码。\r\n","Sets the designated parameter to the given <code>String</code> object.":"将指定的参数设置为给定的<code> String </code>对象。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a  stream of\n            uninterpreted bytes.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为流\r\n            未解释的字节。\r\n","java.util.LinkedList.push(java.lang.Object)":"java.util.linkedlist.push（java.lang.Object）\r\n","Return a PermissionCollection object containing the set of\n            permissions granted to the specified ProtectionDomain.":"返回一个包含该集合的许可汇总对象\r\n            授予指定保护区的许可。\r\n","java.security.interfaces.DSAKeyPairGenerator.initialize(java.security.interfaces.DSAParams, java.security.SecureRandom)":"java.security.interfaces.dsakeypairgenerator.initialize（java.security.interfaces.dsaparams，java.security.securerandom）\r\n","Returns the principal component.":"返回主组件。\r\n","java.security.cert.X509CertSelector.setSubjectKeyIdentifier(byte[])":"java.security.cert.x509certselector.setsubjectKeyidentifier（byte []）\r\n","java.util.Currency.getDisplayName()":"java.util.currency.getDisplayname（）\r\n","Parameters used as input for the LDAP ":"参数用作LDAP的输入\r\n","java.security.KeyFactorySpi.engineGeneratePrivate(java.security.spec.KeySpec)":"java.security.keyfactoryspi.EngineGeneratePrivate（java.security.spec.keyspec）\r\n","java.util.Date.setYear(int)":"java.util.date.setyear（int）\r\n","Useful constant for AM_PM field alignment.":"用于AM_PM字段对齐的有用常数。\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object）\r\n","java.security.cert.X509CertSelector.setSubject(javax.security.auth.x500.X500Principal)":"java.security.cert.x509certselector.setsubject（javax.security.auth.x500.x500 principal）\r\n","java.util.Scanner.useLocale(java.util.Locale)":"java.util.scanner.uselocale（java.util.locale）\r\n"," for later retrieval by the\n            ":" 以后再检索\r\n            \r\n","Retrieves whether this database supports using a column that is\n            not in the <code>SELECT</code> statement in an\n            <code>ORDER BY</code> clause.":"检索该数据库是否支持使用列\r\n            不在<code>中选择</code>语句\r\n            <代码> </code>子句订购。\r\n","SQLException":"sqlexception\r\n","java.security.Signature.update(byte[])":"java.security.signature.update（byte []）\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.list()":"java.nio.file.attribute.userdefinedfileattributeview.list（）\r\n","Defines access modes used to test the accessibility of a file.":"定义用于测试文件可访问性的访问模式。\r\n","Returns the hash code of a non-":"返回非 - \r\n","#next":"＃下一个\r\n","The elements of the vector.":"向量的要素。\r\n","Thrown by various accessor methods to indicate that the element being requested\n            does not exist.":"通过各种访问者方法抛出，以指示要请求的元素\r\n            不存在。\r\n","Pushes an item onto the top of this stack.":"将项目推到该堆栈的顶部。\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.lang.String, int, java.util.Map, java.lang.Throwable)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.lang.string，java.lang.string，int，int，java.util.map，java.lang.lang.throwable）\r\n","java.security.spec.DSAParameterSpec.getP()":"java.security.spec.dsaparameterspec.getp（）\r\n","Get an unmodifiable Set of all services supported by\n            this Provider.":"获取一套不可修改的所有服务集\r\n            这个提供商。\r\n","Set a new string over which to iterate.":"设置一个新的字符串，以迭代。\r\n","Translates a key object, whose provider may be unknown or potentially\n            untrusted, into a corresponding key object of this key factory.":"翻译一个关键对象，其提供商可能未知或可能\r\n            不受信任，进入该密钥工厂的相应关键对象。\r\n","java.util.Formatter.Formatter(java.io.File, java.lang.String, java.util.Locale)":"java.util.formatter.formatter（java.io.file，java.lang.string，java.util.locale）\r\n","AccessControlException":"AccessControlexception\r\n","java.util.GregorianCalendar.computeTime()":"java.util.gregoriancalendar.computetime（）\r\n","java.security.cert.CertPath":"java.security.cert.certpath\r\n","if this connection is closed, or there's a problem getting\n the property.\n":"如果关闭此连接，或者有问题\r\n 属性。\r\n\r\n","An AttributedString holds text and related attribute information.":"属性串包含文本和相关属性信息。\r\n","Returns the comparator used to compare keys in this sorted map, or null if the natural\n ordering is in use.":"返回用于比较此排序地图中键的比较器，如果自然\r\n 订购正在使用。\r\n","Appends the element, if not present.":"附加元素，如果不存在。\r\n","java.text.DecimalFormat.setNegativePrefix(java.lang.String)":"java.text.decimalformat.setnegativeprefix（java.lang.string）\r\n","Returns an array of all installed locales.":"返回所有已安装的语言环境的数组。\r\n","Returns a set backed by the specified map.":"返回由指定地图备份的集合。\r\n","Sorts the specified range of the array into ascending numerical order.":"将阵列的指定范围分为上升的数值顺序。\r\n","java.security.SignatureSpi.engineSetParameter(java.security.spec.AlgorithmParameterSpec)":"java.security.signaturespi.EngineseTparameter（java.security.spec.algorithmparameterspec）\r\n","Returns a list of matching ":"返回匹配列表\r\n","Returns a SecureRandom object that implements the specified\n            Random Number Generator (RNG) algorithm.":"返回实现指定的验证对象\r\n            随机数生成器（RNG）算法。\r\n","Constructs a deque containing the elements of the specified\n            collection, in the order they are returned by the collection's\n            iterator.":"构建包含指定元素的deque\r\n            收集，按照收藏的顺序归还它们\r\n            迭代器。\r\n","java.time.format.DateTimeFormatterBuilder.parseCaseInsensitive()":"java.time.format.datetimeformatterbuilder.parsecaseinsististive（）\r\n","Returns the provider of this certificate factory.":"返回该证书工厂的提供商。\r\n","if the specified algorithm is not available":"如果没有指定的算法\r\n","java.util.TimeZone.setID(java.lang.String)":"java.util.timezone.setid（java.lang.string）\r\n","java.security.AlgorithmParameters.getAlgorithm()":"java.security.algorithmparameters.getAlgorithm（）\r\n","java.util.Arrays.toString(java.lang.Object[])":"java.util.arrays.tostring（java.lang.object []）\r\n","Reports whether this driver is a genuine JDBC\n            Compliant<sup><font size=-2>TM</font></sup> driver.":"报告该驱动程序是否是真正的JDBC\r\n            合规<sup> <font size = -2> tm </font> </sup>驱动程序。\r\n"," with the specified present non-null value.":" 带有指定的当前非零值。\r\n","java.util.Arrays.toString(short[])":"java.util.arrays.tostring（short []）\r\n","java.security.interfaces.ECPublicKey.serialVersionUID":"java.security.interfaces.ecpublickey.serialversionuid\r\n","Determines if the given calendar field has a value set,\n            including cases that the value has been set by internal fields\n            calculations triggered by a <code>get</code> method call.":"确定给定日历字段是否具有值集，\r\n            包括该值已由内部字段设置的案例\r\n            由<code> get </code>方法调用触发的计算。\r\n","Constructs a new, empty linked hash set with the specified initial\n            capacity and the default load factor (0.":"构建一个新的，空的链接哈希集，并带有指定的初始\r\n            容量和默认负载因子（0。\r\n","The instances of this inner class are used as attribute keys and values\n in ":"此内类的实例用作属性密钥和值\r\n 在\r\n","java.util.concurrent.CountedCompleter.getRoot()":"java.util.concurrent.countedcompleter.getRoot（）\r\n","Retrieves whether or not a visible row insert can be detected\n            by calling the method <code>ResultSet.":"检索是否可以检测到可见的行插入物\r\n            通过调用方法<code>结果集。\r\n","java.util.concurrent.ForkJoinTask.getPool()":"java.util.concurrent.forkjointask.getpool（）\r\n","java.sql.Connection.setClientInfo(java.lang.String, java.lang.String)":"java.sql.connection.setclientinfo（java.lang.string，java.lang.string）\r\n"," with\n            the default parameter values (an empty and immutable\n            ":" 和\r\n            默认参数值（一个空的和不可变的\r\n            \r\n","java.util.HashMap.clone()":"java.util.hashmap.clone（）\r\n","java.util.concurrent.CopyOnWriteArrayList.contains(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.contains（java.lang.object）\r\n","Returns a new CompletionStage that is already completed with\n            the given value and supports only those methods in\n            interface ":"返回一个已完成的新完成阶段\r\n            给定值并仅支持这些方法\r\n            界面\r\n","Searches a range of\n            the specified array for the specified object using the binary\n            search algorithm.":"搜索一系列\r\n            使用二进制的指定对象的指定数组\r\n            搜索算法。\r\n","java.text.DateFormatSymbols.DateFormatSymbols()":"java.text.dateformatsymbols.dateformatsymbols（）\r\n","Returns the type of ":"返回类型\r\n","java.time.format.DateTimeFormatterBuilder.appendOffsetId()":"java.time.format.datetimeformatterbuilder.appendoffsetid（）\r\n","Returns a parameter object for the specified algorithm.":"返回指定算法的参数对象。\r\n","java.security.AlgorithmParameters.toString()":"java.security.algorithmparameters.tostring（）\r\n","java.util.concurrent.BlockingDeque.contains(java.lang.Object)":"java.util.concurrent.blockingdeque.contains（java.lang.object）\r\n","Attempts to compute a mapping for the specified key and its\n            current mapped value (or ":"尝试计算指定键及其的映射\r\n            当前映射值（或\r\n","java.nio.file.attribute.AclFileAttributeView.name()":"java.nio.file.attribute.aclfileattributeview.name（）\r\n","The interface to an RSA public or private key.":"RSA公共或私钥的接口。\r\n","java.util.StringTokenizer.StringTokenizer(java.lang.String)":"java.util.stringtokenizer.stringtokenizer（java.lang.string）\r\n","Retrieves the vendor-specific exception code\n            for this <code>SQLException</code> object.":"检索特定供应商的异常代码\r\n            对于此<code> sqlexception </code>对象。\r\n"," if this task completed without throwing an\n            exception and was not cancelled.":" 如果此任务完成而不投掷\r\n            例外，没有被取消。\r\n","if an unusable filter is supplied.":"如果提供了不可用的过滤器。\r\n","java.util.Arrays.copyOfRange(int[], int, int)":"java.util.arrays.copyofrange（int []，int，int）\r\n","java.security.spec.ECFieldF2m.getMidTermsOfReductionPolynomial()":"java.security.spec.ecfieldf2m.getMidterMidtermsofReductionpolynomial（）\r\n","if a database error happens or if the SQL statement does not\n             produce a ":"如果发生数据库错误或SQL语句不\r\n             产生\r\n","java.util.concurrent.ConcurrentHashMap.reduce(long, java.util.function.BiFunction, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reduce（long，java.util.function.bifunction，java.util.function.bifunction.bifunction）\r\n"," object. -or- Sets the hour of this ":" 目的。 - 或 - 设置这个小时\r\n"," if this map should remove its eldest entry.":" 如果此地图应删除其长期条目。\r\n"," objects in natural\n            order.":" 天然中的物体\r\n            命令。\r\n","java.sql.CallableStatement.getString(java.lang.String)":"java.sql.callablestatement.getstring（java.lang.string）\r\n","Formats a double to produce a string.":"格式化双重生产字符串。\r\n",", translating any checked exceptions\n            encountered into ":"，翻译任何检查的异常\r\n            遇到\r\n","Returns the <code>Currency</code> instance for the country of the\n            given locale.":"返回<code>货币</code>实例\r\n            给定的地方。\r\n","Returns the first (lowest) key currently in this map.":"返回此地图中当前的第一个（最低）密钥。\r\n","Retrieves whether this database supports invoking user-defined or vendor functions\n            using the stored procedure escape syntax.":"检索此数据库是否支持调用用户定义或供应商功能\r\n            使用存储过程逃脱语法。\r\n","Subscription\n            Subscription":"订阅\r\n            订阅\r\n","Characteristic value signifying that the element source cannot be\n            structurally modified; that is, elements cannot be added, replaced, or\n            removed, so such changes cannot occur during traversal.":"特征值表示元素源不能为\r\n            结构修改；也就是说，元素无法添加，更换或\r\n            删除，因此在遍历过程中不会发生这种变化。\r\n","java.util.concurrent.ConcurrentSkipListMap.merge(java.lang.Object, java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrentskiplistmap.merge（java.lang.object，java.lang.object，java.util.function.bifunction）\r\n"," instance).":" 实例）。\r\n","java.text.Format.format(java.lang.Object)":"java.text.format.format（java.lang.object）\r\n","The class fingerprint that is set to indicate serialization\n            compatibility with a previous version of the class.":"设置为序列化的类指纹\r\n            与以前的类的兼容性。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String, java.lang.Throwable)":"java.sql.sqlintegrityConstrationContrationException.SQLINTEGRITYCONDRANTVIOLATIONEXCEPTION（JAVA.LANG.STRING，JAVA.LANG.LANG.THROWABLE）\r\n","java.util.NavigableSet.higher(java.lang.Object)":"java.util.navigableset.higher（java.lang.Object）\r\n","toIndex":"TOINDEX\r\n","java.util.concurrent.CopyOnWriteArraySet.spliterator()":"java.util.concurrent.copyonwritearrayset.spliterator（）\r\n"," is thrown when one or more client info properties\n            could not be set on a <code>Connection</code>.":" 当一个或多个客户端信息属性被抛弃\r\n            无法在<code>连接</code>上设置。\r\n","ResourceBundle":"ResourceBundle\r\n","java.util.concurrent.ConcurrentSkipListMap.getOrDefault(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.getordefault（java.lang.object，java.lang.object）\r\n","Constructs a new formatter with the specified file, charset, and\n            locale.":"使用指定文件，charset和\r\n            语言环境。\r\n","Imports the specified parameters and decodes them according to the\n            primary decoding format for parameters.":"导入指定的参数并根据\r\n            参数的主要解码格式。\r\n","if an error occurs accessing the database or the database\n             does not support batch updates.\n":"如果发生错误访问数据库或数据库\r\n             不支持批处理更新。\r\n\r\n","The interface to a DSA public or private key.":"DSA公共或私钥的接口。\r\n","java.security.cert.CertPathBuilderException.CertPathBuilderException()":"java.security.cert.certpathbuilderexception.certpathbuilderexception（）\r\n","java.util.BitSet.nextSetBit(int)":"java.util.bitset.nextsetbit（int）\r\n","java.security.cert.CertificateNotYetValidException.CertificateNotYetValidException(java.lang.String)":"java.security.cert.certificatificatyetvalidexception.certificatenotyetvalidexception（java.lang.string）\r\n","The <code>Collator</code> class performs locale-sensitive\n            <code>String</code> comparison.":"<code>碰撞器</code>类执行环境敏感\r\n            <code>字符串</code>比较。\r\n","Returns a comparator that compares ":"返回比较的比较器\r\n","Copies all of the mappings from the specified Map to this provider.":"将所有映射从指定地图复制到该提供商。\r\n","if parsing fails.":"如果解析失败。\r\n","java.util.Locale.FRENCH":"java.util.locale.french\r\n","java.util.ListIterator.previous()":"java.util.listiterator.previous（）\r\n","Returns the name of this file store.":"返回此文件存储的名称。\r\n","java.util.concurrent.CompletableFuture.failedFuture(java.lang.Throwable)":"java.util.concurrent.completablefuture.failedfuture（java.lang.throwable）\r\n","Copies the specified array, truncating or padding with nulls (if necessary)\n            so the copy has the specified length.":"复制指定数组，用空的截断或填充（如有必要）\r\n            因此副本具有指定的长度。\r\n","java.security.cert.CertificateRevokedException.getAuthorityName()":"java.security.cert.certificaterevokedexception.getAuthorityName（）\r\n","Checks if the value is within the valid range.":"检查值是否在有效范围内。\r\n","if the argument does not include a valid time\n             value.\n":"如果参数不包括有效时间\r\n             价值。\r\n\r\n","Returns the value of the bit with the specified index.":"用指定的索引返回位值。\r\n","java.sql.PreparedStatement.setArray(int, java.sql.Array)":"java.sql.preparedstatement.setarray（int，java.sql.array）\r\n","Does this transition represent a gap in the local time-line.":"这种过渡是否代表本地时间表中的差距。\r\n","java.security.cert.X509CRL.X509CRL()":"java.security.cert.x509crl.x509crl（）\r\n","Compares two digests for equality.":"比较两种平等的摘要。\r\n"," is negative or greater than the\n             field count of ":" 负数或大于\r\n             现场计数\r\n","java.security.KeyFactory.translateKey(java.security.Key)":"java.security.keyfactory.translatekey（java.security.key）\r\n","java.util.Comparator.thenComparingDouble(java.util.function.ToDoubleFunction)":"java.util.comparator.thencomparingdouble（java.util.function.todoublefunction）\r\n","java.sql.ResultSet.wasNull()":"java.sql.Resultset.wasnull（）\r\n","java.security.interfaces.ECPrivateKey.getS()":"java.security.interfaces.ecprivatekey.gets（）\r\n","java.util.concurrent.CancellationException.CancellationException(java.lang.String)":"java.util.concurrent.cancellationException.cancellationException（java.lang.string）\r\n","java.nio.file.NotLinkException":"java.nio.file.notlinkexception\r\n","java.util.UUID.version()":"java.util.uuid.version（）\r\n","Sorts the specified array of objects into ascending order, according\n            to the Comparable natural ordering of its elements.":"根据\r\n            适合其元素的可比自然顺序。\r\n","Constructs a <code>SQLTimeoutException</code> object\n             with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqltimeoutexception </code>对象\r\n             给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Creates a DecimalFormat using the given pattern and the symbols\n            for the default ":"使用给定模式和符号创建一个十分态图\r\n            对于默认值\r\n","java.text.NumberFormat":"java.text.numberformat\r\n","if parsing fails.\n":"如果解析失败。\r\n\r\n","Reads an SQL <code>ARRAY</code> value from the stream and returns it as an\n            <code>Array</code> object in the Java programming language.":"从流中读取SQL <code> array </code>值\r\n            <code>数组</code> Java编程语言中的对象。\r\n","Returns the CRT exponent of the primet ":"返回PRIMET的CRT指数\r\n","An exception indicating one of a variety of problems encountered when\n            building a certification path with a ":"一个例外，指示当\r\n            用A构建认证路径\r\n","java.security.cert.CertPath.CertPath(java.lang.String)":"java.security.cert.certpath.certpath（java.lang.string）\r\n","java.time.format.DecimalStyle.getZeroDigit()":"java.time.format.decimalstyle.getzerodigit（）\r\n","Returns the name of the encoding format associated with this\n            key specification.":"返回与此关联的编码格式的名称\r\n            关键规格。\r\n","java.security.cert.X509CertSelector.getSerialNumber()":"java.security.cert.x509certselector.getSerialNumber（）\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.lang.String, int, java.util.Map)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.lang.string，java.lang.string，int，int，java.util.map）\r\n","java.sql.CallableStatement.setNCharacterStream(java.lang.String, java.io.Reader)":"java.sql.callablestatement.setncharacterstream（java.lang.string，java.io.reader）\r\n","Retrieves whether this database supports the ANSI92 entry level SQL\n            grammar.":"检索此数据库是否支持ANSI92入门级SQL\r\n            语法。\r\n","java.security.Provider.removeService(java.security.Service)":"java.security.provider.removeservice（java.security.service）\r\n","java.nio.file.ProviderMismatchException":"java.nio.file.providermismatchException\r\n","Retrieves whether the current user can use all the tables returned\n            by the method <code>getTables</code> in a <code>SELECT</code>\n            statement.":"检索当前用户是否可以使用返回的所有表\r\n            通过方法<code> gettables </code>在<code>中选择</code>\r\n            陈述。\r\n","If the specified key is not already associated with a value (or is mapped\n            to ":"如果指定的密钥尚未与值关联（或映射\r\n            至\r\n","Adds an ACL entry to this ACL.":"在此ACL中添加了ACL条目。\r\n","Retrieves the first ":"检索第一个\r\n","java.text.Collator.setDecomposition(int)":"java.text.collat​​or.setDecomposition（int）\r\n","java.security.SecureRandomSpi.engineNextBytes(byte[])":"java.security.securerandomspi.enginenextbytes（byte []）\r\n","Constructs a PKCS12 attribute from its ASN.":"从其ASN构造PKCS12属性。\r\n",", starting at\n            ":"， 开始于\r\n            \r\n","Clears all the warnings reported on this <code>Statement</code>\n            object.":"清除此<code>语句</code>上报告的所有警告\r\n            目的。\r\n","PSSParameterSpec":"PSSPARAMETERSPEC\r\n","FileAttributeView#name name":"FileatTributeView＃名称名称\r\n","java.util.Objects.isNull(java.lang.Object)":"java.util.objects.isnull（java.lang.object）\r\n"," instance: the elements\n            themselves are not cloned.":" 实例：元素\r\n            自己没有克隆。\r\n","java.security.cert.CertStore.getDefaultType()":"java.security.cert.certstore.getDefaultType（）\r\n","Returns the name of this JDBC driver.":"返回此JDBC驱动程序的名称。\r\n","java.util.NavigableMap.subMap(java.lang.Object, boolean, java.lang.Object, boolean)":"java.util.navigablemap.submap（java.lang.object，boolean，java.lang.object，boolean）\r\n","java.util.Comparator.reverseOrder()":"java.util.comparator.reverseorder（）\r\n","Returns a copy of this formatter with a new DecimalStyle.":"返回使用新的十分态的格式化器的副本。\r\n","Returns the hour represented by this ":"返回由此代表的时间\r\n","This is the exception for invalid Keys (invalid encoding, wrong\n            length, uninitialized, etc).":"这是无效键的例外（编码无效，错误\r\n            长度，非初始化等）。\r\n","java.util.Formatter.close()":"java.util.formatter.close（）\r\n","java.time.format.DateTimeFormatterBuilder.appendLocalized(java.time.format.FormatStyle, java.time.format.FormatStyle)":"java.time.format.datetimeformatterbuilder.appendlocalized（java.time.format.format.formatstyle，java.time.format.format.formatstyle）\r\n","java.security.spec.PSSParameterSpec.getTrailerField()":"java.security.spec.pssparameterspec.gettrailerfield（）\r\n","Retrieves whether this database supports using a column that is\n            not in the <code>SELECT</code> statement in a\n            <code>GROUP BY</code> clause.":"检索该数据库是否支持使用列\r\n            不在<code>中选择</code>语句\r\n            </code> </code>子句组。\r\n","java.util.Map.equals(java.lang.Object)":"java.util.map.equals（java.lang.Object）\r\n","Resolves a deserialized instance to the correct constant attribute.":"将一个应对实例解析到正确的常数属性。\r\n"," with the specified element (optional operation).":" 带有指定元素（可选操作）。\r\n","Returns the index of the nearest bit that is set to ":"返回设置为最近位的索引\r\n","java.sql.Timestamp.valueOf(java.lang.String)":"java.sql.timestamp.valueof（java.lang.string）\r\n","Gets a security property value.":"获取安全属性值。\r\n","java.sql.CallableStatement.registerOutParameter(java.lang.String, int, java.lang.String)":"java.sql.callablestatement.registeroutparameter（java.lang.string，int，java.lang.string）\r\n","java.time.format.DateTimeFormatterBuilder.toFormatter()":"java.time.format.datetimeformatterbuilder.toformatter（）\r\n"," thrown for the SQLState\n            class value '":" 为SQLSTATE投掷\r\n            班级价值'\r\n","java.util.HashMap.HashMap()":"java.util.hashmap.hashmap（）\r\n","java.nio.file.attribute.FileTime.from(long, java.util.concurrent.TimeUnit)":"java.nio.file.attribute.filetime.from（long，java.util.concurrent.timeunit）\r\n","java.util.concurrent.CountedCompleter.helpComplete(int)":"java.util.concurrent.countedcompleter.helpcomplete（int）\r\n","java.util.TreeSet.last()":"java.util.treeset.last（）\r\n","java.util.concurrent.ForkJoinTask.invoke()":"java.util.concurrent.forkjointask.invoke（）\r\n","java.sql.CallableStatement.getTimestamp(int)":"java.sql.callablestatement.gettimestamp（int）\r\n","Returns the certificateEquals criterion. -or- Sets the certificateEquals criterion.":"返回证书等式标准。 - 或设置证书等式标准。\r\n","Performs a logical <b>OR</b> of this bit set with the bit set\n            argument.":"执行此位设置的逻辑<b>或</b>，\r\n            争论。\r\n","Gets the designated column's number of digits to right of the decimal point.":"将指定的列的数字数量置于小数点的右侧。\r\n"," name of this time\n            zone with either standard or daylight time, as written in ":" 这个时间的名字\r\n            具有标准时间或日光时间的区域，如书写\r\n","java.util.Arrays.copyOfRange(java.lang.Object[], int, int, java.lang.Class)":"java.util.arrays.copyofrange（java.lang.object []，int，int，java.lang.class）\r\n","java.nio.file.AccessDeniedException":"java.nio.file.AccessDeniedException\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String, java.lang.String, int)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string，java.lang.string，int）\r\n","java.util.concurrent.ConcurrentHashMap.forEach(long, java.util.function.BiFunction, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreach（long，java.util.function.bifunction，java.util.function.consumer）\r\n","Updates the data to be signed or verified\n            using the specified byte.":"更新要签署或验证的数据\r\n            使用指定的字节。\r\n","java.security.cert.PKIXParameters.getCertPathCheckers()":"java.security.cert.pkixparameters.getCertPathcheckers（）\r\n"," object in a ":" 对象\r\n","java.util.Collections.replaceAll(java.util.List, java.lang.Object, java.lang.Object)":"java.util.collections.replaceall（java.util.list，java.lang.object，java.lang.object）\r\n","java.text.NumberFormat.getPercentInstance()":"java.text.numberformat.getPercentInstance（）\r\n","Retrieves whether the current user can call all the procedures\n            returned by the method <code>getProcedures</code>.":"检索当前用户是否可以调用所有过程\r\n            通过方法<code> getProcedures </code>返回。\r\n","subjectUniqueID":"objectuniqueID\r\n","java.text.Collator.compare(java.lang.Object, java.lang.Object)":"java.text.collat​​or.compare（java.lang.object，java.lang.object）\r\n","java.util.concurrent.CountedCompleter.tryComplete()":"java.util.concurrent.countedcompleter.trycomplete（）\r\n","Decomposition mode value.":"分解模式值。\r\n","Opens or creates a file, returning an output stream that may be used to\n            write bytes to the file.":"打开或创建一个文件，返回可以用来用于的输出流\r\n            将字节写入文件。\r\n","Returns the last (highest) element currently in this set.":"返回此集合中当前的最后一个（最高）元素。\r\n","Returns the class of the mismatched argument.":"返回不匹配的论点的类。\r\n","java.sql.Connection.getClientInfo(java.lang.String)":"java.sql.connection.getClientinfo（java.lang.string）\r\n","The interface to an elliptic curve (EC) key.":"椭圆曲线（EC）键的接口。\r\n","java.security.spec.RSAOtherPrimeInfo":"java.security.spec.rsaotherprimeinfo\r\n","Cancels the updates made to the current row in this\n            <code>ResultSet</code> object.":"取消对当前行的更新\r\n            <code> Resultset </code>对象。\r\n","Returns the starting position of the last occurrence of the specified\n            target list within the specified source list, or -1 if there is no such\n            occurrence.":"返回指定的最后一次出现的起始位置\r\n            指定源列表中的目标列表，如果没有这样的目标列表，则-1\r\n            发生。\r\n","java.util.SortedMap.entrySet()":"java.util.sortedmap.entryset（）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>CHAR</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> char </code>。\r\n","java.util.concurrent.Flow":"java.util.concurrent.flow\r\n","Attribute":"属性\r\n","Indicates that this version column is a pseudo column.":"指示此版本列是伪列。\r\n","java.sql.Types.LONGVARBINARY":"java.sql.types.longvarbinary\r\n","Verifies that this certificate was signed using the\n            private key that corresponds to the specified public key.":"验证该证书是使用\r\n            与指定的公钥相对应的私钥。\r\n","A collection that contains no duplicate elements.":"一个不包含重复元素的集合。\r\n","Constructs an AttributedString instance with the given attributed\n            text represented by AttributedCharacterIterator.":"用给定的属性构造一个属性的实例\r\n            由属性characteritator表示的文本。\r\n","This class is used to represent an Identity that can also digitally\n            sign data.":"该类用于表示也可以数字化的身份\r\n            签名数据。\r\n"," with the specified cause.":" 与指定原因。\r\n","if an error occurs during writing to the output.\n":"如果在写入输出期间发生错误。\r\n\r\n"," with the default initial capacity and\n            whose elements are ordered according to the specified comparator.":" 具有默认的初始容量和\r\n            其元素是根据指定比较器排序的。\r\n","java.text.ParsePosition.setErrorIndex(int)":"java.text.parseposition.setErrIndex（int）\r\n","CertPath":"证书\r\n","Hash table based implementation of the ":"基于哈希表的实现\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            year.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            年。\r\n",",\n            beginning after the specified delay.":"，，，，\r\n            从指定的延迟开始。\r\n","Construct a locale from language and country.":"从语言和国家构建一个语言环境。\r\n","java.util.concurrent.ConcurrentSkipListMap.ConcurrentSkipListMap(java.util.Comparator)":"java.util.concurrent.concurrentskiplistmap.concurrentskiplistmap（java.util.comparator）\r\n","java.util.Date.getDay()":"java.util.date.getDay（）\r\n","java.util.concurrent.CompletableFuture.completeOnTimeout(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.completablefuture.completeontimeout（java.lang.object，long，java.util.concurrent.timeunit）\r\n","CertPathValidatorException":"certPathvalidatorexception\r\n","java.util.Date.Date(long)":"java.util.date.date（long）\r\n","java.util.Date.getYear()":"java.util.date.getyear（）\r\n","if the key pair is invalid.":"如果钥匙对无效。\r\n","java.util.ArrayDeque.removeFirst()":"java.util.arraydeque.removefirst（）\r\n","Tells if given path matches this matcher's pattern.":"告诉给定路径是否与此匹配器的模式匹配。\r\n","Constructs a <code>SQLTransientException</code> object\n             with a given <code>reason</code>.":"构造<code> sqltransientException </code>对象\r\n             使用给定的<code>原因</code>。\r\n","java.security.cert.X509Certificate.checkValidity(java.util.Date)":"java.security.cert.x509certificate.checkvality（java.util.date）\r\n","Returns true if this format will parse numbers as integers only. -or- Sets whether or not numbers should be parsed as integers only.":"如果此格式仅作为整数分析，则返回true。 - 或设置是否应仅作为整数解析数字。\r\n","Opens a directory, returning a ":"打开一个目录，返回\r\n","java.util.concurrent.DelayQueue.DelayQueue(java.util.Collection)":"java.util.concurrent.delayqueue.delayqueue（java.util.collection）\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCertificates(java.io.InputStream)":"java.security.cert.certificatefactoryspi.enginegeneratecertificates（java.io.inputstream）\r\n","Prints this property list out to the specified output stream.":"将此属性列表打印到指定的输出流。\r\n","java.sql.DatabaseMetaData.getFunctionColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getFunctionColumns（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","java.sql.RowId.getBytes()":"java.sql.rowid.getbytes（）\r\n","\n            algorithm.":"\r\n            算法。\r\n","This constructor is used for serialization only and should not\n            be used by subclasses.":"该构造函数仅用于序列化，不应\r\n            由子类使用。\r\n","java.sql.DatabaseMetaData.usesLocalFiles()":"java.sql.databasemetadata.useslocalfiles（）\r\n"," if\n            there is no such key.":"如果\r\n            没有这样的钥匙。\r\n","Indicates that this table index is not a clustered\n            index, a hashed index, or table statistics;\n            it is something other than these.":"指示此表索引不是集群\r\n            索引，哈希索引或表统计；\r\n            除了这些之外。\r\n","java.nio.file.InvalidPathException.InvalidPathException(java.lang.String, java.lang.String, int)":"java.nio.file.invalidpathexception.invalidpathexception（java.lang.string，java.lang.string，int）\r\n","java.security.PolicySpi.engineGetPermissions(java.security.ProtectionDomain)":"java.security.policyspi.enginegetpermissions（java.security.protectiondomain）\r\n","java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByGroupName(java.lang.String)":"java.nio.file.attribute.userprincipallookupservice.lookupprincipalbygroupname（java.lang.string）\r\n","java.util.Formatter.format(java.lang.String, java.lang.Object)":"java.util.formatter.format（java.lang.string，java.lang.object）\r\n","Waits if necessary for at most the given time for this future\n            to complete, and then returns its result, if available.":"如有必要，最多可以在此未来的给定时间\r\n            完成，然后返回其结果，如果有的话。\r\n","Returns a set of characteristics of this Spliterator and its\n            elements.":"返回此拆分器及其的一组特征\r\n            元素。\r\n","if decoding the issuer fail.\n":"如果解码发行人失败。\r\n\r\n","java.security.KeyStore.getCreationDate(java.lang.String)":"java.security.keystore.getCreationdate（java.lang.string）\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.Throwable)":"java.sql.sqltransientException.sqltransientException（java.lang.throwable）\r\n","Constructs a new, empty tree map, ordered according to the given\n            comparator.":"构建一个新的空的树地图，根据给定的\r\n            比较器。\r\n"," class, which\n            is used to generate a set of parameters to be used with a certain algorithm.":" 班级，哪个\r\n            用于生成一组参数，用于与某个算法一起使用。\r\n","Returns the key associated with the given alias, using the given\n            password to recover it.":"返回与给定别名关联的密钥，使用给定\r\n            密码以恢复它。\r\n","java.nio.file.spi.FileSystemProvider.newFileSystem(java.nio.file.Path, java.util.Map)":"java.nio.file.spi.filesystemprovider.newfilesystem（java.nio.file.path，java.util.map）\r\n","java.util.Spliterator.hasCharacteristics(int)":"java.util.spliterator.hascharacterics（INT）\r\n","java.security.interfaces.DSAPublicKey.getY()":"java.security.interfaces.dsapublickey.gety（）\r\n","java.security.cert.PKIXRevocationChecker.getOcspExtensions()":"java.security.cert.pkixrevocation checker.getocspextensions（）\r\n","java.util.Date.getTimezoneOffset()":"java.util.date.getTimeZoneOffset（）\r\n","Returns the type of this CRL.":"返回此CRL的类型。\r\n","Returns a (possibly empty) collection view of the certificates read\n            from the given input stream ":"返回证书的（可能为空的）收集视图\r\n            从给定的输入流\r\n","java.nio.file.attribute.PosixFilePermissions.toString(java.util.Set)":"java.nio.file.attribute.posixfilepermissions.tostring（java.util.set）\r\n","java.util.Locale.toString()":"java.util.locale.tostring（）\r\n","java.util.Locale.getScript()":"java.util.locale.getScript（）\r\n","Returns an unmodifiable list containing four elements.":"返回包含四个元素的不可变化列表。\r\n"," describing the CA that served\n            as a trust anchor for the certification path.":" 描述服务的CA\r\n            作为认证路径的信托基础。\r\n","java.nio.charset.StandardCharsets.UTF_16LE":"java.nio.charset.standardcharsets.utf_16le\r\n","java.time.zone.ZoneRules":"Java.Time.Zone.Zonerules\r\n","Generates a private key object from the provided key\n            specification (key material).":"从提供的密钥中生成私钥对象\r\n            规格（关键材料）。\r\n","java.sql.ResultSetMetaData.getColumnDisplaySize(int)":"java.sql.ResultSetMetadata.getColumnDisplaysize（int）\r\n","baseName":"Basename\r\n","Retrieves a description of the primary key columns that are\n            referenced by the given table's foreign key columns (the primary keys\n            imported by a table).":"检索主要键列的描述\r\n            给定表的外键列（主要键）\r\n            由表导入）。\r\n","java.nio.file.spi.FileSystemProvider.getPath(java.net.URI)":"java.nio.file.spi.filesystemprovider.getPath（java.net.uri）\r\n","java.security.InvalidKeyException":"java.security.invalidkeyexception\r\n","java.nio.file.WatchService.poll(long, java.util.concurrent.TimeUnit)":"java.nio.file.watchservice.poll（long，java.util.concurrent.timeunit）\r\n","java.nio.file.Path.iterator()":"java.nio.file.path.iterator（）\r\n","Returns the fallback locale for ":"返回后备地区\r\n"," class\n            which associates a set of additional parameters with the listener.":" 班级\r\n            它将一组其他参数与侦听器相关联。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException()":"java.sql.sqlintegrityConstrityConstrationException.SQLINTEGRITYCONSTRITYCONDRATENTVIOLATION EXCEPTION（）\r\n","java.sql.Clob":"java.sql.clob\r\n","java.security.AlgorithmParametersSpi.engineToString()":"java.security.algorithmparametersspi.enginetostring（）\r\n","java.sql.CallableStatement.getDate(java.lang.String, java.util.Calendar)":"java.sql.callablestatement.getdate（java.lang.string，java.util.calendar）\r\n","Publisher Publishers":"发布者出版商\r\n","Gets a copy of the date and time format symbols of this date format. -or- Sets the date and time format symbols of this date format.":"获取此日期格式的日期和时间格式符号的副本。 - 或设置此日期格式的日期和时间格式符号。\r\n","java.util.ArrayDeque.ArrayDeque()":"java.util.arraydeque.arraydeque（）\r\n","java.util.Locale.getISOCountries()":"java.util.locale.getisocountries（）\r\n","Returns the owner of a file.":"返回文件的所有者。\r\n","java.time.format.DecimalStyle.withDecimalSeparator(char)":"java.time.format.decimalstyle.withdecimalseparator（char）\r\n","java.util.concurrent.CopyOnWriteArrayList.listIterator(int)":"java.util.concurrent.copyonwritearraylist.listiterator（int）\r\n","Returns a key-value mapping associated with the least key\n            strictly greater than the given key, or ":"返回与最小键关联的键值映射\r\n            严格大于给定的钥匙，或\r\n","Formats the given <code>Date</code> into a date/time string and appends\n            the result to the given <code>StringBuffer</code>.":"格式化给定的<code>日期</code>中的日期/时间字符串并附加\r\n            给定<code> StringBuffer </code>的结果。\r\n","java.security.spec.InvalidKeySpecException":"java.security.spec.invalidkeyspecexception\r\n","java.util.Scanner.hasNextByte(int)":"java.util.scanner.hasnextbyte（int）\r\n","Returns the subjectPublicKeyAlgID criterion. -or- Sets the subjectPublicKeyAlgID criterion.":"返回主题publickeyalgid标准。 - 或设置主题keyalgid标准。\r\n","java.security.cert.CertPathValidator.getDefaultType()":"java.security.cert.certpathvalidator.getDefaultType（）\r\n","Moves the cursor froward one row from its current position.":"将光标Froward One行从其当前位置移动。\r\n","Blocks until all tasks have completed execution after a shutdown\n            request, or the timeout occurs, or the current thread is\n            interrupted, whichever happens first.":"块，直到关闭后所有任务完成执行\r\n            请求或超时发生，或者当前线程为\r\n            中断，以先到者为准。\r\n","java.util.FormattableFlags.UPPERCASE":"java.util.formattableflags.uppercase\r\n","A (transparent) specification of the key material\n            that constitutes a cryptographic key.":"关键材料的（透明）规范\r\n            这构成了一个加密密钥。\r\n","Parses text from the beginning of the given string to produce an object.":"从给定字符串的开头解析文本以产生对象。\r\n","java.security.SignatureSpi.engineInitSign(java.security.PrivateKey)":"java.security.signaturespi.EngineInitsign（java.security.privatekey）\r\n","embeddings.length ":"embeddings.length\r\n","java.sql.Connection.prepareStatement(java.lang.String)":"java.sql.connection.preparestatement（java.lang.string）\r\n","java.util.NavigableMap.descendingMap()":"java.util.navigablemap.descendingmap（）\r\n","Cumulates, in parallel, each element of the given array in place,\n            using the supplied function.":"并行累积给定数组的每个元素，\r\n            使用提供的功能。\r\n","java.sql.PreparedStatement.setBytes(int, byte[])":"java.sql.preparedstatement.setbytes（int，byte []）\r\n","java.util.Calendar.internalGet(int)":"java.util.calendar.internalget（int）\r\n","\n            as its error message string.":"\r\n            作为其错误消息字符串。\r\n","java.security.spec.ECFieldF2m.getReductionPolynomial()":"java.security.spec.ecfieldf2m.getReductionpolynomial（）\r\n","Returns a BigInteger whose i-th bit corresponds to the\n            i-th coefficient of the reduction polynomial for polynomial\n            basis or null for normal basis.":"返回一个Biginteger，我的第三位对应于\r\n            i-多项式还原多项式系数\r\n            正常基础的基础或无效。\r\n"," already has the same ":" 已经有相同的\r\n","Characteristic value signifying that the element source may be safely\n            concurrently modified (allowing additions, replacements, and/or removals)\n            by multiple threads without external synchronization.":"特征值表示元素源可以安全\r\n            同时修改（允许添加，替换和/或拆卸）\r\n            通过无外部同步的多个线程。\r\n","java.security.ProviderException.ProviderException(java.lang.String, java.lang.Throwable)":"java.security.providerexception.providerexception（java.lang.string，java.lang.throwable）\r\n","Returns the index of the first character in the run that has the same\n attributes as the current character.":"返回具有相同的运行中第一个字符的索引\r\n 属性作为当前字符。\r\n","java.sql.ResultSet.getTime(java.lang.String, java.util.Calendar)":"java.sql.Resultset.getTime（java.lang.string，java.util.calendar）\r\n"," with the\n            default parameter values (server name \"localhost\", port 389).":" 与\r\n            默认参数值（服务器名称“ localhost”，端口389）。\r\n","java.util.Collections.disjoint(java.util.Collection, java.util.Collection)":"java.util.collections.disjoint（java.util.collection，java.util.collection）\r\n","java.security.acl.Permission":"java.security.acl.permission\r\n","java.util.TreeMap.lowerKey(java.lang.Object)":"java.util.treemap.lowerkey（java.lang.Object）\r\n","java.security.cert.CertPathBuilder":"java.security.cert.certpathbuilder\r\n","Reads a file's attributes as a bulk operation.":"将文件的属性读取为批量操作。\r\n","java.nio.file.SimpleFileVisitor.postVisitDirectory(java.lang.Object, java.io.IOException)":"java.nio.file.simplefilevisitor.postvisitdirectory（java.lang.object，java.io.io.ioexception）\r\n","java.security.cert.X509Certificate.getSubjectAlternativeNames()":"java.security.cert.x509certificate.getSubjectalternativiNAMES（）\r\n","Attempts to stop all actively executing tasks, halts the\n            processing of waiting tasks, and returns a list of the tasks\n            that were awaiting execution.":"试图停止所有积极执行任务，停止\r\n            处理等待任务，并返回任务列表\r\n            正在等待执行。\r\n","java.util.Calendar.FIELD_COUNT":"java.util.calendar.field_count\r\n","java.util.Scanner.Scanner(java.io.File, java.lang.String)":"Java.util.Scanner.Scanner（Java.io.file，Java.lang.String）\r\n","If the specified key is not already associated with a\n            (non-null) value, associates it with the given value.":"如果指定的密钥尚未与\r\n            （非零）值，将其与给定值相关联。\r\n","Returns a dynamically typesafe view of the specified list.":"返回指定列表的动态typesafe视图。\r\n","java.nio.file.SimpleFileVisitor.SimpleFileVisitor()":"java.nio.file.simplefilevisitor.simplefilevisitor（）\r\n","Constructs with limits and corresponding formats based on the pattern.":"基于模式的限制和相应格式的构造。\r\n","java.security.Provider.merge(java.lang.Object, java.lang.Object, java.util.function.BiFunction)":"java.security.provider.merge（java.lang.Object，java.lang.object，java.util.function.bifunction）\r\n","java.sql.ResultSet.updateDouble(java.lang.String, double)":"java.sql.Resultset.updatedouble（java.lang.string，double）\r\n","Returns the maximum size for a character literal in this database.":"返回该数据库中字符字面的最大大小。\r\n","java.util.concurrent.CopyOnWriteArrayList.listIterator()":"java.util.concurrent.copyonwritearraylist.listiterator（）\r\n","java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate)":"java.security.cert.pkixcertpathchecker.check（java.security.cert.certificate）\r\n","java.text.ChoiceFormat.format(double, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.choiceformat.format（double，java.lang.stringbuffer，java.text.fieldposition）\r\n","java.util.Date.getMinutes()":"java.util.date.getminutes（）\r\n","Retrieves whether, when table correlation names are supported, they\n            are restricted to being different from the names of the tables.":"检索是否支持表相关名称时，它们\r\n            仅限于与表名称不同。\r\n","Returns the current index.":"返回当前索引。\r\n","java.util.List.clear()":"java.util.list.clear（）\r\n","java.text.DateFormat.MILLISECOND_FIELD":"java.text.dateformat.millisecond_field\r\n","java.sql.ResultSet.updateBigDecimal(java.lang.String, java.math.BigDecimal)":"java.sql.Resultset.updatebigdecimal（java.lang.string，java.math.bigdecimal）\r\n","if the entry can not be recovered.":"如果无法恢复条目。\r\n","notBefore":"不在之前\r\n","location > end":"位置>结束\r\n","Returns the path length of the certificate constraints from the ":"返回证书约束的路径长度\r\n","Moves the cursor to the insert row.":"将光标移至插入行。\r\n","java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)":"java.util.stringtokenizer.stringtokenizer（java.lang.string，java.lang.string，boolean）\r\n","Sets the daylight saving time starting year.":"设置夏令从开始年开始。\r\n","An object that encapsulates the value of a file attribute that can be set\n            atomically when creating a new file or directory by invoking the ":"一个封装可以设置文件属性值的对象\r\n            通过调用创建新文件或目录时的原子\r\n","java.security.AccessController.doPrivileged(java.security.PrivilegedAction)":"java.security.accesscontroller.doprivileged（java.security.privilegedAction）\r\n","java.sql.Driver.connect(java.lang.String, java.util.Properties)":"java.sql.driver.connect（java.lang.string，java.util.properties）\r\n","Sets the designated parameter to a <code>java.":"将指定的参数设置为<code> Java。\r\n","Makes all changes made since the previous\n            commit/rollback permanent and releases any database locks\n            currently held by this <code>Connection</code> object.":"做出以来的所有更改\r\n            提交/回滚永久性并发布任何数据库锁\r\n            当前由此<code>连接</code>对象持有。\r\n","An unbounded priority Queue queue based on a priority heap.":"基于优先级堆的无限优先级队列队列。\r\n",", returns the value,\n            otherwise throws ":"，返回值，\r\n            否则投掷\r\n","java.security.Identity.equals(java.lang.Object)":"java.security.Identity.Equals（java.lang.Object）\r\n","Retrieves whether null values are allowed in the designated parameter.":"检索指定参数中是否允许零值。\r\n","java.util.Random.setSeed(long)":"java.util.random.setseed（long）\r\n"," classes defined in this\n            package.":" 在此定义的类\r\n            包裹。\r\n","Sets all the calendar field values and the time value\n            (millisecond offset from the <a href=\"#Epoch\">Epoch</a>) of\n            this <code>Calendar</code> undefined.":"设置所有日历字段值和时间值\r\n            （毫秒偏移<a href=\"#epoch\"> epoch </a>）\r\n            此<code>日历</code>未定义。\r\n","java.time.zone.ZoneOffsetTransitionRule.createTransition(int)":"Java.Time.Zone.ZoneOffSetTransitionRule.CreateTransition（INT）\r\n","Finds the greatest double less than ":"找到比小比\r\n","java.security.KeyManagementException.KeyManagementException(java.lang.String)":"Java.security.KeyManagementException.KeyManagementException（Java.lang.String）\r\n","java.util.TreeSet.pollLast()":"java.util.treeset.polllast（）\r\n","Returns the handler for internal worker threads that terminate\n            due to unrecoverable errors encountered while executing tasks.":"返回终止的内部工人线程的处理程序\r\n            由于执行任务时遇到的错误错误。\r\n","java.sql.DatabaseMetaData.supportsColumnAliasing()":"java.sql.databasemetadata.supportscolumnaliasing（）\r\n","java.util.Base64.getDecoder()":"java.util.base64.getDecoder（）\r\n","Returns the primeExponentP.":"返回PrimeExponentP。\r\n","Tests if this hashtable maps no keys to values.":"测试如果此标签映射没有值的密钥。\r\n","java.util.GregorianCalendar.AD":"java.util.gregoriancalendar.ad\r\n"," with the given\n fieldName and calendar field.":" 与给定\r\n 字段名称和日历字段。\r\n","java.util.concurrent.CompletableFuture.completeAsync(java.util.function.Supplier)":"java.util.concurrent.completablefuture.completeasync（java.util.function.supplier）\r\n","Creates a work-stealing thread pool using the number of\n            Runtime#availableProcessors available processors\n            as its target parallelism level.":"使用数量\r\n            运行时＃可用处理器可用处理器\r\n            作为目标并行性水平。\r\n","java.util.Locale.CANADA":"Java.util.locale.Canada\r\n"," is less than 1\n":" 小于1\r\n\r\n","java.util.Arrays.parallelPrefix(java.lang.Object[], java.util.function.BinaryOperator)":"java.util.arrays.parallelprefix（java.lang.object []，java.util.function.binaryoperator）\r\n","java.text.StringCharacterIterator.StringCharacterIterator(java.lang.String, int, int, int)":"java.text.StringCharacterator.StringCharacterator（Java.lang.String，int，int，int）\r\n","java.util.concurrent.DelayQueue.DelayQueue()":"java.util.concurrent.delayqueue.delayqueue（）\r\n"," object representing this path.":" 代表此路径的对象。\r\n",", or null if the\n resource is not found.":"，或null如果\r\n 找不到资源。\r\n","Returns an enumeration of all identities in this identity scope.":"返回此身份范围中所有身份的列举。\r\n","Retrieves whether this database supports the SQL Integrity\n            Enhancement Facility.":"检索此数据库是否支持SQL完整性\r\n            增强设施。\r\n","Indicates that the data type can be only be used in <code>WHERE</code>\n            search clauses\n            that do not use <code>LIKE</code> predicates.":"指示数据类型只能在</code>的<code>中使用\r\n            搜索条款\r\n            不使用<code>喜欢</code>谓词。\r\n","Constructs a new linked hash set with the same elements as the\n            specified collection.":"构建一个新的链接哈希集，具有与\r\n            指定的集合。\r\n","java.util.Map.of()":"java.util.map.of（）\r\n","Destroys / invalidates the password.":"破坏 /无效密码。\r\n","Returns an immutable set containing eight elements.":"返回一个不变的套件，其中包含八个元素。\r\n","Retrieves whether this database supports subqueries in\n            <code>EXISTS</code> expressions.":"检索此数据库是否支持子查询\r\n            <代码>存在</code>表达式。\r\n","java.sql.CallableStatement.setTime(java.lang.String, java.sql.Time, java.util.Calendar)":"java.sql.callablestatement.settime（java.lang.string，java.sql.time，java.util.calendar）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>FLOAT</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> float </code>。\r\n","java.util.UUID.node()":"java.util.uuid.node（）\r\n","java.text.NumberFormat.getCurrencyInstance()":"java.text.numberformat.getCurrencyInstance（）\r\n","Performs the given action for each remaining element, in the order\n            elements occur when iterating, until all elements have been processed\n            or the action throws an exception.":"按顺序执行每个剩余元素的给定动作\r\n            迭代时发生元素，直到处理所有元素\r\n            或动作引发异常。\r\n","Assigns the specified boolean value to each element of the specified\n            range of the specified array of booleans.":"将指定的布尔值分配给指定的每个元素\r\n            指定布尔值阵列的范围。\r\n","Returns the event kind.":"返回活动类型。\r\n","Retrieves the byte position in the <code>BLOB</code> value\n            designated by this <code>Blob</code> object at which\n            <code>pattern</code> begins.":"检索<code> blob </code>值中的字节位置\r\n            由此<code> blob </code>对象指定\r\n            <code>模式</code>开始。\r\n","java.text.Format.clone()":"java.text.format.clone（）\r\n","CONCURRENT":"同时\r\n","MessageFormat.Field":"MessageFormat.field\r\n","java.util.Spliterator.getComparator()":"java.util.spliterator.getComparator（）\r\n","Inserts the specified element at the end of this deque if it is\n            possible to do so immediately without violating capacity restrictions,\n            returning ":"如果是\r\n            可以立即这样做而不会违反能力限制，\r\n            返回\r\n","java.sql.DatabaseMetaData.supportsSubqueriesInIns()":"java.sql.databasemetadata.supportssubqueriesinins（）\r\n","The interface for a PKCS#1 RSA private key using CRT information values.":"PKCS＃1 RSA私有密钥的接口使用CRT信息值。\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            week number within the current month.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            本月的周数。\r\n","if the specified certificate type is not available at the\n             specified provider.":"如果指定的证书类型在\r\n             指定的提供商。\r\n","Constructs a <code>GregorianCalendar</code> based on the current time\n            in the given time zone with the given locale.":"基于当前时间构建<code> GregorianCalendar </code>\r\n            在给定的时区，给定的位置。\r\n","java.time.format.DecimalStyle.getDecimalSeparator()":"java.time.format.decimalstyle.getDecimalSeparator（）\r\n","Indicates that the nullability of columns is unknown.":"表明列的无效性未知。\r\n","Returns a list of strings of formats according to ":"返回一系列格式列表\r\n","java.security.DigestOutputStream.DigestOutputStream(java.io.OutputStream, java.security.MessageDigest)":"java.security.digestoutputstream.digestoutputstream（java.io.outputstream，java.security.messagedigest）\r\n","java.util.Calendar.THURSDAY":"java.util.calendar.thursday\r\n","Constructs a <code>SQLClientInfoException</code>  Object.":"构造<code> sqlclientInfoException </code>对象。\r\n","java.util.Arrays.parallelSetAll(int[], java.util.function.IntUnaryOperator)":"java.util.arrays.parallesetall（int []，java.util.function.intunaryoperator）\r\n","java.text.DecimalFormatSymbols.getInternationalCurrencySymbol()":"java.text.decimalformatsymbols.getInternationalCurrencySymbol（）\r\n","if the algorithm is ":"如果算法是\r\n","#getCause getCause()":"#getCause getcause（）\r\n","Returns the generator which is also known as the base point.":"返回发电机，也称为基点。\r\n","java.util.concurrent.BlockingDeque.pollFirst(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.pollfirst（long，java.util.concurrent.timeunit）\r\n","InvalidAlgorithmParameterException":"无效的algorithmparameterexception\r\n","equals":"等于\r\n","Returns a name for the locale's language that is appropriate for display to the\n            user.":"返回适合显示的语言语言的名称\r\n            用户。\r\n","Searches the specified array of longs for the specified value using the\n            binary search algorithm.":"搜索使用该指定值的指定数组使用\r\n            二进制搜索算法。\r\n","java.sql.PreparedStatement.setInt(int, int)":"java.sql.preparedstatement.setint（int，int）\r\n","A constant indicating that\n            dirty reads, non-repeatable reads and phantom reads can occur.":"一个常数，表明\r\n            可能会发生肮脏的读数，不可重复的读取和幻影读取。\r\n","java.text.ParseException.getErrorOffset()":"java.text.parseexception.getErroroffset（）\r\n","Gets an unmodifiable list of Strings representing the OBJECT\n            IDENTIFIERs of the ":"获取代表对象的字符串的不可修复列表\r\n            标识符\r\n","java.security.DigestOutputStream":"java.security.digestoutputstream\r\n","java.sql.PreparedStatement.setBigDecimal(int, java.math.BigDecimal)":"java.sql.preparedstatement.setbigdecimal（int，java.math.bigdecimal）\r\n","java.util.Formatter.Formatter(java.io.PrintStream)":"java.util.formatter.formatter（java.io.printstream）\r\n","OptionalDouble":"可选双重\r\n","Constructs a new tree set containing the elements in the specified\n            collection, sorted according to the ":"构造一个新的树集，其中包含指定的元素\r\n            收集，根据\r\n","java.text.DateFormatSymbols.setMonths(java.lang.String[])":"java.text.dateformatsymbols.setmonths（java.lang.string []）\r\n","Indicates that the scope of the best row identifier is\n            the remainder of the current session.":"表示最佳行标识符的范围是\r\n            当前会议的其余部分。\r\n","Key.getFormat()":"key.getFormat（）\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given  <code>reason</code>, <code>SQLState</code>, <code>cause</code>\n            and <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>，<code> sqlstate </code>，<code>原因</code>\r\n            和<code> FailedProperties </code>。\r\n","Replaces the element at the specified position in this list with the\n            specified element (optional operation).":"用该列表中指定位置的元素用\r\n            指定元素（可选操作）。\r\n","Returns true if the connection has not been closed and is still valid.":"如果连接尚未关闭并且仍然有效，则返回true。\r\n"," instance with the\n            specified initial capacity, load factor and ordering mode.":" 带有的实例\r\n            指定的初始容量，负载因子和订购模式。\r\n","java.security.spec.X509EncodedKeySpec.getFormat()":"java.security.spec.x509encodedkeyspec.getFormat（）\r\n","Returns a copy of the info with a new character that represents the decimal point.":"返回具有代表小数点的新字符的信息副本。\r\n","java.util.TreeSet.floor(java.lang.Object)":"java.util.treeset.floor（java.lang.Object）\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n"," interface,\n            with predictable iteration order.":" 界面，\r\n            具有可预测的迭代顺序。\r\n","java.time.temporal.ValueRange.of(long, long, long)":"java.time.temporal.valuerange.of（长，长，长）\r\n"," if\n ":" 如果\r\n \r\n","java.util.Locale.setDefault(java.util.Locale)":"java.util.locale.setdefault（java.util.locale）\r\n","Constructs a SignatureException with no detail message.":"构建一个没有详细信息的签名示威。\r\n"," field indicating the\n            sixth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的六个月在格里高利和朱利安日历中。\r\n","java.security.cert.CertificateExpiredException.CertificateExpiredException()":"java.security.cert.certificate expiredException.certificateExpiredException（）\r\n"," that further provides a <em>total ordering</em> on its keys.":" 这进一步在其键上提供了总订购</em>。\r\n","java.sql.Wrapper.isWrapperFor(java.lang.Class)":"java.sql.wrapper.iswrapperfor（java.lang.class）\r\n","UnmappableCharacterException":"UnbableBableCharacterException\r\n","Writes an SQL <code>XML</code> value to the stream.":"将SQL <code> XML </code>值写入流。\r\n","Increases the capacity of this ":"增加了这一能力\r\n","Returns a MessageDigest object that implements the specified digest\n            algorithm.":"返回一个实现指定摘要的Metsagedigest对象\r\n            算法。\r\n","java.security.Identity.certificates()":"java.security.Identity.certificates（）\r\n","if the fields are not set, the time is not set, and the\n                time cannot be computed from the current field values.":"如果未设置字段，则未设置时间，然后\r\n                时间无法从当前字段值计算。\r\n","An object that represents a precompiled SQL statement.":"代表预编译SQL语句的对象。\r\n","if a problem occurs accessing the database\n":"如果发生问题时访问数据库\r\n\r\n"," thrown when an error\n            occurs during a batch update operation.":" 当错误时投掷\r\n            发生在批处理更新操作期间。\r\n","java.util.concurrent.ForkJoinPool.ForkJoinPool(int)":"java.util.concurrent.forkjoinpool.forkjoinpool（int）\r\n","if the specified key is invalid.":"如果指定的密钥无效。\r\n","Returns the key in its primary encoding format, or null\n            if this key does not support encoding.":"返回其主要编码格式或null中的密钥\r\n            如果此密钥不支持编码。\r\n","A synchronization point at which threads can pair and swap elements\n            within pairs.":"线程可以配对和交换元素的同步点\r\n            在成对内。\r\n"," if the map is empty.":" 如果地图为空。\r\n","java.util.Locale.getDefault()":"java.util.locale.getDefault（）\r\n","Attempts to interpret the string ":"尝试解释字符串\r\n","Retrieves this ":"检索这个\r\n","java.sql.CallableStatement.setShort(java.lang.String, short)":"java.sql.callablestatement.setshort（java.lang.string，short）\r\n","if there are no more elements.":"如果没有更多的元素。\r\n","java.security.cert.PKIXParameters.PKIXParameters(java.security.KeyStore)":"java.security.cert.pkixparameters.pkixparameters（java.security.keystore）\r\n","java.time.format.FormatStyle":"java.time.format.formatstyle\r\n","Applies the given localized pattern string to this date format.":"将给定的局部模式字符串应用于此日期格式。\r\n","java.security.PrivilegedAction":"Java.security.privilegedAction\r\n","java.sql.ResultSet.updateBinaryStream(java.lang.String, java.io.InputStream, int)":"java.sql.Resultset.updatebinarystream（java.lang.string，java.io.inputstream，int）\r\n","java.util.FormattableFlags.LEFT_JUSTIFY":"java.util.formattableflags.left_justify\r\n","if this deque is empty\n":"如果这个露水是空的\r\n\r\n","java.util.Calendar.ZONE_OFFSET":"java.util.calendar.zone_offset\r\n","java.sql.DatabaseMetaData.supportsAlterTableWithAddColumn()":"java.sql.databasemetadata.supportsaltablewithaddcolumn（）\r\n","java.util.Comparator.thenComparingLong(java.util.function.ToLongFunction)":"java.util.comparator.thencomparinglong（java.util.function.tolongfunction）\r\n","This immutable class holds the necessary values needed to represent\n            an elliptic curve.":"这个不变的班级拥有代表所需的必要值\r\n            椭圆曲线。\r\n","if an error occurs accessing the database.\n":"如果发生错误访问数据库。\r\n\r\n","java.sql.DatabaseMetaData.supportsNamedParameters()":"java.sql.databasemetadata.supportsamedparameters（）\r\n","java.util.Calendar.getAvailableLocales()":"java.util.calendar.getavailablelocales（）\r\n","Creates a thread pool that reuses a fixed number of threads\n            operating off a shared unbounded queue, using the provided\n            ThreadFactory to create new threads when needed.":"创建一个线程池，可重用固定数量的线程\r\n            使用提供的\r\n            线程捕获在需要时创建新线程。\r\n","Marks the day of the week in the month part of a date.":"标志着日期的一周一周的一天。\r\n","Returns true if the next complete token matches the specified pattern.":"如果下一个完整的令牌与指定的模式匹配，则返回true。\r\n","java.security.KeyManagementException":"Java.security.KeyManagementException\r\n","java.text.DateFormat.getDateTimeInstance()":"java.text.dateformat.getDateTimeInstance（）\r\n","Useful constant for TIMEZONE field alignment.":"有用的定为时区场对齐。\r\n","The constant indicating that open <code>ResultSet</code> objects with this\n            holdability will remain open when the current transaction is commited.":"常数指示打开<code> resultset </code>对象\r\n            当当前交​​易进行时，可持续性将保持打开状态。\r\n","java.util.NavigableMap":"java.util.navigableMap\r\n","Retrieves a stream to be used to write Ascii characters to the\n            <code>CLOB</code> value that this <code>Clob</code> object represents,\n            starting at position <code>pos</code>.":"检索用于写ASCII字符的流\r\n            <code> clob </code>值</code> clob </code>对象表示，\r\n            从位置开始<code> pos </code>。\r\n","Constructs a GeneralSecurityException with the specified detail\n            message.":"用指定的细节构建GeneralSecurityException\r\n            信息。\r\n","java.util.Properties.propertyNames()":"java.util.properties.propertynames（）\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, executes the given action.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，执行给定的操作。\r\n"," as a Last-in-first-out (Lifo)\n            ":" 作为最后的第一场（LIFO）\r\n            \r\n","java.sql.DatabaseMetaData.bestRowNotPseudo":"java.sql.databasemetadata.bestownotpseudo\r\n","Retrieves and removes the head of this queue, waiting if necessary\n until an element becomes available.":"检索并卸下该队列的头，如有必要\r\n 直到元素可用。\r\n","java.nio.file.SimpleFileVisitor.visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)":"java.nio.file.simplefilevisitor.visitfile（java.lang.object，java.nio.file.tribute.basicfileattributes）\r\n","java.text.Collator.getInstance(java.util.Locale)":"java.text.collat​​or.getinstance（java.util.locale）\r\n","Returns the list of client info properties that could not be set.":"返回无法设置的客户端信息属性列表。\r\n","Returns a long standard time name of this ":"返回一个长期的标准时间名称\r\n","java.sql.Clob.setString(long, java.lang.String)":"java.sql.clob.setstring（long，java.lang.string）\r\n","Returns a clone of this object.":"返回该对象的克隆。\r\n","Retrieves the character position at which the specified substring\n            <code>searchstr</code> appears in the SQL <code>CLOB</code> value\n            represented by this <code>Clob</code> object.":"检索指定子字符串的角色位置\r\n            <code> searchstr </code>出现在SQL <code> clob </code>中\r\n            由此<code> clob </code>对象表示。\r\n","Returns the next element of this enumeration if this enumeration\n            object has at least one more element to provide.":"如果此枚举，将返回此枚举的下一个元素\r\n            对象至少有一个要提供的元素。\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCRLs(java.io.InputStream)":"java.security.cert.certificatefactoryspi.enginegeneratecrls（java.io.inputstream）\r\n","if the specified parameter values are ":"如果指定的参数值为\r\n","<code>DateFormatSymbols</code> is a public class for encapsulating\n            localizable date-time formatting data, such as the names of the\n            months, the names of the days of the week, and the time zone data.":"<code> dateformatsymbols </code>是用于封装的公共类\r\n            可本地化的日期时间格式数据，例如\r\n            几个月，一周的日子名称以及时区数据。\r\n","java.util.IllegalFormatFlagsException.getFlags()":"java.util.illegalformatflagsexception.getFlags（）\r\n","java.text.DecimalFormat.getGroupingSize()":"java.text.decimalformat.getGroupingsize（）\r\n","java.text.RuleBasedCollator.hashCode()":"java.text.rulebasedcollat​​or.hashcode（）\r\n"," is not one of\n             SHORT, MEDIUM, LONG, FULL, or DEFAULT.\n":" 不是之一\r\n             短，中，长，完整或默认。\r\n\r\n","java.text.Collator.clone()":"java.text.collat​​or.clone（）\r\n","java.util.Date.after(java.util.Date)":"java.util.date.fter（java.util.date）\r\n","java.util.Vector.indexOf(java.lang.Object, int)":"java.util.vector.indexof（java.lang.Object，int）\r\n","A transition between two offsets caused by a discontinuity in the local time-line.":"由于本地时间表的不连续性引起的两个偏移之间的过渡。\r\n","java.util.Date.UTC(int, int, int, int, int, int)":"java.util.date.utc（int，int，int，int，int，int，int）\r\n","java.text.MessageFormat.setFormatsByArgumentIndex(java.text.Format[])":"java.text.messageformat.setformatsbyargumentIndex（java.text.format []）\r\n","java.util.LinkedList.peekLast()":"java.util.linkedlist.peeklast（）\r\n","java.nio.file.Files.delete(java.nio.file.Path)":"java.nio.file.files.delete（java.nio.file.path）\r\n","Removes a single instance of the specified element from this queue,\n            if it is present.":"从此队列中删除指定元素的单个实例，\r\n            如果存在。\r\n","java.sql.ResultSet.FETCH_UNKNOWN":"java.sql.Resultset.fetch_unknown\r\n","java.util.concurrent.CopyOnWriteArrayList.add(int, java.lang.Object)":"java.util.concurrent.copyonwritearraylist.add（int，java.lang.object）\r\n","Searches the specified list for the specified object using the binary\n            search algorithm.":"使用二进制文件搜索指定对象的指定列表\r\n            搜索算法。\r\n","java.text.NumberFormat.getMaximumIntegerDigits()":"java.text.numberformat.getMaximumIntegerDigits（）\r\n","Returns a list containing the names of the user-defined attributes.":"返回包含用户定义属性名称的列表。\r\n","java.sql.DatabaseMetaData.supportsMultipleTransactions()":"java.sql.databasemetadata.supportsmultipletlections（）\r\n","java.security.KeyPairGenerator.KeyPairGenerator(java.lang.String)":"java.security.keypairgenerator.keypairgenerator（java.lang.string）\r\n","java.sql.ResultSet.updateNClob(java.lang.String, java.sql.NClob)":"java.sql.Resultset.updatenclob（java.lang.string，java.sql.nclob）\r\n","Gets short month strings.":"获得短月的弦。\r\n","Generates the extension's DER encoding and writes it to the output\n            stream.":"生成扩展名的DER编码并将其写入输出\r\n            溪流。\r\n","NavigableSet":"Navigableset\r\n","Unchecked exception thrown when an attempt is made to invoke an operation on\n            a watch service that is closed.":"当尝试调用操作时，未选中的例外\r\n            关闭的手表服务。\r\n","if an error occurs while parsing the pattern.\n":"如果在解析模式时发生错误。\r\n\r\n","java.util.SortedMap.values()":"java.util.sortedmap.values（）\r\n","Constant for a mode of start or end time specified as wall clock\n            time.":"对于指定为壁时钟的起始时间或结束时间的常数\r\n            时间。\r\n","\n            if the current thread is executing outside of any ForkJoinPool.":"\r\n            如果当前线程在任何forkjoinpool之外执行。\r\n","Gets the default <code>TimeZone</code> for this host. -or- Sets the ":"获取此主机的默认<code> timezone </code>。 - 或设置\r\n","java.security.cert.Certificate.writeReplace()":"java.security.cert.certificate.writereplace（）\r\n","Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque), or returns\n ":"检索并卸下该Deque代表的队列的头部\r\n （换句话说，这是此Deque的第一个元素）或返回\r\n \r\n","java.util.SimpleTimeZone.setEndRule(int, int, int, int)":"java.util.simpletimezone.setendrule（int，int，int，int）\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>XML</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，可以标识通用SQL类型<code> XML </code>。\r\n","Creates a digest input stream, using the specified input stream\n            and message digest.":"使用指定的输入流创建摘要输入流\r\n            和消息摘要。\r\n","java.util.BitSet.set(int, boolean)":"java.util.bitset.set（int，boolean）\r\n","java.sql.DatabaseMetaData.getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getColumns（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","Returns the difference in milliseconds between local time and\n            UTC, taking into account both the raw offset and the effect of\n            daylight saving, for the specified date and time.":"返回当地时间和\r\n            UTC考虑了原始偏移和效果\r\n            节省日期的日期和时间。\r\n","java.util.Locale.Locale(java.lang.String, java.lang.String, java.lang.String)":"java.util.locale.locale（java.lang.string，java.lang.string，java.lang.string）\r\n","java.security.Provider.Provider(java.lang.String, double, java.lang.String)":"java.security.provider.provider（java.lang.string，double，java.lang.string）\r\n","Returns a Signature object that implements the specified signature\n            algorithm.":"返回实现指定签名的签名对象\r\n            算法。\r\n","Creates a new ECPrivateKeySpec with the specified\n            parameter values.":"用指定的\r\n            参数值。\r\n","Useful constant for one-based HOUR field alignment.":"一个有用的常数，用于一个小时场对齐。\r\n","Returns an enumeration of the values in this table.":"返回该表中值的枚举。\r\n","Constructs an object that implements the <code>SQLXML</code> interface.":"构造一个实现<code> sqlxml </code>接口的对象。\r\n","java.util.NavigableSet.pollLast()":"java.util.navigableset.polllast（）\r\n","Returns an immutable set containing six elements.":"返回一个不变的套件，其中包含六个元素。\r\n","Moves the cursor to the front of\n            this <code>ResultSet</code> object, just before the\n            first row.":"将光标移至前面\r\n            此<code> resultset </code>对象，就在\r\n            第一排。\r\n","Returns the extension (or private use) value associated with\n            the specified key, or null if there is no extension\n            associated with the key.":"返回与\r\n            指定的键，如果没有扩展名，则为空\r\n            与密钥相关。\r\n","The message digest associated with this stream.":"与此流相关联的消息消化。\r\n","Returns auto generated keys created by executing this statement.":"返回通过执行此语句创建的自动生成的密钥。\r\n","java.security.spec.ECGenParameterSpec.ECGenParameterSpec(java.lang.String)":"java.security.spec.ecgenparameterspec.ecgenparameterspec（java.lang.string）\r\n","A table of data representing a database result set, which\n            is usually generated by executing a statement that queries the database.":"表示数据库结果集的数据表，该表\r\n            通常是通过执行查询数据库的语句而生成的。\r\n","Returns a keystore object of the specified type.":"返回指定类型的密钥库对象。\r\n"," upon success and ":" 成功和\r\n","The sole constructor.":"唯一的构造函数。\r\n","Returns the element at the specified position in this Vector.":"返回该向量中指定位置的元素。\r\n","#nextByte":"#NextByte\r\n","java.util.Map.ofEntries(java.util.Entry)":"java.util.map.ofentries（java.util.entry）\r\n","java.security.IdentityScope.getIdentity(java.lang.String)":"Java.Security.IdentityScope.getIdentity（Java.lang.String）\r\n","Returns the index of the first character following the run\n            with respect to all attributes containing the current character.":"运行后返回第一个角色的索引\r\n            关于所有包含当前字符的属性。\r\n","java.sql.SQLXML.getSource(java.lang.Class)":"java.sql.sqlxml.getsource（java.lang.class）\r\n","java.sql.CallableStatement.setAsciiStream(java.lang.String, java.io.InputStream)":"java.sql.callablestatement.setasciistream（java.lang.string，java.io.inputstream）\r\n","java.security.cert.CertStore.CertStore(java.security.cert.CertStoreSpi, java.security.Provider, java.lang.String, java.security.cert.CertStoreParameters)":"java.security.cert.certstore.certstore（java.security.cert.certstorespi，java.security.provider，java.lang.string，java.security.cert.cert.cert.cert.certstoreparameters）\r\n","java.security.cert.PKIXCertPathBuilderResult.getCertPath()":"java.security.cert.pkixcertpathbuilderresult.getcertpath（）\r\n","java.security.MessageDigest.digest(byte[], int, int)":"java.security.messagedigest.digest（byte []，int，int）\r\n","Sets the name of this ACL.":"设置此ACL的名称。\r\n","java.security.cert.PKIXParameters.getDate()":"java.security.cert.pkixparameters.getdate（）\r\n","if this connection is closed, or there's a problem setting\n a property.\n":"如果关闭此连接，或者有问题设置\r\n 财产。\r\n\r\n","java.util.HashSet.clone()":"java.util.hashset.clone（）\r\n","ForkJoinTask#quietlyComplete":"forkjointask＃悄悄结束\r\n","elementData":"ElementData\r\n","Allocates a <code>Date</code> object and initializes it so that\n            it represents the instant at the start of the second specified\n            by the <code>year</code>, <code>month</code>, <code>date</code>,\n            <code>hrs</code>, <code>min</code>, and <code>sec</code> arguments,\n            in the local time zone.":"分配<code> date </code>对象并初始化它，以便\r\n            它代表第二个指定的开始时的瞬间\r\n            通过<code>年</code>，<code>月</code>，<code>日期</code>，\r\n            <code> HRS </code>，<code> min </code>和<code> sec </code>参数，\r\n            在当地时区。\r\n","java.util.TreeMap.TreeMap(java.util.Map)":"java.util.treemap.treemap（java.util.map）\r\n","Returns a three-letter abbreviation for this locale's country.":"为该地区的国家返回三个字母的缩写。\r\n","Creates a new PKCS8EncodedKeySpec with the given encoded key.":"使用给定的编码键创建一个新的PKCS8EncodedKeyspec。\r\n","java.util.ArrayDeque.offerFirst(java.lang.Object)":"java.util.arraydeque.offerfirst（java.lang.Object）\r\n","Sets the issuer criterion.":"设置发行人标准。\r\n"," instance: the keys and\n            values themselves are not cloned.":" 实例：键和\r\n            价值本身不是克隆的。\r\n","Waits for another thread to arrive at this exchange point (unless\n            the current thread is Thread#interrupt interrupted or\n            the specified waiting time elapses), and then transfers the given\n            object to it, receiving its object in return.":"等待另一个线程到达此交换点（除非\r\n            当前线程是线程＃中断中断或\r\n            指定的等待时间），然后转移给定\r\n            反对它，接收其对象以返回。\r\n","Constructs an InvalidParameterException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n"," instance\n            with the default initial capacity (16) and load factor (0.":" 实例\r\n            具有默认的初始容量（16）和负载因子（0。\r\n","Creates a thread pool that can schedule commands to run after a\n            given delay, or to execute periodically.":"创建一个线程池，可以安排命令在\r\n            给定延迟或定期执行。\r\n","java.sql.Statement.executeBatch()":"java.sql.statement.executebatch（）\r\n","Constructs a <code>SQLNonTransientException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlnontransientException </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.sql.ResultSet.updateRef(int, java.sql.Ref)":"java.sql.Resultset.updateref（int，java.sql.ref）\r\n","java.util.Calendar.getMaximum(int)":"java.util.calendar.getmaximum（int）\r\n","java.sql.SQLInput.readInt()":"java.sql.sqlinput.readint（）\r\n","java.security.cert.CRL.CRL(java.lang.String)":"java.security.cert.crl.crl（java.lang.string）\r\n","java.sql.CallableStatement.getCharacterStream(int)":"java.sql.callablestatement.getCharacterstream（int）\r\n","if an error occurs during a read operation on the\n             ":"如果在读取操作期间发生错误\r\n             \r\n","java.util.AbstractList.lastIndexOf(java.lang.Object)":"java.util.abstractlist.lastindexof（java.lang.Object）\r\n","Constructs a <code>SQLRecoverableException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqlrecoverableException </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","java.nio.file.ClosedDirectoryStreamException":"java.nio.file.closeddirectoryStreamException\r\n","Returns the JDBC type of the entries in this array's underlying\n SQL array.":"返回此数组的下面的条目的JDBC类型\r\n SQL数组。\r\n","ExtKeyUsageSyntax":"ExtKeyusagesyntax\r\n"," if this queue contains the specified element.":" 如果此队列包含指定的元素。\r\n","Constructs a <code>SQLWarning</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlwarning </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","java.sql.SQLOutput.writeAsciiStream(java.io.InputStream)":"java.sql.sqloutput.writeasciistream（java.io.inputstream）\r\n","java.util.Arrays.sort(int[])":"java.util.arrays.sort（int []）\r\n","Returns the maximum element of the given collection, according to the\n            ":"返回给定集合的最大元素，根据\r\n            \r\n","Returns the locale of this resource bundle.":"返回此资源捆绑包的位置。\r\n","Removes and returns a key-value mapping associated with\n the greatest key in this map, or ":"删除并返回与之关联的键值映射\r\n 此地图中的最大钥匙，或\r\n","if decoding the subject fails.\n":"如果解码主题失败。\r\n\r\n","java.sql.Statement.KEEP_CURRENT_RESULT":"java.sql.statement.kep_current_result\r\n","Abstract class for X.":"X的抽象类。\r\n","Service Provider Interface":"服务提供商界面\r\n","java.util.Locale.Category#FORMAT FORMAT":"java.util.locale.scateory＃格式格式\r\n","Returns the standard name of the algorithm this parameter\n            generator is associated with.":"返回算法的标准名称此参数\r\n            发电机与之关联。\r\n","java.util.ListIterator.next()":"java.util.listiterator.next（）\r\n","A constant indicating that\n            dirty reads and non-repeatable reads are prevented; phantom\n            reads can occur.":"一个常数，表明\r\n            肮脏的读数和不可重复的读数被阻止；幻影\r\n            可能会发生读取。\r\n","java.sql.ResultSet.rowUpdated()":"java.sql.Resultset.RowupDated（）\r\n"," thrown in situations where a\n            previously failed operation might be able to succeed if the application performs\n             some recovery steps and retries the entire transaction or in the case of a\n            distributed transaction, the transaction branch.":" 在某个情况下扔\r\n            以前失败的操作如果应用程序执行的操作可能会成功\r\n             一些恢复步骤并检验整个交易，或者在\r\n            分布式交易，交易分支。\r\n"," with a completion action performed when\n            triggered and there are no remaining pending actions.":" 完成完成时执行的\r\n            触发，没有剩余的待处理行动。\r\n","Returns an unmodifiable list containing three elements.":"返回包含三个元素的不可变化列表。\r\n","Returns a relative ":"返回亲戚\r\n","java.security.cert.Certificate.verify(java.security.PublicKey)":"java.security.cert.certificate.verify（java.security.publickey）\r\n","java.util.Map.entry(java.lang.Object, java.lang.Object)":"java.util.map.entry（java.lang.Object，java.lang.object）\r\n","Inserts the specified element into the queue represented by this deque\n            (in other words, at the tail of this deque) if it is possible to do so\n            immediately without violating capacity restrictions, returning\n            ":"将指定的元素插入该Deque表示的队列\r\n            （换句话说，在此deque的尾巴上）如果可以这样做\r\n            立即不违反能力限制，返回\r\n            \r\n","Retrieves whether this database supports the ANSI92 full SQL grammar supported.":"检索该数据库是否支持支持的ANSI92完整SQL语法。\r\n","java.security.cert.X509CertSelector.setExtendedKeyUsage(java.util.Set)":"java.security.cert.x509certselector.setextedendedKeyusage（java.util.set）\r\n","Indicates that <code>WHERE</code> search clauses are not supported\n            for this type.":"指示不支持</code> </code>搜索条款\r\n            对于这种类型。\r\n","CRL (Certificate Revocation List) Exception.":"CRL（证书撤销列表）异常。\r\n","Returns the object for which this watch key was created.":"返回创建该手表键的对象。\r\n","java.security.PKCS12Attribute.getName()":"java.security.pkcs12attribute.getName（）\r\n","java.util.concurrent.ArrayBlockingQueue.remainingCapacity()":"java.util.concurrent.arayblockingqueue.remainingcapacity（）\r\n","java.util.concurrent.ForkJoinTask.exec()":"java.util.concurrent.forkjointask.exec（）\r\n","Retrieves the value of the designated JDBC <code>TINYINT</code> parameter\n            as a <code>byte</code> in the Java programming language.":"检索指定的JDBC <code> tinyint </code>参数的值\r\n            作为Java编程语言中的<code>字节</code>。\r\n","java.sql.CallableStatement.getFloat(int)":"java.sql.callablestatement.getfloat（int）\r\n","java.security.interfaces.DSAPublicKey":"java.security.interfaces.dsapublickey\r\n","Tests whether a file is a symbolic link.":"测试文件是否是符号链接。\r\n","if an exception is thrown by accessing the provided stream.":"如果通过访问提供的流来抛出异常。\r\n","java.util.Calendar.ERA":"java.util.calendar.era\r\n","java.util.PriorityQueue.comparator()":"java.util.priorityqueue.comparator（）\r\n","java.sql.Types.DOUBLE":"java.sql.types.double\r\n","Records a new ":"记录一个新的\r\n","java.security.acl.Acl.setName(java.security.Principal, java.lang.String)":"java.security.acl.acl.setname（java.security.principal，java.lang.string）\r\n","java.util.concurrent.ForkJoinTask.cancel(boolean)":"java.util.concurrent.forkjointask.cancel（boolean）\r\n"," containing the current character.":" 包含当前字符。\r\n","CertStoreException":"certStoreSexception\r\n","The public exponent-value F4 = 65537.":"公共指数值F4 = 65537。\r\n","java.nio.file.Path.subpath(int, int)":"java.nio.file.path.subpath（int，int）\r\n","Gets the <code>DateFormatSymbols</code> instance for the specified\n            locale.":"获取指定的<code> dateformatsymbols </code>实例\r\n            语言环境。\r\n","Returns this object's data as an XML string.":"将该对象的数据返回为XML字符串。\r\n","Generates the next pseudorandom number.":"生成下一个伪数编号。\r\n","Performs ":"施行\r\n","Returns the strings associated with the ranges of this ":"返回与此范围相关的字符串\r\n","when this ":"当这个\r\n","java.nio.file.PathMatcher.matches(java.nio.file.Path)":"java.nio.file.pathmatcher.matches（java.nio.file.path）\r\n","java.sql.Connection.prepareCall(java.lang.String)":"java.sql.connection.preparecall（java.lang.string）\r\n","java.security.cert.X509CRL":"java.security.cert.x509crl\r\n","java.util.Arrays.deepHashCode(java.lang.Object[])":"java.util.arrays.deephashcode（java.lang.object []）\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Randomly permutes the specified list using a default source of\n            randomness.":"使用默认源随机列出指定列表\r\n            随机性。\r\n","java.security.cert.CertificateFactory.getInstance(java.lang.String, java.lang.String)":"java.security.cert.certificatefactory.getinstance（java.lang.string，java.lang.string）\r\n","java.sql.Driver.acceptsURL(java.lang.String)":"java.sql.driver.acceptsurl（java.lang.string）\r\n","Constructs a <code>SQLNonTransientException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlnontransientException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","Returns a string representation of this identity, with\n            optionally more details than that provided by the\n            ":"返回此身份的字符串表示形式，\r\n            可选的详细信息比\r\n            \r\n","java.sql.PreparedStatement.setNCharacterStream(int, java.io.Reader)":"java.sql.preparedstatement.setncharacterstream（int，java.io.reader）\r\n","Returns true if the Style is a stand-alone style.":"如果样式是独立的样式，则返回true。\r\n","Returns an unmodifiable list containing seven elements.":"返回包含七个元素的不可变化列表。\r\n"," is at infinity.\n":" 在无穷大。\r\n\r\n","java.util.concurrent.ConcurrentSkipListMap.ConcurrentSkipListMap(java.util.Map)":"java.util.concurrent.concurrentskiplistmap.concurrentskiplistmap（java.util.map）\r\n","java.sql.CallableStatement.setBinaryStream(java.lang.String, java.io.InputStream, long)":"java.sql.callablestatement.setbinarystream（java.lang.string，java.io.inputstream，long）\r\n","SecureRandom":"Securerandom\r\n","java.util.ArrayList.trimToSize()":"java.util.arraylist.trimtosize（）\r\n","Returns the creation date of the entry identified by the given alias.":"返回给定别名标识的条目的创建日期。\r\n","Returns a certificate factory object for the specified\n            certificate type.":"返回指定的证书工厂对象\r\n            证书类别。\r\n","if the format of the supplied string does not match the SQL\n             format.\n":"如果提供的字符串的格式与SQL不匹配\r\n             格式。\r\n\r\n","Waits if necessary for at most the given time for the computation\n            to complete, and then retrieves its result, if available.":"如有必要等待计算的给定时间\r\n            完成，然后检索其结果（如果有）。\r\n","java.security.cert.PKIXParameters.isAnyPolicyInhibited()":"java.security.cert.pkixparameters.isanypolicyinbisting（）\r\n","Returns the privateKeyValid criterion. -or- Sets the privateKeyValid criterion.":"返回私有键盘标准。 - 或设置私有键盘标准。\r\n","Completes this CompletableFuture with the result of the given\n            Supplier function invoked from an asynchronous task using the\n            default executor.":"通过给定的结果完成此完整的未来\r\n            从异步任务调用供应商功能\r\n            默认执行程序。\r\n","java.util.Locale.ROOT":"java.util.locale.root\r\n","A thread-safe variant of ":"线程安全的变体\r\n","Returns an integer hash code for the receiver.":"返回接收器的整数哈希代码。\r\n","java.util.Locale.Locale(java.lang.String, java.lang.String)":"java.util.locale.locale（java.lang.string，java.lang.string）\r\n","Determines whether a key is granted permission for the specified\n            cryptographic primitives.":"确定是否授予指定的密钥许可\r\n            加密原语。\r\n","java.util.AbstractCollection.removeAll(java.util.Collection)":"java.util.abstractcollection.removeall（java.util.collection）\r\n","Tests if this path ends with the given path.":"测试此路径是否以给定路径结束。\r\n","java.util.concurrent.AbstractExecutorService.submit(java.util.concurrent.Callable)":"java.util.concurrent.abstractexecutorservice.submit（java.util.concurrent.callable）\r\n","Struct":"结构\r\n","java.util.ResourceBundle.getBaseBundleName()":"java.util.resourcebundle.getBaseBundlename（）\r\n","java.util.concurrent.CompletableFuture.failedStage(java.lang.Throwable)":"java.util.concurrent.completablefuture.failedstage（java.lang.throwable）\r\n","This is the basic key exception.":"这是基本密钥例外。\r\n"," used for curve generation.":" 用于曲线生成。\r\n","java.util.List.remove(java.lang.Object)":"java.util.list.remove（java.lang.Object）\r\n","Replaces the element at the specified position in this list with the\n            specified element.":"用该列表中指定位置的元素用\r\n            指定元素。\r\n","<code>DecimalFormat</code> is a concrete subclass of\n            <code>NumberFormat</code> that formats decimal numbers.":"<code> Demalformat </code>是一个具体的子类\r\n            <code> numberFormat </code>该格式化十进制数字。\r\n","check":"查看\r\n","java.lang.Runtime#availableProcessors":"java.lang.runtime＃可用处理器\r\n","This method is overridden by providers to initialize\n            this signature engine with the specified parameter set.":"提供商覆盖此方法以初始化\r\n            该签名引擎带有指定的参数集。\r\n","java.security.SecureClassLoader.getPermissions(java.security.CodeSource)":"java.security.secureclassloader.getpermissions（java.security.codesource）\r\n","java.util.RandomAccess":"java.util.randomaccess\r\n","Returns the factory used for constructing new workers.":"返回用于构建新工人的工厂。\r\n","Marks the time zone part of a date.":"标记日期的时区部分。\r\n","java.security.cert.CertPathValidator.getInstance(java.lang.String)":"java.security.cert.certpathvalidator.getinstance（java.lang.string）\r\n","An immutable sequence of certificates (a certification path).":"不变的证书序列（认证路径）。\r\n","Constructs a CertificateExpiredException with no detail message.":"构造一个没有详细信息的证书ExciredException。\r\n","Indicates that whether <code>NULL</code> values are allowed is not\n            known.":"指示是否允许<code> null </code>值不在\r\n            已知。\r\n","Constructs a new set containing the elements in the specified\n            collection.":"构建一个包含指定元素的新集合\r\n            收藏。\r\n","Sorts the specified list into ascending order, according to the\n            Comparable natural ordering of its elements.":"根据\r\n            其元素的可比自然顺序。\r\n","java.util.ServiceConfigurationError":"Java.util.ServiceConfigurationError\r\n","Returns the public exponent.":"返回公共指数。\r\n","java.util.GregorianCalendar.GregorianCalendar(int, int, int, int, int)":"java.util.gregoriancalendar.gregoriancalendar（int，int，int，int，int）\r\n","java.util.concurrent.CountDownLatch.await()":"java.util.concurrent.countdownlatch.await（）\r\n","Returns the component at the specified index.":"在指定的索引处返回组件。\r\n","java.text.DateFormat.getTimeInstance()":"java.text.dateformat.getTimeInstance（）\r\n",") associates it with the given value and returns\n            ":"）将其与给定值和返回\r\n            \r\n","Indicates that it is not known whether the function returns\n            a result or a table.":"表明尚不清楚该函数是否返回\r\n            结果或表格。\r\n","initialCapacity":"初始容量\r\n","Inserts the specified element at the front of this deque if it is\n            possible to do so immediately without violating capacity restrictions,\n            returning ":"如果是\r\n            可以立即这样做而不会违反能力限制，\r\n            返回\r\n","java.util.GregorianCalendar.isWeekDateSupported()":"java.util.gregoriancalendar.isweekdatesupported（）\r\n","Returns the set of the ":"返回\r\n","Returns the first (lowest) element currently in this set.":"返回此集合中当前的第一个（最低）元素。\r\n","java.util.concurrent.DelayQueue.peek()":"java.util.concurrent.delayqueue.peek（）\r\n","java.text.DecimalFormat.isParseBigDecimal()":"java.text.decimalformat.isparsebigdecimal（）\r\n","Gets the number of parameters in the ":"获取参数的数量\r\n","java.security.cert.CertificateFactorySpi.engineGetCertPathEncodings()":"java.security.cert.certificatefactoryspi.enginegenetcertpathencodings（）\r\n","java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])":"java.sql.statement.executeupdate（java.lang.string，java.lang.string []）\r\n","java.util.Map.getOrDefault(java.lang.Object, java.lang.Object)":"java.util.map.getordefault（java.lang.object，java.lang.object）\r\n","#parse(java.lang.String, java.text.ParsePosition)":"#parse（java.lang.string，java.text.parseposition）\r\n",". -or- Sets the subject criterion.":"。 - 或设置主题标准。\r\n","s\n generated from this statement.":"s\r\n 从此语句生成。\r\n","Truncates the <code>CLOB</code> value that this <code>Clob</code>\n            designates to have a length of <code>len</code>\n            characters.":"截断<code> clob </code>值</code> clob </code>\r\n            指定具有<code> len </code>的长度\r\n            人物。\r\n"," (subject distinguished name) as an\n implementation specific ":" （主题区分名称）\r\n 特定实施\r\n","java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList(java.util.Collection)":"java.util.concurrent.copyonwritearraylist.copyonwritearraylist（java.util.collection）\r\n","java.util.BitSet.BitSet()":"java.util.bitset.bitset（）\r\n","java.util.Objects.compare(java.lang.Object, java.lang.Object, java.util.Comparator)":"java.util.objects.compare（java.lang.object，java.lang.object，java.util.comparator）\r\n","Returns the index of the first occurrence of the specified element in\n            this vector, searching forwards from ":"返回在\r\n            这个向量，从\r\n","Emits an XML document representing all of the properties contained\n            in this table, using the specified encoding.":"排放一个代表所有包含的属性的XML文档\r\n            在此表中，使用指定的编码。\r\n","java.text.ChoiceFormat.nextDouble(double)":"java.text.choiceformat.nextdouble（double）\r\n","<strong>Denigrated</strong>, use\n            #addIssuer(X500Principal) or\n            #addIssuerName(byte[]) instead.":"<strong>贬低</strong>，使用\r\n            #addissuer（x500principal）或\r\n            #addissuername（byte []）。\r\n","Updates the designated column with a binary stream value.":"用二进制流值更新指定的列。\r\n","Retrieves whether this database supports keeping statements open\n            across rollbacks.":"检索该数据库是否支持保持语句打开\r\n            跨回滚。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as an <code>Array</code> object\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> array </code>对象\r\n            在Java编程语言中。\r\n","java.security.spec.DSAParameterSpec.DSAParameterSpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"java.security.spec.dsaparameterspec.dsaparameterspec（java.math.biginteger，java.math.biginteger，java.math.biginteger）\r\n","Retrieves whether this database supports the given result set holdability.":"检索该数据库是否支持给定的结果集可持续性。\r\n","Retrieves, but does not remove, the first element of this list,\n            or returns ":"检索但没有删除，这是此列表的第一个元素，\r\n            或返回\r\n"," field indicating the\n            eighth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的八个月在格里高利和朱利安日历中。\r\n","\n            method returns <code>BigDecimal</code>.":"\r\n            方法返回<code> bigdecimal </code>。\r\n","Returns an immutable set containing only the specified object.":"返回仅包含指定对象的不变套件。\r\n"," object identified by a URI.":" 由URI识别的对象。\r\n","java.util.Date.Date(int, int, int, int, int, int)":"java.util.date.date（int，int，int，int，int，int，int）\r\n","java.util.Comparator":"java.util.comparator\r\n","areFieldsSet":"arefieldsset\r\n","Retrieves the value of the designated JDBC <code>CHAR</code>,\n            <code>VARCHAR</code>, or <code>LONGVARCHAR</code> parameter as a\n            <code>String</code> in the Java programming language.":"检索指定的JDBC <code> char </code>的值\r\n            <code> varchar </code>，或<code> longvarchar </code>参数为一个\r\n            <code>字符串</code>在Java编程语言中。\r\n","java.util.concurrent.ForkJoinPool.drainTasksTo(java.util.Collection)":"java.util.concurrent.forkjoinpool.draintasksto（java.util.collection）\r\n","java.util.Arrays.binarySearch(java.lang.Object[], java.lang.Object, java.util.Comparator)":"java.util.arrays.binarysearch（java.lang.object []，java.lang.object，java.util.comparator）\r\n","Returns an iterator over the elements in this collection.":"返回该集合中元素的迭代器。\r\n","java.util.concurrent.ForkJoinTask.pollTask()":"java.util.concurrent.forkjointask.polltask（）\r\n"," of this\n            ":" 这个的\r\n            \r\n"," (UDT) that this object\n represents.":" （udt）这个对象\r\n 代表。\r\n","certpathbuilder.type":"certpathbuilder.type\r\n","An abstract class that performs one or more checks on an\n            ":"一个或多个检查的抽象类对一个或多个检查\r\n            \r\n"," that uses a supplied ":" 它使用了提供的\r\n"," (inclusive) to\n            ":" （包括）\r\n            \r\n"," value (the raw signature bits) from\n            the certificate.":" 值（原始签名位）\r\n            证书。\r\n","The standard set of non-localized decimal style symbols.":"标准的非定位小数样式符号。\r\n","if the filename does not denote a normal and writable file,\n             or if a new file cannot be created, or if any error arises when\n             opening or creating the file.\n":"如果文件名不表示正常且可写的文件，\r\n             或者如果无法创建新文件，或者是否出现任何错误\r\n             打开或创建文件。\r\n\r\n","java.time.format.DecimalStyle.ofDefaultLocale()":"java.time.format.decimalstyle.ofdefaultlocale（）\r\n","java.sql.DatabaseMetaData.supportsStatementPooling()":"java.sql.databasemetadata.supportstatementpooling（）\r\n","Moves the cursor to the end of\n            this <code>ResultSet</code> object, just after the\n            last row.":"将光标移至\r\n            此<code> resultset </code>对象，就在\r\n            最后一行。\r\n","java.util.LinkedList.descendingIterator()":"java.util.linkedlist.descgenditerator（）\r\n","if removing from this list is not supported.":"如果不支持从此列表中删除。\r\n","Constructs a KeyManagementException with the specified detail\n            message.":"用指定的详细信息构建键ManagementionException\r\n            信息。\r\n","Adds a name to the subjectAlternativeNames criterion.":"将名称添加到主题Assublternativenames标准中。\r\n","java.util.LongSummaryStatistics.LongSummaryStatistics()":"java.util.longsummarystatistics.longsummarystatistics（）\r\n","Removes the last occurrence of the specified element in this\n            list (when traversing the list from head to tail).":"删除此处指定元素的最后一次出现\r\n            列表（从头到尾遍历列表时）。\r\n","Returns the name of the signature algorithm.":"返回签名算法的名称。\r\n","The type fingerprint that is set to indicate\n            serialization compatibility with a previous\n            version of the type.":"设置的指纹类型\r\n            与以前的序列化兼容性\r\n            类型的版本。\r\n","Returns the number of entries (distinct keys) in this dictionary.":"返回本字典中的条目数（不同的键）。\r\n","This interface represents an X.":"该界面代表一个X。\r\n","java.sql.ResultSet.getURL(java.lang.String)":"java.sql.Resultset.geturl（java.lang.string）\r\n"," instance\n            with the specified initial capacity and load factor.":" 实例\r\n            具有指定的初始容量和负载因子。\r\n","java.security.cert.CRLSelector.clone()":"java.security.cert.crlselector.clone（）\r\n","java.sql.DatabaseMetaData.supportsResultSetHoldability(int)":"java.sql.databasemetadata.supportsresultsetholdability（int）\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlintegrityConstrityConstrationException.SQLINTEGRITYCONSTRITYCONTRATENTVIOLATIONEXCEPTION（JAVA.LANG.STRING，JAVA.LANG.STRING，JAVA.LANG.LANG.THRANG.THROWABLE）\r\n","java.security.AccessControlException.getPermission()":"java.security.accesscontrolexception.getpermission（）\r\n","Atomically sets the tag value for this task and returns the old value.":"原子设置此任务的标签值并返回旧值。\r\n","java.nio.file.Path.resolveSibling(java.lang.String)":"java.nio.file.path.resolvesibling（java.lang.string）\r\n","java.util.Random.Random()":"java.util.random.random（）\r\n","java.util.LinkedHashMap.LinkedHashMap()":"java.util.linkedhashmap.linkedhashmap（）\r\n","FileAttribute":"fileattribute\r\n","java.security.MessageDigest.getInstance(java.lang.String, java.security.Provider)":"java.security.messagedigest.getinstance（java.lang.string，java.security.provider）\r\n","java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble(long, java.util.function.ToDoubleFunction, double, java.util.function.DoubleBinaryOperator)":"java.util.concurrent.concurrenthashmap.reduceentriestodouble（long，java.util.function.todoublefunction，double，java.util.function.doublebinaryoperator）\r\n","Maps the specified <code>key</code> to the specified\n            <code>value</code> in this hashtable.":"将指定的<code>键</code>映射到指定的\r\n            <code> value </code>在此标签中。\r\n","Returns the width":"返回宽度\r\n","Long.MAX_VALUE":"long.max_value\r\n","java.util.Set.size()":"java.util.set.size（）\r\n","Gets the symbol of this currency for the default\n            ":"获取默认货币的符号\r\n            \r\n","java.util.NavigableMap.ceilingEntry(java.lang.Object)":"java.util.navigablemap.ceilingentry（java.lang.Object）\r\n","This method is overridden by providers to return the\n            parameters used with this signature engine, or null\n            if this signature engine does not use any parameters.":"提供商归还此方法\r\n            该签名引擎使用的参数或null\r\n            如果此签名引擎不使用任何参数。\r\n","CancellationException":"取消exception\r\n","java.util.LinkedHashMap.LinkedHashMap(java.util.Map)":"java.util.linkedhashmap.linkedhashmap（java.util.map）\r\n","java.util.TimeZone.TimeZone()":"java.util.timezone.timezone（）\r\n","Subscriber\n            Subscribers":"订户\r\n            订户\r\n"," reported by calls on this\n statement.":" 通过电话报道\r\n 陈述。\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, executes the given action\n            using this stage's default asynchronous execution facility.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，执行给定的动作\r\n            使用此阶段的默认异步执行设施。\r\n","UserPrincipal":"用户普通\r\n","java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY":"java.nio.file.standardwatcheventkinds.entry_modify\r\n","if the specified provider does not exists.":"如果指定的提供商不存在。\r\n","Sets the designated parameter to the given Java <code>int</code> value.":"将指定的参数设置为给定的Java <code> int </code>值。\r\n"," method and modify the output format for Formattable Formattables.":" 方法并修改为格式格式设备的输出格式。\r\n","TrustedCertificateEntry":"TrustedCertificateTry\r\n","java.security.Security.removeProvider(java.lang.String)":"java.security.security.removeprovider（java.lang.string）\r\n"," is able to process.":" 能够处理。\r\n","java.security.BasicPermission":"java.security.basicpermission\r\n"," that will trip when the\n            given number of parties (threads) are waiting upon it, and which\n            will execute the given barrier action when the barrier is tripped,\n            performed by the last thread entering the barrier.":" 那将在\r\n            给定的聚会数量（线程）正在等待，哪个\r\n            将在障碍物绊倒时执行给定的障碍行动，\r\n            由最后一个线程进入障碍物执行。\r\n","Releases this <code>ResultSet</code> object's database and\n            JDBC resources immediately instead of waiting for\n            this to happen when it is automatically closed.":"释放此<code> RESTERSET </code>对象的数据库和\r\n            JDBC资源立即而不是等待\r\n            当它自动关闭时，这将发生。\r\n"," if not otherwise completed\n            before the given timeout.":" 如果未完成的话\r\n            在给定超时之前。\r\n"," for the specified\n            ":" 对于指定的\r\n            \r\n","Sets the designated parameter to the given Java <code>String</code> value.":"将指定的参数设置为给定的Java <code>字符串</code>值。\r\n","java.nio.file.DirectoryIteratorException":"java.nio.file.DirectoryIteratoratorexception\r\n","java.util.Date.setDate(int)":"java.util.date.setdate（int）\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","java.sql.DatabaseMetaData.tableIndexHashed":"java.sql.databasemetadata.tableIndexhashed\r\n","java.security.Signer.Signer()":"java.security.signer.signer（）\r\n"," method will now return ":" 方法现在将返回\r\n","java.util.Objects.checkFromIndexSize(int, int, int)":"java.util.objects.checkfromindexsize（int，int，int）\r\n","Returns a pseudorandom, uniformly distributed ":"返回伪随机，均匀分布\r\n","if the object to look for isn't of the correct\n                type.":"如果要寻找的对象不是正确的\r\n                类型。\r\n","java.util.GregorianCalendar.GregorianCalendar(int, int, int)":"java.util.gregoriancalendar.gregoriancalendar（int，int，int）\r\n","java.security.KeyStore.getCertificate(java.lang.String)":"java.security.keystore.getCertificate（java.lang.string）\r\n","java.util.DuplicateFormatFlagsException.DuplicateFormatFlagsException(java.lang.String)":"java.util.duplicateformatflagsexception.duplicateformatflagsexception（java.lang.string）\r\n","Marks the second part of a time.":"标志着第二部分的第二部分。\r\n","java.util.TreeMap.descendingKeySet()":"java.util.treemap.descendingkeyset（）\r\n","java.security.cert.CertPathBuilderSpi.CertPathBuilderSpi()":"java.security.cert.certpathbuilderspi.certpathbuilderspi（）\r\n","Abstract class for a revoked certificate in a CRL (Certificate\n            Revocation List).":"CRL中撤销证书的抽象类（证书\r\n            撤销列表）。\r\n","java.util.concurrent.CopyOnWriteArraySet":"java.util.concurrent.copyonwritearrayset\r\n","Returns this scanner's locale.":"返回该扫描仪的区域。\r\n","Returns a new bit set containing all the bits in the given byte\n            buffer between its position and limit.":"返回一个新的套件，其中包含给定字节中的所有位\r\n            缓冲区之间的位置和限制。\r\n","java.security.Security.getProperty(java.lang.String)":"java.security.security.getProperty（java.lang.string）\r\n","fixed-rate execution":"固定速率执行\r\n"," class, which is used to manage\n            algorithm parameters.":" 班级，用于管理\r\n            算法参数。\r\n"," where the\n            most-trusted CA is specified as a distinguished name and public key.":" 在哪里\r\n            最受信任的CA被指定为杰出的名称和公钥。\r\n","java.util.Collections.binarySearch(java.util.List, java.lang.Object)":"java.util.collections.binarysearch（java.util.list，java.lang.object）\r\n","java.text.MessageFormat.parseObject(java.lang.String, java.text.ParsePosition)":"java.text.messageformat.parseobject（java.lang.string，java.text.parseposition）\r\n","java.sql.ParameterMetaData.parameterModeUnknown":"java.sql.parametermetadata.parametermodeunknown\r\n","java.util.concurrent.CopyOnWriteArrayList.addAll(int, java.util.Collection)":"java.util.concurrent.copyonwritearraylist.addall（int，java.util.collection）\r\n","java.util.concurrent.ConcurrentLinkedQueue.ConcurrentLinkedQueue()":"java.util.concurrent.concurrentlinkedqueue.concurrentlinkedqueue（）\r\n","Returns the greatest element in this set less than or equal to\n            the given element, or ":"返回此组中最大的元素，小于或等于\r\n            给定的元素，或\r\n","java.security.spec.PKCS8EncodedKeySpec":"java.security.spec.pkcs8encodedkeyspec\r\n","java.security.cert.PKIXCertPathValidatorResult.clone()":"java.security.cert.pkixcertpathvalidatoresult.clone（）\r\n","Gets the OCSP responses. -or- Sets the OCSP responses.":"获取OCSP响应。 - 或设置OCSP响应。\r\n","Returns an iterator over the elements in this deque in proper sequence.":"以适当的顺序返回该deque中的元素。\r\n","if a key or value is not a string":"如果键或值不是字符串\r\n","rules == null":"规则== null\r\n","java.util.Locale.GERMAN":"java.util.locale.german\r\n","java.nio.file.FileSystemException.getFile()":"java.nio.file.filesystemexception.getFile（）\r\n","java.util.Hashtable.keys()":"java.util.hashtable.keys（）\r\n","An object that implements the Enumeration interface generates a\n            series of elements, one at a time.":"实现枚举接口的对象生成一个\r\n            一系列元素，一次。\r\n","java.security.cert.CertPathBuilderResult.clone()":"java.security.cert.certpathbuilderresult.clone（）\r\n","java.text.DateFormatSymbols.setWeekdays(java.lang.String[])":"java.text.dateformatsymbols.setweekdays（java.lang.string []）\r\n","Adds the specified member to the group.":"将指定成员添加到组中。\r\n","java.nio.file.Paths.get(java.net.URI)":"java.nio.file.paths.get（java.net.uri）\r\n","java.nio.file.SecureDirectoryStream":"java.nio.file.securedirectorystream\r\n","java.text.AttributedString":"java.text.AttributedString\r\n","java.security.interfaces.RSAPublicKey":"java.security.interfaces.rsapublickey\r\n","java.util.Collections.reverse(java.util.List)":"java.util.collections.redverse（java.util.list）\r\n","java.util.TreeSet.TreeSet(java.util.Collection)":"java.util.treeset.treeset（java.util.Collection）\r\n","GeneralSecurityException":"GeneralSecurityException\r\n","java.sql.ResultSet.updateBlob(int, java.io.InputStream, long)":"java.sql.Resultset.updateBlob（int，java.io.inputstream，long）\r\n","rules":"规则\r\n","#isValid valid":"#isvalid有效\r\n","java.util.ArrayDeque.ArrayDeque(java.util.Collection)":"java.util.arraydeque.arraydeque（java.util.collection）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>INTEGER</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>整数</code>。\r\n","java.sql.DatabaseMetaData.supportsSchemasInIndexDefinitions()":"java.sql.databasemetadata.supportsschemasinindexdefinitions（）\r\n","java.nio.file.AccessDeniedException.AccessDeniedException(java.lang.String)":"java.nio.file.accessdeniedexception.accessdeniedexception（java.lang.string）\r\n","java.sql.Statement.executeUpdate(java.lang.String, int[])":"java.sql.statement.executeupdate（java.lang.string，int []）\r\n","Resolve the given path against this path.":"解决给定路径的路径。\r\n","java.sql.SQLOutput.writeURL(java.net.URL)":"java.sql.sqloutput.writeurl（java.net.url）\r\n","Returns a new bit set containing all the bits in the given long\n            buffer between its position and limit.":"返回一个新的套件，其中包含给定长的所有位\r\n            缓冲区之间的位置和限制。\r\n","java.security.KeyPair.KeyPair(java.security.PublicKey, java.security.PrivateKey)":"java.security.keypair.keypair（java.security.publickey，java.security.privatekey）\r\n","java.sql.DatabaseMetaData.typePredNone":"java.sql.databasemetadata.typeprednone\r\n","java.sql.ResultSet.getShort(java.lang.String)":"java.sql.Resultset.getShort（java.lang.string）\r\n","Returns the standard or predefined name of the\n            to-be-generated EC domain parameters.":"返回标准或预定义的名称\r\n            要生成的EC域参数。\r\n","PKIXReason":"Pkixreason\r\n","ConcurrentNavigableMap":"ConcurrentNavigableMap\r\n","Creates a copy of this iterator.":"创建此迭代器的副本。\r\n","This class specifies an RSA private key.":"此课程指定RSA私钥。\r\n","java.sql.ResultSet.getDate(int)":"java.sql.Resultset.getDate（int）\r\n","java.util.SortedSet.spliterator()":"java.util.sortedset.spliterator（）\r\n","java.util.Arrays.parallelSort(int[], int, int)":"java.util.arrays.parallelsort（int []，int，int）\r\n","Returns whether this instance has an extension marked as CRITICAL that it\n cannot support.":"返回此实例是否具有标记为关键的扩展名\r\n 无法支持。\r\n","java.text.SimpleDateFormat.format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.simpledateformat.format（java.util.date，java.lang.stringbuffer，java.text.fieldposition）\r\n","java.security.acl.NotOwnerException":"java.security.acl.notownerexception\r\n","Checks whether or not the specified principal has the specified\n            permission.":"检查指定的原理是否已指定\r\n            允许。\r\n"," does\n             not contain any certificates.\n":" 做\r\n             不包含任何证书。\r\n\r\n","#nextLong":"#nextlong\r\n","java.util.concurrent.ConcurrentHashMap.forEachKey(long, java.util.function.Function, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachkey（long，java.util.function.function，java.util.function.consumer）\r\n","java.security.AlgorithmParametersSpi.engineInit(byte[], java.lang.String)":"java.security.algorithmparametersspi.engineinit（byte []，java.lang.string）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a <code>NClob</code> object\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> nclob </code>对象\r\n            在Java编程语言中。\r\n","Returns a KeyPairGenerator object that generates public/private\n            key pairs for the specified algorithm.":"返回一个生成公共/私有的按键机对象\r\n            指定算法的密钥对。\r\n","Returns the greatest key in this sorted map.":"返回此排序地图中的最大键。\r\n","java.text.RuleBasedCollator":"java.text.rulebasedcollat​​or\r\n","java.security.IdentityScope.getIdentity(java.security.PublicKey)":"java.security.IdentityScope.getIdentity（java.security.publickey）\r\n","if the pattern is ":"如果图案是\r\n","The attribute describing the language of a character.":"描述字符语言的属性。\r\n","Returns the 1-based position where an object is on this stack.":"返回该对象在此堆栈上的基于1个位置。\r\n","Inserts the specified element at the front of this deque.":"将指定元素插入此Deque的正面。\r\n","Factory and utility methods for ":"工厂和实用方法\r\n","java.security.spec.EllipticCurve.getB()":"java.security.spec.ellipticcurve.getb（）\r\n","if no provider provides the requested algorithm.\n":"如果没有提供商提供所请求的算法。\r\n\r\n","java.sql.CallableStatement.getArray(int)":"java.sql.callablestatement.getarray（int）\r\n","java.sql.CallableStatement.getBoolean(java.lang.String)":"java.sql.callablestatement.getboolean（java.lang.string）\r\n","Turns the digest function on or off.":"打开或关闭摘要功能。\r\n","java.text.AttributedCharacterIterator.getRunStart()":"java.text.AttributedCharacterator.getRunstart（）\r\n","java.util.FormattableFlags":"java.util.formattableflags\r\n","java.sql.CallableStatement.getNCharacterStream(int)":"java.sql.callablestatement.getncharacterstream（int）\r\n","java.sql.CallableStatement.getInt(java.lang.String)":"java.sql.callablestatement.getint（java.lang.string）\r\n","java.sql.PreparedStatement.setAsciiStream(int, java.io.InputStream, long)":"java.sql.preparedstatement.setasciistream（int，java.io.inputstream，long）\r\n","Constructs a new instance with the specified message and cause.":"用指定的消息和原因构造新实例。\r\n","java.security.cert.CertPathValidatorException":"java.security.cert.certpathvalidatorexception\r\n","Retrieves and removes the last element of this deque,\n or returns ":"检索并删除了这个Deque的最后一个元素，\r\n 或返回\r\n","Creates a Signature object for the specified algorithm.":"为指定算法创建一个签名对象。\r\n","if the current thread is not a\n member of a ForkJoinPool and was interrupted while waiting":"如果当前线程不是\r\n forkjoinpool的成员，在等待时被打断\r\n","Executes the given SQL statement and signals the driver with the\n            given flag about whether the\n            auto-generated keys produced by this <code>Statement</code> object\n            should be made available for retrieval.":"执行给定的SQL语句，并向驾驶员发出信号\r\n            给定的关于是否是否\r\n            此<code>语句</code>对象产生的自动生成的键\r\n            应该可以检索。\r\n","java.util.ResourceBundle.getLocale()":"java.util.resourcebundle.getlocale（）\r\n"," on some\n            collection of objects.":" 一些\r\n            集合对象。\r\n","java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition()":"java.time.zone.zoneoffsetTransitionrule.getTimedEfinition（）\r\n","java.util.concurrent.ConcurrentHashMap.entrySet()":"java.util.concurrent.concurrenthashmap.entryset（）\r\n","java.sql.PreparedStatement.setTime(int, java.sql.Time, java.util.Calendar)":"java.sql.preparedstatement.settime（int，java.sql.time，java.util.calendar）\r\n","Checks if this field represents a component of a time.":"检查此字段是否代表一个时间的组成部分。\r\n","if encoding the issuer fails.\n":"如果编码发行人失败。\r\n\r\n","Gets an update count for the current result if it is not a ":"如果不是\r\n","java.text.StringCharacterIterator.setIndex(int)":"java.text.StringCharacterator.setIndex（int）\r\n","Removes all of the elements from this list.":"从此列表中删除所有元素。\r\n","Returns an <code>InputStream</code> object that contains a partial <code>Blob</code> value,\n            starting  with the byte specified by pos, which is length bytes in length.":"返回包含部分<code> blob </code>值的<code> inputStream </code>对象\r\n            从POS指定的字节开始，该字节长度为长度。\r\n"," that may be\n            used to read text from the file in an efficient manner.":" 那可能\r\n            用于以有效的方式从文件中读取文本。\r\n","java.util.Arrays.parallelSetAll(java.lang.Object[], java.util.function.IntFunction)":"java.util.arrays.parallesetall（java.lang.object []，java.util.function.intfunction）\r\n","Returns a specification (key material) of the given key object.":"返回给定关键对象的规范（关键材料）。\r\n","A <code>CollationKey</code> represents a <code>String</code> under the\n            rules of a specific <code>Collator</code> object.":"<code> Collat​​ionKey </code>表示<code>字符串</code>\r\n            特定<code>碰撞器</code>对象的规则。\r\n","java.util.concurrent.DelayQueue.remainingCapacity()":"java.util.concurrent.delayqueue.remainingcapacity（）\r\n"," class to be used for serialization and\n deserialization of ":" 用于序列化和\r\n 供应\r\n","Updates the data to be signed or verified using the specified\n            ByteBuffer.":"使用指定的数据更新要签名或验证的数据\r\n            ByteBuffer。\r\n","java.util.Calendar.getLeastMaximum(int)":"java.util.calendar.getleastmaximum（int）\r\n","java.util.Arrays.parallelSetAll(long[], java.util.function.IntToLongFunction)":"java.util.arrays.parallesetall（long []，java.util.function.inttolongfunction）\r\n","Sets (atomically) the pending count to the given count only if\n            it currently holds the given expected value.":"（从原子上）仅在\r\n            它目前拥有给定的预期价值。\r\n","if the initial capacity is\n negative or the load factor or concurrencyLevel are\n nonpositive\n":"如果初始容量是\r\n 负载因子或同意因子是\r\n 非阳性\r\n\r\n","Returns the next token from this string tokenizer.":"从此字符串令牌返回下一个令牌。\r\n","Removes and returns a key-value mapping associated with\n            the greatest key in this map, or ":"删除并返回与之关联的键值映射\r\n            此地图中的最大钥匙，或\r\n","Get the negative suffix. -or- Set the negative suffix.":"获得负后缀。 - 或设置负后缀。\r\n","java.security.Provider.computeIfAbsent(java.lang.Object, java.util.function.Function)":"java.security.provider.computeifabsent（java.lang.object，java.util.function.function.function）\r\n","Performs the given action for each non-null transformation\n            of each (key, value).":"为每个非无效转换执行给定的动作\r\n            每个（钥匙，值）。\r\n","java.util.TreeMap.floorKey(java.lang.Object)":"java.util.treemap.floorkey（java.lang.Object）\r\n"," field indicating the\n            eleventh month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的十一个月在格里高利和朱利安日历中。\r\n","java.util.Formatter.Formatter(java.io.File, java.lang.String)":"java.util.formatter.formatter（java.io.file，java.lang.string）\r\n","structurally modified":"结构修改\r\n","Sets all of the bits in this BitSet to ":"将此位置中的所有位设置为\r\n","Returns the associated elliptic curve domain\n            parameters.":"返回相关的椭圆曲线域\r\n            参数。\r\n","java.util.ListIterator.previousIndex()":"java.util.listiterator.previousIndex（）\r\n","java.security.spec.PSSParameterSpec.getSaltLength()":"java.security.spec.pssparameterspec.getsaltlength（）\r\n","if a database error is encountered.\n":"如果遇到数据库错误。\r\n\r\n","\n objects returned from this statement.":"\r\n 从此语句返回的对象。\r\n","This class represents a public or private key in encoded format.":"此类代表以编码格式的公共或私钥。\r\n","java.util.Collections.checkedMap(java.util.Map, java.lang.Class, java.lang.Class)":"java.util.collections.CheckedMap（java.util.map，java.lang.class，java.lang.class）\r\n","Localized decimal style used in date and time formatting.":"日期和时间格式中使用的本地化小数样式。\r\n","Returns the prime ":"返回素数\r\n","The MGF1ParameterSpec which uses \"SHA-224\" message digest.":"使用“ SHA-224”消息摘要的MGF1ParametersPec。\r\n","java.security.cert.CertificateEncodingException.CertificateEncodingException(java.lang.Throwable)":"java.security.cert.certificateEncodingException.certificateEncodingException（java.lang.throwable）\r\n","java.sql.DatabaseMetaData.functionReturnsTable":"java.sql.databasemetadata.FunctionReturnstable\r\n","Retrieves the value of the designated JDBC <code>DOUBLE</code> parameter as a <code>double</code>\n            in the Java programming language.":"检索指定的JDBC <code> double </code>参数为<code> double </code>\r\n            在Java编程语言中。\r\n","Constructs a SimpleTimeZone with the given base time zone offset from\n            GMT, time zone ID, and rules for starting and ending the daylight\n            time.":"构建一个具有给定的基本时区偏移的SimpletimeZone\r\n            GMT，时区ID以及开始和结束日光的规则\r\n            时间。\r\n","java.util.LinkedList.peek()":"java.util.linkedlist.peek（）\r\n","Returns the last element in this set.":"返回此集合中的最后一个元素。\r\n"," and\n            otherwise returns the non-":" 和\r\n            否则返回非 - \r\n","java.util.Arrays.hashCode(long[])":"java.util.arrays.hashcode（long []）\r\n","java.util.SplittableRandom.SplittableRandom()":"java.util.splittablerandom.splittablerandom（）\r\n","Returns true if the specified character offset is a text boundary.":"如果指定的字符偏移是文本边界，则返回true。\r\n","java.security.cert.CertPathValidatorSpi.CertPathValidatorSpi()":"java.security.cert.certpathvalidatorspi.certpathvalidatorspi（）\r\n","java.util.concurrent.ConcurrentHashMap.reduceEntries(long, java.util.function.Function, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reduceentries（long，java.util.function.function，java.util.function.bifunction.bifunction）\r\n","Returns the size of a file (in bytes).":"返回文件的大小（以字节为单位）。\r\n","#SHORT short":"#short Short\r\n","indicating the\n ordinal number of the day of the week within the current month. ":"指示\r\n 本月的一周中的序数。\r\n","Returns the <em>real</em> path of an existing file.":"返回现有文件的<em>真实</em>路径。\r\n","java.util.concurrent.CompletableFuture.complete(java.lang.Object)":"java.util.concurrent.completablefuture.complete（java.lang.object）\r\n","java.util.DoubleSummaryStatistics":"Java.util.DoublesummaryStatistics\r\n","java.util.concurrent.CopyOnWriteArrayList.set(int, java.lang.Object)":"java.util.concurrent.copyonwritearraylist.set（int，java.lang.object）\r\n","Returns a list of all 2-letter country codes defined in ISO 3166.":"返回ISO 3166中定义的所有2字母国家代码的列表。\r\n","java.util.Date.setMinutes(int)":"java.util.date.setminutes（int）\r\n","java.sql.ResultSet.updateNString(java.lang.String, java.lang.String)":"java.sql.Resultset.updatenstring（java.lang.string，java.lang.string）\r\n","Resets the internal bookkeeping state of this task, allowing a\n            subsequent ":"重置此任务的内部簿记状态，允许\r\n            随后的\r\n","if any error occurs\n":"如果发生任何错误\r\n\r\n","java.util.Vector.insertElementAt(java.lang.Object, int)":"java.util.vector.insertelementat（java.lang.Object，int）\r\n","Implements execution conventions for CountedCompleters.":"实施计数程序的执行约定。\r\n","java.nio.file.attribute.BasicFileAttributes.lastModifiedTime()":"java.nio.file.attribute.basicfileattributes.lastmodifiedTime（）\r\n","java.util.LinkedList.addFirst(java.lang.Object)":"java.util.linkedlist.addfirst（java.lang.Object）\r\n","java.sql.ParameterMetaData.parameterModeInOut":"java.sql.parametermetadata.parametermodeinout\r\n","RunnableFuture":"RunnableFuture\r\n","Gets the direction in which rows are fetched for this ":"获取为此提取行的方向\r\n","java.text.DecimalFormatSymbols":"java.text.decimalformatsymbols\r\n","java.text.AttributedString.AttributedString(java.lang.String)":"java.text.AttributedString.AttributedString（java.lang.string）\r\n","java.util.Calendar.JANUARY":"java.util.calendar\r\n","if the extension decoding fails.\n":"如果扩展解码失败。\r\n\r\n","Static factory to retrieve a type 3 (name based) ":"检索3型（基于名称）的静态工厂\r\n","java.util.Collection.add(java.lang.Object)":"Java.util.Collection.Add（Java.lang.Object）\r\n","Creates a <code>CallableStatement</code> object for calling\n            database stored procedures.":"创建<code> CallableStatement </code>用于调用的对象\r\n            数据库存储过程。\r\n","Deque":"Deque\r\n"," appropriate for a locale.":" 适用于语言环境。\r\n","java.util.Properties.store(java.io.Writer, java.lang.String)":"java.util.properties.store（java.io.Writer，java.lang.string）\r\n","#nextBigDecimal":"#nextbigdecimal\r\n","java.security.spec.ECPrivateKeySpec":"java.security.spec.ecprivatekeyspec\r\n","java.util.Scanner.hasNextLong(int)":"java.util.scanner.hasnextlong（int）\r\n","java.sql.CallableStatement.getCharacterStream(java.lang.String)":"java.sql.callablestatement.getCharacterstream（java.lang.string）\r\n","java.sql.DatabaseMetaData.nullsAreSortedAtEnd()":"java.sql.databasemetadata.nullsaresortedatend（）\r\n","java.sql.Connection.rollback()":"java.sql.connection.rollback（）\r\n","Overrides Cloneable":"覆盖可克隆\r\n","Generates a public key object from the provided key specification\n            (key material).":"从提供的密钥规范中生成公共密钥对象\r\n            （关键材料）。\r\n","java.sql.CallableStatement.wasNull()":"java.sql.callablestatement.wasnull（）\r\n","java.nio.file.spi.FileSystemProvider.newInputStream(java.nio.file.Path, java.nio.file.OpenOption)":"java.nio.file.spi.filesystemprovider.newinputstream（java.nio.file.path，java.nio.file.openoption）\r\n","Probes the content type of a file.":"探索文件的内容类型。\r\n","Returns a <code>Set</code> of the keys contained <em>only</em>\n            in this <code>ResourceBundle</code>.":"返回包含<em>的键的<code> set </code> </em>\r\n            在此<code> ResourceBundle </code>中。\r\n","if encoding decoding fails.":"如果编码解码失败。\r\n","\n             is negative; if ":"\r\n             负面；如果\r\n","Constant that indicates that this ":"常数表明这\r\n","Returns the arithmetic mean of values recorded, or zero if no values have been\n            recorded.":"返回记录的值的算术平均值，或者如果没有值为零\r\n            记录。\r\n","java.text.DateFormat.SHORT":"java.text.dateformat.short\r\n","java.util.Date.Date(java.lang.String)":"java.util.date.date（java.lang.string）\r\n","java.util.BitSet.size()":"java.util.bitset.size（）\r\n","java.util.concurrent.ForkJoinTask.isCompletedAbnormally()":"java.util.concurrent.forkjointask.iscompletedabnormally（）\r\n","java.util.HashSet.HashSet()":"java.util.hashset.hashset（）\r\n","java.util.EnumSet.of(java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum)":"java.util.enumset.of（java.lang.enum，java.lang.enum，java.lang.enum，java.lang.enum）\r\n","java.util.concurrent.Executors.newWorkStealingPool(int)":"java.util.concurrent.executors.newworkstealingpool（int）\r\n","java.time.format.DateTimeFormatter.withDecimalStyle(java.time.format.DecimalStyle)":"java.time.format.datetimeformatter.withdecimalstyle（java.time.format.decimalstyle）\r\n","java.util.concurrent.Executors.newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)":"java.util.concurrent.executors.newsinglethreadscheduledexecutor（java.util.concurrent.threadfactory）\r\n","java.text.ParseException.ParseException(java.lang.String, int)":"java.text.parseexception.parseexception（java.lang.string，int）\r\n","java.util.Arrays.copyOf(byte[], int)":"java.util.arrays.copyof（byte []，int）\r\n"," table using the\n            ":" 使用\r\n            \r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string，java.lang.string，int，int，int，java.lang.throwable）\r\n","Updates the file permissions.":"更新文件权限。\r\n","java.util.Date.getTime()":"java.util.date.getTime（）\r\n","The long display name style, such as ":"长显示名称样式，例如\r\n","java.text.Bidi.DIRECTION_LEFT_TO_RIGHT":"java.text.bidi.direction_left_to_right\r\n","Retrieves and removes the first element of this deque, waiting\n            up to the specified wait time if necessary for an element to\n            become available.":"检索并删除此Deque的第一个元素，等待\r\n            如果必要的元素，则达到指定的等待时间\r\n            可用。\r\n","Returns the hash code value for this map.":"返回此地图的哈希代码值。\r\n","Returns a copy of the flags component.":"返回标志组件的副本。\r\n","Performs the given action for each non-null transformation\n            of each value.":"为每个非无效转换执行给定的动作\r\n            每个值。\r\n","Opens or creates a file for writing, returning a ":"打开或创建一个用于写作的文件，返回\r\n","Returns an integer array which contains the order of the\n            middle term(s) of the reduction polynomial for polynomial\n            basis or null for normal basis.":"返回一个包含的整数数组\r\n            多项式还原多项式的中期\r\n            正常基础的基础或无效。\r\n","java.nio.file.ClosedWatchServiceException.ClosedWatchServiceException()":"java.nio.file.closedwatchserviceexception.closedwatchserviceException（）\r\n","Returns the index of the first occurrence of the specified element\n            in this list, or -1 if this list does not contain the element.":"返回指定元素的第一次出现的索引\r\n            在此列表中，或-1如果此列表不包含元素。\r\n","A constant indicating that\n            dirty reads are prevented; non-repeatable reads and phantom\n            reads can occur.":"一个常数，表明\r\n            防止肮脏的读数；不可重复的读取和幻影\r\n            可能会发生读取。\r\n","java.util.TreeMap.higherEntry(java.lang.Object)":"java.util.treemap.higherentry（java.lang.Object）\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given <code>reason</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string）\r\n","Opens or creates a file for reading and/or writing, returning a file\n            channel to access the file.":"打开或创建用于阅读和/或写作的文件，返回文件\r\n            频道访问文件。\r\n","java.util.ServiceLoader.iterator()":"java.util.serviceloader.iterator（）\r\n","java.util.ResourceBundle.clearCache()":"java.util.resourcebundle.clearcache（）\r\n","Returns a clone if the implementation is cloneable.":"如果实现是可克隆的，则返回克隆。\r\n","java.security.AlgorithmParameterGenerator.AlgorithmParameterGenerator(java.security.AlgorithmParameterGeneratorSpi, java.security.Provider, java.lang.String)":"java.security.algorithmparametergenerator.algorithmparametergenerator（java.security.algorithmparametergeneratorspi，java.security.provider.provider，java.lang.lang.string）\r\n","Retrieves the value of a JDBC <code>SMALLINT</code> parameter as a <code>short</code>\n            in the Java programming language.":"检索JDBC <code> SmallInt </code>参数为<code>短</code>的值\r\n            在Java编程语言中。\r\n"," composed of bits from this ":" 由此组成\r\n","java.util.Random.Random(long)":"java.util.random.random（long）\r\n","Constructs a new file system that is identified by a ":"构建一个由\r\n"," containing all calendar types\n            supported by ":" 包含所有日历类型\r\n            支持\r\n","-2":"-2\r\n","java.util.Set.clear()":"java.util.set.clear（）\r\n","Retrieves and removes the head of this queue, waiting if necessary\n            until an element with an expired delay is available on this queue.":"检索并卸下该队列的头，如有必要\r\n            直到此队列上有过期延迟的元素。\r\n","Sets short weekday strings.":"设置短的工作日字符串。\r\n","java.sql.PreparedStatement.setTimestamp(int, java.sql.Timestamp)":"java.sql.preparedstatement.settimestamp（int，java.sql.timestamp）\r\n","java.util.Arrays.binarySearch(java.lang.Object[], java.lang.Object)":"java.util.arrays.binarysearch（java.lang.object []，java.lang.object）\r\n","Sets the subjectKeyIdentifier criterion.":"设置主题关键标准。\r\n","Returns the first element in this set.":"返回此集合中的第一个元素。\r\n","java.util.SortedSet.headSet(java.lang.Object)":"java.util.sortedset.headset（java.lang.Object）\r\n","java.nio.file.FileSystemAlreadyExistsException.FileSystemAlreadyExistsException()":"java.nio.file.filesysyalreadyexistSexception.filesyStyalReadyExistSexception（）\r\n","Returns the index of the element that would be returned by a\n            subsequent call to ":"返回将返回的元素的索引\r\n            随后致电\r\n","java.util.NavigableMap.ceilingKey(java.lang.Object)":"java.util.navigablemap.ceilingkey（java.lang.Object）\r\n","java.security.cert.CertPathValidator.getInstance(java.lang.String, java.security.Provider)":"java.security.cert.certpathvalidator.getinstance（java.lang.string，java.security.provider）\r\n","java.util.Collections.shuffle(java.util.List)":"java.util.collections.shuffle（java.util.list）\r\n"," or the reduction polynomial is not\n             valid.\n":" 或还原多项式不是\r\n             有效的。\r\n\r\n","java.util.Comparator.naturalOrder()":"java.util.comparator.naturalorder（）\r\n","java.util.concurrent.ConcurrentSkipListMap.lastKey()":"java.util.concurrent.concurrentskiplistmap.lastkey（）\r\n","Retrieves, but does not remove, the head of the queue represented by\n this deque (in other words, the first element of this deque), or\n returns ":"检索但不删除，队列的头由\r\n 这个deque（换句话说，这是该deque的第一个要素），或\r\n 返回\r\n","java.time.format.DateTimeFormatter.ISO_ORDINAL_DATE":"java.time.format.datetimeformatter.iso_ordinal_date\r\n","The default values for keys not found in this ":"此中找不到的键的默认值\r\n","java.util.SimpleTimeZone.setStartRule(int, int, int)":"java.util.simpletimezone.setstartrule（int，int，int）\r\n","java.util.ArrayDeque":"java.util.arraydeque\r\n","Sets the pattern.":"设置图案。\r\n","This interface represents a guard, which is an object that is used\n            to protect access to another object.":"该界面代表一个警卫，这是一个使用的对象\r\n            保护访问另一个对象。\r\n","java.util.NavigableSet.subSet(java.lang.Object, java.lang.Object)":"java.util.navigableset.subset（java.lang.object，java.lang.object）\r\n","java.security.cert.CertificateParsingException.CertificateParsingException(java.lang.String, java.lang.Throwable)":"java.security.cert.certificateparsingexception.certificateparsingexception（java.lang.string，java.lang.throwable）\r\n","java.sql.ResultSet.updateBytes(int, byte[])":"java.sql.Resultset.updatebytes（int，byte []）\r\n","java.security.spec.ECFieldFp":"java.security.spec.ecfieldfp\r\n","Returns the base ":"返回基地\r\n","java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.removefirstoccurrence（java.lang.object）\r\n","java.sql.PreparedStatement.setNCharacterStream(int, java.io.Reader, long)":"java.sql.preparedstatement.setncharacterstream（int，java.io.Reader，long）\r\n","Executes the given SQL statement, which returns a single\n            <code>ResultSet</code> object.":"执行给定的SQL语句，该语句返回单个\r\n            <code> Resultset </code>对象。\r\n","Rotates the elements in the specified list by the specified distance.":"将指定列表中指定距离的元素旋转。\r\n","java.security.cert.PKIXParameters.addCertPathChecker(java.security.cert.PKIXCertPathChecker)":"java.security.cert.pkixparameters.addcertpathchecker（java.security.cert.pkixcertpathchecker）\r\n","CertPathChecker":"certpathchecker\r\n","Creates a symbolic link to a target.":"创建与目标的符号链接。\r\n","java.util.ArrayList.ArrayList(java.util.Collection)":"java.util.arraylist.arraylist（java.util.collection）\r\n","FileTime":"filtime\r\n","java.security.cert.CertificateFactory.getCertPathEncodings()":"java.security.cert.certificatefactory.getCertPathenCodings（）\r\n","An array of possible values if the value for the field\n            <code>DriverPropertyInfo.":"如果字段的值\r\n            <code>驱动程序propertyinfo。\r\n","java.util.concurrent.CompletableFuture.copy()":"java.util.concurrent.completablefuture.copy（）\r\n","if the charset with the specified name is not supported.\n":"如果不支持带有指定名称的字符集。\r\n\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String, java.lang.String, int)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string，java.lang.string，int）\r\n","Tests if the specified object is a key in this hashtable.":"测试是否指定的对象是此标签中的键。\r\n","Gets short weekday strings.":"得到短的工作日字符串。\r\n","Creates an AttributedCharacterIterator instance that provides access to the entire contents of\n            this string.":"创建一个属性characterator实例，可访问对整个内容的访问\r\n            这个字符串。\r\n","Constructs a new, empty tree set, sorted according to the specified\n            comparator.":"构建一个新的空树集，根据指定的\r\n            比较器。\r\n","java.security.Signature.getInstance(java.lang.String)":"java.security.signature.getinstance（java.lang.string）\r\n","java.util.ArrayList.size()":"java.util.arraylist.size（）\r\n","Retrieves the designated parameter's database-specific type name.":"检索指定参数的数据库特定类型名称。\r\n",", each managed by a ":"，每个人都由\r\n","This is an interface of abstract methods for managing a\n            variety of identity certificates.":"这是用于管理一个抽象方法的接口\r\n            各种身份证书。\r\n","indicating the\n daylight savings offset in milliseconds.":"指示\r\n 日光节省以毫秒为单位。\r\n","java.security.KeyStore.aliases()":"java.security.keystore.aliases（）\r\n","Returns the time to live of the ResourceBundle ":"返回资源围栏的生活时间\r\n","java.security.cert.PKIXRevocationChecker.PKIXRevocationChecker()":"java.security.cert.pkixrevocation checker.pkixrevocation checker（）\r\n","java.text.MessageFormat.setFormat(int, java.text.Format)":"java.text.messageformat.setFormat（int，java.text.format）\r\n","if the XML data is not a valid\n             properties file.\n":"如果XML数据不是有效的\r\n             属性文件。\r\n\r\n","java.util.Collections.enumeration(java.util.Collection)":"Java.util.collections.Enumeration（Java.util.Collection）\r\n","java.security.cert.CertificateFactory.getInstance(java.lang.String)":"java.security.cert.certificatefactory.getinstance（java.lang.string）\r\n","The clock sequence value associated with this UUID.":"与此UUID关联的时钟序列值。\r\n","The constant indicating that the\n            nullability of a column's values is unknown.":"常数表明\r\n            列值的无效性是未知的。\r\n","java.security.cert.PKIXParameters.setAnyPolicyInhibited(boolean)":"java.security.cert.pkixparameters.setanypolicyinused（boolean）\r\n","java.security.SecureRandom.getSeed(int)":"java.security.securerandom.getseed（int）\r\n","A container object which may or may not contain a non-null value.":"可能包含或可能不包含非零值的容器对象。\r\n","java.security.cert.X509CertSelector.addSubjectAlternativeName(int, byte[])":"java.security.cert.x509certselector.addsubjectalternativename（int，byte []）\r\n","java.nio.file.spi.FileSystemProvider.installedProviders()":"java.nio.file.spi.filesystemprovider.installedproviders（）\r\n","java.security.spec.X509EncodedKeySpec":"java.security.spec.x509encodedkeyspec\r\n","java.util.concurrent.CompletableFuture.completedStage(java.lang.Object)":"java.util.concurrent.completablefuture.completedstage（java.lang.object）\r\n","java.security.Security.insertProviderAt(java.security.Provider, int)":"java.security.security.insertproviderat（java.security.provider，int）\r\n","Creates and returns a new instance of the implementation described by\n this ":"创建并返回由\r\n 这个\r\n","Writes the next attribute to the stream as a Java short.":"将下一个属性写入流的java短。\r\n","java.text.DateFormat.HOUR0_FIELD":"java.text.dateformat.hour0_field\r\n","getMessage":"GetMessage\r\n"," throws for any pair of elements.\n":" 扔给任何一对元素。\r\n\r\n","java.util.NavigableSet.ceiling(java.lang.Object)":"java.util.navigableset.ceiling（java.lang.Object）\r\n","if an error occurs accessing the database or the ":"如果发生错误访问数据库或\r\n","Returns the set of OIDs of the extension(s) marked as CRITICAL, that this\n implementation manages.":"返回标记为关键的扩展的OID集\r\n 实施管理。\r\n","java.util.UUID.fromString(java.lang.String)":"java.util.uuid.fromstring（java.lang.string）\r\n","An object to iterate over the entries in a directory.":"目录中的条目上迭代的对象。\r\n","java.security.cert.CertPathValidatorException.CertPathValidatorException(java.lang.String, java.lang.Throwable)":"java.security.cert.certpathvalidatorexception.certpathvalidatorexception（java.lang.string，java.lang.lang.throwable）\r\n","java.security.cert.PolicyNode":"java.security.cert.policynode\r\n","Returns the amount of time to be added to local standard time\n            to get local wall clock time.":"返回将要添加到本地标准时间的时间\r\n            获取本地壁时钟时间。\r\n","Sorts the specified array into ascending numerical order.":"将指定的数组分为上升的数值顺序。\r\n","java.security.KeyFactorySpi.engineGeneratePublic(java.security.spec.KeySpec)":"Java.security.KeyFactorySpi.EngineGeneratePublic（java.security.spec.keyspec）\r\n","Gets the character at the current position (as returned by getIndex()).":"将角色处于当前位置（如GetIndex（）返回）。\r\n","java.security.interfaces.DSAPublicKey.serialVersionUID":"java.security.interfaces.dsapublickey.serialversionuid\r\n","java.util.TreeSet":"java.util.treeset\r\n","java.util.Collections.reverseOrder()":"java.util.collections.reverseorder（）\r\n","Populates this object with data read from the database.":"通过从数据库中读取数据来填充此对象。\r\n"," locale and the\n            specified pattern.":" 语言环境和\r\n            指定模式。\r\n","Constructs a <code>GregorianCalendar</code> based on the current time\n            in the given time zone with the default\n            ":"基于当前时间构建<code> GregorianCalendar </code>\r\n            在给定的时区，默认\r\n            \r\n","java.util.LinkedList.offer(java.lang.Object)":"java.util.linkedlist.offer（java.lang.Object）\r\n","Returns the <em>type</em> of this file store.":"返回此文件存储的<em>类型</em>。\r\n","java.util.concurrent.ForkJoinTask.quietlyComplete()":"java.util.concurrent.forkjointask.quietlycomplete（）\r\n","Sets the designated parameter to a <code>InputStream</code> object.":"将指定的参数设置为<code> inputStream </code>对象。\r\n","java.security.AlgorithmParameterGenerator":"java.security.AlgorithMparameTremeterGenerator\r\n","Field number for <code>get</code> and <code>set</code> indicating the day\n            of the week.":"<code> get </code>和<code> set </code>指示这一天的字段编号\r\n            一周中的。\r\n","Returns the index of the first occurrence of the specified element in\n            this list, searching forwards from ":"返回在\r\n            此列表，从\r\n","java.security.Signer.Signer(java.lang.String)":"java.security.signer.signer（java.lang.string）\r\n","java.security.KeyPairGeneratorSpi.generateKeyPair()":"java.security.keypairgeneratorspi.generateKeypair（）\r\n","The constant indicating that the mode of the parameter is unknown.":"表示参数模式未知的常数。\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getOtherPrimeInfo()":"java.security.spec.rsamultimeprimeprimprivatecrtkeyspec.getotherprimeinfo（）\r\n","\n            that may be used to write text to the file in an efficient manner.":"可以用来有效地将文本写入文件。\r\n","java.util.Dictionary.elements()":"java.util.dictionary.elements（）\r\n","Lookup a user principal by name.":"查找用户校长按名称。\r\n","Writes an SQL <code>NCLOB</code> value to the stream.":"将SQL <code> nclob </code>值写入流。\r\n","Unchecked exception thrown when an attempt is made to invoke an operation on\n            a file and the file system is closed.":"当尝试调用操作时，未选中的例外\r\n            文件和文件系统已关闭。\r\n","java.util.Collections.reverseOrder(java.util.Comparator)":"java.util.collections.reverseorder（java.util.comparator）\r\n","Retrieves and removes the head of this queue, waiting if necessary\n            until an element becomes available.":"检索并卸下该队列的头，如有必要\r\n            直到元素可用。\r\n","java.security.AlgorithmParameterGenerator.getInstance(java.lang.String)":"java.security.algorithmparametergenerator.getInstance（java.lang.string）\r\n"," contains rules with invalid collation rule\n             syntax.\n":" 包含无效整理规则的规则\r\n             句法。\r\n\r\n","java.util.InputMismatchException":"java.util.inputMismatchException\r\n","Constructs an iterator with the specified initial index.":"用指定的初始索引构造迭代器。\r\n"," with the indicated parallelism\n            level, the #defaultForkJoinWorkerThreadFactory default thread factory,\n            no UncaughtExceptionHandler, and non-async LIFO processing mode.":" 与指定的平行性\r\n            级别，#defaultforkjoinworkerThreadFactory默认线程工厂，\r\n            没有uncaughtexceptionHandler和非ASYNC LIFO处理模式。\r\n","if deserialization fails.\n":"如果避免失败。\r\n\r\n","java.security.cert.X509Certificate.getSigAlgParams()":"java.security.cert.x509certificate.getsigalgparams（）\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.Throwable)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.throwable）\r\n","java.util.Arrays.binarySearch(long[], int, int, long)":"java.util.arrays.binarysearch（long []，int，int，long）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>byte</code> array in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            <code>字节</code> Java编程语言中的数组。\r\n","Constructs a KeyStoreException with the specified detail\n            message.":"用指定的详细信息构建一个密钥库exception\r\n            信息。\r\n","Constructs a deque initially containing the elements of\n            the given collection, added in traversal order of the\n            collection's iterator.":"构造最初包含元素的Deque\r\n            给定的集合，按遍历顺序添加\r\n            收集的迭代器。\r\n","java.sql.DatabaseMetaData.getAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getAttributes（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.TreeSet.headSet(java.lang.Object, boolean)":"java.util.treeset.headset（java.lang.Object，boolean）\r\n","java.security.spec.ECField":"java.security.spec.ecfield\r\n","Returns an unmodifiable view of the specified collection.":"返回指定集合的​​无可错位视图。\r\n","Indicates that whether <code>NULL</code> values are allowed\n            is unknown.":"指示是否允许<code> null </code>值\r\n            是未知的。\r\n","java.security.Signature.initSign(java.security.PrivateKey)":"java.security.signature.initsign（java.security.privatekey）\r\n","Inserts the specified element into this queue if it is possible to do\n            so immediately without violating capacity restrictions.":"如果可以执行，将指定元素插入此队列\r\n            因此，立即不违反能力限制。\r\n","Returns an <a href=\"#unmodifiable\">unmodifiable Set</a> containing the elements\n            of the given Collection.":"返回<a href=\"#unmodifable\">无法解码的集</a>包含元素\r\n            给定的收藏。\r\n","Reseeds this random object.":"播种此随机对象。\r\n","java.text.MessageFormat.getLocale()":"java.text.messageformat.getlocale（）\r\n","java.sql.DatabaseMetaData.supportsStoredFunctionsUsingCallSyntax()":"java.sql.databasemetadata.SupportStorStoredFunctionsCallsyNtax（）\r\n","Retrieves whether auto-generated keys can be retrieved after\n            a statement has been executed":"检索是否可以在\r\n            已执行声明\r\n"," if this collection contains all of the elements\n            in the specified collection.":" 如果此集合包含所有元素\r\n            在指定的集合中。\r\n","java.util.ServiceLoader.reload()":"java.util.serviceloader.reload（）\r\n","Reads an SQL <code>NCLOB</code> value from the stream and returns it as a\n            <code>NClob</code> object in the Java programming language.":"从流中读取sql <code> nclob </code>值，并将其返回为\r\n            <code> NCLOB </code> Java编程语言中的对象。\r\n","java.util.TimeZone.getAvailableIDs()":"java.util.timezone.getavailableids（）\r\n","Returns a view of the portion of this map whose keys are greater than (or\n            equal to, if ":"返回该地图部分的视图，其密钥大于\r\n            等于，如果\r\n","java.util.Locale.CHINESE":"java.util.locale.chinese\r\n","Gets the timeout value for the statement's execution time.":"获取语​​句执行时间的超时值。\r\n","Appends the chronology name to the formatter.":"将年表名称附加到格式化器中。\r\n"," to be serialized with a\n            ":" 用一个\r\n            \r\n","Creates a new link (directory entry) for an existing file.":"为现有文件创建一个新链接（目录条目）。\r\n","If a remaining element exists, performs the given action on it,\n            returning ":"如果存在剩余的元素，请执行给定的操作，\r\n            返回\r\n","\n            otherwise returns ":"\r\n            否则返回\r\n","Retrieves the designated parameter's SQL type.":"检索指定参数的SQL类型。\r\n","java.util.TimerTask.scheduledExecutionTime()":"java.util.timertask.scheduledexecutiontime（）\r\n","Assigns the given certificate to the given alias.":"将给定证书分配给给定的别名。\r\n","CharacterIterator":"字符标准器\r\n","Returns the prime's crtCoefficient.":"返回Prime的CRTCOFFIEFFIED。\r\n","java.util.concurrent.DelayQueue.offer(java.util.concurrent.Delayed)":"java.util.concurrent.delayqueue.offer（java.util.concurrent.delayed）\r\n","Returns the type of this certificate.":"返回此证书的类型。\r\n","java.security.spec.ECFieldFp.ECFieldFp(java.math.BigInteger)":"java.security.spec.ecfieldfp.ecfieldfp（java.math.biginteger）\r\n","Appends an instant using ISO-8601 to the formatter, formatting fractional\n            digits in groups of three.":"将使用ISO-8601的即时附加到格式化器中，格式化分数\r\n            三个小组的数字。\r\n"," object from the\n            given keysize and public-exponent value.":" 来自\r\n            给定关键和公共点数值。\r\n","java.util.concurrent.CopyOnWriteArraySet.CopyOnWriteArraySet(java.util.Collection)":"java.util.concurrent.copyonwritearrayset.copyonwritearrayset（java.util.collection）\r\n","Updates the designated column with an ascii stream value, which will have\n            the specified number of bytes.":"更新具有ASCII流值的指定列，它将具有\r\n            指定的字节数。\r\n"," is empty or if decoding of the name\n             constraints fail.\n":" 是空的，或者是名称的解码\r\n             约束失败。\r\n\r\n","java.util.Calendar.getMinimum(int)":"java.util.calendar.getminimim（int）\r\n","java.sql.DatabaseMetaData.usesLocalFilePerTable()":"java.sql.databasemetadata.useslocalfilepertable（）\r\n","0A":"0a\r\n","java.util.OptionalDouble.orElseThrow(java.util.function.Supplier)":"java.util.optionaldouble.orelsethrow（java.util.function.supplier）\r\n","java.util.FormatFlagsConversionMismatchException.FormatFlagsConversionMismatchException(java.lang.String, char)":"java.util.formatflagsconversionmismatchexception.formatflagsconversionmismatchexception（java.lang.string，char）\r\n","java.util.AbstractMap.remove(java.lang.Object)":"java.util.abstractmap.remove（java.lang.Object）\r\n","Calculates the hash code for objects of type ":"计算类型对象的哈希代码\r\n","java.util.concurrent.CyclicBarrier.CyclicBarrier(int, java.lang.Runnable)":"java.util.concurrent.cyclarer.cyclarrier（int，java.lang.runnable）\r\n"," is not 1.\n":" 不是1。\r\n\r\n","Returns an immutable map containing five mappings.":"返回一张包含五个映射的不变地图。\r\n","java.sql.ResultSet.updateString(java.lang.String, java.lang.String)":"java.sql.Resultset.updateString（java.lang.string，java.lang.string）\r\n"," field indicating\n            Sunday.":" 指示字段\r\n            星期日。\r\n","Returns true if the given principal is an owner of the ACL.":"如果给定的委托人是ACL的所有者，则返回为真。\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code> and <code>SQLState</code>.":"用给定的\r\n            <code>原因</code>和<code> sqlstate </code>。\r\n","Unchecked exception thrown when the argument corresponding to the format\n            specifier is of an incompatible type.":"当参数与格式相对应时，未选中的例外\r\n            指定词是不兼容的类型。\r\n","Returns the (alias) name of the first keystore entry whose certificate\n            matches the given certificate.":"返回证书的第一个密钥库条目的（别名）名称\r\n            匹配给定证书。\r\n","java.sql.ResultSet.next()":"java.sql.resultset.next（）\r\n","java.security.KeyStore.getType()":"java.security.keystore.getType（）\r\n","equal":"平等的\r\n","Performs the given action for each key.":"为每个键执行给定的动作。\r\n","java.util.GregorianCalendar.getGregorianChange()":"java.util.gregoriancalendar.getGregorianChange（）\r\n","Returns a new CompletableFuture that is already completed\n            exceptionally with the given exception.":"返回已经完成的新的完整未图\r\n            异常具有给定的例外。\r\n","Gets the character that represents the decimal point.":"获取代表小数点的字符。\r\n","java.sql.ResultSet.updateString(int, java.lang.String)":"java.sql.Resultset.updateString（int，java.lang.string）\r\n","java.security.KeyPair.getPublic()":"java.security.keypair.getpublic（）\r\n","LDAPCertStoreParameters":"LDAPCERTSTOREPARAMETER\r\n","java.util.HashSet.HashSet(java.util.Collection)":"java.util.hashset.hashset（java.util.Collection）\r\n","java.text.AttributedString.addAttribute(java.text.Attribute, java.lang.Object)":"java.text.attributtedstring.addattribute（java.text.attribute，java.lang.object）\r\n","java.security.acl.Acl.checkPermission(java.security.Principal, java.security.acl.Permission)":"java.security.acl.acl.acl.checkpermission（java.security.principal，java.security.acl.permission）\r\n","Retrieves the value of the designated JDBC <code>DATALINK</code> parameter as a\n            <code>java.":"检索指定的JDBC <code> datalink </code>参数为一个\r\n            <code> Java。\r\n","java.nio.file.Path.register(java.nio.file.WatchService, java.nio.file.Kind)":"java.nio.file.path.register（java.nio.file.watchservice，java.nio.file.kind）\r\n","java.nio.file.Files.getOwner(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.getowner（java.nio.file.path，java.nio.file.linkoption）\r\n"," if no space is\n            currently available.":" 如果没有空间\r\n            目前可用。\r\n","Adds a certificate for this identity.":"为此身份添加证书。\r\n","An immutable valid policy tree node as defined by the PKIX certification\n            path validation algorithm.":"由PKIX认证定义的不变的有效策略树节点\r\n            路径验证算法。\r\n","java.security.cert.X509CertSelector.setPathToNames(java.util.Collection)":"java.security.cert.x509certselector.setpathtonames（java.util.collection）\r\n","Retrieves and removes the head of this queue,\n or returns ":"检索并卸下该队列的头部，\r\n 或返回\r\n","If the pending count is nonzero, (atomically) decrements it.":"如果待处理计数为非零，则（从原子上）将其降低。\r\n","java.security.cert.PKIXBuilderParameters":"java.security.cert.pkixbuilderparameters\r\n","java.util.TreeMap.lastKey()":"java.util.treemap.lastkey（）\r\n","A standard set of fields.":"一组标准的字段。\r\n","X509CRLSelector":"X509CRLSELECTOR\r\n","java.security.PublicKey":"java.security.publickey\r\n","PolicyQualifierInfo":"PolicyQualifierInfo\r\n","java.security.spec.RSAPublicKeySpec.getModulus()":"java.security.spec.rsapublickeyspec.getmodulus（）\r\n","Returns the character offset in the original text corresponding to the next\n            collation element. -or- Sets the iterator to point to the collation element corresponding to\n            the specified character (the parameter is a CHARACTER offset in the\n            original string, not an offset into its corresponding sequence of\n            collation elements).":"返回对应于下一个的原始文本中的字符偏移\r\n            整理元素。 - 或 - 设置迭代器以指向对应于\r\n            指定的字符（参数是字符偏移\r\n            原始字符串，而不是其相应序列的偏移\r\n            整理元素）。\r\n","forward checking":"向前检查\r\n","java.time.temporal.IsoFields":"java.time.temporal.isofields\r\n","Return a copy of this object.":"返回此对象的副本。\r\n","when.getTime() ":"when.getTime（）\r\n","The ISO time formatter that formats or parses a time, with the\n            offset if available, such as '10:15', '10:15:30' or '10:15:30+01:00'.":"ISO时间格式化格式化或解析时间，并带有\r\n            如果有偏移，例如'10：15'，'10：15：30'或'10：15：30+01：00'。\r\n","<code>StringCharacterIterator</code> implements the\n            <code>CharacterIterator</code> protocol for a <code>String</code>.":"<code>字符串Characteritor </code>实现\r\n            <code> targiniterator </code> <code>字符串</code>的协议。\r\n","java.nio.file.Files.readSymbolicLink(java.nio.file.Path)":"java.nio.file.files.readsymboliclink（java.nio.file.path）\r\n","java.util.Arrays.sort(byte[])":"java.util.arrays.sort（byte []）\r\n","concurrencyLevel":"conturrencyLevel\r\n","An interface that is implemented by objects that perform match operations on\n            paths.":"由在上执行匹配操作的对象实现的接口\r\n            路径。\r\n","java.text.NumberFormat.setMaximumIntegerDigits(int)":"java.text.numberformat.setmaximumintegerdigits（int）\r\n","Creates a new DSAPublicKeySpec with the specified parameter values.":"使用指定的参数值创建一个新的DSAPUBLICKEYSPEC。\r\n","Sets the designated parameter to the given input stream, which\n            will have the specified number of bytes.":"将指定的参数设置为给定的输入流，\r\n            将具有指定的字节数。\r\n","provider == null || provider.isEmpty()":"提供者== null ||提供商。ISEMPTY（）\r\n","The root interface in the ":"根接口\r\n","java.util.Hashtable.containsValue(java.lang.Object)":"java.util.hashtable.containsvalue（java.lang.Object）\r\n"," if this set contains all of the elements of the\n            specified collection.":" 如果此组包含所有元素\r\n            指定的集合。\r\n","Constructs a <code>SQLRecoverableException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlrecoverableException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","java.util.Collections.EMPTY_MAP":"java.util.collections.empty_map\r\n","java.sql.Array.getArray(long, int, java.util.Map)":"java.sql.array.getarray（long，int，java.util.map）\r\n","Moves the cursor to the previous row in this\n            <code>ResultSet</code> object.":"将光标移至上一行\r\n            <code> Resultset </code>对象。\r\n","Returns the root node of the valid policy tree resulting from the\n            PKIX certification path validation algorithm.":"返回由有效策略树的根节点\r\n            PKIX认证路径验证算法。\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","java.security.MessageDigestSpi.clone()":"java.security.messagedigestspi.clone（）\r\n","Returns the size of the value of a user-defined attribute.":"返回用户定义属性的值的大小。\r\n","java.text.DateFormat.WEEK_OF_YEAR_FIELD":"java.text.dateformat.week_of_year_field\r\n","Returns a <code>Date</code> object representing this\n            <code>Calendar</code>'s time value (millisecond offset from the <a\n            href=\"#Epoch\">Epoch</a>\"). -or- Sets this Calendar's time with the given <code>Date</code>.":"返回<code> date </code>代表此的对象\r\n            <code>日历</code>的时间值（毫秒偏移<a\r\n            href =“＃epoch”> epoch </a>“）。或 - 设置给定<code> date </code>的日历时间。\r\n","java.sql.Struct":"java.sql.struct\r\n","indicating the\n day number within the current year. ":"指示\r\n 当年的日常数。\r\n","java.time.format.DateTimeFormatter.BASIC_ISO_DATE":"java.time.format.datetimeformatter.basic_iso_date\r\n","java.text.ChoiceFormat.ChoiceFormat(java.lang.String)":"java.text.ChoIceFormat.ChoCeformat（Java.lang.String）\r\n","Create a DecimalFormatSymbols object for the default\n            ":"为默认值创建一个Demalformatsymbols对象\r\n            \r\n","Gets the name that is suitable for displaying this currency for\n            the specified locale.":"获取适合显示此货币的名称\r\n            指定的地方。\r\n","Translates a key object, whose provider may be unknown or\n            potentially untrusted, into a corresponding key object of this key\n            factory.":"翻译一个关键对象，其提供者可能未知或\r\n            可能不受信任，成为此密钥的相应关键对象\r\n            工厂。\r\n"," with\n            no detail message.":" 和\r\n            没有详细信息。\r\n","java.time.format.DateTimeFormatter.getResolverStyle()":"java.time.format.datetimeformatter.getResolverstyle（）\r\n","if the key or value of a mapping is not a\n                String.":"如果映射的键或值不是\r\n                细绳。\r\n","Long.MIN_VALUE":"long.min_value\r\n","java.text.StringCharacterIterator.getBeginIndex()":"java.text.stringcharacterator.getBeginIndex（）\r\n","java.util.concurrent.ForkJoinPool.execute(java.lang.Runnable)":"java.util.concurrent.forkjoinpool.execute（java.lang.runnable）\r\n","java.util.concurrent.CancellationException":"java.util.concurrent.cancellationException\r\n","Creates a new timer whose associated thread may be specified to\n            Thread#setDaemon run as a daemon.":"创建一个新计时器，其关联线程可以指定为\r\n            线程＃setDaemon作为守护程序运行。\r\n","java.nio.file.attribute.UserPrincipalLookupService":"java.nio.file.attribute.userprincipallookupservice\r\n","Constructs an empty vector with the specified initial capacity and\n            capacity increment.":"用指定的初始容量构建一个空矢量\r\n            容量增加。\r\n","java.util.Optional":"java.util.optional\r\n"," using a password.":" 使用密码。\r\n","Sorts this list according to the order induced by the specified\n            ":"根据指定的顺序对此列表进行排序\r\n            \r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.sql.CallableStatement.getDate(java.lang.String)":"java.sql.callablestatement.getdate（java.lang.string）\r\n","java.util.EmptyStackException.EmptyStackException()":"java.util.emptystackexception.emptystackexception（）\r\n","Moves the cursor to the remembered cursor position, usually the\n            current row.":"将光标移至记忆的光标位置，通常\r\n            当前行。\r\n","java.security.cert.CollectionCertStoreParameters":"java.security.cert.collectioncertstoreparameters\r\n","This class implements the ":"该课程实现\r\n"," to be used when a ":" 在\r\n","Constructs a <code>Timestamp</code> object initialized\n            with the given values.":"构造<code> timestamp </code>对象初始化\r\n            具有给定值。\r\n","java.sql.SQLOutput.writeDate(java.sql.Date)":"java.sql.sqloutput.writedate（java.sql.date）\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.string，java.lang.string，java.lang.throwable.throwable）\r\n","java.util.EventObject":"java.util.eventObject\r\n","java.nio.file.Path.getName(int)":"java.nio.file.path.getName（int）\r\n","Character#isValidCodePoint":"字符＃iSvalidCodepoint\r\n","entry":"入口\r\n","java.text.StringCharacterIterator.last()":"java.text.StringCharacterator.last（）\r\n","#resolveSibling(Path) resolveSibling":"#resolvesibling（路径）解析\r\n","java.util.concurrent.ForkJoinTask.join()":"java.util.concurrent.forkjointask.join（）\r\n","formatter":"格式化\r\n","#endsWith(Path) endsWith(Path)":"#endswith（路径）endswith（路径）\r\n","Constructs an instance of this class with the unmatched format\n            specifier.":"使用无与伦比的格式构建此类的实例\r\n            说明符。\r\n","Creates a shallow copy of this hashtable.":"创建此标签的浅副本。\r\n","java.util.Currency.getInstance(java.lang.String)":"java.util.currency.getinstance（java.lang.string）\r\n","F:Java.Util.TimeZone.GetDisplayName":"f：java.util.timezone.getDisplayName\r\n","java.sql.CallableStatement.setAsciiStream(java.lang.String, java.io.InputStream, long)":"java.sql.callablestatement.setasciistream（java.lang.string，java.io.inputstream，long）\r\n","java.nio.file.spi.FileSystemProvider.checkAccess(java.nio.file.Path, java.nio.file.AccessMode)":"java.nio.file.spi.filesystemprovider.checkaccess（java.nio.file.path，java.nio.file.accessmode）\r\n","Checked exception thrown when an input character (or byte) sequence\n            is valid but cannot be mapped to an output byte (or character)\n            sequence.":"当输入字符（或字节）序列时，检查了异常\r\n            有效，但不能映射到输出字节（或字符）\r\n            序列。\r\n","java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay()":"java.time.zone.zoneoffsettransitionrule.ismidnightendofday（）\r\n","java.text.Annotation.Annotation(java.lang.Object)":"java.text.annotation.annotation（java.lang.Object）\r\n","Assigns the specified short value to each element of the specified\n            range of the specified array of shorts.":"将指定的短值分配给指定的每个元素\r\n            指定短裤阵列的范围。\r\n","java.sql.Time.Time(int, int, int)":"java.sql.sql.time.time（int，int，int）\r\n","An enumeration of cryptographic primitives.":"密码原始列出的列举。\r\n","\n            methods.":"\r\n            方法。\r\n","java.security.MessageDigestSpi.engineReset()":"java.security.messagedigestspi.enginereset（）\r\n","java.security.InvalidAlgorithmParameterException.InvalidAlgorithmParameterException(java.lang.String, java.lang.Throwable)":"java.security.invalidalgorithmparameterexception.invalidalgorithmparameterexception（java.lang.string，java.lang.thrang.throwable）\r\n","java.util.Timer.Timer(java.lang.String, boolean)":"java.util.timer.timer（java.lang.string，布尔）\r\n","A state object for collecting statistics such as count, min, max, sum, and\n            average.":"收集统计信息的状态对象，例如计数，最小，最大，总和和\r\n            平均。\r\n","java.security.PublicKey.serialVersionUID":"java.security.publickey.serialversionuid\r\n","java.util.AbstractCollection.remove(java.lang.Object)":"java.util.abstractcollection.remove（java.lang.Object）\r\n","java.text.DateFormat.format(java.util.Date)":"java.text.dateformat.format（java.util.date）\r\n","Constructs a new map containing the same mappings as the given map,\n            sorted according to the Comparable natural ordering of\n            the keys.":"构建一个包含与给定地图相同映射的新地图，\r\n            根据可比的自然顺序排序\r\n            按键。\r\n","java.util.Random.nextInt(int)":"java.util.random.nextint（int）\r\n"," has not been called, or ":" 尚未被调用，或\r\n","java.security.cert.CertPathValidatorException.getCertPath()":"java.security.cert.certpathvalidatorexception.getCertPath（）\r\n","Tests if some key maps into the specified value in this table.":"测试该表中指定值的某些密钥图。\r\n","java.nio.file.ReadOnlyFileSystemException.ReadOnlyFileSystemException()":"java.nio.file.readonlyfilesystemexception.readonlyfilesystemexception（）\r\n","java.util.concurrent.CyclicBarrier.reset()":"java.util.concurrent.cyclarer.reset（）\r\n","java.text.DateFormatSymbols":"java.text.dateformatsymbols\r\n","This immutable class specifies an elliptic curve public key with\n            its associated parameters.":"这个不变的班级指定了椭圆曲线的公钥\r\n            其关联的参数。\r\n","Returns the prime's exponent.":"返回Prime的指数。\r\n","Classes that handle custom formatting for the 's' specifier of ":"处理为“ S”指定符的自定义格式的类\r\n"," initially containing the elements of the\n            given collection of ":" 最初包含\r\n            给定收集\r\n"," are not valid in respect\n             to ":" 在方面无效\r\n             至\r\n","java.util.concurrent.ConcurrentLinkedDeque.spliterator()":"java.util.concurrent.concurrentlinkeddeque.spliterator（）\r\n"," representing the file store where a file\n            is located.":" 表示文件存储的文件存储\r\n            位于。\r\n","java.sql.Clob.free()":"java.sql.clob.free（）\r\n","java.nio.file.Watchable":"java.nio.file.Watchable\r\n","java.sql.CallableStatement.setClob(java.lang.String, java.io.Reader, long)":"java.sql.callablestatement.setClob（java.lang.string，java.io.Reader，long）\r\n","java.nio.file.Files.getAttribute(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption)":"java.nio.file.files.getAttribute（java.nio.file.path，java.lang.string，java.nio.file.linkoption）\r\n","java.sql.ResultSet.getShort(int)":"java.sql.Resultset.getShort（int）\r\n","Convenience method for comparing the equality of two strings based on\n            this Collator's collation rules.":"比较基于两个字符串的平等的便利方法\r\n            该碰撞者的整理规则。\r\n","if the class of the specified element\n         is incompatible with this deque (optional)":"如果指定元素的类\r\n         与此Deque（可选）不兼容\r\n","#parallelPrefix(Object[], BinaryOperator)":"#ParallealPrefix（Object []，binaryoperator）\r\n","java.util.Arrays.sort(short[], int, int)":"java.util.arrays.sort（short []，int，int）\r\n","java.sql.DriverManager.getLoginTimeout()":"java.sql.drivermanager.getLogIntimeout（）\r\n","Gets the minimal number of days in the first week.":"第一周的天数最少。\r\n","Sets the designated paramter to the given <code>String</code> object.":"将指定的参数设置为给定的<code> String </code>对象。\r\n","java.util.LinkedHashMap.removeEldestEntry(java.util.Entry)":"java.util.linkedhashmap.removeeldestentry（java.util.entry）\r\n","Constructs a MissingResourceException with the specified information.":"使用指定信息构造缺失的ResourceException。\r\n","Defines the file tree traversal options.":"定义文件树遍历选项。\r\n","java.util.ResourceBundle.getStringArray(java.lang.String)":"java.util.resourcebundle.getstringarray（java.lang.string）\r\n","java.math.BigInteger\n            BigInteger":"java.math.biginteger\r\n            Biginteger\r\n","java.sql.ResultSet.getSQLXML(java.lang.String)":"java.sql.Resultset.getSqlxml（java.lang.string）\r\n","java.security.cert.X509CertSelector.getSubject()":"java.security.cert.x509certselector.getSubject（）\r\n","java.util.concurrent.ConcurrentHashMap.searchEntries(long, java.util.function.Function)":"java.util.concurrent.concurrenthashmap.searchentries（long，java.util.function.function.function）\r\n","java.util.Vector.ensureCapacity(int)":"Java.util.Vector.ensurecapacity（INT）\r\n","java.security.cert.CertificateException":"java.security.cert.certificateException\r\n","java.text.StringCharacterIterator":"java.text.StringCharacterator\r\n","#AM_PM":"＃上午下午\r\n","java.sql.CallableStatement.getSQLXML(int)":"java.sql.callablestatement.getsqlxml（int）\r\n"," enumerates the supported key types.":" 列举支持的密钥类型。\r\n","Constructs a <code>SQLTransientException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqltransientException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Returns a comparator that imposes the reverse of the <em>natural\n            ordering</em> on a collection of objects that implement the\n            ":"返回一个比较器，该比较器强加了自然的反向\r\n            订购</em>在实现的对象集合上\r\n            \r\n","java.sql.DatabaseMetaData.sqlStateXOpen":"java.sql.databasemetadata.sqlstatexopen\r\n","java.util.AbstractMap.AbstractMap()":"java.util.abstractmap.abstractmap（）\r\n","java.sql.ResultSet.moveToCurrentRow()":"java.sql.Resultset.movetocurrentrow（）\r\n","This exception indicates one of a variety of certificate problems.":"此例外表明各种证书问题之一。\r\n","A file attribute view that provides a view of the file attributes commonly\n            associated with files on file systems used by operating systems that implement\n            the Portable Operating System Interface (POSIX) family of standards.":"提供文件属性的视图的文件属性视图通常\r\n            与操作系统使用的文件系统上的文件相关联\r\n            便携式操作系统接口（POSIX）标准家族。\r\n","java.sql.ResultSet.updateNClob(java.lang.String, java.io.Reader, long)":"java.sql.Resultset.updatenclob（java.lang.string，java.io.Reader，long）\r\n","java.sql.CallableStatement.getDouble(java.lang.String)":"java.sql.callablestatement.getDouble（java.lang.string）\r\n","Constructs a <code>SQLNonTransientException</code> object\n            with a given <code>reason</code>.":"构造<code> sqlnontransientException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","#parallelPrefix(int[], IntBinaryOperator)":"#ParallealPrefix（int []，intbinaryOperator）\r\n","java.util.Spliterator.SORTED":"java.util.spliterator.sorted\r\n","Returns a stream that can be used to read binary data from this SQL ":"返回可用于从此SQL读取二进制数据的流\r\n"," min, ":" 最小，\r\n","Adds a copy of the given ":"添加给定的副本\r\n","Maps the specified <code>key</code> to the specified\n            <code>value</code> in this dictionary.":"将指定的<code>键</code>映射到指定的\r\n            <code> value </code>在本字典中。\r\n","Performs an action when method ":"方法时执行动作\r\n","java.util.FormatterClosedException.FormatterClosedException()":"java.util.formatterclosedexception.formatterclosedexception（）\r\n","java.util.LinkedList.remove()":"java.util.linkedlist.remove（）\r\n","Retrieves and removes the last (highest) element,\n or returns ":"检索并删除最后一个（最高）元素，\r\n 或返回\r\n","java.text.DateFormat.getDateInstance(int)":"java.text.dateformat.getDateInstance（int）\r\n","java.util.Scanner.ioException()":"java.util.scanner.ioexception（）\r\n","java.sql.SQLTimeoutException.SQLTimeoutException()":"java.sql.sqltimeoutexception.sqltimeoutexception（）\r\n","Constructs a<code>SQLWarning</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlwarning </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","Returns the maximum value that the specified calendar field\n            could have, given the time value of this\n            <code>Calendar</code>.":"返回指定日历字段的最大值\r\n            鉴于此的时间价值\r\n            <code>日历</code>。\r\n","java.util.ArrayList.clone()":"java.util.arraylist.clone（）\r\n","Checks that the specified object reference is not ":"检查指定的对象引用不是\r\n","Returns the base, ":"返回基地，\r\n","java.nio.file.Files.readAllBytes(java.nio.file.Path)":"java.nio.file.files.readallbytes（java.nio.file.path）\r\n","Returns the name of the most-trusted CA as an X500Principal.":"将最受信任的CA的名称返回为X500Principal。\r\n","java.util.concurrent.Executors.newFixedThreadPool(int, java.util.concurrent.ThreadFactory)":"java.util.concurrent.executors.newfixedthreadpool（int，java.util.concurrent.threadfactory）\r\n","java.util.SimpleTimeZone.UTC_TIME":"java.util.simpletimezone.utc_time\r\n","java.sql.ResultSet.close()":"java.sql.Resultset.close（）\r\n","Inserts the specified object as a component in this vector at the\n            specified ":"将指定的对象插入该向量的组件\r\n            指定的\r\n","java.util.OptionalLong.orElseGet(java.util.function.LongSupplier)":"java.util.optionallong.orelseget（java.util.function.longsupplier）\r\n","java.util.OptionalInt.orElseThrow(java.util.function.Supplier)":"java.util.optionalint.orelsethrow（java.util.function.supplier）\r\n","Searches a range of\n            the specified array of shorts for the specified value using\n            the binary search algorithm.":"搜索一系列\r\n            使用\r\n            二进制搜索算法。\r\n","java.util.SplittableRandom.SplittableRandom(long)":"java.util.splittablerandom.splittablerandom（long）\r\n","Indicates that it is not known whether a <code>NULL</code> value\n            is allowed for this data type.":"表示尚不清楚<code> null </code>值是否值\r\n            允许此数据类型。\r\n","Construct the alternate Key class.":"构建备用密钥类。\r\n"," class is a generic\n            security exception class that provides type safety for all the\n            security-related exception classes that extend from it.":" 课程是通用的\r\n            安全异常类，可为所有提供类型安全\r\n            与安全有关的异常类，从中延伸。\r\n","java.util.Locale.getLanguage()":"java.util.locale.getlanguage（）\r\n","Retrieves whether this database supports full nested outer joins.":"检索该数据库是否支持完整的嵌套外部连接。\r\n","java.util.Arrays.binarySearch(int[], int)":"java.util.arrays.binarysearch（int []，int）\r\n","java.util.Calendar.AUGUST":"java.util.calendar.august\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.String)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.string）\r\n","java.security.cert.PKIXParameters.getTargetCertConstraints()":"java.security.cert.pkixparameters.getTargetCertConstraints（）\r\n","\n            produce items consumed by one or more ":"\r\n            生产一个或多个食用的物品\r\n","java.util.concurrent.CompletionException.CompletionException(java.lang.Throwable)":"java.util.concurrent.completionexception.completionexception（java.lang.throwable）\r\n"," field indicating the\n            third month of the year in the Gregorian and Julian calendars.":" 指示\r\n            格里高利和朱利安日历中的一年中的第三个月。\r\n","java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)":"java.util.resourcebundle.getBundle（java.lang.string，java.util.locale，java.lang.classloader）\r\n","Enumeration for status of the reason that a property could not be set\n            via a call to <code>Connection.":"无法设置财产的原因的状态列举\r\n            通过调用<code>连接。\r\n","#nextFloat":"#NextFloat\r\n","Returns a currency format for the specified locale.":"返回指定语言环境的货币格式。\r\n","Retrieves whether a catalog name can be used in an index definition statement.":"检索目录名称是否可以在索引定义语句中使用。\r\n","Returns the subject criterion as a byte array.":"将主题标准返回为字节阵列。\r\n","java.sql.RowId":"java.sql.Rowid\r\n","java.util.AbstractMap.containsValue(java.lang.Object)":"java.util.abstractmap.containsvalue（java.lang.Object）\r\n","java.text.DecimalFormatSymbols.setDigit(char)":"java.text.decimalformatsymbols.setDigit（char）\r\n","java.util.Deque.push(java.lang.Object)":"java.util.deque.push（java.lang.Object）\r\n",",\n            beginning at the specified time.":"，，，，\r\n            从指定的时间开始。\r\n","java.security.cert.X509CertSelector.setKeyUsage(boolean[])":"java.security.cert.x509certselector.setKeyusage（boolean []）\r\n","Returns the value of the named ":"返回命名的值\r\n","The class fingerprint that is set to indicate\n            serialization compatibility.":"设定的类指纹\r\n            序列化兼容性。\r\n","Returns a new CompletionStage that, when either this or the\n            other given stage complete normally, executes the given action.":"返回一个新的完整舞台，当\r\n            其他给定的阶段正常完成，执行给定的操作。\r\n","Constant indicating base direction is left-to-right.":"恒定指示基本方向是从左到右的。\r\n","java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE":"java.sql.Resultset.Type_scroll_insentive\r\n"," object to be the specified\n            value plus 1900.":" 对象是指定的\r\n            价值加1900。\r\n","java.util.ListResourceBundle":"java.util.listresourcebundle\r\n","java.text.FieldPosition.FieldPosition(int)":"java.text.fieldposition.fieldposition（int）\r\n","java.security.SignedObject.verify(java.security.PublicKey, java.security.Signature)":"java.security.signedobject.verify（java.security.publickey，java.security.signature）\r\n","Removes the element at the specified position in this list.":"在此列表中的指定位置上删除元素。\r\n"," if this Spliterator's ":" 如果这个拆分器的\r\n","java.security.Security.getAlgorithms(java.lang.String)":"java.security.security.getalgorithm（java.lang.string）\r\n","java.util.TimeZone.observesDaylightTime()":"java.util.timezone.observesdaylighttime（）\r\n","java.security.cert.X509CertSelector.setPrivateKeyValid(java.util.Date)":"java.security.cert.x509certselector.setPrivateKeyvalid（java.util.date）\r\n","Gets a resource bundle using the specified base name, locale, and class\n            loader.":"使用指定的基本名称，语言环境和类获取资源捆绑\r\n            加载程序。\r\n","java.util.IllegalFormatWidthException.IllegalFormatWidthException(int)":"java.util.IllegalFormatWidthException.ILLEGALFORMATWIDTHEXCEPTION（INT）\r\n","Completes the hash computation by performing final operations\n            such as padding.":"通过执行最终操作来完成哈希计算\r\n            例如填充。\r\n","Get the designated column's specified column size.":"获取指定列的指定列大小。\r\n","java.sql.ResultSet.getTimestamp(java.lang.String, java.util.Calendar)":"java.sql.Resultset.getTimestamp（java.lang.string，java.util.calendar）\r\n","java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)":"java.util.collections.unmodifiablesortedset（java.util.sortedset）\r\n"," encodings supported\n            by this certificate factory, with the default encoding first.":" 支持编码\r\n            通过此证书工厂，默认编码首先。\r\n","Creates a new random number generator using a single ":"使用单个创建一个新的随机数生成器\r\n","java.sql.SQLOutput":"java.sql.sqloutput\r\n","Returns the iterator associated with this ":"返回与此关联的迭代器\r\n","java.security.Identity.setPublicKey(java.security.PublicKey)":"java.security.Identity.setpublickey（java.security.publickey）\r\n","Returns a clone of this vector.":"返回该向量的克隆。\r\n","java.util.Scanner.hasNext(java.util.regex.Pattern)":"java.util.scanner.hasnext（java.util.regex.pattern）\r\n","Standardized representation for serialized Key objects.":"序列化关键对象的标准化表示。\r\n","Returns the attribute name.":"返回属性名称。\r\n","java.security.cert.CertPathValidatorResult":"java.security.cert.certpathvalidatoresult\r\n","java.sql.SQLOutput.writeString(java.lang.String)":"java.sql.sqloutput.writestring（java.lang.string）\r\n","java.util.Calendar.set(int, int)":"java.util.calendar.set（int，int）\r\n","Indicates that the parameter or column is a return value.":"表示参数或列是返回值。\r\n","java.util.Locale.US":"java.util.locale.us\r\n","Constructs an empty list with the specified initial capacity.":"构建具有指定初始容量的空列表。\r\n","Create a copy of this iterator":"创建此迭代器的副本\r\n","java.util.Calendar.set(int, int, int, int, int)":"java.util.calendar.set（int，int，int，int，int）\r\n","java.sql.Types.BOOLEAN":"java.sql.types.boolean\r\n","java.security.IdentityScope.removeIdentity(java.security.Identity)":"Java.Security.IdentityScope.Removeidentity（Java.Security.Identity）\r\n","if the specified file does not exist.\n":"如果指定文件不存在。\r\n\r\n","java.util.LongSummaryStatistics.getCount()":"java.util.longsummarystatistics.getCount（）\r\n","Indicates deferrability.":"表示推迟性。\r\n","Returns the names of the resources contained in this ":"返回此中包含的资源的名称\r\n","java.util.Observable.notifyObservers()":"java.util.observable.notifyObservers（）\r\n","Converts the given SQL statement into the system's native SQL grammar.":"将给定的SQL语句转换为系统的本机SQL语法。\r\n","Returns the result of accumulating the given transformation\n            of all entries using the given reducer to combine values,\n            and the given basis as an identity value.":"返回累积给定转换的结果\r\n            在使用给定还原器组合值的所有条目中\r\n            给定的基础作为身份值。\r\n","Returns an immutable set containing an arbitrary number of elements.":"返回包含任意数量元素的不变套件。\r\n","The constant indicating the concurrency mode for a\n            <code>ResultSet</code> object that may NOT be updated.":"常数表示A的并发模式\r\n            <code> Resultset </code>可能无法更新的对象。\r\n","Constructs a <code>GregorianCalendar</code> with the given date set\n            in the default time zone with the default locale.":"在给定的日期集中构建<code> GregorianCalendar </code>\r\n            在带有默认场所的默认时区。\r\n","Returns the String that this CollationKey represents.":"返回该Collat​​ionKey代表的字符串。\r\n","Creates an empty enum set with the specified element type.":"使用指定的元素类型创建一个空的枚举集。\r\n","java.sql.ResultSet.getRowId(java.lang.String)":"java.sql.Resultset.getRowid（java.lang.string）\r\n","java.nio.file.Files.setLastModifiedTime(java.nio.file.Path, java.nio.file.attribute.FileTime)":"java.nio.file.files.setlastmodified时间（java.nio.file.path，java.nio.file.tribute.filtime）\r\n","Converts the output to upper case according to the rules of the\n            java.":"根据规则将输出转换为上情况\r\n            爪哇。\r\n","java.sql.DatabaseMetaData.functionColumnOut":"java.sql.databasemetadata.FunctionColumnOumt\r\n","Creates an AlgorithmParameterGenerator object.":"创建一个算法parametergenerator对象。\r\n","java.util.concurrent.ForkJoinTask.get()":"java.util.concurrent.forkjointask.get（）\r\n","java.sql.Types.JAVA_OBJECT":"java.sql.types.java_object\r\n"," contains no bits that are set\n            to ":" 没有设置的位\r\n            至\r\n","java.util.concurrent.CopyOnWriteArrayList.isEmpty()":"java.util.concurrent.copyonwritearraylist.isempty（）\r\n"," from this random number generator's sequence.":" 从这个随机数生成器的序列中。\r\n","java.security.MessageDigest.getProvider()":"java.security.messagedigest.getProvider（）\r\n","Constructs a new, empty map, sorted according to the\n            Comparable natural ordering of the keys.":"构建一张新的空图，根据\r\n            钥匙的可比较自然顺序。\r\n","Retrieves whether this database provides limited support for outer\n            joins.":"检索该数据库是否提供了对外部的有限支持\r\n            加入。\r\n","Returns the name of the algorithm associated with this parameter object.":"返回与此参数对象关联的算法的名称。\r\n","Returns the maximum number of columns in a ":"返回最大列数\r\n"," thread was\n         interrupted or timed out while the current thread was\n         waiting, or the barrier was reset, or the barrier was\n         broken when ":" 线程是\r\n         当前线程是中断或计时的\r\n         等待，或者重置障碍物，或者障碍物是\r\n         何时破碎\r\n","Submits a ForkJoinTask for execution.":"提交一个forkjointask进行执行。\r\n","java.util.TreeMap.ceilingKey(java.lang.Object)":"java.util.treemap.ceilingkey（java.lang.Object）\r\n","java.util.Calendar.DST_OFFSET":"java.util.calendar.dst_offset\r\n","The standard mapping in the Java programming language for an SQL\n            structured type.":"SQL的Java编程语言中的标准映射\r\n            结构化类型。\r\n"," indicating whether or not this connection is\n currently in the ":" 指示此连接是否是\r\n 目前在\r\n","Indicates that the column stores INOUT parameters.":"指示该列存储INOUT参数。\r\n","java.text.ChoiceFormat.parse(java.lang.String, java.text.ParsePosition)":"java.text.ChoiceFormat.Parse（Java.lang.String，Java.text.Parseposition）\r\n","java.util.Collection.clear()":"java.util.collection.clear（）\r\n","Updates the designated column with a binary stream value, which will have\n            the specified number of bytes.":"更新带有二进制流值的指定列，它将具有\r\n            指定的字节数。\r\n","java.util.Vector":"Java.util.Vector\r\n","An immutable key-value mapping.":"不变的键值映射。\r\n","java.util.Locale.getDisplayScript(java.util.Locale)":"java.util.locale.getDisplayscript（java.util.locale）\r\n","A method that result-bearing CountedCompleters may optionally\n            use to help maintain result data.":"一种可以选择的结算计数的方法\r\n            用于维护结果数据。\r\n","java.nio.file.spi.FileSystemProvider.newByteChannel(java.nio.file.Path, java.util.Set, java.nio.file.attribute.FileAttribute)":"java.nio.file.spi.filesystemprovider.newbytechannel（java.nio.file.path，java.util.set，java.nio.file.tribute.fileattribute）\r\n","java.nio.file.Files#createFile createFile":"java.nio.file.files＃createfile createfile\r\n","Returns a view of the portion of this set whose elements are less than\n            (or equal to, if ":"返回该集合的部分的视图，其元素小于\r\n            （或等于\r\n","java.security.Security.setProperty(java.lang.String, java.lang.String)":"java.security.security.setproperty（java.lang.string，java.lang.string）\r\n","java.security.cert.CertPathValidatorException.getReason()":"java.security.cert.certpathvalidatorexception.getReason（）\r\n"," value from the certificate.":" 从证书中价值。\r\n","java.util.Calendar.Calendar(java.util.TimeZone, java.util.Locale)":"java.util.calendar.calendar（java.util.timezone，java.util.locale）\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCertPath(java.io.InputStream)":"java.security.cert.certificatefactoryspi.enginegeneratecertpath（java.io.inputstream）\r\n","java.util.Calendar.DATE":"java.util.calendar.date\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.text.DateFormat.getDateInstance()":"java.text.dateformat.getDateInstance（）\r\n","Adds (atomically) the given value to the pending count.":"（从原子上）给定值（原子）为待处理数。\r\n","Retrieves whether this database supports both data definition and\n            data manipulation statements within a transaction.":"检索该数据库是否支持数据定义和\r\n            交易中的数据操纵语句。\r\n","Return true if the line is not left-to-right or right-to-left.":"如果行不是从左到右或左右，则返回true。\r\n","java.util.Arrays.deepToString(java.lang.Object[])":"java.util.arrays.deeptostring（java.lang.object []）\r\n","if there is no default provider.":"如果没有默认提供商。\r\n","java.sql.SQLInput.readByte()":"java.sql.sqlinput.readbyte（）\r\n","java.util.SplittableRandom.nextInt()":"java.util.splittablerandom.nextint（）\r\n","Gets the fully-qualified SQL name of the SQL structured type that this\n ":"获取完全合格的SQL名称SQL结构化类型\r\n \r\n","Loads the keystore from the given input stream.":"从给定的输入流加载密钥库。\r\n","This class consists exclusively of static methods that operate on files,\n            directories, or other types of files.":"该类仅由在文件上操作的静态方法组成，\r\n            目录或其他类型的文件。\r\n","Sets the designated parameter to SQL <code>NULL</code>.":"将指定的参数设置为SQL <code> null </code>。\r\n","Returns the number of weeks in the week year represented by this\n            ":"返回本周年份代表的几周数\r\n            \r\n","java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByName(java.lang.String)":"java.nio.file.attribute.userprincipallookupservice.lookupprincipalbyname（java.lang.string）\r\n","chain.length == 0":"链。长度== 0\r\n","java.util.Collections":"java.util.collections\r\n","Returns the attribute's ASN.":"返回属性的ASN。\r\n"," if this queue is sorted according to\n            the Comparable natural ordering of its elements.":" 如果此队列根据\r\n            其元素的可比自然顺序。\r\n","Returns the message digest associated with this stream. -or- Associates the specified message digest with this stream.":"返回与此流关联的消息摘要。 - 或 - 将指定的消息摘要与此流相关联。\r\n","java.text.SimpleDateFormat.applyPattern(java.lang.String)":"java.text.simpledateformat.applypattern（java.lang.string）\r\n","Constructs an instance of this class with the specified format\n            specifier.":"使用指定格式构建此类的实例\r\n            说明符。\r\n","a database error occurred.":"发生数据库错误。\r\n",", constructed by converting\n            the given path string, in exactly the manner specified by the ":"，通过转换构建\r\n            给定的路径字符串，完全按照\r\n","Gets a calendar using the default time zone and locale.":"使用默认时区和语言环境获取日历。\r\n","java.util.ArrayDeque.ArrayDeque(int)":"java.util.arraydeque.arraydeque（int）\r\n","trustAnchor":"信任者\r\n","This interface is used to represent a group of principals.":"该界面用于表示一组校长。\r\n","Sets the designated parameter to the given Java <code>double</code> value.":"将指定的参数设置为给定的Java <code> double </code>值。\r\n","java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream)":"java.security.cert.certificatefactory.generatecertpath（java.io.inputstream）\r\n","java.util.SortedMap.lastKey()":"java.util.sortedmap.lastkey（）\r\n","Gets an immutable collection of subject alternative names from the\n            ":"从\r\n            \r\n","Gets the SQL name of the ":"获取SQL名称\r\n","if an invalid field is specified.\n":"如果指定了无效字段。\r\n\r\n"," if this pool uses local first-in-first-out\n            scheduling mode for forked tasks that are never joined.":" 如果此池使用本地首次出局\r\n            从未连接的分叉任务的安排模式。\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>NVARCHAR</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，可以标识通用SQL类型<code> nvarchar </code>。\r\n","Returns the result of accumulating the given transformation\n            of all values using the given reducer to combine values, or\n            null if none.":"返回累积给定转换的结果\r\n            使用给定还原器组合值或\r\n            如果没有，则为空。\r\n","java.util.EventObject.getSource()":"java.util.eventobject.getSource（）\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalidauthorizationspecexception（java.lang.string，java.lang.string，int，int，int，java.lang.throwable）\r\n","param":"参数\r\n","java.util.Arrays.copyOf(java.lang.Object[], int)":"java.util.arrays.copyof（java.lang.object []，int）\r\n","CertificateRevokedException":"证书Exception\r\n","java.sql.DatabaseMetaData.importedKeyInitiallyDeferred":"java.sql.databasemetadata.importedKeyinitallydeferred\r\n"," if\n            there is no such entry.":" 如果\r\n            没有这样的条目。\r\n","java.security.DigestException":"java.security.digestexception\r\n","Retrieves the number of entries in this keystore.":"检索此密钥库中的条目数。\r\n","Tests if this path starts with the given path.":"测试此路径是否从给定路径开始。\r\n","Returns the number of elements in the specified collection equal to the\n            specified object.":"返回指定集合中的元素数量等于\r\n            指定对象。\r\n","java.text.SimpleDateFormat.SimpleDateFormat()":"java.text.simpledateformat.simpledateformat（）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>TINYINT</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> tinyint </code>。\r\n","Completes this task normally without setting a value.":"正常完成此任务而不设置值。\r\n"," that\n            match all specified criteria.":" 那\r\n            匹配所有指定标准。\r\n",") of\n            this vector.":"） 的\r\n            这个向量。\r\n","Constructs a new PrivilegedActionException &quot;wrapping&quot;\n            the specific Exception.":"构建一个新的特权ActionAcception“包装”\r\n            具体例外。\r\n","java.sql.Statement.CLOSE_ALL_RESULTS":"java.sql.statement.close_all_results\r\n","java.sql.ResultSet.updateNString(int, java.lang.String)":"java.sql.Resultset.updatenstring（int，java.lang.string）\r\n","\n            interface to minimize the effort required to implement this interface\n            backed by a \"sequential access\" data store (such as a linked list).":"\r\n            接口以最大程度地减少实现此接口所需的努力\r\n            由“顺序访问”数据存储（例如链接列表）支持。\r\n","Useful constant for DAY_OF_WEEK field alignment.":"Day_of_week字段对齐的有用常数。\r\n","java.text.NumberFormat.getCurrency()":"java.text.numberformat.getCurrency（）\r\n","X509CertSelector":"X509CertSelector\r\n","java.sql.DriverPropertyInfo.required":"java.sql.driverpropertyinfo.required\r\n","#setSubjectAlternativeNames\n            setSubjectAlternativeNames":"#setsubjectalternativivion\r\n            设置对象\r\n","if this connection is closed, or there's a problem creating a new XML.\n":"如果该连接已关闭，或者存在一个问题，可以创建新的XML。\r\n\r\n","A typesafe enumeration of the access control entry types.":"访问控制条目类型的类型枚举。\r\n","Gets the largest possible minimum value that the field can take.":"获取该字段可能采取的最大最小值。\r\n","Sets the day of the month of this ":"设置一个月的一天\r\n","Compares this <code>Timestamp</code> object to the given\n            <code>Timestamp</code> object.":"将此<code> timestamp </code>对象与给定的对象进行比较\r\n            <Code> Timestamp </code>对象。\r\n","java.text.RuleBasedCollator.getCollationKey(java.lang.String)":"java.text.rulebasedcollat​​or.getCollat​​ionKey（java.lang.string）\r\n","Returns a new long array containing all the bits in this bit set.":"返回一个新的长阵列，其中包含此位集中的所有位。\r\n","java.util.concurrent.BlockingQueue.remainingCapacity()":"java.util.concurrent.blockingqueue.remainingcapacity（）\r\n","IntSummaryStatistics":"intsummaryStatistics\r\n","java.text.DateFormat.isLenient()":"java.text.dateformat.islenient（）\r\n","java.text.Collator.getInstance()":"java.text.collat​​or.getInstance（）\r\n","Returns a locale specific time format for the ISO chronology.":"返回ISO年代的区域特定时间格式。\r\n","BufferedReader":"BufferedReader\r\n","if there is a problem accessing the database or if the call\n             has been made on a connection which has been previously\n             closed.\n":"如果访问数据库或呼叫是否有问题\r\n             已经建立了以前的连接\r\n             关闭。\r\n\r\n","java.util.concurrent.CompletableFuture.completeAsync(java.util.function.Supplier, java.util.concurrent.Executor)":"java.util.concurrent.completablefuture.completeasync（java.util.function.supplier，java.util.concurrent.executor）\r\n","java.security.cert.X509Extension":"java.security.cert.x509 extension\r\n","Retrieves whether this database supports named parameters to callable\n            statements.":"检索该数据库是否支持命名参数到可呼叫\r\n            语句。\r\n","Gets the character that represents zero.":"获取代表零的字符。\r\n","Terminates this timer, discarding any currently scheduled tasks.":"终止此计时器，丢弃任何当前计划的任务。\r\n","java.util.GregorianCalendar.computeFields()":"java.util.gregoriancalendar.computefields（）\r\n","java.util.Arrays.fill(double[], double)":"java.util.arrays.fill（double []，double）\r\n","java.sql.CallableStatement.getBlob(int)":"java.sql.callablestatement.getBlob（int）\r\n","java.sql.CallableStatement.getSQLXML(java.lang.String)":"java.sql.callablestatement.getsqlxml（java.lang.string）\r\n","Constructs a NoSuchAlgorithmException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n","Returns the completer established in this task's constructor,\n            or ":"返回该任务构造函数中建立的完成者，\r\n            或者\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a <code>Blob</code> object\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> blob </code>对象\r\n            在Java编程语言中。\r\n","java.sql.ResultSet.HOLD_CURSORS_OVER_COMMIT":"java.sql.Resultset.hold_cursors_over_commit\r\n","java.util.Calendar.NARROW_STANDALONE":"java.util.calendar.narrow_standalone\r\n","java.text.Bidi.Bidi(java.lang.String, int)":"java.text.bidi.bidi（java.lang.string，int）\r\n","Returns the serialNumber criterion. -or- Sets the serialNumber criterion.":"返回串行标准。 - 或设置串行数标准。\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.string，java.lang.string，int，int，int，java.lang.thrang.thrang.throwable）\r\n","Compares the specified object with this collection for equality.":"将指定的对象与此集合进行比较以保持平等。\r\n","java.security.Signature":"Java.security.Signature\r\n","java.security.cert.TrustAnchor.getNameConstraints()":"java.security.cert.trustanchor.getNameConstraints（）\r\n","java.util.StringJoiner.length()":"java.util.stringjoiner.length（）\r\n","java.security.cert.PKIXBuilderParameters.PKIXBuilderParameters(java.util.Set, java.security.cert.CertSelector)":"java.security.cert.pkixbuilderparameters.pkixbuilderparameters（java.util.set，java.security.cert.cert.certselector）\r\n","Retrieves whether a <code>SQLException</code> while autoCommit is <code>true</code> inidcates\n            that all open ResultSets are closed, even ones that are holdable.":"检索<code>是否sqlexception </code> nayocommit是<code> true </code> inidcates\r\n            所有开放结果集都关闭了，即使是可持续的结果。\r\n","Deletes a file if it exists.":"如果存在，则删除文件。\r\n","This class specifies a parameter spec for RSA-PSS signature scheme,\n            as defined in the\n            <a href=\"http://www.":"此类指定RSA-PSS签名方案的参数规格，\r\n            如在\r\n            <a href =“ http：//www。\r\n","Returns the minimum number of digits allowed in the fraction portion of a\n            number. -or- Sets the minimum number of digits allowed in the fraction portion of a\n            number.":"返回在A的分数中允许的最小数字数量\r\n            数字。 - 或设置A的分数中允许的最小数字数量\r\n            数字。\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n"," has any bits set to\n            ":" 有任何位置\r\n            \r\n","Clears the observer list so that this object no longer has any observers.":"清除观察者列表，以使该对象不再具有任何观察者。\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.Object，java.lang.Object）\r\n","java.security.cert.CertificateFactory.getType()":"java.security.cert.certificatefactory.getType（）\r\n","java.security.AlgorithmParameters":"java.security.algorithmparameters\r\n"," and\n            throws a customized ":" 和\r\n            抛出定制的\r\n","Tries to unschedule this task for execution.":"试图解开此任务进行执行。\r\n","java.nio.file.Path.startsWith(java.lang.String)":"java.nio.file.path.startswith（java.lang.string）\r\n","Returns the next pseudorandom, uniformly distributed\n            ":"返回下一个伪随机，均匀分布\r\n            \r\n","java.sql.Connection.setSavepoint(java.lang.String)":"java.sql.connection.setsavepoint（java.lang.string）\r\n","Creates a <code>Statement</code> object that will generate\n            <code>ResultSet</code> objects with the given type, concurrency,\n            and holdability.":"创建<code>语句</code>将生成的对象\r\n            <code> resultset </code>带有给定类型的对象，并发，\r\n            和可持续性。\r\n"," indicating a long name used independently,\n            such as a month name as calendar headers.":" 指示一个独立使用的长名称，\r\n            例如一个月名称为日历标题。\r\n","java.security.IdentityScope":"Java.security.IdentityScope\r\n","Retrieves whether the driver thinks that it can open a connection\n            to the given URL.":"检索驾驶员是否认为可以打开连接\r\n            到给定的URL。\r\n","java.security.DigestInputStream":"java.security.digestinputstream\r\n"," if no space is currently available.":" 如果目前没有空间。\r\n","Determines if the given year is a leap year.":"确定给定年是否是leap年。\r\n","Constructs a new formatter with the specified locale.":"使用指定的语言环境构建新的格式化器。\r\n","java.sql.DatabaseMetaData.supportsPositionedUpdate()":"java.sql.databasemetadata.supportspositionedupdate（）\r\n"," object that implements the specified\n            ":" 实现指定的对象\r\n            \r\n","Returns a view of the portion of this map whose keys range from\n            ":"返回该地图部分的视图，其键范围从\r\n            \r\n"," based on\n            the specified byte array.":" 基于\r\n            指定的字节数组。\r\n","Returns the current pending count. -or- Sets the pending count to the given value.":"返回当前的待处理计数。 - 或 - 将待处理计数设置为给定值。\r\n","java.util.ListResourceBundle.ListResourceBundle()":"java.util.listresourcebundle.listresourcebundle（）\r\n","Returns this scanner's default radix.":"返回该扫描仪的默认radix。\r\n","<code>PropertyResourceBundle</code> is a concrete subclass of\n            <code>ResourceBundle</code> that manages resources for a locale\n            using a set of static strings from a property file.":"<code> PropertyResourceBundle </code>是一个具体的子类\r\n            <code> ResourceBundle </code>管理语言环境的资源\r\n            使用来自属性文件的一组静态字符串。\r\n"," to one another.":" 彼此。\r\n","Returns a new CompletableFuture that is already completed with\n            the given value.":"返回已完成的新的完整图\r\n            给定值。\r\n","if there is any kind of problem accessing the database.\n":"如果访问数据库有任何类型的问题。\r\n\r\n","Returns a <code>Reader</code> object that contains a partial <code>Clob</code> value, starting\n            with the character specified by pos, which is length characters in length.":"返回<code>读取器</code>包含部分<code> clob </code>值的对象，开始\r\n            由POS指定的字符，即长度长度。\r\n","java.time.format.DateTimeFormatter.RFC_1123_DATE_TIME":"java.time.format.datetimeformatter.rfc_1123_date_time\r\n","java.security.MessageDigest":"java.security.messagedigest\r\n","java.sql.ResultSet.getAsciiStream(java.lang.String)":"java.sql.Resultset.getasciistream（java.lang.string）\r\n","java.text.DecimalFormat.getDecimalFormatSymbols()":"java.text.decimalformat.getDecimalformatsymbols（）\r\n","java.util.concurrent.BlockingDeque.addLast(java.lang.Object)":"java.util.concurrent.blockingdeque.addlast（java.lang.object）\r\n"," field indicating the\n            tenth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的十个月，在格里高利和朱利安日历中。\r\n","Returns an enumeration of the keys in this table.":"返回该表中的键枚举。\r\n","Returns the public key corresponding to this certificate.":"返回与此证书相对应的公钥。\r\n","java.sql.DatabaseMetaData.supportsOuterJoins()":"java.sql.databasemetadata.supportsoutoins（）\r\n","if an existing alias is not associated to an entry containing\n             a trusted certificate, or this method fails for any other\n             reason.\n":"如果现有的别名与包含的条目没有关联\r\n             受信任的证书或此方法失败\r\n             原因。\r\n\r\n","Checks if this unit is a time unit.":"检查此单元是否是时间单元。\r\n","java.sql.Types.DATALINK":"java.sql.types.datalink\r\n","Returns the version number of this CRL.":"返回此CRL的版本号。\r\n",", and arrange that ":"，安排\r\n","This is the general key management exception for all operations\n            dealing with key management.":"这是所有操作的一般密钥管理例外\r\n            处理关键管理。\r\n","Get the maximum number of columns in a ":"获取最大列数\r\n","if decoding of the name constraints fail.\n":"如果对名称约束的解码失败。\r\n\r\n","Returns an immutable map containing a single mapping.":"返回包含单个映射的不变地图。\r\n","java.sql.ResultSet.updateBoolean(java.lang.String, boolean)":"java.sql.Resultset.updateboolean（java.lang.string，boolean）\r\n","java.util.SplittableRandom.nextDouble()":"java.util.splittablerandom.nextdouble（）\r\n","Returns true if the ResourceBundle needs to reload.":"如果ResourceBundle需要重新加载，则返回true。\r\n","java.util.IntSummaryStatistics.getSum()":"java.util.intsummarystatistics.getsum（）\r\n","The constant indicating that an error occured while executing a\n            batch statement.":"常数表明执行时发生错误\r\n            批处理语句。\r\n","java.sql.Types.NCHAR":"java.sql.types.nchar\r\n","java.sql.DatabaseMetaData.tableIndexStatistic":"java.sql.databasemetadata.tableIndexStatistic\r\n","java.text.DecimalFormatSymbols.getDigit()":"java.text.decimalformatsymbols.getDigit（）\r\n","java.security.cert.CertificateExpiredException":"java.security.cert.certificate expiredException\r\n","Retrieves the value of a JDBC <code>NCLOB</code> parameter as a\n            <code>java.":"检索JDBC <code> NCLOB </code>参数为一个\r\n            <code> Java。\r\n","Returns the pool hosting the current thread, or ":"返回托管当前线程的池，或\r\n"," to the list of certification\n            path checkers.":" 到认证列表\r\n            路径检查器。\r\n","java.security.cert.CertPathBuilder.getAlgorithm()":"java.security.cert.certpathbuilder.getalgorithm（）\r\n","A specification of the result of a certification path builder algorithm.":"认证路径构建器算法结果的规范。\r\n","java.util.AbstractSequentialList.get(int)":"java.util.abstractsequestentiallist.get（int）\r\n","Marks the day of the year part of a date.":"标记一年的日期。\r\n","Comparable":"可比\r\n","Returns the comparator used to compare elements in this ":"返回用于比较此元素的比较器\r\n","java.text.MessageFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.messageformat.format（java.lang.object，java.lang.stringbuffer，java.text.fieldposition）\r\n"," class represents a persistent set of\n            properties.":" 班级代表一组持久的集合\r\n            特性。\r\n","java.security.SignatureSpi.engineSign(byte[], int, int)":"java.security.signaturespi.Enginesign（byte []，int，int）\r\n","Returns the hash code value for this collection.":"返回此集合的哈希代码值。\r\n","java.time.format.DateTimeFormatter.ISO_LOCAL_TIME":"java.time.format.datetimeformatter.iso_local_time\r\n","java.security.Provider.putAll(java.util.Map)":"java.security.provider.putall（java.util.map）\r\n","java.security.SignedObject.getSignature()":"java.security.signedobject.getSignature（）\r\n","Returns a string that represents the contents of the certificate.":"返回表示证书内容的字符串。\r\n","Returns a reference to an existing ":"返回对现有的参考\r\n","\n             or if it is not a known ":"\r\n             或者如果不是已知的\r\n","java.nio.charset.StandardCharsets.ISO_8859_1":"java.nio.charset.standardcharsets.iso_8859_1\r\n","Adds or subtracts the specified amount of time to the given calendar field,\n            based on the calendar's rules.":"将指定的时间添加或减去给定日历字段，\r\n            基于日历的规则。\r\n","Returns the maximum size for a table name in the database.":"返回数据库中表名的最大尺寸。\r\n","java.sql.CallableStatement.getDouble(int)":"java.sql.callablestatement.getDouble（int）\r\n","Returns the digest length in bytes.":"返回字节中的摘要长度。\r\n","java.util.LinkedList.addLast(java.lang.Object)":"java.util.linkedlist.addlast（java.lang.Object）\r\n","java.nio.file.ProviderNotFoundException":"java.nio.file.providernotfoundexception\r\n","Initializes this parameter generator with a set of algorithm-specific\n            parameter generation values.":"用一组算法特定于该参数生成器初始化此参数生成器\r\n            参数生成值。\r\n"," security property, or the string\n            \"jks\" (acronym for \"Java keystore\")\n            if no such property exists.":" 安全属性或字符串\r\n            “ JKS”（“ Java Keystore”的首字母缩写）\r\n            如果没有这样的财产。\r\n","java.util.concurrent.ForkJoinPool.shutdownNow()":"java.util.concurrent.forkjoinpool.shutdownnow（）\r\n","java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(java.util.Map)":"java.util.concurrent.concurrenthashmap.concurrenthashmap（java.util.map）\r\n","Formatter#out() formatter.out()":"格式化＃out（）formatter.out（）\r\n","java.security.cert.PKIXRevocationChecker.setOcspResponses(java.util.Map)":"java.security.cert.pkixrevocation checker.setocsprespons（java.util.map）\r\n","Key.getAlgorithm()":"key.getAlgorithm（）\r\n"," created by this provider.":" 由此提供商创建。\r\n","Creates a CertificateFactory object of the given type, and encapsulates\n            the given provider implementation (SPI object) in it.":"创建给定类型的证书对象，并封装\r\n            给定的提供商实现（SPI对象）。\r\n","Tests if there are more tokens available from this tokenizer's string.":"测试是否有更多令牌字符串可用的令牌。\r\n","ExecutionException":"ExecutionException\r\n","Tests if this stack is empty.":"测试此堆栈是否为空。\r\n","Writes a SQL <code>DATALINK</code> value to the stream.":"将sql <code> datalink </code>值写入流。\r\n","a.length":"A.长度\r\n","\n            and related methods to throw the given exception.":"\r\n            以及引发给定例外的相关方法。\r\n","Constructs a <code>SimpleDateFormat</code> using the given pattern and\n            the default date format symbols for the default\n            ":"使用给定模式和\r\n            默认的默认日期格式符号\r\n            \r\n","if the specified file does not exist.":"如果指定文件不存在。\r\n","java.security.cert.CertStoreException.CertStoreException(java.lang.String, java.lang.Throwable)":"java.security.cert.certstoreexception.certstoreexception（java.lang.string，java.lang.throwable）\r\n","Retrieves the encapsulated object.":"检索封装的对象。\r\n","Reads the next attribute in the stream and returns it as a <code>short</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code>简短</code>\r\n            在Java编程语言中。\r\n","Denotes the output is to be converted to upper case in the way the locale\n parameter of Formatter.formatTo() requires. ":"表示输出将以区域环境的方式转换为上情况\r\n formatter.formatto（）的参数要求。\r\n","Inserts the specified element into the queue represented by this deque\n            (in other words, at the tail of this deque), waiting up to the\n            specified wait time if necessary for space to become available.":"将指定的元素插入该Deque表示的队列\r\n            （换句话说，在此Deque的尾部），等待\r\n            指定的等待时间（如有必要）使空间可用。\r\n","An interface for the bidirectional iteration over a group of characters.":"一组字符上的双向迭代的接口。\r\n","Returns a copy of the issuerNames criterion.":"返回发行标准的副本。\r\n"," (exclusive) is within the bounds of range from\n            ":" （独家）在范围内\r\n            \r\n","Unchecked exception thrown when an illegal combination flags is given.":"当给出非法组合旗时，未选中的例外。\r\n","if the resource is not found.":"如果找不到资源。\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Removes the last occurrence of the specified element in this\n            deque (when traversing the deque from head to tail).":"删除此处指定元素的最后一次出现\r\n            Deque（从头部到尾巴穿越deque时）。\r\n","getRoot().quietlyComplete()":"getRoot（）。悄悄complete（）\r\n","java.nio.file.Path.compareTo(java.nio.file.Path)":"java.nio.file.path.compareto（java.nio.file.path）\r\n","Constructs an InvalidParameterException with no detail message.":"构建无效的Parameterexception，没有详细信息。\r\n","Changes the parse style to be lenient for the remainder of the formatter.":"更改解析样式将对剩余的格式化器宽大。\r\n","TrustAnchor":"信任者\r\n","java.security.acl.AclEntry.permissions()":"java.security.acl.aclentry.permissions（）\r\n","java.util.Currency.getInstance(java.util.Locale)":"java.util.currency.getinstance（java.util.locale）\r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","java.security.DomainLoadStoreParameter.getConfiguration()":"java.security.domainloadstoreparameter.getConfiguration（）\r\n","java.text.DecimalFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.decimalformat.format（java.lang.object，java.lang.stringbuffer，java.text.fieldposition）\r\n"," is not called prior the\n             invocation of this method.":" 未称为事先\r\n             调用此方法。\r\n","java.security.cert.X509CertSelector.setCertificate(java.security.cert.X509Certificate)":"java.security.cert.x509certselector.setcertificate（java.security.cert.x509certificate）\r\n","java.sql.DatabaseMetaData.importedKeyRestrict":"java.sql.databasemetadata.importedkeyrtestrict\r\n","Defines the standard copy options.":"定义标准副本选项。\r\n","Returns the number of observers of this ":"返回观察者的数量\r\n","java.security.cert.TrustAnchor.getTrustedCert()":"java.security.cert.trustanchor.getTrustedCert（）\r\n","Return the count of values recorded.":"返回记录的值计数。\r\n"," (whether normally or via cancellation).":" （无论是通常还是通过取消）。\r\n","Retrieves the value of a JDBC <code>FLOAT</code> parameter as a <code>float</code>\n            in the Java programming language.":"检索JDBC <code> float </code>参数为<code> float </code>的值\r\n            在Java编程语言中。\r\n","java.sql.Blob.setBytes(long, byte[], int, int)":"java.sql.blob.setbytes（long，byte []，int，int）\r\n","java.text.DateFormat.DAY_OF_WEEK_FIELD":"java.text.dateformat.day_of_week_field\r\n"," is negative, or if\n             ":" 是负面的，或者如果\r\n             \r\n","Copies all of the elements from one list into another.":"将所有元素从一个列表复制到另一个列表。\r\n",".\n Requests for this style may yield GMT offsets like ":"。\r\n 对这种样式的要求可能会产生GMT偏移\r\n","Returns a CollationElementIterator for the given String.":"返回给定字符串的ColationElementerator。\r\n","java.sql.ResultSet.getUnicodeStream(java.lang.String)":"java.sql.Resultset.getunicodestream（java.lang.string）\r\n","java.time.format.DateTimeFormatter.ofLocalizedTime(java.time.format.FormatStyle)":"java.time.format.datetimeformatter.oflocalizedtime（java.time.format.formatstyle）\r\n","An interface used to get information about the types and properties of\n parameters in a ":"用于获取有关有关类型和属性的信息的接口\r\n 参数\r\n","java.security.KeyFactory.KeyFactory(java.security.KeyFactorySpi, java.security.Provider, java.lang.String)":"java.security.keyfactory.keyfactory（java.security.keyfactoryspi，java.security.provider，java.lang.string）\r\n"," that uses an internal ":" 使用内部\r\n","java.util.IllegalFormatCodePointException.getCodePoint()":"java.util.illegalformatCodePointException.getCodepoint（）\r\n","Returns the file used to create this exception.":"返回用于创建此异常的文件。\r\n","Retrieves and removes the head of the queue represented by this deque\n            (in other words, the first element of this deque), waiting up to the\n            specified wait time if necessary for an element to become available.":"检索并卸下该Deque代表的队列的头部\r\n            （换句话说，这是这个deque的第一个元素），等待\r\n            指定的等待时间（如有必要）使元素可用。\r\n","Returns a name for the locale's script that is appropriate\n            for display to the user.":"返回适合语言环境脚本的名称\r\n            向用户显示。\r\n","Return the base level (0 if left-to-right, 1 if right-to-left).":"返回基本级别（如果从左到右，为0，则为1，如果左至左）。\r\n","java.sql.ResultSetMetaData.getSchemaName(int)":"java.sql.ResultsetMetadata.getScheManame（int）\r\n","java.sql.ResultSet.updateAsciiStream(int, java.io.InputStream, int)":"java.sql.Resultset.updateasciistream（int，java.io.inputstream，int）\r\n","Forks all tasks in the specified collection, returning when\n            ":"分叉指定集合中的所有任务，何时返回\r\n            \r\n","Use scientific style for BigDecimals.":"使用科学风格进行大数目。\r\n","java.text.DateFormat.AM_PM_FIELD":"java.text.dateformat.am_pm_field\r\n","Creates a DecimalFormat using the given pattern and symbols.":"使用给定的模式和符号创建一个十分态图。\r\n"," as a completion queue.":" 作为完成队列。\r\n","java.util.HashMap.remove(java.lang.Object)":"java.util.hashmap.remove（java.lang.Object）\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalideuthorizationspecexception（java.lang.string）\r\n","Constructs a <code>SQLRecoverableException</code> object\n             with a given <code>reason</code>.":"构造<code> sqlrecoverableException </code>对象\r\n             使用给定的<code>原因</code>。\r\n","java.time.temporal.ValueRange":"java.time.temporal.valuerange\r\n","java.security.cert.CollectionCertStoreParameters.CollectionCertStoreParameters(java.util.Collection)":"java.security.cert.collectioncertstoreparameters.collectioncertstoreparameters（java.util.collection）\r\n","Retrieves the value of the designated JDBC <code>FLOAT</code> parameter\n            as a <code>float</code> in the Java programming language.":"检索指定的JDBC <code> float </code>参数的值\r\n            作为Java编程语言中的<code> float </code>。\r\n","SortedSet":"排序集\r\n","java.text.FieldPosition":"java.text.fieldposition\r\n","java.time.format.DateTimeFormatterBuilder.appendLiteral(char)":"java.time.format.datetimeformatterbuilder.appendliteral（char）\r\n",", using the #defaultForkJoinWorkerThreadFactory default thread factory,\n            no UncaughtExceptionHandler, and non-async LIFO processing mode.":"，使用#defaultforkjoinworkerthreadFactory默认线程工厂，\r\n            没有uncaughtexceptionHandler和非ASYNC LIFO处理模式。\r\n","java.util.concurrent.ConcurrentLinkedDeque.removeFirst()":"java.util.concurrent.concurrentlinkeddeque.removefirst（）\r\n","Constructs an InvalidParameterSpecException with the specified detail\n            message.":"用指定的详细信息构造无效的Parameterspecexception\r\n            信息。\r\n","java.util.Arrays.sort(int[], int, int)":"java.util.arrays.sort（int []，int，int）\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code>.":"用给定的\r\n            <code>原因</code>。\r\n","java.util.Locale.PRC":"java.util.locale.prc\r\n"," instance supports\n ":" 实例支持\r\n \r\n","java.util.concurrent.ForkJoinPool.awaitQuiescence(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.forkjoinpool.awaitquiescence（long，java.util.concurrent.timeunit）\r\n"," if this map contains a mapping for the specified\n            key.":" 如果此地图包含指定的映射\r\n            钥匙。\r\n","java.util.Currency":"java.util.currency\r\n","Retrieves, but does not remove, the first element of this deque,\n or returns ":"检索但不会删除该deque的第一个元素，\r\n 或返回\r\n"," with parallelism equal to ":" 与平行性等于\r\n","java.security.SignatureSpi.engineVerify(byte[], int, int)":"java.security.signaturespi.EngineVerify（byte []，int，int）\r\n","Returns the encoded key.":"返回编码的密钥。\r\n","java.security.spec.RSAKeyGenParameterSpec.F4":"java.security.spec.rsakeygenparameterspec.f4\r\n","Returns a new CompletableFuture that is completed when this\n            CompletableFuture completes, with the result of the given\n            function of the exception triggering this CompletableFuture's\n            completion when it completes exceptionally; otherwise, if this\n            CompletableFuture completes normally, then the returned\n            CompletableFuture also completes normally with the same value.":"返回一个新的可完整的未图\r\n            完整的future完成，给定的结果\r\n            异常的功能触发了此完整future的功能\r\n            完成时完成时完成；否则，如果这个\r\n            完整的future正常完成，然后返回\r\n            完整的未来也以相同的值完成正常完成。\r\n"," using the specified data.":" 使用指定的数据。\r\n","java.security.cert.X509CertSelector.getIssuerAsString()":"java.security.cert.x509certselector.getissuerasstring（）\r\n","Returns a new CompletableFuture that is asynchronously completed\n            by a task running in the ":"返回一个新的完整图，该备件已异步完成\r\n            通过在\r\n","if no installed provider can provide the algorithm.\n":"如果没有安装的提供商可以提供算法。\r\n\r\n","java.util.Collection.containsAll(java.util.Collection)":"java.util.collection.containsall（java.util.collection）\r\n"," with the given (fixed)\n            capacity and the specified access policy.":" 给定（固定）\r\n            容量和指定的访问政策。\r\n","Sets this Future to the result of its computation\n unless it has been cancelled.":"将未来设置为计算的结果\r\n 除非已取消。\r\n","Returns a string representation of the\n            ACL contents.":"返回一个字符串表示\r\n            ACL内容。\r\n","java.sql.Types.SQLXML":"java.sql.types.sqlxml\r\n","java.text.ParsePosition":"java.text.parseposition\r\n"," execution of this task.":" 执行此任务。\r\n","Retrieve the index at which an error occurred, or -1 if the\n            error index has not been set. -or- Set the index at which a parse error occurred.":"检索发生错误的索引，如果是-1\r\n            尚未设置错误索引。 - 或设置发生解析错误的索引。\r\n","java.nio.file.attribute.UserPrincipalLookupService.UserPrincipalLookupService()":"java.nio.file.attribute.userprincipallookupservice.userprincipallookupservice（）\r\n","java.sql.CallableStatement.getClob(java.lang.String)":"java.sql.callablestatement.getClob（java.lang.string）\r\n","java.util.Collections.emptyEnumeration()":"java.util.collections.emptyenumeration（）\r\n","'&nbsp;&nbsp;'":"'＆nbsp;''\r\n","Basic attributes associated with a file in a file system.":"与文件系统中的文件关联的基本属性。\r\n","java.util.Scanner.delimiter()":"java.util.scanner.delimiter（）\r\n","java.nio.file.FileVisitor.visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)":"java.nio.file.filevisitor.visitfile（java.lang.object，java.nio.file.attribute.basicfileattributes）\r\n","java.sql.DataTruncation.getDataSize()":"java.sql.datatruncation.getDatasize（）\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec":"java.security.spec.rsamultimeprimeprivatecrtkeyspec\r\n","java.sql.ResultSet.getBigDecimal(int, int)":"java.sql.Resultset.getBigDecimal（int，int）\r\n","The constant in the Java programming language\n            that identifies the generic SQL value\n            <code>NULL</code>.":"Java编程语言中的常数\r\n            标识通用SQL值\r\n            <code> null </code>。\r\n","java.time.format.DateTimeFormatterBuilder.parseStrict()":"java.time.format.datetimeformatterbuilder.parserterict（）\r\n","java.text.DateFormat.DEFAULT":"java.text.dateformat.default\r\n","Fields and units specific to the ISO-8601 calendar system,\n            including quarter-of-year and week-based-year.":"特定于ISO-8601日历系统的字段和单元，\r\n            包括四分之一和一周的年份。\r\n","java.security.DigestInputStream.getMessageDigest()":"java.security.digestinputstream.getMessagedigest（）\r\n","java.sql.ResultSet.updateBinaryStream(int, java.io.InputStream)":"java.sql.Resultset.updatebinarystream（int，java.io.inputstream）\r\n","java.security.spec.DSAPrivateKeySpec.getP()":"java.security.spec.dsaprivatekeyspec.getp（）\r\n","java.util.concurrent.ArrayBlockingQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.ararayblockingqueue.drainto（java.util.collection，int）\r\n","java.security.cert.X509CRLSelector.getIssuerNames()":"java.security.cert.x509crlselector.getissuernames（）\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.Throwable)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.throwable）\r\n","Returns the set of OIDs of the extension(s) marked as NON-CRITICAL, that\n this implementation manages.":"返回标记为非关键的扩展的OID集，\r\n 此实施管理。\r\n","Retrieves a description of the given table's indices and statistics.":"检索给定表的索引和统计数据的描述。\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException()":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（）\r\n","java.sql.ResultSet.updateNull(int)":"java.sql.Resultset.updatenull（int）\r\n","Returns an immutable map containing ten mappings.":"返回一张包含十个映射的不变地图。\r\n","java.sql.RowId.toString()":"java.sql.rowid.tostring（）\r\n","CollationKey constructor.":"ColationKey构造函数。\r\n","java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble(long, java.util.function.ToDoubleFunction, double, java.util.function.DoubleBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducekeystodouble（long，java.util.function.todoublefunction，double，java.util.function.doublebinareoperator）\r\n","java.sql.DatabaseMetaData.supportsNonNullableColumns()":"java.sql.databasemetadata.supportsnonnullablecolumns（）\r\n","\n            using the specified salt length and other default values as\n            defined in PKCS#1.":"\r\n            使用指定的盐长度和其他默认值作为\r\n            在PKCS＃1中定义。\r\n","This method is called whenever the observed object is changed.":"只要更改观察到的对象，该方法就会称为。\r\n","The key for Unicode locale extension ('u').":"Unicode Locale Extension（'U'）的钥匙。\r\n","Constructs a KeyStoreException with no detail message.":"构建一个没有详细信息的密钥库exception。\r\n","java.sql.DatabaseMetaData.supportsTableCorrelationNames()":"java.sql.databasemetadata.supportstablecorrelationnames（）\r\n","indicating the\n second within the minute. ":"指示\r\n 第二分钟。\r\n","java.util.Arrays.parallelSort(char[])":"java.util.arrays.parallelsort（char []）\r\n","lineStart":"Linestart\r\n","java.sql.Types.BINARY":"java.sql.types.binary\r\n","java.security.KeyFactory.getInstance(java.lang.String, java.lang.String)":"java.security.keyfactory.getinstance（java.lang.string，java.lang.string）\r\n","Returns true if this statement has been closed, false otherwise.":"如果关闭此语句，则返回true，否则为错误。\r\n","java.util.concurrent.ForkJoinPool.getUncaughtExceptionHandler()":"java.util.concurrent.forkjoinpool.getuncaughtexceptionhandler（）\r\n","java.util.Currency.getSymbol(java.util.Locale)":"java.util.currency.getSymbol（java.util.locale）\r\n","java.security.cert.X509Certificate.checkValidity()":"java.security.cert.x509certificate.checkvality（）\r\n","location >= size()":"位置> = size（）\r\n","java.security.cert.CRL.getType()":"java.security.cert.crl.gettype（）\r\n","This class implements a vector of bits that grows as needed.":"该课程实现了根据需要生长的位向量。\r\n"," object to the\n            specified value.":" 对象\r\n            指定值。\r\n","AlgorithmParametersSpi":"算法ParametersSpi\r\n","java.security.spec.ECPrivateKeySpec.ECPrivateKeySpec(java.math.BigInteger, java.security.spec.ECParameterSpec)":"java.security.spec.ecprivatekeyspec.ecprivatekeyspec（java.math.biginteger，java.security.security.spec.ecparameterspec）\r\n","Returns a key-value mapping associated with the greatest key\n            strictly less than the given key, or ":"返回与最大键关联的键值映射\r\n            严格小于给定键，或\r\n","java.sql.ResultSetMetaData.columnNoNulls":"java.sql.ResultsetMetadata.columnnonulls\r\n","java.sql.SQLOutput.writeNString(java.lang.String)":"java.sql.sqloutput.writenstring（java.lang.string）\r\n","java.util.Calendar.setTimeInMillis(long)":"java.util.calendar.settimeinmillis（long）\r\n","java.time.format.DateTimeFormatter.ISO_LOCAL_DATE":"java.time.format.datetimeformatter.iso_local_date\r\n","java.text.Collator":"java.text.collat​​or\r\n","Useful constant for zero-based HOUR field alignment.":"有用的常数可用于基于零的小时场对齐。\r\n","Updates the digest using the specified array of bytes.":"使用指定的字节数组更新摘要。\r\n","Unschedules and returns, without executing, the next task\n            queued by the current thread but not yet executed, if the\n            current thread is operating in a ForkJoinPool.":"下一个任务的计划和返回，没有执行\r\n            由当前线程排队，但尚未执行，如果\r\n            当前线程在forkjoinpool中运行。\r\n","java.security.Identity.getScope()":"java.security.Identity.getScope（）\r\n","java.util.Hashtable.clear()":"java.util.hashtable.clear（）\r\n","java.text.CollationKey.CollationKey(java.lang.String)":"java.text.collat​​ionkey.collat​​ionkey（java.lang.string）\r\n","Searches the specified array of ints for the specified value using the\n            binary search algorithm.":"使用该指定值搜索指定值的指定数组\r\n            二进制搜索算法。\r\n","java.util.concurrent.CopyOnWriteArraySet.size()":"java.util.concurrent.copyonwritearrayset.size（）\r\n","p <= zero":"p <=零\r\n","java.util.concurrent.CompletableFuture.CompletableFuture()":"java.util.concurrent.completablefuture.completablefuture（）\r\n","The ISO-like date-time formatter that formats or parses a date-time with\n            offset and zone, such as '2011-12-03T10:15:30+01:00[Europe/Paris]'.":"格式或解析日期时间的类似ISO的日期时间格式\r\n            偏移和区域，例如'2011-12-03T10：15：30+01：00 [欧洲/巴黎]'。\r\n"," is not valid.\n":" 无效。\r\n\r\n","java.util.Scanner.radix()":"java.util.scanner.radix（）\r\n","if the pattern is invalid.\n":"如果图案无效。\r\n\r\n","java.util.concurrent.ArrayBlockingQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.ararayblockingqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","java.nio.charset.UnsupportedCharsetException.UnsupportedCharsetException(java.lang.String)":"Java.nio.Charset.unsupportedCharetException.unsupportedCharsetException（java.lang.string）\r\n","Returns the salt length in bits.":"返回盐长度。\r\n","Retrieves the value of a JDBC <code>INTEGER</code> parameter as an <code>int</code>\n            in the Java programming language.":"检索JDBC <code> Integer </code>参数为<code> int </code>的值\r\n            在Java编程语言中。\r\n","java.sql.CallableStatement.setLong(java.lang.String, long)":"java.sql.callablestatement.setlong（java.lang.string，长）\r\n","Retrieves, but does not remove, the last element of this deque,\n            or returns ":"检索但不会删除该deque的最后一个元素，\r\n            或返回\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String, java.lang.Throwable)":"java.sql.sqlwarning.sqlwarning（java.lang.string，java.lang.throwable）\r\n","java.util.GregorianCalendar.BC":"java.util.gregoriancalendar.bc\r\n","Returns a path that is this path with redundant name elements eliminated.":"返回一条路径，该路径是消除了冗余名称元素的路径。\r\n","java.sql.SQLOutput.writeNClob(java.sql.NClob)":"java.sql.sqloutput.writenclob（java.sql.nclob）\r\n","Returns the holdability property that any ":"返回任何属性\r\n","Reads the next attribute in the stream and returns it as a <code>byte</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> byte </code>\r\n            在Java编程语言中。\r\n","Retrieves and removes next watch key, waiting if none are yet present.":"检索并删除下一个手表键，如果没有，则等待。\r\n","SignatureException":"Signature Exception\r\n"," and the provided certificate chain.":" 和提供的证书链。\r\n"," indicating a long name used for format.":" 指示用于格式的长名。\r\n","if there is a database error.\n":"如果有数据库错误。\r\n\r\n","java.sql.Timestamp.Timestamp(int, int, int, int, int, int, int)":"java.sql.timestamp.timestamp（int，int，int，int，int，int，int，int）\r\n","java.text.SimpleDateFormat.applyLocalizedPattern(java.lang.String)":"java.text.simpledateformat.applylocalizedpattern（java.lang.string）\r\n","java.sql.SQLTransientConnectionException":"java.sql.sqltransientConnectionException\r\n","Returns the major version number of the database software.":"返回数据库软件的主要版本号。\r\n","java.util.Scanner.findInLine(java.lang.String)":"java.util.scanner.findinline（java.lang.string）\r\n","java.util.Hashtable.contains(java.lang.Object)":"java.util.hashtable.contains（java.lang.Object）\r\n"," of the file\n            attribute views supported by this ":" 文件\r\n            属性视图所支持的视图\r\n","Completes this task abnormally, and if not already aborted or\n            cancelled, causes it to throw the given exception upon\n            ":"异常完成此任务，如果尚未中止或\r\n            取消，使其在\r\n            \r\n","Initializes this object for verification, using the public key from\n            the given certificate.":"使用此对象初始化此对象以进行验证\r\n            给定证书。\r\n","java.sql.CallableStatement.getRef(int)":"java.sql.callablestatement.getref（int）\r\n","Gets the minimum value that the field can take.":"获取该字段可以采取的最小值。\r\n","java.util.concurrent.ConcurrentHashMap.forEachEntry(long, java.util.function.Function, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachentry（long，java.util.function.function，java.util.function.consumer）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a double value using the ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n","java.security.cert.PKIXParameters.getInitialPolicies()":"java.security.cert.pkixparameters.getinitialpolicies（）\r\n","java.security.cert.CertPathValidatorException.CertPathValidatorException(java.lang.String)":"java.security.cert.certpathvalidatorexception.certpathvalidatorexception（java.lang.string）\r\n","java.security.cert.X509CertSelector.X509CertSelector()":"java.security.cert.x509certselector.x509certselector（）\r\n","java.util.TreeMap.pollFirstEntry()":"java.util.treemap.pollfirstentry（）\r\n","java.util.Timer.purge()":"java.util.timer.purge（）\r\n","Checks if the sub-range from ":"检查是否来自\r\n","if the specified element is null and this\n         deque does not permit null elements (optional)\n":"如果指定的元素为null，则\r\n         Deque不允许无效元素（可选）\r\n\r\n","If the current thread is operating in a ForkJoinPool,\n            unschedules and returns, without executing, the next task\n            queued by the current thread but not yet executed, if one is\n            available, or if not available, a task that was forked by some\n            other thread, if available.":"如果当前线程在forkjoinpool中运行，\r\n            下一个任务的计划和返回，没有执行\r\n            由当前线程排队，但尚未执行，如果是\r\n            可用，或者如果不可用的话，某些任务\r\n            其他线程，如果可用。\r\n","if threadFactory is null":"如果线程factory为null\r\n","Indicates whether or not the value was truncated on a read.":"指示该值是否在读取上被截断。\r\n","Returns the signature provider's name, or ":"返回签名提供商的名称，或\r\n","java.text.Collator.FULL_DECOMPOSITION":"java.text.collat​​or.full_decomposition\r\n","java.security.AlgorithmParameterGenerator.init(int)":"java.security.algorithmparametergenerator.init（int）\r\n","ISO Latin Alphabet No.":"ISO拉丁字母号\r\n"," indicating a short name used independently,\n            such as a month abbreviation as calendar headers.":" 指示独立使用的简短名称，\r\n            例如一个月作为日历标题的缩写。\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String, java.lang.String)":"java.sql.sqltransactionRollbacKexception.sqltransactionRollbacKexception（java.lang.string，java.lang.string）\r\n","Returns a locale for the specified IETF BCP 47 language tag string.":"返回指定的IETF BCP 47语言标签字符串的语言环境。\r\n","Inserts the specified element into this queue if it is possible to do so\n            immediately without violating capacity restrictions, returning\n            ":"如果可以的话，将指定元素插入此队列\r\n            立即不违反能力限制，返回\r\n            \r\n","java.util.Objects.checkFromToIndex(int, int, int)":"java.util.objects.checkfromtoindex（int，int，int）\r\n"," is empty\n":" 是空的\r\n\r\n","MessageDigest":"信息摘要\r\n","java.security.spec.ECPublicKeySpec.getParams()":"java.security.spec.ecpublickeyspec.getParams（）\r\n","Returns true if this dictionary has no key/value pairs.":"如果该字典没有键/值对，则返回true。\r\n","java.util.concurrent.ForkJoinPool.getQueuedSubmissionCount()":"java.util.concurrent.forkjoinpool.getqueuedsubmissioncount（）\r\n","java.util.Scanner.match()":"java.util.scanner.match（）\r\n","java.security.IdentityScope.identities()":"java.security.IdentityScope.Identities（）\r\n","java.util.Collections.checkedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class)":"Java.util.Collections.CheckedSortedMap（Java.util.SortedMap，Java.lang.class，Java.lang.class）\r\n","java.util.concurrent.ConcurrentLinkedDeque.offer(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.offer（java.lang.object）\r\n","java.security.KeyFactory.getProvider()":"java.security.keyfactory.getProvider（）\r\n","Copies the specified array, truncating or padding with null characters (if necessary)\n            so the copy has the specified length.":"复制指定的数组，截断或带有空字符的填充（如有必要）\r\n            因此副本具有指定的长度。\r\n","java.text.DateFormatSymbols.clone()":"java.text.dateformatsymbols.clone（）\r\n","java.security.SignatureSpi.engineInitVerify(java.security.PublicKey)":"java.security.signaturespi.EngineInitverify（java.security.publickey）\r\n","java.security.cert.X509CRL.getEncoded()":"java.security.cert.x509crl.getencoded（）\r\n","Creates a <code>PreparedStatement</code> object for sending\n            parameterized SQL statements to the database.":"创建一个<code>准备的statement </code>用于发送的对象\r\n            参数化的SQL语句到数据库。\r\n","java.security.NoSuchAlgorithmException.NoSuchAlgorithmException(java.lang.Throwable)":"java.security.nosuchalgorithmexception.nosuchalgorithmexception（java.lang.throwable）\r\n","\n            to execute tasks.":"\r\n            执行任务。\r\n","java.nio.file.spi.FileSystemProvider.newFileChannel(java.nio.file.Path, java.util.Set, java.nio.file.attribute.FileAttribute)":"java.nio.file.spi.filesystemprovider.newfilechannel（java.nio.file.path，java.util.set，java.nio.file.tribute.fileattribute）\r\n","java.util.Locale.JAPANESE":"Java.util.locale.Japanese\r\n","if removing elements from this ":"如果从中删除元素\r\n","java.security.AlgorithmParameters.getInstance(java.lang.String)":"java.security.algorithmparameters.getinstance（java.lang.string）\r\n"," produces a new ":" 产生新的\r\n","Constructs an InvalidParameterSpecException with no detail message.":"构造无详细信息的无效Parameterspecexception。\r\n","Creates a default <code>PreparedStatement</code> object that has\n            the capability to retrieve auto-generated keys.":"创建一个默认<code>准备序列</code>具有\r\n            检索自动生成键的功能。\r\n"," containing all of the mappings in this ":" 包含所有映射\r\n","if the class of the specified element\n         is incompatible with this queue\n         (":"如果指定元素的类\r\n         与此队列不相容\r\n         （（\r\n","Retrieves a description of the given catalog's system or user\n            function parameters and return type.":"检索给定目录的系统或用户的描述\r\n            功能参数和返回类型。\r\n","java.util.Scanner.useDelimiter(java.util.regex.Pattern)":"java.util.scanner.usedelimiter（java.util.regex.pattern）\r\n","java.util.TreeSet.spliterator()":"java.util.treeset.spliterator（）\r\n","Double.NEGATIVE_INFINITY":"double.negation_infinity\r\n","java.sql.DatabaseMetaData.supportsGroupByBeyondSelect()":"java.sql.databasemetadata.supportgroupbybeyondselect（）\r\n","java.text.DateFormat.SECOND_FIELD":"java.text.dateformat.second_field\r\n","Returns a shallow copy of this enum map.":"返回此枚举地图的浅副本。\r\n"," if this set contains the specified element.":" 如果此集合包含指定元素。\r\n","java.security.cert.CertStore.getType()":"java.security.cert.certstore.gettype（）\r\n","java.security.NoSuchProviderException":"Java.security.NosuchProvidErexception\r\n","java.sql.DataTruncation.DataTruncation(int, boolean, boolean, int, int)":"java.sql.datatruncation.datatruncation（int，布尔值，布尔值，int，int）\r\n","Returns a shallow copy of this identity hash map: the keys and values\n            themselves are not cloned.":"返回此身份哈希地图的浅副本：键和值\r\n            自己没有克隆。\r\n","java.sql.ResultSet.insertRow()":"java.sql.Resultset.insertrow（）\r\n","java.sql.CallableStatement.getTimestamp(java.lang.String, java.util.Calendar)":"java.sql.callablestatement.gettimestamp（java.lang.string，java.util.calendar）\r\n","Returns the algorithm name of the message digest used by the mask\n            generation function.":"返回蒙版使用的消息摘要的算法名称\r\n            生成功能。\r\n","Returns the result of the computation when it ":"返回计算的结果\r\n","Constructs a list containing the elements of the specified\n            collection, in the order they are returned by the collection's\n            iterator.":"构造包含指定元素的列表\r\n            收集，按照收藏的顺序归还它们\r\n            迭代器。\r\n","java.text.DecimalFormatSymbols.clone()":"java.text.decimalformatsymbols.clone（）\r\n","java.sql.DatabaseMetaData.storesMixedCaseQuotedIdentifiers()":"java.sql.databasemetadata.storesmixedcasequotedIdentifiers（）\r\n","tbsCertificate":"tbscertificate\r\n","java.security.cert.X509CertSelector.addSubjectAlternativeName(int, java.lang.String)":"java.security.cert.x509certselector.addsubjectalternativename（int，java.lang.string）\r\n","Moves to this statement's next result.":"移至该语句的下一个结果。\r\n","Pushes an element onto the stack represented by this deque.":"将一个元素推到由此Deque代表的堆栈上。\r\n","java.util.concurrent.CountedCompleter.exec()":"java.util.concurrent.countedcompleter.exec（）\r\n","java.util.IdentityHashMap":"java.util.IdentityHashmap\r\n","java.sql.SQLInput.readAsciiStream()":"java.sql.sqlinput.readasciistream（）\r\n","Enumeration of the style of a localized date, time or date-time formatter.":"本地日期，时间或日期时间格式的列举。\r\n","java.util.Spliterator.NONNULL":"java.util.spliterator.nonnull\r\n","java.util.Arrays.binarySearch(short[], int, int, short)":"java.util.arrays.binarysearch（简短[]，int，int，short）\r\n","Creates an enum map with the same key type as the specified enum\n            map, initially containing the same mappings (if any).":"创建与指定枚举相同的密钥类型的枚举地图\r\n            地图，最初包含相同的映射（如果有）。\r\n","java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedAction)":"java.security.accesscontroller.doprivilegedwithcombiner（java.security.privilegedAction）\r\n"," sort key from a type\n            ":" 从类型中排序键\r\n            \r\n","java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)":"java.security.accesscontroller.doprivileged（java.security.privilegedaction，java.security.accessControlcontext）\r\n"," with the name passed.":" 通过名称通过。\r\n","java.util.Locale.lookup(java.util.List, java.util.Collection)":"java.util.locale.lookup（java.util.list，java.util.collection）\r\n","java.util.Locale.getDisplayName()":"java.util.locale.getdisplayname（）\r\n","A synchronization aid that allows a set of threads to all wait for\n            each other to reach a common barrier point.":"同步辅助辅助，允许一组线程等待\r\n            彼此达到一个共同的障碍点。\r\n","java.sql.Statement.NO_GENERATED_KEYS":"java.sql.statement.no_generated_keys\r\n","java.sql.SQLException.SQLException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlexception.sqlexception（java.lang.string，java.lang.string，int，java.lang.throwable）\r\n","java.security.cert.X509CRLSelector.getMaxCRL()":"java.security.cert.x509crlselector.getmaxcrl（）\r\n","java.util.TreeSet.TreeSet(java.util.Comparator)":"java.util.treeset.treeset（java.util.comparator）\r\n","java.text.StringCharacterIterator.previous()":"java.text.StringCharacterator.previous（）\r\n","java.util.Timer.schedule(java.util.TimerTask, long)":"java.util.timer.schedule（java.util.timertask，长）\r\n","java.time.format.TextStyle.asNormal()":"java.time.format.textstyle.asnormal（）\r\n","Sets the format to use for the format element with the given\n            format element index within the previously set pattern string.":"设置用于格式元素的格式与给定的格式\r\n            格式元素索引在先前设置的模式字符串中。\r\n","java.time.format.DateTimeFormatterBuilder.DateTimeFormatterBuilder()":"java.time.format.dateTimeFormatterBuilder.dateTimeFormatterBuilder（）\r\n","Possibly attempts to cancel and/or stop all tasks, and reject\n            all subsequently submitted tasks.":"可能试图取消和/或停止所有任务，并拒绝\r\n            所有后来都提交了任务。\r\n","Gets the concurrency setting for ":"获取并发设置\r\n","Returns an unmodifiable list containing eight elements.":"返回包含八个元素的不可变化列表。\r\n","X509CRLs":"x509crls\r\n","java.util.Objects.toString(java.lang.Object)":"java.util.objects.tostring（java.lang.object）\r\n","java.sql.DatabaseMetaData.sqlStateSQL":"java.sql.databasemetadata.sqlstatesql\r\n","Checks if the given alias exists in this keystore.":"检查给定的别名是否存在于此密钥库中。\r\n","java.sql.CallableStatement.setFloat(java.lang.String, float)":"java.sql.callablestatement.setfloat（java.lang.string，float）\r\n","Blocks until all tasks have completed execution after a\n            shutdown request, or the timeout occurs, or the current thread\n            is interrupted, whichever happens first.":"块，直到所有任务都完成后完成执行\r\n            关闭请求或超时发生，或当前线程\r\n            被中断，以先到者为准。\r\n","java.security.KeyStoreSpi.engineGetCertificateChain(java.lang.String)":"Java.security.Keystorespi.EngineGetCertificateChain（Java.lang.String）\r\n","if the specified character set is not found.\n":"如果找不到指定的字符集。\r\n\r\n","The variant number associated with this ":"与此关联的变体编号\r\n","java.util.concurrent.CountedCompleter.onCompletion(java.util.concurrent.CountedCompleter)":"java.util.concurrent.countedcompleter.oncompletion（java.util.concurrent.countedcompleter）\r\n","ForkJoinTask":"forkjointask\r\n","For the columns <code>UPDATE_RULE</code>\n            and <code>DELETE_RULE</code>, indicates that\n            when the primary key is updated or deleted, the foreign key (imported key)\n            is changed to <code>NULL</code>.":"对于列<code> update_rule </code>\r\n            和<code> delete_rule </code>，指示\r\n            当主键更新或删除时，外键（导入密钥）\r\n            被更改为<code> null </code>。\r\n","java.nio.file.Files.size(java.nio.file.Path)":"java.nio.file.files.size（java.nio.file.path）\r\n","Constructs a DomainLoadStoreParameter for a keystore domain with\n            the parameters used to protect keystore data.":"用使用\r\n            用于保护密钥库数据的参数。\r\n","java.util.concurrent.ConcurrentSkipListMap.higherKey(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.higherkey（java.lang.object）\r\n","Returns character index of the text boundary that was most\n            recently returned by next(), next(int), previous(), first(), last(),\n            following(int) or preceding(int).":"返回文本边界的字符索引\r\n            最近由next（），next（int），上一个（），first（），last（），\r\n            以下（int）或前面（int）。\r\n","java.sql.SQLIntegrityConstraintViolationException.SQLIntegrityConstraintViolationException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlintegrityConstrityConstrationException.SQLINTEGRITYCONDRANTVIOLATIONEXCEPTION（java.lang.String，java.lang.string，int，int，int，java.lang.throwable）\r\n","java.util.Arrays.parallelSort(double[])":"java.util.arrays.parallelsort（double []）\r\n","java.security.spec.MGF1ParameterSpec":"java.security.spec.mgf1parameterspec\r\n","Gets if the cursor is after the last row of the ":"如果光标是在最后一行之后\r\n","java.sql.DatabaseMetaData.supportsMultipleResultSets()":"java.sql.databasemetadata.supportsmultipleresultsetsetsetsetsetsetsetsetsetsetsetsetsetsetsetse\r\n","java.nio.file.Files.copy(java.nio.file.Path, java.io.OutputStream)":"java.nio.file.files.copy（java.nio.file.path，java.io.outputstream）\r\n","decode":"解码\r\n","if no tokens remain.\n":"如果没有令牌。\r\n\r\n","Appends all of the elements in the specified collection to the end of\n            this list, in the order that they are returned by the specified\n            collection's iterator (optional operation).":"将指定集合中的所有元素附加到\r\n            此列表，按照指定的顺序返回\r\n            Collection的迭代器（可选操作）。\r\n","Retrieves whether this database supports the ODBC Minimum SQL grammar.":"检索该数据库是否支持ODBC最小SQL语法。\r\n","Attempts to find the next occurrence of the specified pattern.":"试图查找指定模式的下一个发生。\r\n","If this Spliterator's source is ":"如果此拆分器的来源是\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n              with a given  <code>cause</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n              使用给定的<code>原因</code>。\r\n","java.util.concurrent.ForkJoinTask.reinitialize()":"java.util.concurrent.forkjointask.reinitialize（）\r\n","java.util.Set.containsAll(java.util.Collection)":"java.util.set.containsall（java.util.Collection）\r\n","java.util.Objects.toString(java.lang.Object, java.lang.String)":"java.util.objects.tostring（java.lang.object，java.lang.string）\r\n","java.text.DateFormatSymbols.getShortMonths()":"java.text.dateformatsymbols.getShortMonths（）\r\n","java.util.Calendar.DAY_OF_WEEK":"java.util.calendar.day_of_week\r\n","java.security.DigestInputStream.setMessageDigest(java.security.MessageDigest)":"java.security.digestinputstream.setMessageDigest（java.security.messagedigest）\r\n","Constructs a ParseException with the specified detail message and\n            offset.":"用指定的详细信息和\r\n            抵消。\r\n","java.sql.CallableStatement.setDouble(java.lang.String, double)":"java.sql.callablestatement.setDouble（java.lang.string，double）\r\n","Returns a name element of this path as a ":"返回此路径的名称元素作为\r\n","java.sql.PreparedStatement.clearParameters()":"java.sql.preparedstatement.clearparameters（）\r\n","java.sql.SQLInput.readCharacterStream()":"java.sql.sqlinput.readcharacterstream（）\r\n","java.sql.Connection.prepareStatement(java.lang.String, int, int, int)":"java.sql.connection.preparestatement（java.lang.string，int，int，int）\r\n","Returns the number of parties required to trip this barrier.":"返回行动此障碍所需的当事人数量。\r\n","java.sql.DatabaseMetaData.functionNullable":"java.sql.databasemetadata.functionnullable\r\n","java.util.EventListenerProxy.getListener()":"java.util.eventlistenerproxy.getListener（）\r\n","Writes an SQL structured type value to the stream.":"将SQL结构化的值写入流。\r\n","Retrieves whether this database supports keeping statements open\n            across commits.":"检索该数据库是否支持保持语句打开\r\n            跨提交。\r\n","java.util.Comparator.reversed()":"java.util.comparator.reversed（）\r\n","Returns the stand-alone style with the same size.":"返回具有相同大小的独立样式。\r\n","if unable to compute a result\n":"如果无法计算结果\r\n\r\n","java.security.cert.X509CertSelector.getSubjectAsBytes()":"java.security.cert.x509certselector.getSubjectasbytes（）\r\n","Get the positive prefix. -or- Set the positive prefix.":"获得正面前缀。 - 或设置正前缀。\r\n","java.util.Scanner.nextLine()":"java.util.scanner.nextline（）\r\n","Useful constant for ERA field alignment.":"对于ERA场地对齐的有用常数。\r\n","Return true if the line is all right-to-left text, and the base direction is right-to-left.":"如果该行是左派直至左文本，并且基本方向是左派。\r\n","Returns a name for the locale's country that is appropriate for display to the\n            user.":"返回该地区国家的名称，适合显示给\r\n            用户。\r\n","ChoiceFormat":"选择Format\r\n","java.util.Calendar.setFirstDayOfWeek(int)":"java.util.calendar.setfirstdayofweek（int）\r\n","serialNumber":"序列号\r\n","java.security.KeyPairGenerator.getInstance(java.lang.String, java.lang.String)":"java.security.keypairgenerator.getInstance（java.lang.string，java.lang.string）\r\n","java.security.acl.Acl":"java.security.acl.acl\r\n","java.nio.file.NoSuchFileException":"java.nio.file.nosuchfileException\r\n","java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME":"java.time.format.datetimeformatter.iso_local_date_time\r\n"," if this queue\n            is full.":" 如果这个队列\r\n            已满。\r\n","java.text.DateFormat.MONTH_FIELD":"java.text.dateformat.month_field\r\n","Returns a new Executor that submits a task to the given base\n            executor after the given delay (or no delay if non-positive).":"返回一个新执行人，将任务提交给给定的基础\r\n            执行者在给定延迟后（或无阳性，无延迟）。\r\n","java.security.PolicySpi.engineGetPermissions(java.security.CodeSource)":"java.security.policyspi.enginegetpermissions（java.security.codesource）\r\n","java.util.StringJoiner.StringJoiner(java.lang.CharSequence)":"java.util.stringjoiner.stringjoiner（java.lang.CharSequence）\r\n",", the coefficients ":"，系数\r\n","<code>GregorianCalendar</code> is a concrete subclass of\n            <code>Calendar</code> and provides the standard calendar system\n            used by most of the world.":"<code> GregorianCalendar </code>是一个具体的子类\r\n            <code>日历</code>并提供标准日历系统\r\n            由世界大多数地区使用。\r\n","java.util.Properties.loadFromXML(java.io.InputStream)":"java.util.properties.loadfromxml（java.io.inputstream）\r\n","java.util.UnknownFormatFlagsException":"java.util.inknownformatflagsexception\r\n","java.text.Collator.Collator()":"java.text.collat​​or.collat​​or（）\r\n","Constructs a new, empty identity hash map with a default expected\n            maximum size (21).":"构建一个新的空身份哈希地图，默认的预期\r\n            最大尺寸（21）。\r\n","Retrieves the log writer. -or- Sets the logging/tracing <code>PrintWriter</code> object\n            that is used by the <code>DriverManager</code> and all drivers.":"检索日志作者。 - 或 - 设置记录/跟踪<code> printwriter </code>对象\r\n            <code> drivermanager </code>和所有驱动程序都使用。\r\n","Runtime exception thrown when a file system cannot be found.":"当找不到文件系统时，会引发运行时异常。\r\n","java.util.concurrent.ConcurrentLinkedDeque":"java.util.concurrent.concurrentlinkeddeque\r\n","java.security.Identity.Identity()":"java.security.Identity.Identity（）\r\n","java.util.AbstractCollection.iterator()":"java.util.abstractcollection.iterator（）\r\n","java.util.concurrent.CopyOnWriteArrayList.toArray(java.lang.Object[])":"java.util.concurrent.copyonwritearraylist.toarray（java.lang.object []）\r\n","Returns a synchronized (thread-safe) navigable set backed by the\n            specified navigable set.":"返回一个同步（线程安全）可导航的集合，由\r\n            指定的可通道集。\r\n","java.text.DateFormat.getTimeZone()":"java.text.dateformat.getTimeZone（）\r\n","java.util.concurrent.CompletionStage.runAfterEither(java.util.concurrent.CompletionStage, java.lang.Runnable)":"java.util.concurrent.completionstage.runaftereither（java.util.concurrent.completionstage，java.lang.runnable）\r\n","CertStore":"certstore\r\n","Gets a calendar with the specified time zone and locale.":"获取带有指定时区和语言环境的日历。\r\n","ResourceBundle.":"ResourceBundle。\r\n","java.util.Currency.getAvailableCurrencies()":"java.util.currency.getAvailableCurrencies（）\r\n","java.security.cert.X509CertSelector.getNameConstraints()":"java.security.cert.x509certselector.getNameConstraints（）\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, java.lang.String, int[], java.lang.Throwable)":"java.sql.batchupdateexception.batchupdateexception（java.lang.String，java.lang.string，int []，java.lang.throwable）\r\n","Returns the week year represented by this ":"返回本年度代表\r\n","if the key can not be recovered.\n":"如果无法恢复钥匙。\r\n\r\n","Returns the number of elements in this collection.":"返回此集合中的元素数量。\r\n","Initializes internal state after construction but before\n            processing any tasks.":"在施工后但之前初始化内部状态\r\n            处理任何任务。\r\n","Returns the comparator used to order the keys in this map, or\n            ":"返回用于在此地图中订购密钥的比较器，或\r\n            \r\n","Gets the SQL Type name of the SQL structured type that this ":"获取SQL结构化类型的SQL类型名称\r\n","java.sql.DriverManager.deregisterDriver(java.sql.Driver)":"java.sql.drivermanager.deregisterdriver（java.sql.driver）\r\n","java.util.Comparator.equals(java.lang.Object)":"java.util.comparator.equals（java.lang.Object）\r\n"," will return the\n            given result on successful completion.":" 将返回\r\n            给定成功完成的结果。\r\n","java.util.concurrent.ConcurrentHashMap.forEachValue(long, java.util.function.Function, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachvalue（long，java.util.function.function，java.util.function.consumer）\r\n","java.util.Objects.hashCode(java.lang.Object)":"java.util.objects.hashcode（java.lang.object）\r\n","\n             value is < ":"\r\n             值是<\r\n","java.util.IllformedLocaleException.getErrorIndex()":"java.util.illformedlocaleexception.getErrorIndex（）\r\n","java.security.cert.CRL.toString()":"java.security.cert.crl.tostring（）\r\n","java.sql.DatabaseMetaData.tableIndexOther":"java.sql.databasemetadata.tableIndexother\r\n","java.security.cert.X509CertSelector.getBasicConstraints()":"java.security.cert.x509certselector.getBasicConstraints（）\r\n","q^-1 mod p":"Q^-1 mod p\r\n","if the specified parameters cannot be used to build with this\n             builder.":"如果不能使用指定的参数来构建\r\n             建筑商。\r\n","supplier.get()":"供应商.get（）\r\n","java.util.Collection.size()":"java.util.collection.size（）\r\n","java.security.KeyStoreSpi.engineIsKeyEntry(java.lang.String)":"java.security.keystorespi.engineiskeyentry（java.lang.string）\r\n","Returns the holdability of this result set: ":"返回此结果集的可持续性：\r\n","For the column <code>UPDATE_RULE</code>,\n            indicates that\n            when the primary key is updated, the foreign key (imported key)\n            is changed to agree with it.":"对于列<code> update_rule </code>，\r\n            表示这\r\n            当主键更新时，外键（导入密钥）\r\n            更改以同意它。\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","java.util.Collections.emptySortedMap()":"java.util.collections.emptysortedmap（）\r\n","The constant indicating that the current <code>ResultSet</code> object\n            should not be closed when calling <code>getMoreResults</code>.":"常数表示当前<code> Resultset </code>对象\r\n            调用<code> getmoreSults </code>时，不应关闭。\r\n","java.text.FieldPosition.setBeginIndex(int)":"java.text.fieldposition.setBeginIndex（int）\r\n","PDT":"太平洋夏令时\r\n"," indicating names in all styles, such as\n            \"January\" and \"Jan\".":" 在所有样式中指示名称，例如\r\n            “一月”和“扬”。\r\n","Constant indicating base direction is right-to-left.":"恒定指示基本方向是左翼。\r\n","DelayQueue":"延迟\r\n","Reads the next attribute in the stream and returns it as an array of bytes\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为字节数组\r\n            在Java编程语言中。\r\n","java.util.concurrent.Executors.newSingleThreadExecutor()":"java.util.concurrent.executors.newsinglethreadexecutor（）\r\n","java.util.BitSet.clone()":"java.util.bitset.clone（）\r\n","Useful constant for DAY_OF_YEAR field alignment.":"对于Day_of_year字段对齐的有用常数。\r\n","java.text.ParsePosition.ParsePosition(int)":"java.text.parseposition.parseposition（int）\r\n","java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream, long)":"java.sql.preparedstatement.setbinarystream（int，java.io.inputstream，long）\r\n"," object of the given type, and\n            encapsulates the given provider implementation (SPI object) in it.":" 给定类型的对象，\r\n            封装给定的提供商实现（SPI对象）。\r\n","java.util.LongSummaryStatistics.accept(long)":"java.util.longsummarystatistics.Accept（Long）\r\n","Returns an immutable set containing nine elements.":"返回一个不变的集合，其中包含九个元素。\r\n","getDefault":"getDefault\r\n","java.security.cert.PKIXRevocationChecker.setOcspResponder(java.net.URI)":"java.security.cert.pkixrevocation checker.setocspresponder（java.net.uri）\r\n","<code>ListResourceBundle</code> is an abstract subclass of\n            <code>ResourceBundle</code> that manages resources for a locale\n            in a convenient and easy to use list.":"<code> listresourcebundle </code>是一个抽象的子类\r\n            <code> ResourceBundle </code>管理语言环境的资源\r\n            在方便且易于使用的列表中。\r\n","Returns the set of catalog names available in this database.":"返回此数据库中可用的目录名称集。\r\n","java.sql.ResultSetMetaData":"java.sql.ResultSetMetadata\r\n","java.util.BitSet.set(int)":"java.util.bitset.set（int）\r\n","java.util.Arrays.binarySearch(long[], long)":"java.util.arrays.binarysearch（long []，long）\r\n","TreeSet":"树\r\n","java.util.Arrays.parallelPrefix(long[], java.util.function.LongBinaryOperator)":"java.util.arrays.parallelprefix（long []，java.util.function.longbinaryoperator）\r\n","Returns a list of all 2-letter language codes defined in ISO 639.":"返回ISO 639中定义的所有2个字母语言代码的列表。\r\n","\n            interface to minimize the effort required to implement this interface\n            backed by a \"random access\" data store (such as an array).":"\r\n            接口以最大程度地减少实现此接口所需的努力\r\n            由“随机访问”数据存储（例如数组）支持。\r\n","java.sql.Clob.position(java.sql.Clob, long)":"Java.sql.Clob.Position（Java.sql.Clob，Long）\r\n","This interface specifies constraints for cryptographic algorithms,\n            keys (key sizes), and other algorithm parameters.":"该界面指定密码算法的约束，\r\n            键（密钥尺寸）和其他算法参数。\r\n","Allocates a <code>Date</code> object and initializes it to\n            represent the specified number of milliseconds since the\n            standard base time known as \"the epoch\", namely January 1,\n            1970, 00:00:00 GMT.":"分配<code>日期</code>对象并将其初始化为\r\n            表示指定数量的毫秒数\r\n            标准的基本时间称为“时代”，即1月1日\r\n            1970年，格林尼治标准时间00：00：00。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>BIT</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>位</code>。\r\n"," is an instance or subclass of the specified\n            ":" 是指定的实例或子类\r\n            \r\n","java.util.LongSummaryStatistics.getMax()":"java.util.longsummarystatistics.getmax（）\r\n","java.text.DateFormatSymbols.getAvailableLocales()":"java.text.dateformatsymbols.getAvailableLocales（）\r\n","Deletes an owner.":"删除所有者。\r\n","java.sql.PreparedStatement.setString(int, java.lang.String)":"java.sql.preparedstatement.setstring（int，java.lang.string）\r\n","java.util.concurrent.DelayQueue.poll()":"java.util.concurrent.delayqueue.poll（）\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object，java.object， java.lang.Object，java.lang.Object）\r\n","java.util.Collection.addAll(java.util.Collection)":"java.util.collection.addall（java.util.Collection）\r\n","java.util.concurrent.CompletionException":"java.util.concurrent.completionException\r\n","Deletes the current row from this <code>ResultSet</code> object\n            and from the underlying database.":"从此<code> Resultset </code>对象删除当前行\r\n            以及基础数据库。\r\n","java.util.AbstractMap.values()":"java.util.abstractmap.values（）\r\n","java.util.concurrent.Executors.privilegedThreadFactory()":"java.util.concurrent.executors.privilegedthreadfactory（）\r\n","Returns the maximum number of bytes within a single row for this\n database.":"为此返回单行中的最大字节数\r\n 数据库。\r\n","Removes the mapping for a key from this map if it is present\n            (optional operation).":"如果存在，请从此地图中删除键的映射\r\n            （可选操作）。\r\n"," that protects\n a ":" 保护\r\n 一个\r\n","java.security.cert.X509CertSelector.getSubjectKeyIdentifier()":"java.security.cert.x509certselector.getSubjectKeyidentifier（）\r\n","Returns a copy of the pathToNames criterion. -or- Sets the pathToNames criterion.":"返回Pathtonames标准的副本。 - 或设置Pathtonames标准。\r\n"," (inclusive) to the\n            specified ":" （包括）到\r\n            指定的\r\n","java.util.Arrays.hashCode(int[])":"java.util.arrays.hashcode（int []）\r\n","\n            supports week dates.":"\r\n            支持周的日期。\r\n","java.util.Deque.peek()":"java.util.deque.peek（）\r\n","Retrieves whether this database supports SQL <code>UNION</code>.":"检索此数据库是否支持SQL <code> Union </code>。\r\n","java.time.temporal.ChronoUnit.isTimeBased()":"java.time.temporal.chronounit.istimebased（）\r\n","java.util.MissingResourceException.getKey()":"java.util.missingresourceexception.getKey（）\r\n","Stores this keystore to the given output stream, and protects its\n            integrity with the given password.":"将此密钥库存储到给定的输出流，并保护其\r\n            具有给定密码的完整性。\r\n","java.security.cert.X509CRLSelector.setCertificateChecking(java.security.cert.X509Certificate)":"java.security.cert.x509crlselector.setcertificatechecking（java.security.cert.cert.x509certificate）\r\n","Returns an immutable list containing only the specified object.":"返回仅包含指定对象的不变列表。\r\n","java.security.cert.PKIXParameters.setPolicyQualifiersRejected(boolean)":"java.security.cert.pkixparameters.setpolicyqualifiers retected（boolean）\r\n","java.util.Properties.list(java.io.PrintStream)":"java.util.properties.list（java.io.printstream）\r\n","java.util.Arrays.fill(float[], float)":"java.util.arrays.fill（float []，float）\r\n","java.sql.Connection.createStatement()":"java.sql.connection.createstatement（）\r\n","Executes the given SQL statement, which may return multiple results,\n            and signals the driver that the\n            auto-generated keys indicated in the given array should be made available\n            for retrieval.":"执行给定的SQL语句，该语句可能返回多个结果，\r\n            并向驾驶员发出信号\r\n            在给定阵列中指示的自动生成键应提供\r\n            取回。\r\n","Pushes an element onto the stack represented by this deque (in other\n            words, at the head of this deque) if it is possible to do so\n            immediately without violating capacity restrictions, throwing an\n            ":"将一个元素推到由该deque代表的堆栈上（在其他\r\n            言语，如果可以这样做的话\r\n            立即不违反能力限制，扔\r\n            \r\n","java.util.Calendar.compareTo(java.util.Calendar)":"java.util.calendar.compareto（java.util.calendar）\r\n","java.security.cert.PKIXParameters.setExplicitPolicyRequired(boolean)":"java.security.cert.pkixparameters.setexpliticpolicyrequired（boolean）\r\n","Gets the multiplier for use in percent, per mille, and similar\n            formats. -or- Sets the multiplier for use in percent, per mille, and similar\n            formats.":"获取乘数用于百分比，每米和类似\r\n            格式。 - 或设置乘数以供百分比，每米和类似\r\n            格式。\r\n","java.util.ResourceBundle.getObject(java.lang.String)":"java.util.resourcebundle.getObject（java.lang.string）\r\n","Returns an enumeration of the entries in this ACL.":"返回该ACL中条目的枚举。\r\n","java.util.NavigableMap.subMap(java.lang.Object, java.lang.Object)":"java.util.navigablemap.submap（java.lang.object，java.lang.object）\r\n","s are retrieved.":"检索了s。\r\n"," contained in the specified set.":" 包含在指定的集合中。\r\n","java.nio.file.spi.FileSystemProvider.createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.spi.filesystemprovider.createsymboliclink（java.nio.file.path，java.nio.file.path，java.nio.file.tribute.fileattribute）\r\n"," and otherwise\n            returns the non-":" 否则\r\n            返回非 - \r\n","java.nio.file.FileSystems.getFileSystem(java.net.URI)":"java.nio.file.filesystems.getfilesystem（java.net.uri）\r\n","The <code>RuleBasedCollator</code> class is a concrete subclass of\n            <code>Collator</code> that provides a simple, data-driven, table\n            collator.":"<code> RuleBasedCollat​​or </code>类是一个具体的子类\r\n            <code>碰撞器</code>提供了一个简单，数据驱动的表\r\n            碰撞器。\r\n","Copies the components of this vector into the specified array.":"将该矢量的组件复制到指定的数组中。\r\n","trustCertificate":"信任\r\n","java.util.concurrent.BlockingDeque.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","java.util.concurrent.BlockingDeque.takeLast()":"java.util.concurrent.blockingdeque.takelast（）\r\n","Retrieves a result set that contains the elements of the SQL\n            <code>ARRAY</code> value designated by this <code>Array</code> object.":"检索包含SQL元素的结果集\r\n            <code>数组</code>由此<code>数组指定的值</code>对象。\r\n","java.util.Objects.requireNonNull(java.lang.Object, java.lang.String)":"java.util.objects.requirenonnull（java.lang.object，java.lang.string）\r\n","java.text.RuleBasedCollator.getCollationElementIterator(java.text.CharacterIterator)":"java.text.rulebasedcollat​​or.getCollat​​ionElementiterator（Java.text.CharacterIterator）\r\n","java.text.CollationElementIterator.reset()":"java.text.Collat​​ionElementiter.Reset（）\r\n","java.sql.PreparedStatement.setBlob(int, java.io.InputStream)":"java.sql.preparedstatement.setBlob（int，java.io.inputstream）\r\n","java.sql.Statement.execute(java.lang.String)":"java.sql.statement.execute（java.lang.string）\r\n","Sets the 100-year period 2-digit years will be interpreted as being in\n            to begin on the date the user specifies.":"设置100年的2位年度将被解释为\r\n            从用户指定的日期开始。\r\n","java.security.SignedObject.getObject()":"java.security.signedobject.getObject（）\r\n","java.nio.file.attribute.UserPrincipalNotFoundException.getName()":"java.nio.file.attribute.userprincipalnotfoundexception.getName（）\r\n","#putService putService()":"#putService putService（）\r\n","java.util.Arrays.fill(int[], int)":"java.util.arrays.fill（int []，int）\r\n","Creates an empty set.":"创建一个空集。\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object）\r\n","Enumeration of different ways to resolve dates and times.":"列举不同方法来解决日期和时间。\r\n","Indicates that the procedure returns a result.":"表示该过程返回结果。\r\n"," if the underlying\n            computation did so.":" 如果是基础\r\n            计算这样做。\r\n","java.util.Calendar.JULY":"java.util.calendar.july\r\n","java.security.MessageDigest.digest()":"java.security.messagedigest.digest（）\r\n","Gets the table-based rules for the collation object.":"获取基于桌子的整理对象规则。\r\n","java.text.BreakIterator.previous()":"java.text.breakiterator.previous（）\r\n","java.text.DateFormat.getDateTimeInstance(int, int)":"java.text.dateformat.getDateTimeInstance（int，int）\r\n","java.text.NumberFormat.getRoundingMode()":"java.text.numberformat.getRoundingMode（）\r\n","java.sql.SQLException.getNextException()":"java.sql.sqlexception.getNextexception（）\r\n","java.util.LinkedList.getLast()":"java.util.linkedlist.getlast（）\r\n","java.util.Arrays.copyOfRange(char[], int, int)":"java.util.arrays.copyofrange（char []，int，int）\r\n","languageTag":"Languyagetag\r\n","java.sql.ParameterMetaData.parameterNullableUnknown":"java.sql.parametermetadata.parameternullableunknown\r\n","if the time is not set and the time cannot be computed\n                from the current field values.\n":"如果未设置时间并且无法计算时间\r\n                从当前的字段值。\r\n\r\n","Retrieves the name of the signature algorithm.":"检索签名算法的名称。\r\n","), or the greatest double less than ":"），或最大的双倍小于\r\n","Factory methods for file systems.":"文件系统的工厂方法。\r\n","java.text.BreakIterator.getSentenceInstance()":"java.text.breakiterator.getSentenceInstance（）\r\n","Field number for <code>get</code> and <code>set</code>\n            indicating the raw offset from GMT in milliseconds.":"<code> get </code>和<code> set </code>的字段号\r\n            指示GMT的原始偏移毫秒。\r\n","Truncates the <code>BLOB</code> value that this <code>Blob</code>\n            object represents to be <code>len</code> bytes in length.":"截断<code> blob </code>值</code> blob </code>\r\n            对象表示为<code> len </code>字节长度。\r\n","java.util.IllegalFormatException":"java.util.IllegalFormateXception\r\n","if the password could not be invalidated.\n":"如果密码无法无效。\r\n\r\n","Tests if this object has changed.":"测试此对象是否已更改。\r\n","java.util.concurrent.BlockingQueue.offer(java.lang.Object)":"java.util.concurrent.blockingqueue.offer（java.lang.Object）\r\n","java.util.TreeSet.subSet(java.lang.Object, java.lang.Object)":"java.util.treeset.subset（java.lang.Object，java.lang.object）\r\n","java.sql.ResultSet.deleteRow()":"java.sql.Resultset.deleterow（）\r\n","Retrieves, but does not remove, the last element of this deque.":"检索但不会删除该deque的最后一个元素。\r\n","if no provider with the specified name can be found.":"如果找不到指定名称的提供商。\r\n","Returns the limits of this ":"返回此限制\r\n","java.util.TooManyListenersException.TooManyListenersException(java.lang.String)":"java.util.toomanylistenersexception.toomanylistenersexception（java.lang.string）\r\n","#LONG_FORMAT":"#long_format\r\n","java.security.KeyStoreSpi.engineLoad(java.io.InputStream, char[])":"java.security.keystorespi.engineload（java.io.inputstream，char []）\r\n","Returns the number of elements in this queue.":"返回此队列中的元素数量。\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.Object）\r\n"," object as a binary stream.":" 对象是二进制流。\r\n","java.util.List.removeAll(java.util.Collection)":"java.util.list.removeall（java.util.collection）\r\n","java.io.InputStream\n            InputStream":"java.io.inputstream\r\n            Inputstream\r\n"," with the given\n            detail message.":" 与给定\r\n            详细信息。\r\n","Gets the maximum number of bytes which can be returned as values from\n character and binary type columns in a ":"获取最大数量的字节数，可以从\r\n 字符和二进制列中\r\n","java.util.concurrent.BlockingDeque.add(java.lang.Object)":"java.util.concurrent.blockingdeque.add（java.lang.object）\r\n","Adds the contents of the given ":"添加给定的内容\r\n","java.sql.DatabaseMetaData.getBestRowIdentifier(java.lang.String, java.lang.String, java.lang.String, int, boolean)":"java.sql.databasemetadata.getBestrowidentifier（java.lang.string，java.lang.string，java.lang.string，int，int，boolean）\r\n","if no line can be found, e.g. when input is an empty string.\n":"如果找不到线，例如当输入是一个空字符串时。\r\n\r\n","java.security.MessageDigestSpi.engineUpdate(byte)":"java.security.messagedigestspi.engineupdate（字节）\r\n","java.nio.file.NotDirectoryException":"java.nio.file.notdirectoryException\r\n","java.util.Iterator.remove()":"java.util.iterator.remove（）\r\n","java.text.Format.parseObject(java.lang.String)":"java.text.format.parseobject（java.lang.string）\r\n","Retrieves, but does not remove, the head of the queue represented by\n            this deque (in other words, the first element of this deque), or\n            returns ":"检索但不删除，队列的头由\r\n            这个deque（换句话说，这是该deque的第一个要素），或\r\n            返回\r\n","java.util.ListResourceBundle.getKeys()":"java.util.listresourcebundle.getkeys（）\r\n","java.security.MessageDigestSpi.engineDigest()":"java.security.messagedigestspi.enginedigest（）\r\n","java.nio.file.attribute.AclEntry.flags()":"java.nio.file.attribute.aclentry.flags（）\r\n","Checks whether the any policy OID should be processed if it\n            is included in a certificate. -or- Sets state to determine if the any policy OID should be processed\n            if it is included in a certificate.":"检查是否应处理任何策略，如果\r\n            包含在证书中。 - 或设置状态以确定是否应处理任何策略OID\r\n            如果包含在证书中。\r\n","\n             does.":"\r\n             做。\r\n","An entry in an access control list (ACL).":"访问控制列表（ACL）中的条目。\r\n","java.security.MessageDigest.digest(byte[])":"java.security.messagedigest.digest（byte []）\r\n","\n            value from this random number generator's sequence.":"\r\n            从这个随机数生成器的序列中值。\r\n","Opens a file, returning an input stream to read from the file.":"打开文件，返回输入流以从文件读取。\r\n","Removes the object at the top of this stack and returns that\n            object as the value of this function.":"删除此堆栈顶部的对象，然后返回\r\n            对象作为此函数的值。\r\n","Creates a new RSAPublicKeySpec.":"创建一个新的rsapublickeyspec。\r\n","Retrieves the designated column's SQL type.":"检索指定列的SQL类型。\r\n","java.nio.file.PathMatcher":"java.nio.file.pathmatcher\r\n","Immediately performs the base action of this task and returns\n            true if, upon return from this method, this task is guaranteed\n            to have completed normally.":"立即执行此任务的基本操作并返回\r\n            是的，如果从此方法返回后，请保证此任务\r\n            正常完成。\r\n","A service that decouples the production of new asynchronous tasks\n            from the consumption of the results of completed tasks.":"一种将新异步任务生产的服务\r\n            从消耗完成任务的结果。\r\n","java.util.concurrent.ForkJoinPool.isTerminated()":"java.util.concurrent.forkjoinpool.isterminated（）\r\n","Returns the certificate being checked. -or- Sets the certificate being checked.":"返回正在检查的证书。 - 或 - 设置正在检查的证书。\r\n","java.sql.Driver":"Java.sql.Driver\r\n","java.text.DecimalFormat.getNegativePrefix()":"java.text.decimalformat.getNegativePrefix（）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            second within the minute.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            第二分钟。\r\n"," (version number).":" （版本号）。\r\n","java.nio.file.FileStore.name()":"java.nio.file.file.filestore.name（）\r\n","java.time.format.DateTimeFormatterBuilder":"java.time.format.dateTimeFormatterBuilder\r\n"," if this CompletableFuture was cancelled\n            before it completed normally.":" 如果该完整的未图被取消\r\n            在正常完成之前。\r\n","Returns an immutable set containing zero elements.":"返回包含零元素的不变套件。\r\n"," and this\n                ":" 和这个\r\n                \r\n","Create Bidi from the given paragraph of text.":"从给定的文本段落创建拜迪。\r\n","java.util.Comparator.comparingDouble(java.util.function.ToDoubleFunction)":"java.util.comparator.comparingdouble（java.util.function.todoublefunction）\r\n"," class is used to generate a\n            set of\n            parameters to be used with a certain algorithm.":" 类用于生成\r\n            集\r\n            与某个算法一起使用的参数。\r\n","Returns a reference to the public key component of this key pair.":"返回对此密钥对的公共密钥组件的引用。\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with\n            a given <code>cause</code> and <code>failedProperties</code>.":"构造<code> sqlclientInfoException </code>用来初始化的对象\r\n            给定的<code>原因</code>和<code> FailedProperties </code>。\r\n","timeStyle":"时间义\r\n","Synthesizes a pattern string that represents the current state\n            of this Format object.":"合成一个代表当前状态的模式字符串\r\n            此格式对象。\r\n","java.text.CharacterIterator.last()":"java.text.characteriter.last（）\r\n","s\n            from a repository.":"s\r\n            来自存储库。\r\n","java.text.CollationElementIterator.setOffset(int)":"java.text.collat​​ionElementiter.setOffset（int）\r\n","Causes this future to report an ":"使这个未来报告\r\n","java.security.cert.PKIXCertPathValidatorResult.getPolicyTree()":"java.security.cert.pkixcertpathvalidatoresult.getpolicytree（）\r\n","java.util.Currency.getDefaultFractionDigits()":"java.util.currency.getDefaultFractionDigits（）\r\n","java.text.Bidi.getRunCount()":"java.text.bidi.getRuncount（）\r\n","java.text.DecimalFormat.setDecimalFormatSymbols(java.text.DecimalFormatSymbols)":"java.text.decimalformat.setdecimalformatsymbols（java.text.decimalformatsymbols）\r\n","java.nio.file.NoSuchFileException.NoSuchFileException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.nosuchfileexception.nosuchfileexception（java.lang.string，java.lang.string，java.lang.string）\r\n","Constructs a vector containing the elements of the specified\n            collection, in the order they are returned by the collection's\n            iterator.":"构造包含指定元素的向量\r\n            收集，按照收藏的顺序归还它们\r\n            迭代器。\r\n","java.util.Scanner.useRadix(int)":"java.util.scanner.useradix（int）\r\n","Releases this <code>Statement</code> object's database\n            and JDBC resources immediately instead of waiting for\n            this to happen when it is automatically closed.":"释放此<code>语句</code>对象的数据库\r\n            和JDBC资源立即而不是等待\r\n            当它自动关闭时，这将发生。\r\n","Sets the designated parameter to the given Java <code>short</code> value.":"将指定的参数设置为给定的Java <code>简短</code>值。\r\n","Returns an unmodifiable list containing an arbitrary number of elements.":"返回包含任意数量元素的不可变化列表。\r\n","Converts an array of bytes into an instance of class Class,\n            with an optional CodeSource.":"将一个字节数组转换为类别类的实例，\r\n            带有可选代码。\r\n","java.util.Calendar.getInstance()":"java.util.calendar.getInstance（）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a boolean value using a case insensitive pattern\n            created from the string \"true|false\".":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用案例不敏感的模式解释为布尔值\r\n            由字符串“ true | false”创建。\r\n","java.util.MissingFormatWidthException.MissingFormatWidthException(java.lang.String)":"java.util.missingformatwidthexception.missingformatwidthexception（java.lang.string）\r\n","java.time.format.DateTimeFormatter.ISO_DATE_TIME":"java.time.format.datetimeformatter.iso_date_time\r\n","Returns the owner of the file.":"返回文件的所有者。\r\n","java.sql.Array":"Java.sql.Array\r\n","delay ":"延迟\r\n"," with the same mappings as the\n            specified map.":" 与与\r\n            指定的地图。\r\n","java.sql.SQLNonTransientException":"java.sql.sqlnontransientException\r\n","\n            implementation of the highest-priority installed provider as the source\n            of randomness.":"\r\n            实施最高优先级安装的提供商作为来源\r\n            随机性。\r\n","Returns the maximum element of the given collection, according to the\n            order induced by the specified comparator.":"返回给定集合的最大元素，根据\r\n            指定比较器诱导的顺序。\r\n","java.text.DecimalFormatSymbols.getAvailableLocales()":"java.text.decimalformatsymbols.getAvailableLocales（）\r\n","This is the interface used for representing one entry in an Access\n            Control List (ACL).":"这是用于表示访问中一个条目的界面\r\n            控制列表（ACL）。\r\n","java.sql.ResultSet.getRowId(int)":"java.sql.Resultset.getRowid（int）\r\n","Returns a list of all the SQL keywords that are NOT also SQL92 keywords\n for the database.":"返回所有不是SQL92关键字的SQL关键字的列表\r\n 对于数据库。\r\n","java.nio.file.attribute.DosFileAttributeView.readAttributes()":"java.nio.file.attribute.dosfileattributeview.readattributes（）\r\n","java.security.cert.CertificateFactory.getInstance(java.lang.String, java.security.Provider)":"java.security.cert.certificatefactory.getinstance（java.lang.string，java.security.provider）\r\n","Updates the designated column using the given <code>Reader</code>\n            object.":"使用给定的<code>读取器</code>更新指定的列\r\n            目的。\r\n"," if the two specified arrays of ints are\n            ":" 如果两个指定的int阵列是\r\n            \r\n","java.sql.Types.CHAR":"java.sql.types.char\r\n","This class provides the method <code>normalize</code> which transforms Unicode\n            text into an equivalent composed or decomposed form, allowing for easier\n            sorting and searching of text.":"此类提供方法<code>归一化</code>将转换Unicode\r\n            文本为等效的组成或分解形式，使得更容易\r\n            分类和搜索文本。\r\n"," in the same scope as this ":" 与此相同的范围\r\n","Initializes the key pair generator for a certain keysize using\n            a default parameter set and the ":"初始化关键对生成器的特定按键\r\n            默认参数集和\r\n","Returns a view of the portion of this set whose elements are\n            strictly less than ":"返回该集合的部分的视图\r\n            严格少于\r\n","java.text.NumberFormat.format(double, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.numberformat.format（double，java.lang.stringbuffer，java.text.fieldposition）\r\n"," is negative; ":" 负面；\r\n","The constant for representing a start or end time in GMT time mode.":"在GMT时间模式下代表开始或结束时间的常数。\r\n","java.sql.Types.FLOAT":"java.sql.types.float\r\n","java.text.DecimalFormat.DecimalFormat()":"java.text.decimalformat.decimalformat（）\r\n","java.sql.ResultSet.updateAsciiStream(int, java.io.InputStream)":"java.sql.Resultset.updateasciistream（int，java.io.inputstream）\r\n","java.util.concurrent.CompletableFuture.getNow(java.lang.Object)":"java.util.concurrent.completablefuture.getnow（java.lang.object）\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object\n             with a given <code>reason</code>.":"构造<code> sqlnontransientConnectionException </code>对象\r\n             使用给定的<code>原因</code>。\r\n","If this spliterator can be partitioned, returns a Spliterator\n            covering elements, that will, upon return from this method, not\n            be covered by this Spliterator.":"如果可以对此拆分器进行分区，请返回拆分器\r\n            涵盖元素，从这种方法返回后，它将不是\r\n            被此拆分器覆盖。\r\n","java.util.concurrent.ConcurrentLinkedDeque.descendingIterator()":"java.util.concurrent.concurrentlinkeddeque.descendingiterator（）\r\n","java.util.concurrent.CountedCompleter.decrementPendingCountUnlessZero()":"java.util.concurrent.countedcompleter.decrementpendingCountunlesszero（）\r\n","java.util.LinkedHashSet":"java.util.linkedhashset\r\n","java.time.zone.ZoneRules.getTransitions()":"java.time.zone.zonerules.getTransitions（）\r\n","This class is used as an opaque representation of cryptographic parameters.":"该类用作加密参数的不透明表示。\r\n","Removes all resource bundles from the cache that have been loaded\n            using the caller's class loader.":"从已加载的缓存中删除所有资源捆绑包\r\n            使用呼叫者的类加载程序。\r\n","java.security.Signature.getAlgorithm()":"java.security.signature.getAlgorithm（）\r\n","Returns the primeQ.":"返回Primeq。\r\n","Returns the first element in this list.":"返回此列表中的第一个元素。\r\n","Sets the pattern used by this message format.":"设置此消息格式使用的模式。\r\n","java.nio.file.CopyOption":"java.nio.file.copyoption\r\n","java.sql.DatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()":"java.sql.databasemetadata.SupportsDatadeFinitionFinitionAndDatamAnipulation Transactions（）\r\n","java.util.Formatter.Formatter(java.lang.String, java.lang.String)":"java.util.formatter.formatter（java.lang.string，java.lang.string）\r\n","java.sql.Array.getArray(long, int)":"java.sql.array.getarray（long，int）\r\n","java.util.concurrent.Exchanger.exchange(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.exchanger.exchange（java.lang.object，long，java.util.concurrent.timeunit）\r\n","java.util.Collections.checkedCollection(java.util.Collection, java.lang.Class)":"java.util.collections.CheckedCollection（Java.util.Collection，Java.lang.class）\r\n","count > objects.length - objectStart":"count> objects.length -objectStart\r\n","Constructs a <code>SQLTimeoutException</code> object.":"构造<code> sqlTimeOutException </code>对象。\r\n","java.sql.ResultSet.updateInt(java.lang.String, int)":"java.sql.Resultset.updateInt（java.lang.string，int）\r\n","java.util.Locale.getUnicodeLocaleType(java.lang.String)":"java.util.locale.getunicodelocaletype（java.lang.string）\r\n","The parent bundle of this bundle.":"这个捆绑包的父捆。\r\n","java.security.AlgorithmParameterGenerator.getAlgorithm()":"java.security.algorithmparametergenerator.getAlgorithm（）\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeQ()":"java.security.spec.rsamultimeprimeprivatecrtkeyspec.getPrimeq（）\r\n","Creates a new EncodedKeySpec with the given encoded key.":"使用给定的编码键创建一个新的编码Keyspec。\r\n","java.sql.ClientInfoStatus":"java.sql.clientinfostatus\r\n","in case an error occurs during a read operation.":"如果在读取过程中发生错误。\r\n"," thrown when the timeout specified by <code>Statement</code>\n             has expired.":" 当通过<code>语句</code>指定的超时时抛出\r\n             已过期。\r\n","java.util.concurrent.CompletableFuture.cancel(boolean)":"java.util.concurrent.completablefuture.cancel（boolean）\r\n","22":"22\r\n","java.security.spec.DSAPublicKeySpec.getP()":"java.security.spec.dsapublickeyspec.getp（）\r\n","java.sql.Clob.length()":"java.sql.clob.length（）\r\n","java.util.Currency.getNumericCode()":"java.util.currency.getNumericCode（）\r\n","java.text.DecimalFormatSymbols.getNaN()":"java.text.decimalformatsymbols.getnan（）\r\n","java.util.HashMap.HashMap(int, float)":"java.util.hashmap.hashmap（int，float）\r\n","java.util.concurrent.CountDownLatch.await(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.countdownlatch.await（long，java.util.concurrent.timeunit）\r\n","java.sql.Types.CLOB":"java.sql.types.clob\r\n","java.util.concurrent.ConcurrentHashMap.reduceEntries(long, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reduceentries（long，java.util.function.bifunction）\r\n","java.security.KeyFactory.getInstance(java.lang.String)":"java.security.keyfactory.getinstance（java.lang.string）\r\n","java.util.IllegalFormatPrecisionException":"Java.util.IllegalFormatPrecisionException\r\n","Deque#offerLast":"Deque＃uperslast\r\n","#get()":"＃得到（）\r\n","java.util.Arrays.equals(char[], char[])":"java.util.arrays.equals（char []，char []）\r\n","java.sql.SQLException.SQLException(java.lang.Throwable)":"java.sql.sqlexception.sqlexception（java.lang.throwable）\r\n","Constructs a Calendar with the default time zone\n            and the default ":"使用默认时区构建日历\r\n            和默认值\r\n","java.util.concurrent.ForkJoinPool.getQueuedTaskCount()":"java.util.concurrent.forkjoinpool.getqueuedtaskcount（）\r\n",", or cannot be compared to each other.":"，或不能相互比较。\r\n","TreeMap":"Treemap\r\n","Returns the begin index.":"返回开始索引。\r\n","Returns a map of X.":"返回X的地图。\r\n","Constructs an annotation record with the given value, which\n            may be null.":"构建具有给定值的注释记录，\r\n            可能是无效的。\r\n","Creates a thread pool that reuses a fixed number of threads\n            operating off a shared unbounded queue.":"创建一个线程池，可重用固定数量的线程\r\n            在共享的无界队列中操作。\r\n"," class to be used for serialization and\n deserialization on ":" 用于序列化和\r\n 避免\r\n","Moves the cursor to the first row in\n            this <code>ResultSet</code> object.":"将光标移至第一行\r\n            此<code> Resultset </code>对象。\r\n","Useful constant for MONTH field alignment.":"有用的常数用于月球对齐。\r\n","java.nio.file.attribute.FileAttribute":"java.nio.file.attribute.fileattribute\r\n","This constant stands for the percent symbol.":"这个常数代表百分比符号。\r\n","Constructs a <code>BatchUpdateException</code> object initialized with a given\n            <code>reason</code>, <code>SQLState</code> and\n            <code>updateCounts</code>.":"构建<code> batchupdateException </code>用给定的对象\r\n            <code>原因</code>，<code> sqlstate </code>和\r\n            <code> UpdateCounts </code>。\r\n","unknown":"未知\r\n","Returns an empty set (immutable).":"返回一个空集（不变）。\r\n","Retrieves and removes the last element of this deque, waiting\n            if necessary until an element becomes available.":"检索并删除该deque的最后一个元素，等待\r\n            如有必要，直到元素可用。\r\n","Queries if this ":"查询如果这个\r\n"," with the specified\n            detail message, cause, certification path, and index.":" 与指定的\r\n            详细信息，原因，认证路径和索引。\r\n","java.security.Security.getAlgorithmProperty(java.lang.String, java.lang.String)":"java.security.security.getalgorithmproperty（java.lang.string，java.lang.string）\r\n","java.text.CollationKey.compareTo(java.text.CollationKey)":"java.text.collat​​ionkey.compareto（java.text.collat​​ionkey）\r\n","java.util.Arrays.fill(short[], short)":"java.util.arrays.fill（短[]，简称）\r\n","java.security.cert.CertPathValidatorException.CertPathValidatorException(java.lang.Throwable)":"java.security.cert.certpathvalidatorexception.certpathvalidatorexception（java.lang.throwable）\r\n","Returns an object representing the value of OUT parameter\n            <code>parameterName</code> and uses <code>map</code> for the custom\n            mapping of the parameter value.":"返回代表OUT参数值的对象\r\n            <code> parametername </code>并使用<code> MAP </code>自定义\r\n            参数值的映射。\r\n","Returns the value for the trailer field, i.":"返回拖车字段的价值，i。\r\n","Assigns the specified int value to each element of the specified array\n            of ints.":"将指定的int值分配给指定数组的每个元素\r\n            ints。\r\n","Hashtable":"哈希表\r\n","java.sql.CallableStatement.setNString(java.lang.String, java.lang.String)":"java.sql.callablestatement.setnstring（java.lang.string，java.lang.string）\r\n","java.text.DecimalFormatSymbols.getInstance()":"java.text.decimalformatsymbols.getInstance（）\r\n","java.util.BitSet.clear(int)":"java.util.bitset.clear（int）\r\n","java.text.BreakIterator":"java.text.breakiterator\r\n","java.util.Observable.countObservers()":"java.util.observable.countobservers（）\r\n","java.text.DateFormatSymbols.setShortWeekdays(java.lang.String[])":"java.text.dateformatsymbols.setshortweekdays（java.lang.string []）\r\n","A class for validating certification paths (also known as certificate\n            chains).":"用于验证认证路径的课程（也称为证书\r\n            链）。\r\n","java.text.DecimalFormatSymbols.getInstance(java.util.Locale)":"java.text.decimalformatsymbols.getinstance（java.util.locale）\r\n","java.sql.SQLWarning.SQLWarning(java.lang.Throwable)":"java.sql.sqlwarning.sqlwarning（java.lang.throwable）\r\n","A thread managed by a ":"由\r\n","java.util.TimeZone.LONG":"java.util.timezone.long\r\n"," field indicating\n            Wednesday.":" 指示字段\r\n            周三。\r\n"," representing the given value in milliseconds.":" 代表毫秒中给定值。\r\n","The constant indicating that the parameter's mode is  OUT.":"常数表示参数的模式已输出。\r\n","java.text.NumberFormat.isParseIntegerOnly()":"java.text.numberformat.isparseintegeronly（）\r\n","java.sql.ResultSet.updateArray(int, java.sql.Array)":"java.sql.Resultset.updatearray（int，java.sql.array）\r\n","java.security.cert.X509CRLSelector.addIssuer(javax.security.auth.x500.X500Principal)":"java.security.cert.x509crlselector.addissuer（javax.security.auth.x500.x500 principal）\r\n","java.nio.file.SecureDirectoryStream.newByteChannel(java.lang.Object, java.util.Set, java.nio.file.attribute.FileAttribute)":"java.nio.file.securedirectorystream.newbytechannel（java.lang.object，java.util.set，java.nio.file.file.attribute.fileattribute）\r\n","java.time.format.DateTimeFormatterBuilder.appendZoneRegionId()":"java.time.format.datetimeformatterbuilder.appendzoneregionid（）\r\n","java.util.ArrayDeque.removeLastOccurrence(java.lang.Object)":"java.util.arraydeque.removelastoccurrence（java.lang.object）\r\n","Deletes the component at the specified index.":"删除指定索引处的组件。\r\n","Loads all of the properties represented by the XML document on the\n            specified input stream into this properties table.":"加载XML文档表示的所有属性\r\n            指定输入流到此属性表中。\r\n","Returns the set of extension keys associated with this locale, or the\n            empty set if it has no extensions.":"返回与此语言环境相关的扩展密钥或\r\n            如果没有扩展名，则空设置。\r\n","if there is a problem accessing the database.":"如果访问数据库存在问题。\r\n","Constructs a provider with the specified name, version number,\n            and information.":"用指定名称，版本号，构建提供商\r\n            和信息。\r\n","java.util.concurrent.ConcurrentHashMap.searchValues(long, java.util.function.Function)":"java.util.concurrent.concurrenthashmap.searchvalues（long，java.util.function.function.function）\r\n","java.text.MessageFormat.parse(java.lang.String)":"java.text.messageformat.parse（java.lang.string）\r\n","Encoder":"编码器\r\n","java.sql.PreparedStatement.setNClob(int, java.sql.NClob)":"java.sql.preparedstatement.setnclob（int，java.sql.nclob）\r\n","java.text.NumberFormat.getNumberInstance()":"java.text.numberformat.getnumberinstance（）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>DATE</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>日期</code>。\r\n","java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition)":"java.text.simpledateformat.parse（java.lang.string，java.text.parseposition）\r\n","Returns the subject criterion as an ":"返回主题标准作为\r\n","java.util.concurrent.CompletableFuture.completeExceptionally(java.lang.Throwable)":"java.util.concurrent.completablefuture.completeexceptionally（java.lang.throwable）\r\n","java.util.SimpleTimeZone":"java.util.simpletimezone\r\n","Writes the value of a user-defined attribute from a buffer.":"从缓冲区写入用户定义的属性的值。\r\n","Returns the name of the attribute view.":"返回属性视图的名称。\r\n","java.security.spec.ECPublicKeySpec.ECPublicKeySpec(java.security.spec.ECPoint, java.security.spec.ECParameterSpec)":"java.security.spec.ecpublickeyspec.ecpublickeyspec（java.security.spec.ecpoint，java.security.security.spec.ecparameterspec）\r\n","java.nio.file.Files.readAllLines(java.nio.file.Path)":"java.nio.file.files.readalllines（java.nio.file.path）\r\n","Assigns the specified byte value to each element of the specified\n            range of the specified array of bytes.":"将指定字节值分配给指定的每个元素\r\n            指定字节阵列的范围。\r\n","java.security.cert.X509CertSelector.getPrivateKeyValid()":"java.security.cert.x509certselector.getPrivateKeyvalid（）\r\n","java.util.Arrays.copyOf(double[], int)":"java.util.arrays.copyof（double []，int）\r\n","This exception is thrown when a particular cryptographic algorithm is\n            requested but is not available in the environment.":"当特定的加密算法是\r\n            请求但在环境中不可用。\r\n","W":"w\r\n","Writes an SQL <code>BLOB</code> value to the stream.":"将sql <code> blob </code>值写入流。\r\n","java.security.IdentityScope.size()":"java.security.indistityscope.size（）\r\n"," from this CRL.":" 从这个CRL。\r\n","Returns the date on which the certificate was revoked.":"返回吊销证书的日期。\r\n","Returns the set of revoked certificates.":"返回吊销证书集。\r\n","java.util.Scanner.nextInt(int)":"java.util.scanner.nextint（int）\r\n","Performs the given action for each remaining element until all elements\n            have been processed or the action throws an exception.":"对每个剩余元素执行给定的动作，直到所有元素\r\n            已经处理过或动作引发了例外。\r\n","Returns the maximum number of columns in an ":"返回最大列数\r\n","java.util.EventListenerProxy.EventListenerProxy(java.util.EventListener)":"java.util.eventlistenerproxy.eventlistenerproxy（java.util.eventlistener）\r\n","java.security.cert.X509Certificate.getSubjectX500Principal()":"java.security.cert.x509certificate.getSubjectx500principal（）\r\n","java.util.Hashtable.size()":"java.util.hashtable.size（）\r\n","Requires the output to use an alternate form.":"要求输出使用替代表单。\r\n","Returns the public-exponent value.":"返回公共充满价值。\r\n","java.util.OptionalInt.orElse(int)":"java.util.optionalint.orelse（int）\r\n","Sets month strings.":"设置月字符串。\r\n","Checks that the certificate is currently valid.":"检查证书当前有效。\r\n","java.nio.file.FileVisitOption":"java.nio.file.filevisitoption\r\n","Returns the provider of this keystore.":"返回此密钥库的提供商。\r\n","if the computation threw an\n exception":"如果计算抛出了\r\n 例外\r\n"," (issuer distinguished name) as an\n implementation specific ":" （发行人区分名称）\r\n 特定实施\r\n"," because the path string contains invalid characters, or\n            the path string is invalid for other file system specific reasons.":" 因为路径字符串包含无效的字符，或\r\n            由于其他文件系统特定原因，该路径字符串无效。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>short</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的<code>简短</code>。\r\n","java.security.spec.ECPrivateKeySpec.getS()":"java.security.spec.ecprivatekeyspec.gets（）\r\n","java.sql.Blob.position(byte[], long)":"java.sql.blob.Position（byte []，long）\r\n","java.util.Set.of(java.lang.Object)":"java.util.set.of（java.lang.Object）\r\n","Constructs a <code>SQLTransientException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqltransientException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","Marks the week of the month part of a date.":"标记日期的一个月一周。\r\n","java.security.SignatureSpi.engineGetParameter(java.lang.String)":"java.security.signaturespi.EnginegetParameter（java.lang.string）\r\n","java.util.TimeZone.useDaylightTime()":"java.util.timezone.usedaylighttime（）\r\n"," as the source of elements, and\n            reporting its ":" 作为元素的来源，以及\r\n            报告其\r\n","java.security.cert.X509CRL.getRevokedCertificate(java.security.cert.X509Certificate)":"java.security.cert.x509crl.getRevokedCertificate（java.security.cert.x509certificate）\r\n","java.util.Arrays.toString(double[])":"java.util.arrays.tostring（double []）\r\n","java.nio.file.FileSystemAlreadyExistsException":"java.nio.file.filesystyalreadyexistSexception\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object），java.object）\r\n","java.sql.Connection.clearWarnings()":"java.sql.connection.clearwarnings（）\r\n","attribute":"属性\r\n","java.sql.DriverPropertyInfo.DriverPropertyInfo(java.lang.String, java.lang.String)":"java.sql.driverpropertyinfo.driverpropertyinfo（java.lang.string，java.lang.string）\r\n","TimeoutException":"TimeOutException\r\n","oldVal":"Oldval\r\n","Converts the current millisecond time value ":"转换当前毫秒的时间值\r\n","Collator strength value.":"碰撞器强度价值。\r\n","java.util.ArrayDeque.spliterator()":"java.util.arraydeque.spliterator（）\r\n","Returns a copy of the subjectAlternativeNames criterion. -or- Sets the subjectAlternativeNames criterion.":"返回主题Assubterternativianmes标准的副本。 - 或设置主题alternativinames标准。\r\n","java.security.spec.ECFieldFp.getP()":"java.security.spec.ecfieldfp.getp（）\r\n","lineLimit ":"线性\r\n","Returns a view of the portion of this set whose elements range\n            from ":"返回该集合的部分的视图，其元素范围\r\n            从\r\n","Returns the targeted parallelism level of the common pool.":"返回公共池的靶向平行性水平。\r\n","java.util.TooManyListenersException":"java.util.toomanylistenersexception\r\n","Retrieves the index of the character following the last character in the\n            requested field. -or- Sets the end index.":"检索角色的索引，遵循\r\n            请求的字段。 - 或设置端索引。\r\n","java.security.spec.ECPublicKeySpec":"java.security.spec.ecpublickeyspec\r\n","java.util.concurrent.CompletableFuture.get(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.completablefuture.get（long，java.util.concurrent.timeunit）\r\n","java.security.NoSuchAlgorithmException.NoSuchAlgorithmException(java.lang.String)":"java.security.nosuchalgorithmexception.nosuchalgorithmexception（java.lang.string）\r\n","Gets time zone strings.":"获取时区弦。\r\n","java.nio.charset.spi.CharsetProvider.charsetForName(java.lang.String)":"Java.nio.Charset.spi.CharsetProvider.CharsetForname（Java.lang.String）\r\n","Returns the result of accumulating the given transformation\n            of all keys using the given reducer to combine values, and\n            the given basis as an identity value.":"返回累积给定转换的结果\r\n            使用给定还原器组合值的所有密钥\r\n            给定的基础作为身份值。\r\n","Retrieves the value of the designated parameter as a\n            <code>java.":"检索指定参数的值为\r\n            <code> Java。\r\n","java.util.Date.setTime(long)":"java.util.date.settime（long）\r\n","java.nio.file.LinkPermission":"java.nio.file.linkpermission\r\n","java.sql.ResultSet.updateTime(int, java.sql.Time)":"java.sql.Resultset.updateTime（int，java.sql.time）\r\n","Tests if this path ends with a ":"测试此路径是否以\r\n"," whose corresponding\n            bit is set in the specified ":" 谁的对应\r\n            位在指定的\r\n","A selector that defines a set of criteria for selecting\n            ":"定义一组选择标准的选择器\r\n            \r\n","java.util.concurrent.ForkJoinPool.defaultForkJoinWorkerThreadFactory":"java.util.concurrent.forkjoinpool.defaultforkjoinworkerThreadFactory\r\n","if the certificate is not yet valid.":"如果证书尚未有效。\r\n","java.util.concurrent.ConcurrentSkipListMap.ceilingKey(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.ceilingkey（java.lang.object）\r\n","Pops an element from the stack represented by this deque.":"从堆栈中弹出一个由此Deque代表的元素。\r\n","Sets the seed of this random number generator using a single\n            ":"使用一个随机数生成器设置该随机数生成器的种子\r\n            \r\n","Deletes the entry identified by the given alias from this keystore.":"从此密钥库中删除给定别名确定的条目。\r\n"," instance with\n            the same mappings as the specified map.":" 实例\r\n            与指定地图相同的映射。\r\n","Returns the provider of this SecureRandom object.":"返回此Securerandom对象的提供商。\r\n",", or if a\n             new ":"，或者如果\r\n             新的\r\n","java.time.temporal.JulianFields":"Java.Time.temporal.Julianfields\r\n","if the computation was cancelled":"如果计算被取消\r\n","Returns the least key in this sorted map.":"返回此排序地图中的最小关键。\r\n","java.util.Locale.JAPAN":"java.util.locale.japan\r\n","java.nio.file.attribute.BasicFileAttributes.fileKey()":"java.nio.file.attribute.basicfileattributes.filekey（）\r\n","Returns the first boundary following the specified character offset.":"按照指定的字符偏移返回第一个边界。\r\n","The constant in the Java programming language that indicates\n            that the SQL type is database-specific and\n            gets mapped to a Java object that can be accessed via\n            the methods <code>getObject</code> and <code>setObject</code>.":"指示的Java编程语言中的常数\r\n            SQL类型是数据库特定的，并且\r\n            被映射到可以通过\r\n            方法<code> getObject </code>和<code> setObject </code>。\r\n","Returns the number of components in this vector.":"返回该向量中的组件数量。\r\n","RSAOtherPrimeInfo":"rsaotherprimeinfo\r\n"," of additional certification path checkers.":" 额外的认证路径检查器。\r\n","if the specified provider cannot be found.":"如果找不到指定的提供商。\r\n","java.sql.Array.getArray(java.util.Map)":"java.sql.array.getarray（java.util.map）\r\n","if there is a problem with accessing the database or if\n             ":"如果访问数据库或是否存在问题\r\n             \r\n","Checks if the value is within the valid range and that all values\n            in the range fit in an ":"检查值是否在有效范围内，并且所有值\r\n            在范围内适合\r\n","Removes the first occurrence of the specified element from this list,\n            if it is present.":"从此列表中删除指定元素的第一次出现，\r\n            如果存在。\r\n","Retrieves whether this database supports subqueries in quantified\n            expressions.":"检索该数据库是否支持量化\r\n            表达。\r\n","java.sql.CallableStatement.setObject(java.lang.String, java.lang.Object, int)":"java.sql.callablestatement.setObject（java.lang.string，java.lang.object，int）\r\n","Gets the DER-encoded CRL information, the\n            ":"获取DER编码的CRL信息，\r\n            \r\n","java.nio.file.Files.getPosixFilePermissions(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.getposixfilepermissions（java.nio.file.path，java.nio.file.linkoption）\r\n","CertPathValidatorResult":"certpathvalidatoresult\r\n","java.security.spec.DSAPrivateKeySpec.getX()":"java.security.spec.dsaprivatekeyspec.getx（）\r\n","Returns the incompatible flag.":"返回不兼容的标志。\r\n","Constructs a <code>SimpleDateFormat</code> using the given pattern and\n            date format symbols.":"使用给定模式和\r\n            日期格式符号。\r\n","#fields fields[]":"#Fields字段[]\r\n","Returns the result of accumulating all entries using the\n            given reducer to combine values, or null if none.":"返回使用该条目累积所有条目的结果\r\n            给定的还原器以组合值，或者如果没有值，则为null。\r\n","Resets this scanner.":"重置这个扫描仪。\r\n","java.nio.file.attribute.AclEntry.permissions()":"java.nio.file.attribute.aclentry.permissions（）\r\n","java.nio.file.attribute.AttributeView":"java.nio.file.attribute.attributeview\r\n","Adds the specified element to this set if it is not already present\n            (optional operation).":"如果尚未存在，则将指定元素添加到该集合\r\n            （可选操作）。\r\n","Returns an unmodifiable list containing nine elements.":"返回包含九个元素的不可修复列表。\r\n","if removing from this ":"如果从中删除\r\n","java.sql.ResultSet.updateRow()":"java.sql.Resultset.updaterow（）\r\n","Writes to the stream the data contained in the given\n            <code>SQLData</code> object.":"写入流中包含的数据\r\n            <code> sqldata </code>对象。\r\n","java.nio.file.LinkOption":"java.nio.file.linkoption\r\n","Gets the character used for a digit in a pattern. -or- Sets the character used for a digit in a pattern.":"将字符用于图案中的数字。 - 或设置用于模式的数字的字符。\r\n","Returns the transaction isolation level for this connection.":"返回此连接的交易隔离级别。\r\n","Constructs a <code>SQLRecoverableException</code> object.":"构造<code> sqlrecoverableException </code>对象。\r\n","Returns the provider of this key pair generator object.":"返回此密钥对生成器对象的提供商。\r\n","Useful constant for WEEK_OF_MONTH field alignment.":"对于Week_OF_OF_MONTH字段对齐的有用常数。\r\n"," (exclusive) is within the bounds of range from ":" （独家）在范围内\r\n","java.util.Scanner.nextDouble()":"java.util.scanner.nextdouble（）\r\n","Constructs a new, empty hashtable with the specified initial\n            capacity and the specified load factor.":"构建一个新的，空的标签，并指定的初始版本\r\n            容量和指定的负载因子。\r\n","java.util.Formatter.out()":"java.util.formatter.out（）\r\n","The mapping in the Java<sup><font size=-2>TM</font></sup> programming language\n            for the SQL <code>CLOB</code> type.":"java <sup> <font size = -2> tm </font> </sup>编程语言中的映射\r\n            对于SQL <code> clob </code>类型。\r\n","java.util.concurrent.ForkJoinPool.managedBlock(java.util.concurrent.ManagedBlocker)":"java.util.concurrent.forkjoinpool.managedblock（java.util.concurrent.managedblocker）\r\n","java.nio.file.spi.FileSystemProvider.setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption)":"java.nio.file.spi.filesystemprovider.setAttribute（java.nio.file.path，java.lang.string，java.lang.object，java.nio.nio.file.linkoption）\r\n","java.security.acl.AclEntry.toString()":"java.security.acl.aclentry.tostring（）\r\n","java.sql.SQLInput.readNClob()":"java.sql.sqlinput.readnclob（）\r\n","Returns the sum of values recorded, or zero if no values have been\n            recorded.":"返回记录的值之和，如果没有值\r\n            记录。\r\n","Returns a dynamically typesafe view of the specified set.":"返回指定集的动态类型AFTE视图。\r\n","java.text.StringCharacterIterator.current()":"java.text.StringCharacterator.current（）\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentP()":"java.security.spec.rsamultimeprimeprivatecrtkeyspec.getPrimeExponentp（）\r\n","java.security.KeyStore.load(java.io.InputStream, char[])":"java.security.keystore.load（java.io.inputstream，char []）\r\n","java.util.concurrent.BlockingDeque":"java.util.concurrent.blockingdeque\r\n","java.nio.file.StandardWatchEventKinds":"java.nio.file.standardwatcheventkinds\r\n","Retrieves a stream to be used to write a stream of Unicode characters\n            to the <code>CLOB</code> value that this <code>Clob</code> object\n            represents, at position <code>pos</code>.":"检索用于编写Unicode字符流的流\r\n            到<code> clob </code>值，该<code> clob </code>对象\r\n            代表位置<code> pos </code>。\r\n","if no provider can provide the specified certificate store\n             type.":"如果没有提供商可以提供指定的证书存储\r\n             类型。\r\n","Removes from this list all of its elements that are contained in\n            the specified collection.":"从此列表中删除其所有包含的元素\r\n            指定的集合。\r\n","if executor is ":"如果执行人是\r\n","java.util.Collection.toArray(java.lang.Object[])":"java.util.collection.toArray（java.lang.object []）\r\n","Gets the metadata about the database referenced by this connection.":"获取有关此连接引用的数据库的元数据。\r\n","Assigns the specified char value to each element of the specified\n            range of the specified array of chars.":"将指定的炭子值分配给指定的每个元素\r\n            指定字符阵列的范围。\r\n","CompletionService":"完整服务\r\n","java.util.List.indexOf(java.lang.Object)":"java.util.list.indexof（java.lang.Object）\r\n","java.security.cert.PKIXParameters.clone()":"java.security.cert.pkixparameters.clone（）\r\n","java.sql.SQLData.writeSQL(java.sql.SQLOutput)":"java.sql.sqldata.writesql（java.sql.sqloutput）\r\n","The interface for an PKCS#1 RSA private key.":"PKCS＃1 RSA私钥的接口。\r\n","java.sql.DatabaseMetaData.supportsANSI92IntermediateSQL()":"java.sql.databasemetadata.supportsani92 InterMediateSql（）\r\n","Returns the default transaction isolation level for this database.":"返回此数据库的默认事务隔离级别。\r\n","Returns the targeted parallelism level of this pool.":"返回该池的目标并行级别。\r\n","java.util.Timer.schedule(java.util.TimerTask, long, long)":"java.util.timer.schedule（java.util.timertask，长，长）\r\n","An Annotation object is used as a wrapper for a text attribute value if\n            the attribute has annotation characteristics.":"注释对象用作文本属性值的包装器，如果\r\n            该属性具有注释特征。\r\n","Retrieves the schema names available in this database.":"检索此数据库中可用的模式名称。\r\n","The constant indicating that a batch statement executed successfully\n            but that no count of the number of rows it affected is available.":"常数表示批处理语句成功执行\r\n            但是，没有可用的行数计数。\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>CLOB</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code> clob </code>。\r\n","Returns the issuer (issuer distinguished name) value from the\n            certificate as an ":"从返回发行人（发行人杰出名称）值\r\n            证书\r\n","java.security.cert.X509CRLSelector.setIssuerNames(java.util.Collection)":"java.security.cert.x509crlselector.setissuernames（java.util.collection）\r\n"," supports the specified\n constructor parameter.":" 支持指定的\r\n 构造函数参数。\r\n","Returns a comparator that imposes the reverse of the <em>natural\n            ordering</em>.":"返回一个比较器，该比较器强加了自然的反向\r\n            订购</em>。\r\n","if signature errors are detected.\n":"如果检测到签名错误。\r\n\r\n","java.security.cert.X509CertSelector.setIssuer(javax.security.auth.x500.X500Principal)":"java.security.cert.x509certselector.setissuer（javax.security.auth.x500.x500.x500 principal）\r\n","java.util.TimeZone.getDisplayName()":"java.util.timezone.getDisplayname（）\r\n","The interface used to execute SQL stored procedures.":"用于执行SQL存储过程的接口。\r\n","java.util.IllegalFormatWidthException.getWidth()":"java.util.illegalformatwidthexception.getWidth（）\r\n","indicating the\n hour of the morning or afternoon.":"指示\r\n 早晨或下午的小时。\r\n","java.sql.DriverManager.setLogWriter(java.io.PrintWriter)":"java.sql.drivermanager.setlogwriter（java.io.printwriter）\r\n","Constructs a new, empty linked hash set with the default initial\n            capacity (16) and load factor (0.":"构建一个新的空链接哈希集，并使用默认初始\r\n            容量（16）和负载因子（0。\r\n","Constructs a  <code>SQLWarning</code> object.":"构造<code> sqlwarning </code>对象。\r\n","Denotes the output is to be formatted in an alternate form. ":"表示输出应以替代形式格式化。\r\n","java.util.Locale.Locale(java.lang.String)":"java.util.locale.locale（java.lang.string）\r\n","\n            if no space is currently available.":"如果目前没有空间。\r\n","java.security.PrivilegedActionException":"java.security.privilegedActionException\r\n","java.util.List.of()":"java.util.list.of（）\r\n","java.util.Date.getHours()":"java.util.date.gethours（）\r\n","Constructs a new instance of the builder.":"构建建筑商的新实例。\r\n","java.security.spec.DSAPrivateKeySpec.DSAPrivateKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"java.security.spec.dsaprivatekeyspec.dsaprivatekeyspec（java.math.biginteger，java.math.biginteger，java.math.math.biginteger，java.math.biginteger）\r\n","#startsWith(Path) startsWith(Path)":"#startswith（路径）startswith（路径）\r\n","PrivateKeyEntry":"私人关键\r\n","java.util.concurrent.CopyOnWriteArrayList.toArray()":"java.util.concurrent.copyonwritearraylist.toarray（）（）\r\n","java.util.Formatter.ioException()":"java.util.formatter.ioexception（）\r\n","Returns a string representation of the \"deep contents\" of the specified\n            array.":"返回指定的“深度内容”的字符串表示\r\n            大批。\r\n"," instances using the filtering\n            mechanism defined in RFC 4647.":" 使用过滤的实例\r\n            RFC 4647中定义的机制。\r\n","java.security.Signature.UNINITIALIZED":"java.security.signature.nitialization\r\n","java.nio.file.attribute.PosixFileAttributes":"java.nio.file.attribute.posixfileattributes\r\n","Retrieves and removes the next watch key, or ":"检索并删除下一个手表键，或\r\n","if deserialization failed.":"如果避免失败。\r\n","Constructs a <code>SQLNonTransientException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlnontransientException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","Replaces the last element returned by ":"替换返回的最后一个元素\r\n","\n            execution methods.":"\r\n            执行方法。\r\n","java.sql.ResultSet.relative(int)":"java.sql.Resultset。划分（int）\r\n"," over the elements in this queue.":" 在此队列中的元素上。\r\n","Retrieves whether the current row has had an insertion.":"检索当前行是否已插入。\r\n","java.sql.DatabaseMetaData.typeNullableUnknown":"java.sql.databasemetadata.typenullableunknown\r\n","java.nio.file.attribute.UserDefinedFileAttributeView":"java.nio.file.attribute.userdefinedfileattributeview\r\n","Returns an empty navigable set (immutable).":"返回一个空的通航套件（不变）。\r\n","Removes a certificate from this identity.":"从此身份中删除证书。\r\n","java.security.Provider.replaceAll(java.util.function.BiFunction)":"java.security.provider.replaceall（java.util.function.bifunction）\r\n","java.util.concurrent.ConcurrentHashMap.reduceKeys(long, java.util.function.Function, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reduceys（long，java.util.function.function，java.util.function.bifunction.bifunction）\r\n"," is used to construct new instances of ":" 用于构建新实例\r\n","java.sql.DatabaseMetaData.procedureColumnOut":"java.sql.databasemetadata.procedurecolumnount\r\n","java.util.Date.compareTo(java.util.Date)":"java.util.date.compareto（java.util.date）\r\n","Returns this driver's major JDBC version number.":"返回该驱动程序的主要JDBC版本号。\r\n","java.util.LinkedList.offerLast(java.lang.Object)":"java.util.linkedlist.offerlast（java.lang.Object）\r\n",", with an optional CodeSource.":"，带有可选代码。\r\n","java.util.Scanner.hasNextShort()":"java.util.scanner.hasnextshort（）\r\n","Get the previous collation element in the string.":"在字符串中获取先前的排列元素。\r\n","java.util.PrimitiveIterator":"java.util.priveitiveiterator\r\n","Checks whether access to the specified ":"检查是否访问指定的\r\n","java.sql.DatabaseMetaData.supportsMultipleOpenResults()":"java.sql.databasemetadata.supportsmultpipyopenresults（）\r\n","java.sql.BatchUpdateException":"java.sql.batchupdateException\r\n","Retrieves the warning chained to this <code>SQLWarning</code> object by\n            <code>setNextWarning</code>. -or- Adds a <code>SQLWarning</code> object to the end of the chain.":"检索链接到此<code> sqlwarning </code>对象的警告。\r\n            <code> setNextWarning </code>。 -or-将<code> sqlwarning </code>对象添加到链的末端。\r\n","if this connection is closed, or there's a problem getting\n a property.\n":"如果关闭此连接，或者有问题\r\n 财产。\r\n\r\n","caName":"caname\r\n","Returns the minCRLNumber criterion.":"返回Mincrlnumber标准。\r\n","java.text.SimpleDateFormat.get2DigitYearStart()":"java.text.simpledateformat.get2digityearstart（）\r\n","if decoding the the public key fails.\n":"如果解码公共密钥失败。\r\n\r\n","if the resource bundle cannot be found.\n":"如果找不到资源捆绑包。\r\n\r\n"," suitable for\n            presentation to the user in the default locale.":" 适合\r\n            在默认场所中向用户介绍。\r\n","Reports whether\n            the last column read had a value of SQL <code>NULL</code>.":"报告是否报告\r\n            最后一列读取具有SQL <code> null </code>的值。\r\n","Exception indicating that the result of a value-producing task,\n            such as a ":"例外表明，产生价值的任务的结果，\r\n            比如一个\r\n","java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentP()":"java.security.spec.rsaprivatecrtkeyspec.getPrimeExponentp（）\r\n","java.security.cert.CertStore.getCRLs(java.security.cert.CRLSelector)":"java.security.cert.certstore.getcrls（java.security.cert.crlselector）\r\n","Apply the given pattern to this Format object.":"将给定模式应用于此格式对象。\r\n","Retains only the elements in this collection that are contained in the\n            specified collection (optional operation).":"仅保留该集合中包含的元素\r\n            指定收集（可选操作）。\r\n","Retrieves the contents of the SQL <code>ARRAY</code> value designated by this\n            <code>Array</code> object.":"检索SQL <code>数组的内容</code>由此指定的值\r\n            <code>数组</code>对象。\r\n"," representing an identity used to determine access rights\n            to objects in a file system.":" 代表用于确定访问权限的身份\r\n            到文件系统中的对象。\r\n","java.util.Calendar.Calendar()":"java.util.calendar.calendar（）\r\n","Returns the element at the specified position in this list.":"在此列表中的指定位置返回元素。\r\n",", the algorithm of the\n             private key does not match the algorithm of the public\n             key of the first certificate or the certificates are not\n             all of the same type.\n":"，该算法\r\n             私钥与公众的算法不符\r\n             第一证书或证书的关键不是\r\n             所有类型的类型。\r\n\r\n"," throws for any pair of elements.":" 扔给任何一对元素。\r\n","java.util.Formattable.formatTo(java.util.Formatter, int, int, int)":"java.util.formattable.formatto（java.util.formatter，int，int，int）\r\n","java.util.PriorityQueue.iterator()":"java.util.priorityqueue.iterator（）\r\n","Queries if the given date is in daylight saving time.":"查询如果给定的日期是在日光节省时间中。\r\n","java.nio.file.AccessMode":"java.nio.file.accessmode\r\n"," and related methods to the given value.":" 和给定值的相关方法。\r\n","chain":"链\r\n","java.security.cert.X509CertSelector.getIssuer()":"java.security.cert.x509certselector.getissuer（）\r\n","java.time.temporal.WeekFields.of(java.util.Locale)":"java.time.temporal.weekfields.of（java.util.locale）\r\n","java.text.NumberFormat.parse(java.lang.String, java.text.ParsePosition)":"java.text.numberformat.parse（java.lang.string，java.text.parseposition）\r\n","if the specified data is not valid class data.":"如果指定的数据不是有效的类数据。\r\n","java.util.LinkedList.removeFirst()":"java.util.linkedlist.removefirst（）\r\n","java.text.NumberFormat.format(long, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.numberformat.format（long，java.lang.stringbuffer，java.text.fieldposition）\r\n","java.util.TreeSet.TreeSet()":"java.util.treeset.treeset（）\r\n","Creates a new, empty map with the default initial table size (16).":"使用默认的初始表大小（16）创建一个新的空图。\r\n","Creates a new SecureClassLoader using the specified parent\n            class loader for delegation.":"使用指定的父级创建新的SecureClassLoader\r\n            委托的集体加载程序。\r\n","Abstract class for an X.":"X的抽象类。\r\n","if (start  size())":"if（start Size（））\r\n","Returns the subjectKeyIdentifier criterion.":"返回主题关键标准。\r\n","Retains only the elements in this list that are contained in the\n            specified collection.":"仅保留此列表中包含的元素\r\n            指定的集合。\r\n","Completes this CompletableFuture with the given value if not\n            otherwise completed before the given timeout.":"用给定值完成此完整未图\r\n            否则在给定超时之前完成。\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a short value in the default radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用默认radix解释为短值\r\n            \r\n","certPath":"证书\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            daylight saving offset in milliseconds.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            日光节省的偏移量为毫秒。\r\n","A brief description of the property, which may be null.":"对属性的简要说明，可能是无效的。\r\n","Constructs with the limits and the corresponding formats.":"具有限制和相应格式的构造。\r\n","java.security.cert.CertPathValidatorException.CertPathValidatorException()":"java.security.cert.certpathvalidatorexception.certpathvalidatorexception（）\r\n","java.text.DecimalFormatSymbols.getMonetaryDecimalSeparator()":"java.text.decimalformatsymbols.getMonetaryDecimalSeparator（）\r\n","java.text.DecimalFormatSymbols.setDecimalSeparator(char)":"java.text.decimalformatsymbols.setDecimalSeparator（char）\r\n","levelStart":"LevelStart\r\n","java.time.format.DecimalStyle.STANDARD":"java.time.format.decimalstyle.standard\r\n","java.security.spec.ECParameterSpec.getOrder()":"java.security.spec.ecparameterspec.getOrder（）\r\n","java.sql.Statement.clearBatch()":"java.sql.statement.clearbatch（）\r\n","fromIndex + size":"从索引 +大小\r\n"," is true, or stale data corresponding to some previous value otherwise.":" 是正确的，或陈旧的数据，否则对应于某些先前的值。\r\n","Returns an iterator that has no elements.":"返回没有元素的迭代器。\r\n","If the specified key is not already associated with a value or is\n            associated with null, associates it with the given value.":"如果指定的密钥尚未与一个值相关联或\r\n            与NULL相关联，将其与给定值相关联。\r\n","java.sql.ResultSet.getURL(int)":"java.sql.Resultset.geturl（int）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            hour of the day.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            一天中的一个小时。\r\n","if the specified certificate type is not available by the\n             specified provider.":"如果指定的证书类型不可用\r\n             指定的提供商。\r\n","Appends all the elements of a formatter to the builder.":"将格式化器的所有元素附加到构建器上。\r\n","Constructs an empty vector so that its internal data array\n            has size ":"构造一个空的向量，以便其内部数据数组\r\n            有大小\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            an <code>int</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的<code> int </code>。\r\n","java.util.concurrent.ForkJoinWorkerThread.ForkJoinWorkerThread(java.util.concurrent.ForkJoinPool)":"java.util.concurrent.forkjoinworkerthread.forkjoinworkerthread（java.util.concurrent.forkjoinpool）\r\n","java.text.Collator.getDecomposition()":"java.text.collat​​or.getDecomposition（）\r\n","java.util.Spliterator.SIZED":"java.util.spliterator.sized\r\n","The constant indicating the concurrency mode for a\n            <code>ResultSet</code> object that may be updated.":"常数表示A的并发模式\r\n            <code> Resultset </code>可能要更新的对象。\r\n","java.nio.file.SimpleFileVisitor.visitFileFailed(java.lang.Object, java.io.IOException)":"java.nio.file.simplefilevisitor.visitfilefailed（java.lang.object，java.io.io exception）\r\n","Parses text from a string to produce a <code>Date</code>.":"从字符串中解析文本以产生<code> date </code>。\r\n","Constructs a <code>SQLTransientException</code> object.":"构造A <code> SQLTRANSIENTEXCEPTION </code>对象。\r\n","The action to be performed by this timer task.":"此计时器任务执行的操作。\r\n","Returns a list of the client info properties of the driver.":"返回驱动程序的客户端信息属性列表。\r\n","java.util.NavigableSet.headSet(java.lang.Object)":"java.util.navigableset.headset（java.lang.Object）\r\n"," interface, with\n            <em>weak keys</em>.":" 接口，带\r\n            <em>弱键</em>。\r\n","java.security.cert.CRLSelector":"java.security.cert.crlselector\r\n","Constant for medium style pattern.":"中等样式的恒定。\r\n","Constructs a <code>SQLWarning</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlwarning </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Returns the highest minimum value for the given calendar field\n            of this <code>Calendar</code> instance.":"返回给定日历字段的最高最小值\r\n            此<code>日历</code>实例。\r\n","#countDown":"＃倒数\r\n","Returns a dynamically typesafe view of the specified navigable set.":"返回指定可导航集的动态类型AFTE视图。\r\n","java.sql.SQLOutput.writeInt(int)":"java.sql.sqloutput.writeint（int）\r\n","java.util.Scanner.Scanner(java.nio.channels.ReadableByteChannel)":"Java.util.Scanner.Scanner（Java.nio.Channels.\r\n","java.util.Arrays.sort(char[])":"java.util.arrays.sort（char []）\r\n","java.util.Calendar.MAY":"java.util.calendar.may\r\n","BasicReason.UNSPECIFIED":"BasicReason。未指定\r\n","java.util.AbstractMap.containsKey(java.lang.Object)":"java.util.abstractmap.containskey（java.lang.Object）\r\n","Returns the minimum element of the given collection, according to the\n            order induced by the specified comparator.":"返回给定集合的最低元素，根据\r\n            指定比较器诱导的顺序。\r\n","java.text.SimpleDateFormat.setDateFormatSymbols(java.text.DateFormatSymbols)":"java.text.simpledateformat.setDateFormatSymbols（java.text.dateformatsymbols）\r\n","java.util.Dictionary":"java.util.dictionary\r\n","java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])":"java.sql.connection.preparestatement（java.lang.string，java.lang.string []）\r\n","Returns the name of the database software.":"返回数据库软件的名称。\r\n","Constructs a <code>BatchUpdateException</code> object initialized with\n             a given <code>cause</code>.":"构建<code> batchupdateException </code>对象初始化的对象\r\n             给定的<code>原因</code>。\r\n","Writes the next attribute to the stream as a Java double.":"将下一个属性写入流的java double。\r\n","java.text.SimpleDateFormat.getDateFormatSymbols()":"java.text.simpledateformat.getDateFormatSymbols（）\r\n","Retrieves the guarded object, or throws an exception if access\n            to the guarded object is denied by the guard.":"检索受保护的对象，或在访问时引发异常\r\n            警卫否认了对守卫的物体。\r\n","java.sql.DatabaseMetaData.getVersionColumns(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getversioncolumns（java.lang.string，java.lang.string，java.lang.string）\r\n","Indicates whether a write on the designated column will definitely succeed.":"指示在指定的列上写入肯定会成功。\r\n","java.security.cert.X509Certificate.getSubjectUniqueID()":"java.security.cert.x509certificate.getSubjectuniqueId（）\r\n","java.security.spec.ECFieldF2m.getM()":"java.security.spec.ecfieldf2m.getm（）\r\n","KeyManagementException":"KeyManagementException\r\n","Comprehensive information about the database as a whole.":"有关数据库的全面信息。\r\n","This class represents the successful result of the PKIX certification\n            path builder algorithm.":"该课程代表了PKIX认证的成功结果\r\n            路径构建器算法。\r\n","java.time.temporal.ValueRange.getLargestMinimum()":"java.time.temporal.valuerange.getlargestminimin（）\r\n"," object as an ASCII stream.":" 对象是ASCII流。\r\n","java.util.TreeSet.clone()":"java.util.treeset.clone（）\r\n"," instance has\n            the specified initial capacity and the specified load factor.":" 实例有\r\n            指定的初始容量和指定的负载系数。\r\n","java.util.Scanner.hasNextInt()":"java.util.scanner.hasnextint（）\r\n","PreparedStatement":"准备的\r\n","java.nio.file.StandardWatchEventKinds.ENTRY_CREATE":"java.nio.file.standardwatcheventkinds.entry_create\r\n","java.text.DateFormat.HOUR_OF_DAY1_FIELD":"java.text.dateformat.hour_of_day1_field\r\n"," if\n            none or if the method has not yet completed.":" 如果\r\n            没有或该方法尚未完成。\r\n","FileAttributeView":"FileatTributeView\r\n","#toString":"#ToString\r\n","collection hierarchy":"集合层次结构\r\n","java.util.concurrent.ForkJoinTask.getException()":"java.util.concurrent.forkjointask.getException（）\r\n","java.sql.CallableStatement.getBoolean(int)":"java.sql.callablestatement.getboolean（int）\r\n","java.util.IdentityHashMap.IdentityHashMap(java.util.Map)":"java.util.IdentityHashmap.IdentityHashmap（java.util.map）\r\n","java.security.PolicySpi.engineRefresh()":"java.security.policyspi.enginerefresh（）\r\n","Retrieves the value of the designated JDBC <code>SMALLINT</code> parameter\n            as a <code>short</code> in the Java programming language.":"检索指定的JDBC <code> SmallInt </code>参数的值\r\n            作为Java编程语言中的<code>简短</code>。\r\n","Constructs a new <code>IllformedLocaleException</code> with the\n            given message and the error index.":"使用\r\n            给定的消息和错误索引。\r\n","Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter.":"将时区ID（例如“欧洲/巴黎”或“ +02：00”）附加到格式化器中。\r\n","Marks the minute part of a time.":"标志着一段时间的一部分。\r\n"," max and zero\n            average.":" 最大和零\r\n            平均。\r\n","Useful constant for country.":"对国家的有用常数。\r\n","java.util.BitSet.valueOf(byte[])":"java.util.bitset.valueof（byte []）\r\n","java.util.Hashtable.put(java.lang.Object, java.lang.Object)":"java.util.hashtable.put（java.lang.Object，java.lang.object）\r\n"," if there is no intrinsic\n            limit.":" 如果没有固有的\r\n            限制。\r\n","java.util.Arrays.copyOfRange(long[], int, int)":"java.util.arrays.copyofrange（long []，int，int）\r\n","Thrown to indicate that an operation could not complete because\n            the input did not conform to the appropriate XML document type\n            for a collection of properties, as per the ":"投掷以表明操作无法完成，因为\r\n            输入不符合适当的XML文档类型\r\n            对于属性的集合\r\n","java.util.Properties.load(java.io.Reader)":"java.util.properties.load（Java.io.Reader）\r\n","java.util.Arrays.copyOf(char[], int)":"java.util.arrays.copyof（char []，int）\r\n","java.util.concurrent.BlockingDeque.takeFirst()":"java.util.concurrent.blockingdeque.takefirst（）\r\n"," objects generated by\n this statement.":" 生成的对象\r\n 这个说法。\r\n","Returns an iterator over the elements in this set, in ascending order.":"按升序顺序返回该集合中的元素。\r\n","Returns the ISO 4217 numeric code of this currency.":"返回此货币的ISO 4217数字代码。\r\n","java.text.ParsePosition.getIndex()":"java.text.parseposition.getIndex（）\r\n","Constructs a CertificateParsingException with no detail message.":"构建一个没有详细信息的证书parsingexception。\r\n","ProtectionParameter":"保护参数\r\n","Writes the next attribute to the stream as a Java long.":"将下一个属性写入流的java长。\r\n","java.util.Comparator.thenComparing(java.util.Comparator)":"java.util.comparator.thencomparing（java.util.comparator）\r\n","if this connection is closed, or there's a problem creating a new clob.\n":"如果该连接已关闭，或者存在一个问题，可以创建一个新的Clob。\r\n\r\n","java.util.Observable":"Java.util.Observable\r\n","Returns the number of bits set to ":"返回设置的位数\r\n","java.util.LinkedList.removeLastOccurrence(java.lang.Object)":"java.util.linkedlist.removelastoccurrence（java.lang.object）\r\n","java.security.cert.CertificateFactory.getProvider()":"java.security.cert.certificatefactory.getProvider（）\r\n","Read the value of a user-defined attribute into a buffer.":"将用户定义的属性的值读取到缓冲区中。\r\n","Sets this scanner's locale to the specified locale.":"将此扫描仪的位置设置为指定的位置。\r\n"," as its action, and returns\n            the given result upon ":"作为行动，并返回\r\n            给定的结果\r\n","The <code>Stack</code> class represents a last-in-first-out\n            (LIFO) stack of objects.":"<code> stack </code>类代表最后一段\r\n            （LIFO）堆栈对象。\r\n","Gets but does not remove the head of the queue.":"得到但不会删除队列的头部。\r\n","Indicates that the procedure does not return a result.":"表示该过程不返回结果。\r\n","java.util.Properties.Properties()":"java.util.properties.properties（）\r\n","start >\n             limit":"开始>\r\n             限制\r\n","java.nio.file.attribute.FileTime.toMillis()":"java.nio.file.attribute.filetime.tomillis（）（）\r\n","Writes <code>len</code> characters of <code>str</code>, starting\n            at character <code>offset</code>, to the <code>CLOB</code> value\n            that this <code>Clob</code> represents.":"写入<code> len </code> <code> str </code>的字符，开始\r\n            在字符<code> offset </code>上，到<code> clob </code>值\r\n            此<code> clob </code>表示。\r\n","java.nio.file.FileSystemAlreadyExistsException.FileSystemAlreadyExistsException(java.lang.String)":"java.nio.file.filesystyalreadyexistSexception.FileSyStyalReadyExistSexception（java.lang.string）\r\n","java.util.ArrayDeque.addLast(java.lang.Object)":"java.util.arraydeque.addlast（java.lang.Object）\r\n","This class represents the triplet (prime, exponent, and coefficient)\n            inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.":"该类代表三重态（素数，指数和系数）\r\n            在PKCS＃1 V2中定义的RSA的其他PromimeInfo结构内部。\r\n","java.text.NumberFormat.getIntegerInstance()":"java.text.numberformat.getIntegerinstance（）\r\n","Returns the parameters encoded in the specified scheme.":"返回指定方案中编码的参数。\r\n","java.security.cert.PKIXCertPathValidatorResult":"java.security.cert.pkixcertpathvalidatorsult\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException()":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（）\r\n","java.nio.charset.MalformedInputException.getInputLength()":"java.nio.charset.malformedinputexception.getInputlength（）\r\n","Thrown by methods in the <code>Stack</code> class to indicate\n            that the stack is empty.":"通过<code> stack </code>类中的方法抛出以指示\r\n            堆栈是空的。\r\n"," covering the specified range of the\n            specified array.":" 覆盖指定范围\r\n            指定的数组。\r\n","Returns a number representing the month that contains or begins\n            with the instant in time represented by this ":"返回代表包含或开始的月份的数字\r\n            随着时间代表的及时即时\r\n","java.nio.file.Files.isWritable(java.nio.file.Path)":"java.nio.file.files.issrable（java.nio.file.path）\r\n","java.util.Scanner.hasNextLine()":"java.util.scanner.hasnextline（）\r\n","Retrieves, but does not remove, the head of this queue, or\n            returns ":"检索但不删除该队列的头部，或\r\n            返回\r\n","java.security.NoSuchProviderException.NoSuchProviderException()":"java.security.nosuchproviderexception.nosuchproviderexception（）\r\n","java.util.OptionalLong.isPresent()":"java.util.optionallong.ispresent（）\r\n","java.nio.file.spi.FileSystemProvider.createLink(java.nio.file.Path, java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.createlink（java.nio.file.path，java.nio.file.path）\r\n","java.util.Stack.peek()":"java.util.stack.peek（）\r\n","java.nio.file.ReadOnlyFileSystemException":"java.nio.file.ReadonlyFilesystemexception\r\n","java.util.concurrent.ConcurrentHashMap.merge(java.lang.Object, java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.merge（java.lang.object，java.lang.object，java.util.function.bifunction.bifunction）\r\n","java.security.cert.CertStore.getInstance(java.lang.String, java.security.cert.CertStoreParameters)":"java.security.cert.certstore.getinstance（java.lang.string，java.security.cert.cert.certstoreparameters）\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException()":"java.sql.sqltransactionRollbackexception.sqltransactionRollBackexception（）\r\n","java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction)":"java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction)\r\n","Returns the parameters for the mask generation function.":"返回蒙版生成功能的参数。\r\n","java.security.interfaces.RSAMultiPrimePrivateCrtKey":"java.security.interfaces.rsamultiprimeprivatecrtkey\r\n","Returns the minimum value for the given calendar field of this\n            <code>GregorianCalendar</code> instance.":"返回给定日历字段的最小值\r\n            <code> GregorianCalendar </code>实例。\r\n","java.util.Queue.poll()":"java.util.queue.poll（）\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","Returns a <code>Set</code> of all keys contained in this\n            <code>ResourceBundle</code> and its parent bundles.":"返回此包含的所有密钥的<code> set </code>\r\n            <code> ResourceBundle </code>及其父捆绑包。\r\n","java.time.temporal.ValueRange.getMinimum()":"java.time.temporal.valuerange.getminimin（）\r\n",", use ":"， 利用\r\n","java.util.Collections.sort(java.util.List)":"java.util.collections.sort（java.util.list）\r\n","java.security.cert.TrustAnchor.getCA()":"java.security.cert.trustanchor.getca（）\r\n","Returns the number of minutes past the hour represented by this date,\n            as interpreted in the local time zone. -or- Sets the minutes of this ":"返回该日期代表的小时数的几分钟，\r\n            如在当地时区的解释。 - 或 - 设置此分钟\r\n","Constructs a <code>BatchUpdateException</code> object initialized with\n            a given <code>reason</code>, <code>cause</code>\n            and <code>updateCounts</code>.":"构建<code> batchupdateException </code>对象初始化的对象\r\n            给定的<code>原因</code>，<code>原因</code>\r\n            和<code> updateCounts </code>。\r\n","java.util.Collections.singleton(java.lang.Object)":"java.util.collections.singleton（java.lang.Object）\r\n","java.sql.ResultSet.CONCUR_READ_ONLY":"java.sql.Resultset.concur_read_only\r\n","java.sql.ResultSet.getRef(java.lang.String)":"java.sql.Resultset.getRef（java.lang.string）\r\n","Returns this locale's language name, country name, and variant, localized\n            to ":"返回该语言环境的语言名称，国家名称和变体，本地化\r\n            至\r\n","java.util.IntSummaryStatistics.getAverage()":"java.util.intsummarystatistics.getAverage（）\r\n","java.nio.file.Path":"java.nio.file.path\r\n","java.text.DecimalFormatSymbols.setPatternSeparator(char)":"java.text.decimalformatsymbols.setpatternseparator（char）\r\n","java.nio.file.attribute.DosFileAttributeView.setSystem(boolean)":"java.nio.file.attribute.dosfileattributeview.setsystem（布尔值）\r\n","java.text.DateFormatSymbols.getMonths()":"java.text.dateformatsymbols.getMonths（）\r\n","Indicates that this table index is a hashed index.":"表示该表索引是哈希索引。\r\n","java.sql.ResultSet.updateNClob(int, java.io.Reader)":"java.sql.Resultset.updatenclob（int，java.io.reader）\r\n","This class specifies an RSA private key, as defined in the PKCS#1\n            standard, using the Chinese Remainder Theorem (CRT) information values for\n            efficiency.":"该类指定RSA私钥，如PKCS＃1所定义\r\n            标准，使用中文余数定理（CRT）信息值\r\n            效率。\r\n"," inStream.":" 乐器。\r\n","#fields calendar fields":"#Fields日历字段\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","java.util.Stack.Stack()":"java.util.stack.stack（）\r\n","The instances of this inner class are used as attribute keys in\n ":"此内类的实例用作属性密钥\r\n \r\n","previous":"以前的\r\n","java.sql.ResultSet.getCharacterStream(int)":"java.sql.Resultset.getCharacterstream（int）\r\n","java.util.StringJoiner.merge(java.util.StringJoiner)":"java.util.stringjoiner.merge（java.util.stringjoiner）\r\n","java.sql.ResultSet.getBigDecimal(java.lang.String)":"java.sql.Resultset.getBigDecimal（java.lang.string）\r\n","Obtains a variable value range.":"获得可变值范围。\r\n","An interface to an object capable of generating DSA key pairs.":"能够生成DSA键对的对象的接口。\r\n"," is within the bounds of the range from\n            ":" 在范围内的范围内\r\n            \r\n","java.sql.ResultSet.updateCharacterStream(java.lang.String, java.io.Reader, long)":"java.sql.Resultset.updatecharacterstream（java.lang.string，java.io.Reader，long）\r\n","Specifies the principal for which permissions are granted or denied\n            by this ACL entry.":"指定授予或拒绝许可的本金\r\n            通过此ACL条目。\r\n","java.util.LinkedList.clone()":"java.util.linkedlist.clone（）\r\n","Determine the user name as known by the database.":"确定数据库已知的用户名。\r\n","EventListener":"EventListener\r\n","java.sql.ResultSet.getTimestamp(int)":"java.sql.Resultset.getTimestamp（int）\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqltransactionRollbacKexception.sqltransactionRollbackexception（java.lang.string，java.lang.string，int，int，int，java.lang.thrang.throwable）\r\n","Retrieves the value of the designated JDBC <code>INTEGER</code> parameter\n            as an <code>int</code> in the Java programming language.":"检索指定的JDBC <code>整数</code>参数的值\r\n            作为Java编程语言中的<code> int </code>。\r\n","java.util.HashSet.iterator()":"java.util.hashset.iterator（）\r\n","Checks that the given date is within the certificate's\n            validity period.":"检查给定日期是否在证书中\r\n            有效期。\r\n","), attempts to compute its value using\n            the given mapping function and enters it into this map unless\n            ":"），尝试使用\r\n            给定的映射功能并将其输入此地图，除非\r\n            \r\n"," object and initializes it with\n            a ":" 对象并用\r\n            一个\r\n","Returns the country/region code for this locale, which should\n            either be the empty string, an uppercase ISO 3166 2-letter code,\n            or a UN M.":"返回该地区的国家/地区代码，应该\r\n            要么是空字符串，大写ISO 3166 2字母代码，\r\n            或联合国。\r\n","if there is an error while attempting to connect to the\n             database identified by the URL.\n":"如果尝试连接到\r\n             数据库由URL标识。\r\n\r\n","Sets ampm strings.":"设置AMPM字符串。\r\n","Retrieves whether a catalog name can be used in a table definition statement.":"检索目录名称是否可以在表定义语句中使用。\r\n","java.security.spec.MGF1ParameterSpec.MGF1ParameterSpec(java.lang.String)":"java.security.spec.mgf1parameterspec.mgf1parameterspec（java.lang.string）\r\n","java.text.NumberFormat.getMinimumFractionDigits()":"java.text.numberformat.getMinimumFractionDigits（）\r\n","java.util.Map.keySet()":"java.util.map.keyset（）\r\n","Returns the most-trusted CA certificate.":"返回最受信任的CA证书。\r\n","java.util.SimpleTimeZone.setEndRule(int, int, int, int, boolean)":"java.util.simpletimezone.setendrule（int，int，int，int，boolean）\r\n","java.sql.SQLInput.readSQLXML()":"java.sql.sqlinput.readsqlxml（）\r\n","java.security.KeyPairGenerator.getAlgorithm()":"java.security.keypairgenerator.getAlgorithm（）\r\n","#load(java.io.Reader) load(Reader)":"#load（java.io.reader）load（读取器）\r\n","Copies the specified array, truncating or padding with zeros (if necessary)\n            so the copy has the specified length.":"复制指定的数组，用零截断或填充（如有必要）\r\n            因此副本具有指定的长度。\r\n","Indicates that the parameter or column is an OUT parameter.":"指示参数或列是OUT参数。\r\n","java.sql.Blob.getBinaryStream(long, long)":"java.sql.blob.getbinarystream（长，长）\r\n","The ISO date formatter that formats or parses a date with the\n            offset if available, such as '2011-12-03' or '2011-12-03+01:00'.":"格式或解析日期的ISO日期格式\r\n            如果可用，例如“ 2011-12-03”或“ 2011-12-03+01：00”。\r\n","java.sql.Statement.EXECUTE_FAILED":"java.sql.statement.execute_failed\r\n","Reorder the objects in the array into visual order based on their levels.":"根据其级别将数组中的对象重新排序为视觉顺序。\r\n","java.security.cert.CertStore.getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.lang.String)":"java.security.cert.certstore.getinstance（java.lang.string，java.security.cert.cert.certstoreparameters，java.lang.string）\r\n","A specification of the result of a certification path validator algorithm.":"认证路径验证算法结果的规范。\r\n","Returns this identity's public key. -or- Sets this identity's public key.":"返回该身份的公钥。 - 或设置该身份的公钥。\r\n","java.util.TimeZone.getDisplayName(boolean, int)":"java.util.timezone.getdisplayname（布尔，int）\r\n","Constructs a <code>Time</code> object initialized with the\n            given values for the hour, minute, and second.":"构建<code>时间</code>用\r\n            给定小时，分钟和第二个值。\r\n",", marks this task as\n            complete and further triggers ":"，将此任务标记为\r\n            完成和进一步触发\r\n","java.sql.SQLOutput.writeRowId(java.sql.RowId)":"java.sql.sqloutput.writerowid（java.sql.rowid）\r\n","Returns a copy of all the certificates for this identity.":"返回此身份的所有证书的副本。\r\n","Returns the attribute value.":"返回属性值。\r\n","Returns the nth boundary from the current boundary.":"从当前边界返回第n个边界。\r\n","java.time.format.DateTimeFormatterBuilder.optionalStart()":"java.time.format.datetimeformatterbuilder.optionalstart（）\r\n"," in order to generate the corresponding\n            (precomputed) elliptic curve domain parameters.":" 为了生成相应的\r\n            （预计）椭圆曲线域参数。\r\n"," does\n             not contain any certificates.":" 做\r\n             不包含任何证书。\r\n","java.util.Arrays.binarySearch(int[], int, int, int)":"java.util.arrays.binarysearch（int []，int，int，int）\r\n"," object\n            with a ":" 目的\r\n            与\r\n","Double.NaN":"double.nan\r\n","java.util.Collections.synchronizedSortedSet(java.util.SortedSet)":"Java.util.Collections.SynchronizedSortedSet（java.util.sortedset）\r\n","java.security.cert.CertificateNotYetValidException":"java.security.cert.certificatificatenotyetvalidexception\r\n","Constructs an instance of this class with the specified precision.":"用指定的精度构造此类的实例。\r\n","if the certificate is not found.\n":"如果找不到证书。\r\n\r\n","PKIXCertPathChecker":"PKIXCERTPATHCHECKER\r\n","java.nio.file.FileVisitor.preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)":"java.nio.file.filevisitor.previsitDirectory（java.lang.object，java.nio.file.tribute.basicfileattributes）\r\n","if the capacity is less than zero or the load factor is less\n             or equal to zero.\n":"如果容量小于零或负载因子较小\r\n             或等于零。\r\n\r\n","java.sql.ResultSet.updateLong(int, long)":"java.sql.Resultset.updatelong（int，long）\r\n","java.util.Vector.capacity()":"java.util.vector.capacity（）\r\n","Constructs a PKCS12 attribute from its name and value.":"从其名称和值构造PKCS12属性。\r\n","java.time.temporal.ChronoField":"Java.Time.Temporal.Chronofield\r\n","startIndex  array.length":"startIndex array.length\r\n","Returns a string representation of this CRL.":"返回此CRL的字符串表示。\r\n","java.security.KeyStoreSpi.engineSize()":"java.security.keystorespi.Enginesize（）\r\n","a list defines property format\n":"列表定义属性格式\r\n\r\n","java.util.NavigableSet":"java.util.navigableset\r\n","java.util.concurrent.ExecutorCompletionService.ExecutorCompletionService(java.util.concurrent.Executor, java.util.concurrent.BlockingQueue)":"java.util.concurrent.executorcompletionservice.executorcompletionservice（java.util.concurrent.executor，java.util.concurrent.blockingqueue）\r\n","java.nio.file.attribute.DosFileAttributes":"java.nio.file.attribute.dosfileattributes\r\n","java.sql.SQLInput.readTimestamp()":"java.sql.sqlinput.readtimestamp（）\r\n","java.sql.ResultSet.updateBlob(int, java.io.InputStream)":"java.sql.Resultset.updateBlob（int，java.io.inputstream）\r\n","Returns true if the entry identified by the given alias\n            was created by a call to ":"如果给定的别名确定的条目，则返回true\r\n            是由呼叫创建的\r\n","Removes all of the elements of this collection that satisfy the given\n            predicate.":"删除该系列的所有要素满足给定的\r\n            谓词。\r\n","outbuf":"Outbuf\r\n","Gets era strings.":"获得时代弦。\r\n","java.util.Calendar.getFirstDayOfWeek()":"java.util.calendar.getfirstdayofweek（）\r\n","\n            (transparent representations of the underlying key material), and vice\n            versa.":"\r\n            （基础关键材料的透明表示）和恶习\r\n            Versa。\r\n"," instance for the given calendar\n field.":" 给定日历的实例\r\n 场地。\r\n","java.security.KeyStore.getDefaultType()":"java.security.keystore.getDefaultType（）\r\n","java.sql.Types.VARBINARY":"java.sql.types.varbinary\r\n","java.time.format.SignStyle":"java.time.format.signstyle\r\n","if the locale's country is not a supported ISO 3166 country.\n":"如果该地区的国家不是受支持的ISO 3166国家。\r\n\r\n","Returns the name of the algorithm for the certificate signature.":"返回证书签名算法的名称。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>BINARY</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>二进制</code>。\r\n","Returns a fixed-size list backed by the specified array.":"返回由指定数组备份的固定尺寸列表。\r\n","Returns the minor version number of the database software.":"返回数据库软件的次要版本号。\r\n","java.util.Calendar.SECOND":"java.util.calendar.second\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlfeaturenotsupportedException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","java.util.concurrent.ForkJoinPool.submit(java.util.concurrent.ForkJoinTask)":"java.util.concurrent.forkjoinpool.submit（java.util.concurrent.forkjointask）\r\n","Blob":"斑点\r\n","java.security.spec.EllipticCurve.EllipticCurve(java.security.spec.ECField, java.math.BigInteger, java.math.BigInteger, byte[])":"java.security.spec.ellipticcurve.ellipticcurve（java.security.spurity.spec.ecfield，java.math.biginteger，java.math.biginteger，byte []）\r\n","Constructs an UnrecoverableEntryException with no detail message.":"构建一个无录制的术语感知，没有详细信息。\r\n","Retrieves the logging/tracing PrintStream that is used by the <code>DriverManager</code>\n            and all drivers. -or- Sets the logging/tracing PrintStream that is used\n            by the <code>DriverManager</code>\n            and all drivers.":"检索<code> drivermanager </code>使用的记录/跟踪printstream\r\n            和所有司机。 - 或设置使用的记录/跟踪printstream\r\n            由<code> drivermanager </code>\r\n            和所有司机。\r\n","Removes all of the elements from this list (optional operation).":"删除此列表中的所有元素（可选操作）。\r\n","java.sql.ResultSet.afterLast()":"java.sql.Resultset.afterlast（）\r\n","Assigns the specified boolean value to each element of the specified\n            array of booleans.":"将指定的布尔值分配给指定的每个元素\r\n            一系列布尔人。\r\n","Accepts a function that extracts an ":"接受提取一个函数\r\n","Constructs a <code>SQLTransientConnectionException</code> object.":"构造<code> sqltransientConnectionException </code>对象。\r\n","java.util.Arrays.parallelSort(java.lang.Object[], java.util.Comparator)":"java.util.arrays.parallelsort（java.lang.object []，java.util.comparator）\r\n","java.nio.file.spi.FileSystemProvider.isHidden(java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.ishidder（java.nio.file.path）\r\n","java.util.Collections.asLifoQueue(java.util.Deque)":"java.util.collections.aslifoqueue（java.util.deque）\r\n","If a value is present, and the value matches the given predicate,\n            return an ":"如果存在一个值，并且该值与给定的谓词匹配，\r\n            返回\r\n","Return the contained value, if present, otherwise throw an exception\n            to be created by the provided supplier.":"返回包含的值（如果存在），否则会引发异常\r\n            由提供的供应商创建。\r\n","Creates an enum set containing all of the elements in the specified\n            element type.":"创建一个枚举集，其中包含指定的所有元素\r\n            元素类型。\r\n","java.sql.SQLClientInfoException":"java.sql.sqlclientinfoexception\r\n"," to be\n            greater than non-null.":" 成为\r\n            大于非效果。\r\n","java.sql.PreparedStatement.setCharacterStream(int, java.io.Reader, int)":"java.sql.preparedstatement.setcharacterstream（int，java.io.reader，int）\r\n","keyStore":"密钥库\r\n","java.util.concurrent.ConcurrentLinkedDeque.getFirst()":"java.util.concurrent.concurrentlinkeddeque.getFirst（）\r\n","java.nio.file.Files#createDirectory createDirectory":"java.nio.file.files＃createilectory createRectory\r\n","java.sql.PreparedStatement.setNClob(int, java.io.Reader)":"java.sql.preparedstatement.setnclob（int，java.io.reader）\r\n"," thrown when an instance where a retry\n            of the same operation would fail unless the cause of the <code>SQLException</code>\n            is corrected.":" 在重试的实例时扔\r\n            除非<code> sqlexception </code>的原因，否则同一操作将失败。\r\n            被纠正。\r\n","java.util.Scanner.Scanner(java.io.File)":"Java.util.Scanner.Scanner（Java.io.file）\r\n"," as a representation\n            of a date and time.":" 作为代表\r\n            日期和时间。\r\n","Arranges for (asynchronous) execution of the given task.":"安排给定任务的（异步）执行。\r\n"," if this list contains all of the elements of the\n            specified collection.":" 如果此列表包含所有元素\r\n            指定的集合。\r\n","Updates the designated column with a character stream value.":"使用字符流值更新指定的列。\r\n","#parallelPrefix(long[], LongBinaryOperator)":"#ParallealPrefix（Long []，LongbinaryOperator）\r\n","java.security.spec.RSAPublicKeySpec":"java.security.spec.rsapublickeyspec\r\n","java.sql.Blob.getBytes(long, int)":"java.sql.blob.getbytes（long，int）\r\n","java.sql.Timestamp.getNanos()":"java.sql.timestamp.getnanos（）\r\n","Constructs a new tree set containing the same elements and\n            using the same ordering as the specified sorted set.":"构建一个包含相同元素的新树集和\r\n            使用与指定排序集相同的顺序。\r\n","Retrieves whether this database supports the JDBC scalar function\n            <code>CONVERT</code> for the conversion of one JDBC type to another.":"检索此数据库是否支持JDBC标量函数\r\n            <code>转换</code>用于将一种JDBC类型转换为另一种JDBC类型。\r\n","java.security.spec.ECPoint.ECPoint(java.math.BigInteger, java.math.BigInteger)":"java.security.spec.ecpoint.ecpoint（java.math.biginteger，java.math.biginteger）\r\n","java.security.AccessController":"Java.security.AccessController\r\n"," with\n            the value obtained by calling the given Supplier.":" 和\r\n            通过调用给定供应商获得的价值。\r\n","oid":"OID\r\n","Attempts to establish a connection to the given database URL.":"尝试建立与给定数据库URL的连接。\r\n","Returns true if this hashtable maps one or more keys to this value.":"返回true，如果此标记映射到一个或多个键，则返回该值。\r\n","Retrieves a result set holding the elements of the subarray that\n            starts at index <code>index</code> and contains up to\n            <code>count</code> successive elements.":"检索一个结果集，持有子阵列的元素\r\n            从索引<code>索引</code>开始，然后包含\r\n            <code>计数</code>连续元素。\r\n","g":"G\r\n","Returns the number of bits of space actually in use by this\n            ":"返回实际使用的空间数量\r\n            \r\n","Constructs an instance of this class with the specified flag\n            and conversion.":"用指定的标志构造此类的实例\r\n            和转换。\r\n","java.nio.file.Files.newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption)":"java.nio.file.files.newbufferedwriter（java.nio.file.path，java.nio.charset.Charset，java.nio.file.openoption）\r\n","Construct an empty instance with zero count, zero sum,\n            ":"构建一个具有零计数的空实例，零和\r\n            \r\n","java.util.TreeSet.pollFirst()":"java.util.treeset.pollfirst（）\r\n","Returns the number of bytes in the <code>BLOB</code> value\n            designated by this <code>Blob</code> object.":"返回<code> blob </code>值中的字节数\r\n            由此<code> blob </code>对象指定。\r\n","Replaces the entry for the specified key only if it is\n            currently mapped to some value.":"仅在指定密钥的条目时替换它\r\n            目前映射到一定的值。\r\n","java.util.TreeMap.lastEntry()":"java.util.treemap.lastentry（）\r\n","The class that defines the constants that are used to identify generic\n            SQL types, called JDBC types.":"定义用于识别通用的常数的类\r\n            SQL类型，称为JDBC类型。\r\n","Removes all cancelled tasks from this timer's task queue.":"从此计时器的任务队列中删除所有已取消任务。\r\n","Enumeration for RowId life-time values.":"ROWID终身价值的枚举。\r\n","Registers the designated output parameter.":"注册指定的输出参数。\r\n","java.util.AbstractMap":"Java.util.Abstractmap\r\n","Returns the end index.":"返回最终索引。\r\n","if the specified provider is ":"如果指定的提供商是\r\n","java.security.KeyStore.setKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[])":"java.security.keystore.setKeyentry（java.lang.string，byte []，java.security.cert.certificate []）\r\n"," object that, when\n            called, runs the given task and returns ":" 对象，当\r\n            称为，运行给定的任务并返回\r\n","Returns the public key ":"返回公钥\r\n","Returns a view of the portion of this list between the specified\n            ":"返回指定列表的部分的视图\r\n            \r\n","Constructs an insertion-ordered ":"构建插入订单\r\n","if there is an error accessing the database.\n":"如果有错误访问数据库。\r\n\r\n","java.security.spec.PSSParameterSpec.PSSParameterSpec(int)":"java.security.spec.pssparameterspec.pssparameterspec（int）\r\n","java.util.Hashtable.get(java.lang.Object)":"java.util.hashtable.get（java.lang.Object）\r\n","java.sql.PreparedStatement.setBlob(int, java.sql.Blob)":"java.sql.preparedstatement.setBlob（int，java.sql.blob）\r\n","Gets a calendar using the specified time zone and default locale.":"使用指定时区和默认场所获取日历。\r\n","java.util.Date.toLocaleString()":"java.util.date.tolecalestring（）\r\n","java.security.interfaces.RSAPrivateKey":"java.security.interfaces.rsaprivatekey\r\n","java.nio.file.spi.FileSystemProvider.readSymbolicLink(java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.readsymboliclink（java.nio.file.path）\r\n","java.util.Date.Date()":"java.util.date.date（）\r\n","java.util.concurrent.ConcurrentHashMap.forEachEntry(long, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachentry（long，java.util.function.consumer）\r\n","java.util.concurrent.BlockingDeque.take()":"java.util.concurrent.blockingdeque.take（）\r\n","java.util.Scanner.Scanner(java.lang.String)":"Java.util.Scanner.Scanner（Java.lang.String）\r\n","java.util.Arrays.toString(int[])":"java.util.arrays.tostring（int []）\r\n","Inserts the specified element into the queue represented by this deque\n            (in other words, at the tail of this deque), waiting if necessary for\n            space to become available.":"将指定的元素插入该Deque表示的队列\r\n            （换句话说，在此Deque的尾部），如有必要\r\n            可用的空间。\r\n","java.nio.file.FileSystemNotFoundException.FileSystemNotFoundException(java.lang.String)":"java.nio.file.filesystemnotfoundexception.filesystemnotfoundexception（java.lang.string）\r\n","object2":"对象2\r\n","java.util.concurrent.Executors.privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)":"java.util.concurrent.executors.privilegedcallablesusecurrentcrassloader（java.util.concurrent.callable.callable）\r\n","Replace the Certificate to be serialized.":"更换要序列化的证书。\r\n","java.security.SignatureException":"Java.security.Signature Exception\r\n","Returns the time of last modification.":"返回最后修改的时间。\r\n","Returns the index of the last character in the run having the same\n attributes as the current character.":"返回运行中最后一个字符的索引\r\n 属性作为当前字符。\r\n","The mapping in the JavaTM programming language for the SQL XML type.":"SQL XML类型的Javatm编程语言中的映射。\r\n","java.util.Scanner.next(java.lang.String)":"java.util.scanner.next（java.lang.string）\r\n","java.text.AttributedString.addAttributes(java.util.Map, int, int)":"java.text.attributtedstring.addattributes（java.util.map，int，int）\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.Object）\r\n","java.security.SignatureException.SignatureException(java.lang.Throwable)":"java.security.signatureexception.signatureexception（java.lang.throwable）\r\n","java.sql.ResultSetMetaData.isSigned(int)":"java.sql.ResultsetMetadata.signed（int）\r\n","A connection (session) with a specific\n            database.":"具有特定的连接（会话）\r\n            数据库。\r\n","java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer)":"java.security.signaturespi.engineupdate（java.nio.bytebuffer）\r\n","java.util.SimpleTimeZone.setEndRule(int, int, int)":"java.util.simpletimezone.setendrule（int，int，int）\r\n","java.sql.DatabaseMetaData.allTablesAreSelectable()":"java.sql.databasemetadata.alltablesareSelectable（）\r\n","java.util.Deque.iterator()":"java.util.deque.iterator（）\r\n","Computes a hash code for this path.":"计算此路径的哈希代码。\r\n","java.sql.Types.NULL":"java.sql.types.null\r\n","java.text.MessageFormat.getFormats()":"java.text.messageformat.getFormats（）\r\n","Return the grouping size. -or- Set the grouping size.":"返回分组尺寸。 - 或 - 设置分组大小。\r\n","java.util.Deque.size()":"java.util.deque.size（）\r\n","java.util.Collections.checkedNavigableSet(java.util.NavigableSet, java.lang.Class)":"Java.util.Collections.CheckedNavigableset（Java.util.navigableset，Java.lang.class）\r\n","java.util.Map.merge(java.lang.Object, java.lang.Object, java.util.function.BiFunction)":"java.util.map.merge（java.lang.object，java.lang.object，java.util.function.bifunction）\r\n","), table\n            density (":"）， 桌子\r\n            密度 （\r\n","java.util.Collections.checkedNavigableMap(java.util.NavigableMap, java.lang.Class, java.lang.Class)":"Java.util.Collections.CheckednavigableMap（Java.util.navigableMap，Java.lang.class，Java.lang.class）\r\n","java.nio.file.Watchable.register(java.nio.file.WatchService, java.nio.file.Kind)":"java.nio.file.watchable.register（java.nio.file.file.watchservice，java.nio.file.kind）\r\n","Returns a lexicographic-order comparator with a function that\n            extracts a key to be compared with the given ":"返回具有一个功能的词典订单比较器\r\n            提取要比较给定的钥匙\r\n","This class contains various methods for manipulating arrays (such as\n            sorting and searching).":"此类包含各种操纵数组的方法（例如\r\n            分类和搜索）。\r\n","Indicates whether some other object is &quot;equal to&quot; this\n            comparator.":"指示其他对象是否与“等于”这个\r\n            比较器。\r\n","java.util.ArrayDeque.iterator()":"java.util.arraydeque.iterator（）\r\n","java.security.Policy":"java.security.policy\r\n","java.util.concurrent.FutureTask.runAndReset()":"java.util.concurrent.futuretask.runandreset（）\r\n","Returns whether the certificate policy extension of the most recently\n processed certificate is marked as critical.":"返回是否最近的证书策略扩展\r\n 处理的证书被标记为关键。\r\n","java.security.InvalidParameterException":"java.security.invalidparameterexception\r\n","java.sql.DriverManager.println(java.lang.String)":"java.sql.drivermanager.println（java.lang.string）\r\n","Generates a hash code for a sequence of input values.":"为一系列输入值生成哈希代码。\r\n","java.util.Locale.getDisplayVariant()":"java.util.locale.getDisplayVariant（）\r\n","java.text.FieldPosition.getEndIndex()":"java.text.fieldposition.getEndIndex（）\r\n","java.security.Signature.getInstance(java.lang.String, java.security.Provider)":"java.security.signature.getinstance（java.lang.string，java.security.provider）\r\n","java.util.Calendar.getActualMaximum(int)":"java.util.calendar.getactualmaximum（int）\r\n","Returns the greatest key less than or equal to the given key,\n            or ":"返回最大的密钥小于或等于给定键，\r\n            或者\r\n","java.sql.DriverManager.getConnection(java.lang.String, java.util.Properties)":"java.sql.drivermanager.getConnection（java.lang.string，java.util.properties）\r\n"," with the default initial\n            capacity (11) that orders its elements according to their\n            Comparable natural ordering.":" 带有默认字母\r\n            能力（11）根据其元素命令其元素\r\n            可比的自然顺序。\r\n","Returns a dynamically typesafe view of the specified sorted set.":"返回指定排序集的动态类型AFTE视图。\r\n","attributes":"属性\r\n"," to read text\n            from the file in an efficient manner.":" 阅读文字\r\n            从文件中有效地从文件中。\r\n"," over the elements in this list.":" 在此列表中的元素上。\r\n","Get the service describing this Provider's implementation of the\n            specified type of this algorithm or alias.":"获取描述该提供商的实施的服务\r\n            该算法或别名的指定类型。\r\n","java.sql.Connection.createNClob()":"java.sql.connection.createnclob（）\r\n","Indicates that this version column is NOT a pseudo column.":"指示此版本列不是伪列。\r\n","Registers the OUT parameter in ordinal position\n            <code>parameterIndex</code> to the JDBC type\n            <code>sqlType</code>.":"注册OUT参数处于顺序位置\r\n            <code> parameterIndex </code>到JDBC类型\r\n            <code> sqltype </code>。\r\n","java.sql.DatabaseMetaData.insertsAreDetected(int)":"java.sql.databasemetadata.insertsaredetected（int）\r\n","java.text.BreakIterator.current()":"java.text.breakiterator.current（）\r\n","java.security.cert.CollectionCertStoreParameters.clone()":"java.security.cert.collectioncertstoreparameters.clone（）\r\n","java.security.cert.LDAPCertStoreParameters.LDAPCertStoreParameters(java.lang.String)":"java.security.cert.ldapcertstoreparameters.ldapcertstoreparameters（java.lang.string）\r\n","SignedObject is a class for the purpose of creating authentic\n            runtime objects whose integrity cannot be compromised without being\n            detected.":"签名对象是一个类，目的是创建真实的\r\n            不在不在的情况下无法妥协的运行时对象\r\n            检测到。\r\n","java.util.concurrent.CopyOnWriteArrayList.size()":"java.util.concurrent.copyonwritearraylist.size（）\r\n","If the specified key is not already associated with a value (or\n            is mapped to ":"如果指定的密钥尚未与一个值相关联（或\r\n            被映射到\r\n","Returns an immutable map containing four mappings.":"返回一张包含四个映射的不变地图。\r\n","java.security.IdentityScope.getIdentity(java.security.Principal)":"java.security.IdentityScope.getIdentity（java.security.principal）\r\n","Retrieves whether this database supports the JDBC scalar function\n            <code>CONVERT</code> for conversions between the JDBC types ":"检索此数据库是否支持JDBC标量函数\r\n            <code>转换</code>用于JDBC类型之间的转换\r\n","java.sql.DatabaseMetaData.supportsFullOuterJoins()":"java.sql.databasemetadata.supportsfultfullouterjoins（）\r\n","java.util.Arrays.fill(java.lang.Object[], java.lang.Object)":"java.util.arrays.fill（java.lang.object []，java.lang.object）\r\n","java.security.cert.CertificateParsingException.CertificateParsingException(java.lang.String)":"java.security.cert.certificateParsingException.certificateParsingException（java.lang.string）\r\n","Constructs an empty vector with the specified initial capacity and\n            with its capacity increment equal to zero.":"用指定的初始容量构建一个空矢量\r\n            其容量增加等于零。\r\n"," is the common marker interface for a ":" 是一个公共标记接口\r\n","java.util.Collections.unmodifiableSet(java.util.Set)":"java.util.collections.unmodifiableset（java.util.set）\r\n","Returns a list iterator over the elements in this list (in proper\n            sequence), starting at the specified position in the list.":"在此列表中的元素上返回列表迭代器（正确\r\n            序列），从列表中的指定位置开始。\r\n"," that this implementation uses to\n            check the revocation status of certificates.":" 该实现用于\r\n            检查证书的撤销状态。\r\n","Returns the issuer criterion as a byte array.":"将发行人标准返回为字节阵列。\r\n","java.sql.CallableStatement.getObject(java.lang.String, java.util.Map)":"java.sql.callablestatement.getObject（java.lang.string，java.util.map）\r\n","Returns the guarantor of this certificate.":"返回此证书的担保人。\r\n","java.sql.ResultSet.updateCharacterStream(int, java.io.Reader)":"java.sql.Resultset.updatecharacterstream（int，java.io.reader）\r\n","java.util.Arrays.sort(java.lang.Object[])":"java.util.arrays.sort（java.lang.object []）\r\n","java.text.DateFormatSymbols.getShortWeekdays()":"java.text.dateformatsymbols.getShortweekdays（）\r\n","java.util.Calendar.setWeekDate(int, int, int)":"java.util.calendar.setweekdate（int，int，int）\r\n","java.security.spec.ECParameterSpec.getCofactor()":"java.security.spec.ecparameterspec.getCofactor（）\r\n","Creates a new RSAPrivateKeySpec.":"创建一个新的rsaprivatekeyspec。\r\n","Future<?> f = new FutureTask<Void>(runnable, null)":"未来<？> f =新的futuretask <void>（可运行，null）\r\n","java.sql.SQLRecoverableException":"java.sql.sqlrecoverableException\r\n","java.util.SortedMap.headMap(java.lang.Object)":"java.util.sortedmap.headmap（java.lang.Object）\r\n","This is an exception that is thrown whenever a reference is made to a\n            non-existent ACL (Access Control List).":"这是一个例外，每当提到\r\n            不存在ACL（访问控制列表）。\r\n","Determines whether the given <code>key</code> is contained in\n            this <code>ResourceBundle</code> or its parent bundles.":"确定是否包含给定的<code>键</code>\r\n            此<code> ResourceBundle </code>或其父捆绑包。\r\n","java.util.Random.nextGaussian()":"java.util.random.nextgaussian（）\r\n","Policy":"政策\r\n","Creates elliptic curve domain parameters based on the\n            specified values.":"基于\r\n            指定值。\r\n","java.util.Formatter.Formatter()":"java.util.formatter.formatter（）\r\n","java.time.format.DateTimeFormatter.ISO_OFFSET_DATE":"java.time.format.datetimeformatter.iso_offset_date\r\n","Returns the best-matching language tag using the lookup mechanism\n            defined in RFC 4647.":"使用查找机制返回最好的匹配语言标签\r\n            在RFC 4647中定义。\r\n","java.util.Calendar.FEBRUARY":"java.util.calendar.february\r\n","Inserts the specified element into the list (optional operation).":"将指定元素插入列表（可选操作）。\r\n","java.util.HashMap.HashMap(java.util.Map)":"java.util.hashmap.hashmap（java.util.map）\r\n","Checks whether the given certificate is on this CRL.":"检查给定证书是否在此CRL上。\r\n","java.security.cert.CertPath.getEncoded(java.lang.String)":"java.security.cert.certpath.getencoded（java.lang.string）\r\n","Returns a copy of the permissions component.":"返回权限组件的副本。\r\n","Resolve the Key object.":"解决关键对象。\r\n","java.util.concurrent.BlockingDeque.addFirst(java.lang.Object)":"java.util.concurrent.blockingdeque.addfirst（java.lang.object）\r\n","indicating the\n week number within the current month. ":"指示\r\n 本月的周数。\r\n","Returns the date when the certificate is revoked.":"返回吊销证书的日期。\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String)":"java.sql.sqltransientException.sqltransientException（java.lang.string）\r\n","java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier, java.util.concurrent.Executor)":"java.util.concurrent.completablefuture.supplyasync（java.util.function.supplier，java.util.concurrent.executor）\r\n","java.sql.ResultSet.getString(java.lang.String)":"java.sql.Resultset.getString（java.lang.string）\r\n","java.util.concurrent.BlockingQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingqueue.offer（java.lang.object，long，java.util.concurrent.timeunit）\r\n","Locale.Category#DISPLAY DISPLAY":"locale.sategory＃显示显示\r\n","since ":"自从\r\n","java.util.AbstractList.add(int, java.lang.Object)":"java.util.abstractlist.add（int，java.lang.object）\r\n","\n             .\n":"\r\n             。\r\n\r\n","Returns a list of the installed file system providers.":"返回已安装的文件系统提供商的列表。\r\n","This is an exception that is thrown whenever the modification of an object\n            (such as an Access Control List) is only allowed to be done by an owner of\n            the object, but the Principal attempting the modification is not an owner.":"这是一个例外，每当对象修改\r\n            （例如访问控制列表）仅允许由\r\n            对象，但是尝试修改的主要主管不是所有者。\r\n","java.text.NumberFormat.format(long)":"java.text.numberformat.format（long）\r\n","java.util.Set.equals(java.lang.Object)":"java.util.set.Equals（java.lang.Object）\r\n","java.security.acl.Group.removeMember(java.security.Principal)":"java.security.acl.group.removemember（java.security.principal）\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>ROWID</code>":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型<code> rowID </code>\r\n","java.util.concurrent.ForkJoinWorkerThread.getPool()":"java.util.concurrent.forkjoinworkerthread.getpool（）\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String, java.lang.String, int)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.string，java.lang.string，int）\r\n","java.nio.file.WatchService.close()":"java.nio.file.watchservice.close（）\r\n","\n            containing the specified parameters.":"\r\n            包含指定参数。\r\n","java.security.GeneralSecurityException.GeneralSecurityException(java.lang.Throwable)":"java.security.generalsecurityexception.generalsecurityexception（java.lang.throwable）\r\n","Returns the field size in bits which is ":"返回位置的场大小\r\n","Retrieves whether or not a visible row delete can be detected by\n            calling the method <code>ResultSet.":"检索是否可以检测到可见的行删除\r\n            调用方法<code>结果集。\r\n","a database error occurred.\n":"发生数据库错误。\r\n\r\n","java.util.Calendar.PM":"java.util.calendar.pm\r\n","Field number for ":"字段编号\r\n","java.sql.DatabaseMetaData.procedureColumnIn":"java.sql.databasemetadata.procedurecolumnin\r\n","java.sql.ResultSet.getDouble(int)":"java.sql.Resultset.getDouble（int）\r\n","#LONG_STANDALONE":"#long_standalone\r\n","Retrieves whether this database supports table correlation names.":"检索此数据库是否支持表相关名称。\r\n","java.util.concurrent.DelayQueue":"java.util.concurrent.delayqueue\r\n","Returns the version number of this database software.":"返回此数据库软件的版本号。\r\n","Returns the beginning date of the 100-year period 2-digit years are interpreted\n            as being within.":"返回100年2位年份的开始日期\r\n            在内部。\r\n","Opens or creates a file, returning a seekable byte channel to access the\n            file.":"打开或创建文件，返回可寻求的字节频道以访问\r\n            文件。\r\n","java.text.DecimalFormatSymbols.setZeroDigit(char)":"java.text.decimalformatsymbols.setzerodigit（char）\r\n","Returns a list-iterator of the elements in this list (in proper\n            sequence), starting at the specified position in the list.":"返回此列表中元素的列表列表（以正确的方式\r\n            序列），从列表中的指定位置开始。\r\n"," is empty.\n":" 是空的。\r\n\r\n","if the specified key can not be protected, or if this\n             operation fails for another reason.":"如果不能保护指定的密钥，或者如果\r\n             操作失败是由于另一个原因。\r\n","java.nio.file.Files.write(java.nio.file.Path, java.lang.Iterable, java.nio.charset.Charset, java.nio.file.OpenOption)":"java.nio.file.files.write（java.nio.file.path，java.lang.iterable，java.nio.charset.Charset.Charset，Java.nio.file.openoption）\r\n","java.util.Iterator.next()":"java.util.iterator.next（）\r\n","java.sql.PreparedStatement.setObject(int, java.lang.Object, int)":"java.sql.preparedstatement.setObject（int，java.lang.object，int）\r\n","java.sql.CallableStatement.getRef(java.lang.String)":"java.sql.callablestatement.getref（java.lang.string）\r\n","!x.equals(y)":"！X.Equals（y）\r\n","start  original.length":"启动原始lengength\r\n"," but does not invoke ":" 但不调用\r\n","PKIXParameters":"PkixParameters\r\n","If a value is present in this ":"如果有一个值\r\n","indicating the\n day of the month. ":"指示\r\n 一个月的一天。\r\n","Calendar#MONTH MONTH":"日历＃月\r\n"," to iterate over\n            the entries in the directory.":" 迭代\r\n            目录中的条目。\r\n","Checks if this unit is a date unit.":"检查此单元是否是日期单位。\r\n","if an exception occurred while storing the certificates of\n             this ":"如果在存储证书时发生异常\r\n             这个\r\n","nThreads <= 0":"nthreads <= 0\r\n","java.util.Locale.KOREA":"java.util.locale.korea\r\n","java.security.Certificate.encode(java.io.OutputStream)":"java.security.certificate.encode（java.io.outputstream）\r\n"," over the elements in this sorted set.":" 在此排序集中的元素上。\r\n","java.text.BreakIterator.following(int)":"java.text.breakiterator.following（int）\r\n","java.util.concurrent.ForkJoinPool":"java.util.concurrent.forkjoinpool\r\n","java.util.MissingFormatArgumentException.getFormatSpecifier()":"java.util.missingformatargumentException.getFormatsPecifier（）\r\n","java.sql.ResultSet.getByte(java.lang.String)":"java.sql.Resultset.getbyte（java.lang.string）\r\n","Returns a synchronized (thread-safe) list backed by the specified\n            list.":"返回由指定的同步（线程安全）列表\r\n            列表。\r\n","If the value for the specified key is present and non-null, attempts to\n            compute a new mapping given the key and its current mapped value.":"如果存在指定密钥的值，并且非null，则尝试\r\n            计算给定键及其当前映射值的新映射。\r\n"," (<b>SPI</b>)\n            for the ":" （<b> spi </b>）\r\n            为了\r\n","java.nio.file.spi.FileSystemProvider.createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.spi.filesystemprovider.createDirectory（java.nio.file.path，java.nio.file.attribute.fileattribute）\r\n","Exceptionally completes this CompletableFuture with\n            a ":"与\r\n            一个\r\n","Retrieves whether this database supports the given transaction isolation level.":"检索该数据库是否支持给定的交易隔离级别。\r\n","Compares its two arguments for order.":"比较其订单的两个论点。\r\n","java.sql.ResultSet.TYPE_FORWARD_ONLY":"java.sql.Resultset.Type_forward_only\r\n","Sets the key pair (public key and private key) for this signer.":"为此签名设置密钥对（公钥和私钥）。\r\n","java.util.BitSet":"java.util.bitset\r\n","Writes this property list (key and element pairs) in this\n            ":"在此写入此属性列表（键和元素对）\r\n            \r\n","Runtime exception thrown if an I/O error is encountered when iterating over\n            the entries in a directory.":"如果迭代时遇到I/O错误，则会抛出运行时异常\r\n            目录中的条目。\r\n"," is not null but empty.\n":" 不是空的，而是空的。\r\n\r\n"," extended with navigation methods returning the\n            closest matches for given search targets.":" 使用导航方法返回\r\n            给定搜索目标的最接近匹配。\r\n","java.util.TimeZone.inDaylightTime(java.util.Date)":"java.util.timezone.indaylighttime（java.util.date）\r\n","java.nio.file.ProviderNotFoundException.ProviderNotFoundException()":"java.nio.file.providernotfoundexception.providernotfoundexception（）\r\n","Sorts the specified array of objects according to the order induced by\n            the specified comparator.":"根据根据由原始的顺序分类指定的对象数组\r\n            指定的比较器。\r\n","java.sql.DatabaseMetaData.functionNoNulls":"java.sql.databasemetadata.functionnonulls\r\n","java.security.cert.X509CertSelector.getSubjectAlternativeNames()":"java.security.cert.x509certselector.getSubjectalternativivivianames（）\r\n","Gets the name of the algorithm\n            associated with this ":"获取算法的名称\r\n            与此相关联\r\n","java.security.KeyStore.isCertificateEntry(java.lang.String)":"java.security.keystore.iscertificateEntry（java.lang.string）\r\n"," locale.":" 语言环境。\r\n","FileSystem":"文件系统\r\n","object1":"对象1\r\n","java.util.Vector.firstElement()":"java.util.vector.firstelement（）\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.util.concurrent.ForkJoinPool.getStealCount()":"java.util.concurrent.forkjoinpool.getstealcount（）\r\n","Retrieves and removes the last element of this deque,\n            or returns ":"检索并删除了这个Deque的最后一个元素，\r\n            或返回\r\n","Searches a range of\n            the specified array of chars for the specified value using the\n            binary search algorithm.":"搜索一系列\r\n            使用的指定值的指定字符数组\r\n            二进制搜索算法。\r\n","java.util.Vector.addElement(java.lang.Object)":"Java.util.Vector.Addelement（Java.lang.Object）\r\n","java.security.MessageDigest.getInstance(java.lang.String, java.lang.String)":"java.security.messagedigest.getinstance（java.lang.string，java.lang.string）\r\n","java.sql.Types.BIGINT":"java.sql.types.bigint\r\n","java.security.spec.X509EncodedKeySpec.X509EncodedKeySpec(byte[])":"java.security.spec.x509encodedkeyspec.x509encodedkeyspec（byte []）\r\n"," that decodes using the\n            <a href=\"#mime\">MIME</a> type base64 decoding scheme.":" 使用\r\n            <a href=\"#mime\"> mime </a>键入base64解码方案。\r\n","Retrieves the value of the designated <code>SQL XML</code> parameter as a\n            <code>java.":"检索指定的<code> sql xml </code>参数为一个\r\n            <code> Java。\r\n","Return true if the base direction is left-to-right.":"如果基本方向是从左到右的，则返回true。\r\n","java.util.Spliterators":"java.util.spliterators\r\n","Returns the value to which the specified key is mapped,\n            or ":"返回指定密钥映射的值，\r\n            或者\r\n","Gets the fetch size (in number of rows) for this ":"为此获取提取尺寸（行数）\r\n","Represents the value of a file's time stamp attribute.":"表示文件的时间戳属性的值。\r\n","java.text.Collator.PRIMARY":"java.text.collat​​or.primary\r\n","java.util.ResourceBundle.clearCache(java.lang.ClassLoader)":"java.util.resourcebundle.clearcache（java.lang.classloader）\r\n","java.util.concurrent.CopyOnWriteArrayList":"java.util.concurrent.copyonwritearraylist\r\n","java.text.NumberFormat.setMinimumIntegerDigits(int)":"java.text.numberformat.setminimumintegerdigits（int）\r\n","java.sql.DatabaseMetaData.allProceduresAreCallable()":"java.sql.databasemetadata.allproceduresarecallable（）\r\n","java.sql.DatabaseMetaData.columnNullableUnknown":"java.sql.databasemetadata.columnnullableunknown\r\n","java.security.SecureRandom.getInstance(java.lang.String, java.lang.String)":"java.security.securerandom.getinstance（java.lang.string，java.lang.string）\r\n","Updates the file owner.":"更新文件所有者。\r\n","CertificateFactory":"证明书\r\n","java.security.DomainLoadStoreParameter.DomainLoadStoreParameter(java.net.URI, java.util.Map)":"java.security.domainloadstoreparameter.domainloadstoreparameter（java.net.uri，java.util.map）\r\n","Constructs a certificate exception with the given detail\n            message.":"构建给定细节的证书例外\r\n            信息。\r\n","remove":"消除\r\n"," if the two specified arrays of booleans are\n            ":" 如果两个指定的布尔值是\r\n            \r\n","java.sql.ResultSet.beforeFirst()":"java.sql.resultset.beforefirst（）\r\n","java.nio.file.SimpleFileVisitor.preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)":"java.nio.file.simplefilevisitor.previsitDirectory（java.lang.object，java.nio.file.file.attribute.basicfileateattributes）\r\n","java.nio.charset.StandardCharsets.UTF_16":"java.nio.charset.standardcharsets.utf_16\r\n","Gets the currency used by this number format when formatting\n            currency values. -or- Sets the currency used by this number format when formatting\n            currency values.":"格式化时获取此数字格式的货币\r\n            货币价值。格式化时 - 或设置此数字格式使用的货币\r\n            货币价值。\r\n","instance has been\n initialized for signing.":"实例已经过去了\r\n 初始化用于签名。\r\n","java.util.SimpleTimeZone.inDaylightTime(java.util.Date)":"java.util.simpletimezone.indaylighttime（java.util.date）\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.size(java.lang.String)":"java.nio.file.attribute.userdefinedfileattributeview.size（java.lang.string）\r\n","Returns the name of the encoding format of this encoded key\n specification.":"返回此编码密钥的编码格式的名称\r\n 规格。\r\n","java.util.ArrayDeque.removeFirstOccurrence(java.lang.Object)":"java.util.arraydeque.removefirstoccurrence（java.lang.object）\r\n","java.sql.CallableStatement.setInt(java.lang.String, int)":"java.sql.callablestatement.setint（java.lang.string，int）\r\n","java.util.Calendar.clear()":"java.util.calendar.clear（）\r\n","java.util.SplittableRandom.nextLong(long)":"java.util.splittablerandom.nextlong（long）\r\n","Creates a CRL of the specified type.":"创建指定类型的CRL。\r\n","java.util.Spliterators.spliteratorUnknownSize(java.util.Iterator, int)":"java.util.spliterators.spliteratorunknownsize（java.util.iterator，int）\r\n"," from the\n            encoded bytes.":" 来自\r\n            编码字节。\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.name()":"java.nio.file.attribute.userdefinedfileattributeview.name（）\r\n","Gets the list of transition rules for years beyond those defined in the transition list.":"在过渡列表中定义的几年中获取过渡规则列表。\r\n","java.sql.CallableStatement.setDate(java.lang.String, java.sql.Date, java.util.Calendar)":"java.sql.callablestatement.setdate（java.lang.string，java.sql.date，java.util.calendar）\r\n","java.security.Permission":"Java.security.Permission\r\n","Removes at most the given number of available elements from\n            this queue and adds them to the given collection.":"最多可以从给定数量的可用元素中删除\r\n            此队列并将它们添加到给定的集合中。\r\n","if an error occures.":"如果发生错误。\r\n","java.util.concurrent.CompletableFuture.isDone()":"java.util.concurrent.completablefuture.isdone（）\r\n","default constructor\n\n":"默认构造函数\r\n\r\n\r\n","Gets the pattern.":"获取图案。\r\n","Returns an iterator over the elements in this set, in descending order.":"按降序返回该集合中的元素。\r\n","Checks the RevocationEnabled flag. -or- Sets the RevocationEnabled flag.":"检查撤销的标志。 - 或设置撤销的标志。\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.util.Map, java.lang.Throwable)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.lang.string，java.util.map，java.lang.thrang.throwable）\r\n","Gets the date formatter with the given formatting style\n            for the given locale.":"获取给定格式样式的日期格式化\r\n            对于给定的地方。\r\n","Constructs a new <code>Scanner</code> that produces values scanned\n            from the specified file.":"构建一个新的<code>扫描仪</code>，该</code>产生扫描的值\r\n            从指定的文件。\r\n","java.util.Locale.forLanguageTag(java.lang.String)":"java.util.locale.forlanguagetag（java.lang.string）\r\n","java.sql.PreparedStatement.setLong(int, long)":"java.sql.preparedstatement.setlong（int，long）\r\n","java.sql.DatabaseMetaData.functionColumnInOut":"java.sql.databasemetadata.functioncolumninout\r\n","Returns a new CompletionStage that, when this stage completes\n            either normally or exceptionally, is executed using the\n            supplied executor, with this stage's result and exception as\n            arguments to the supplied function.":"返回一个新的完整舞台，当这个阶段完成时\r\n            通常或异常地使用\r\n            提供了执行人，此阶段的结果和例外为\r\n            对提供功能的论点。\r\n","Returns a hash code value of this <code>RowId</code> object.":"返回此<code> rowID </code>对象的哈希代码值。\r\n","java.sql.PreparedStatement.execute()":"java.sql.preparedstatement.execute（）\r\n","start >= end":"开始> =结束\r\n","java.security.MessageDigest.update(byte[], int, int)":"java.security.messagedigest.update（byte []，int，int）\r\n","java.security.cert.X509CertSelector.getAuthorityKeyIdentifier()":"java.security.cert.x509certselector.getAuthorityKeykeyIdentifier（）\r\n","java.util.IllegalFormatConversionException.IllegalFormatConversionException(char, java.lang.Class)":"Java.util.IllegalFormatConversionException.IllegalFormatConversionException（char，java.lang.class）\r\n"," field indicating the\n            thirteenth month of the year.":" 指示\r\n            一年中的第十三个月。\r\n","java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()":"java.util.concurrent.copyonwritearraylist.copyonwritearraylist（）\r\n","java.util.Formatter.Formatter(java.io.OutputStream)":"java.util.formatter.formatter（java.io.outputstream）\r\n"," using the given collection's\n            ":" 使用给定的集合\r\n            \r\n","java.util.EnumSet.copyOf(java.util.EnumSet)":"java.util.enumset.copyof（java.util.enumset）\r\n","java.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.exists（java.nio.file.path，java.nio.file.linkoption）\r\n"," is considered not valid in this\n             transaction.\n":" 被认为无效\r\n             交易。\r\n\r\n","Returns the signer's certificate path.":"返回签名者的证书路径。\r\n","TimeZone#LONG":"时区＃long\r\n","Gets the date/time formatter with the given formatting styles\n            for the given locale.":"使用给定格式样式获取日期/时间格式\r\n            对于给定的地方。\r\n","Resets the cursor to the beginning of the string.":"将光标重置为字符串的开头。\r\n","CertPathBuilder":"certPathBuilder\r\n","Cloning this ":"克隆这个\r\n","Removes the <code>key</code> (and its corresponding\n            <code>value</code>) from this dictionary.":"删除<code>键</code>（及其相应的\r\n            <code> value </code>）来自该字典。\r\n","java.security.KeyFactory":"java.security.keyfactory\r\n","KeyStore.Entry":"keystore.entry\r\n"," and\n            decodes them according to the specified decoding format.":" 和\r\n            根据指定的解码格式对其进行解码。\r\n","java.util.concurrent.CountedCompleter.getCompleter()":"java.util.concurrent.countedcompleter.getCompleter（）\r\n","Returns a string representation of the contents of this ACL entry.":"返回此ACL条目内容的字符串表示。\r\n","Sorts the specified range of the specified array of objects according\n            to the order induced by the specified comparator.":"根据指定对象的指定范围根据\r\n            指定比较器引起的顺序。\r\n","java.security.cert.CertificateParsingException.CertificateParsingException()":"java.security.cert.certificateParsingException.certificateParsingException（）\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code> object.":"构造<Code> SQLINTEGRITYCONSTRATENTVIOLATIONEXCEPTION </code>对象。\r\n","java.util.EnumSet.of(java.lang.Enum)":"java.util.enumset.of（java.lang.enum）\r\n","Returns the result value (or throws any encountered exception)\n            if completed, else returns the given valueIfAbsent.":"返回结果值（或抛出任何遇到的异常）\r\n            如果完成，否则将返回给定的值。\r\n","fields[]":"字段[]\r\n","list.size()":"list.size（）\r\n","Sets short month strings.":"设置短月字符串。\r\n","java.util.AbstractList.get(int)":"java.util.abstractlist.get（int）\r\n","java.nio.file.attribute.FileOwnerAttributeView":"java.nio.file.attribute.fileownerattributeview\r\n","java.util.concurrent.Executors.newCachedThreadPool()":"java.util.concurrent.executors.newcachedthreadpool（）\r\n"," where the\n            most-trusted CA is specified as an X500Principal and public key.":" 在哪里\r\n            最受信任的CA被指定为X500原理和公钥。\r\n","java.util.GregorianCalendar.getLeastMaximum(int)":"java.util.gregoriancalendar.getleastmaximum（int）\r\n","Sets the sequence of characters to be used when determining the string\n            representation of this ":"设置确定字符串时要使用的字符序列\r\n            代表这个\r\n","java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT":"java.sql.Resultset.close_cursors_at_commit\r\n","java.sql.ParameterMetaData.parameterModeOut":"java.sql.parametermetadata.parametermodeout\r\n"," of initial policy identifiers\n            (OID strings), indicating that any one of these\n            policies would be acceptable to the certificate user for the purposes of\n            certification path processing.":" 初始策略标识符\r\n            （oid弦），表明其中任何一个\r\n            证书用户可以接受政策\r\n            认证路径处理。\r\n","Removes the key (and its corresponding value) from this\n            hashtable.":"从此删除键（及其相应的值）\r\n            哈希表。\r\n","java.sql.BatchUpdateException.BatchUpdateException(int[], java.lang.Throwable)":"java.sql.batchupdateexception.batchupdateexception（int []，java.lang.throwable）\r\n","Invoked for a directory before entries in the directory are visited.":"访问目录中的条目之前，请调用目录。\r\n"," of initial\n            policy identifiers (OID strings), indicating that any one of these\n            policies would be acceptable to the certificate user for the purposes of\n            certification path processing. -or- Sets the ":" 最初\r\n            政策标识符（OID字符串），表明其中任何一个\r\n            证书用户可以接受政策\r\n            认证路径处理。 - 或设置\r\n","Indicates that the parameter or column is an IN parameter.":"表示参数或列是参数。\r\n","Retrieves a description of a table's columns that are automatically\n            updated when any value in a row is updated.":"检索自动的表列的描述\r\n            更新一行的任何值时更新。\r\n","java.util.Arrays.fill(java.lang.Object[], int, int, java.lang.Object)":"java.util.arrays.fill（java.lang.object []，int，int，java.lang.object）\r\n","java.nio.file.attribute.FileTime":"java.nio.file.attribute.filetime\r\n"," that compares by that\n            sort key.":" 相比之下\r\n            排序密钥。\r\n","java.security.cert.CertificateException.CertificateException(java.lang.String)":"java.security.cert.certificateException.certificateException（java.lang.string）\r\n","Updates the designated column using the given <code>Reader</code>\n            \n            The data will be read from the stream\n            as needed until end-of-stream is reached.":"使用给定的<code>读取器</code>更新指定的列\r\n            \r\n            数据将从流读取\r\n            根据需要，直到到达流程结束为止。\r\n","java.sql.DatabaseMetaData.supportsANSI92EntryLevelSQL()":"java.sql.databasemetadata.supportsasi92entrylevelsql（）\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, java.lang.String, int[])":"java.sql.batchupdateexception.batchupdateexception（java.lang.string，java.lang.string，int []）\r\n","java.text.MessageFormat.setFormatByArgumentIndex(int, java.text.Format)":"java.text.messageformat.setFormatbyArgumentIndex（int，java.text.format）\r\n","Returns an immutable map containing nine mappings.":"返回包含九个映射的不变地图。\r\n","java.time.temporal.ChronoField.checkValidValue(long)":"java.time.temporal.chronofield.checkvalidvalue（长）\r\n","java.security.cert.PKIXCertPathChecker.PKIXCertPathChecker()":"java.security.cert.pkixcertpathchecker.pkixcertpathchecker（）\r\n"," was called, or the barrier action (if\n         present) failed due to an exception\n":" 被称为或障碍行动（如果\r\n         目前）由于例外而失败\r\n\r\n",")\n            and certificate revocation list (CRL) objects from their encodings.":"）\r\n            和证书撤销列表（CRL）对象的编码对象。\r\n"," that holds the given ":" 拥有给定的\r\n","java.util.concurrent.BlockingDeque.size()":"java.util.concurrent.blockingdeque.size（）\r\n"," object in an\n            implementation-dependent form.":" 对象\r\n            实现依赖形式。\r\n","java.sql.ResultSet.getDate(int, java.util.Calendar)":"java.sql.Resultset.getDate（int，java.util.calendar）\r\n"," value as a Java array\n object.":" 作为Java数组的价值\r\n 目的。\r\n","Returns an array containing all of the elements in this list\n            in proper sequence (from first to last element).":"返回包含此列表中所有元素的数组\r\n            以正确的顺序（从第一到最后一个元素）。\r\n","Returns the principal of this certificate.":"返回该证书的本金。\r\n","java.util.concurrent.ForkJoinTask.get(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.forkjointask.get（long，java.util.concurrent.timeunit）\r\n","java.security.Identity.getPublicKey()":"java.security.Identity.getPublicKey（）\r\n","java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue(int, boolean, java.util.Collection)":"java.util.concurrent.ArrayBlockingQueue.ArrayBlockingQueue（int，boolean，java.util.collection）\r\n","java.security.cert.TrustAnchor.getCAPublicKey()":"java.security.cert.trustanchor.getCapublicKey（）\r\n","java.security.KeyManagementException.KeyManagementException(java.lang.String, java.lang.Throwable)":"java.security.KeyManagementException.KeyManagementException（java.lang.string，java.lang.throwable）\r\n","java.util.concurrent.ExecutionException":"java.util.concurrent.executionException\r\n","Returns a list iterator over the elements in this list (in proper\n            sequence).":"在此列表中的元素上返回列表迭代器（正确\r\n            序列）。\r\n","java.util.Locale.lookupTag(java.util.List, java.util.Collection)":"java.util.locale.locuptag（java.util.list，java.util.collection）\r\n","java.text.Normalizer.isNormalized(java.lang.CharSequence, java.text.Form)":"java.text.normalizer.isnormalized（java.lang.charsequence，java.text.form）\r\n","java.security.SecureRandom.getInstance(java.lang.String, java.security.Provider)":"java.security.securerandom.getinstance（java.lang.string，java.security.provider）\r\n","Returns a pattern representing the current state of the message format.":"返回表示消息格式的当前状态的模式。\r\n","if the specified parameters are not supported\n":"如果不支持指定的参数\r\n\r\n","java.util.BitSet.isEmpty()":"java.util.bitset.isempty（）\r\n","if the pattern cannot be parsed.\n":"如果无法解析模式。\r\n\r\n","java.util.TreeMap.tailMap(java.lang.Object)":"java.util.treemap.tailmap（java.lang.Object）\r\n","java.text.Normalizer.normalize(java.lang.CharSequence, java.text.Form)":"java.text.normalizer.normalize（java.lang.charsequence，java.text.form）\r\n","The RFC-1123 date-time formatter, such as 'Tue, 3 Jun 2008 11:05:30 GMT'.":"RFC-1123日期时间格式，例如“ Tue，2008年6月3日11:05:30 GMT”。\r\n","java.sql.ResultSet.updateAsciiStream(int, java.io.InputStream, long)":"java.sql.Resultset.updateasciistream（int，java.io.inputstream，long）\r\n","java.sql.SQLTransientException":"java.sql.sqltransientException\r\n","java.util.Arrays.sort(short[])":"java.util.arrays.sort（short []）\r\n","java.security.cert.CertificateRevokedException.getRevocationDate()":"java.security.cert.certificaterevokedexception.getRevocationdate（）\r\n","java.sql.Blob.free()":"java.sql.blob.free（）\r\n","Creates a new timer.":"创建一个新的计时器。\r\n","Permission":"允许\r\n","java.sql.ResultSet.getAsciiStream(int)":"java.sql.Resultset.getasciistream（int）\r\n","Returns an array of bytes representing the value of the SQL <code>ROWID</code>\n            designated by this <code>java.":"返回代表SQL <code> ROWID </code>的值的字节数组\r\n            由此<code> Java指定。\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.write(java.lang.String, java.nio.ByteBuffer)":"java.nio.file.attribute.userdefinedfileattributeview.write（java.lang.string，java.nio.bytebuffer）\r\n","java.util.AbstractList.iterator()":"java.util.abstractlist.iterator（）\r\n"," with the\n            given length.":" 与\r\n            给定长度。\r\n","java.security.cert.CertPathChecker.init(boolean)":"java.security.cert.certpathchecker.init（boolean）\r\n","java.util.Collection.remove(java.lang.Object)":"java.util.collection.remove（java.lang.Object）\r\n","java.util.SortedSet.last()":"java.util.sortedset.last（）\r\n","java.text.DateFormat.ERA_FIELD":"java.text.dateformat.era_field\r\n","java.util.Locale.hasExtensions()":"java.util.locale.hasextensions（）\r\n"," value between the specified\n            origin (inclusive) and bound (exclusive).":" 指定的价值\r\n            起源（包含）和绑定（独家）。\r\n","java.util.Calendar.YEAR":"java.util.calendar.year\r\n","java.sql.ResultSet.last()":"java.sql.Resultset.last（）\r\n","java.nio.charset.UnsupportedCharsetException":"java.nio.charset.unsupportedCharsetException\r\n","java.security.AuthProvider":"java.security.authprovider\r\n","java.util.concurrent.BlockingDeque.remove()":"java.util.concurrent.blockingdeque.remove（）\r\n","Returns the same value as the <code>hasMoreTokens</code>\n            method.":"返回与<code> hasmoretokens </code>相同的值\r\n            方法。\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code>.":"用给定的\r\n            <code>原因</code>。\r\n","java.util.Locale.getExtension(char)":"java.util.locale.getextension（char）\r\n","Defines the standard open options.":"定义标准打开选项。\r\n","\n statement for the database.":"\r\n 数据库的语句。\r\n","if the specified key cannot be compared\n         with the keys currently in the map":"如果无法比较指定的密钥\r\n         目前在地图中使用钥匙\r\n","params":"参数\r\n","Returns a new Executor that submits a task to the default\n            executor after the given delay (or no delay if non-positive).":"返回将任务提交给默认值的新执行人\r\n            执行者在给定延迟后（或无阳性，无延迟）。\r\n","java.security.PKCS12Attribute":"java.security.pkcs12attribute\r\n"," that\n            populates the set of most-trusted CAs from the trusted\n            certificate entries contained in the specified ":" 那\r\n            从可信赖\r\n            指定的证书条目\r\n","This class specifies an RSA multi-prime private key, as defined in the\n            PKCS#1 v2.":"该类指定RSA多启示私钥，如在\r\n            PKCS＃1 V2。\r\n","KeyStoreSpi":"keystorespi\r\n","Tests if this date is before the specified date.":"测试此日期是否在指定日期之前。\r\n","Formats an array of objects and appends the <code>MessageFormat</code>'s\n            pattern, with format elements replaced by the formatted objects, to the\n            provided <code>StringBuffer</code>.":"格式化一系列对象，并附加<code> MessageFormat </code>'\r\n            图案，格式元素被格式化的对象替换为\r\n            提供<code> StringBuffer </code>。\r\n"," date of the validity period of the\n certificate.":" 有效期的日期\r\n 证书。\r\n","java.security.Signer.setKeyPair(java.security.KeyPair)":"java.security.signer.setkeypair（java.security.keypair）\r\n","Returns the principal of this ACL entry.":"返回此ACL条目的主管。\r\n","This class encapsulates information about a code signer.":"此类封装有关代码签名者的信息。\r\n","Gets the number formatter which this date/time formatter uses to\n            format and parse a time. -or- Allows you to set the number formatter.":"获取此日期/时间格式用户使用的数字格式\r\n            格式和解析时间。 - 或 - 允许您设置数字格式。\r\n","Gets a resource bundle using the specified base name and locale,\n            and the caller's class loader.":"使用指定的基本名称和语言环境获取资源捆绑包，\r\n            和呼叫者的类加载程序。\r\n","java.sql.Timestamp":"java.sql.timestamp\r\n","java.util.Deque.removeFirst()":"java.util.deque.removefirst（）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            millisecond within the second.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            在第二毫秒内。\r\n","Construct a locale from a language code.":"从语言代码构建语言环境。\r\n","java.util.MissingResourceException.getClassName()":"java.util.missingresourceexception.getClassName（）\r\n"," representation\n            of this ":" 表示\r\n            这个的\r\n","'\n            ( the value is 'zero' A).":"'\r\n            （值为“零” a）。\r\n","deeply\n            equal":"深\r\n            平等的\r\n","java.util.Calendar.LONG_STANDALONE":"java.util.calendar.long_standalone\r\n","java.util.Random":"java.util.random\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlwarning.sqlwarning（java.lang.string，java.lang.string，int，java.lang.throwable）\r\n","Returns an iterator over the elements contained in this collection.":"返回该集合中包含的元素的迭代器。\r\n","Retrieves, but does not remove, the head of this queue.":"检索但不删除该队列的头部。\r\n","java.util.Locale.SIMPLIFIED_CHINESE":"java.util.locale.simplified_chinese\r\n","java.security.Guard":"java.security.guard\r\n","DateTimeFormatter":"DateTimeFormatter\r\n","The alternate ":"替代\r\n","NumberFormat.Field":"numberformat.field\r\n","Returns whether this ACL entry is ":"返回该ACL条目是否\r\n"," (CRT) information values.":" （CRT）信息值。\r\n","java.text.StringCharacterIterator.getEndIndex()":"java.text.StringCharacterator.getEndIndex（）（）\r\n","Returns the secret key.":"返回秘密钥匙。\r\n","java.util.Collections.unmodifiableNavigableSet(java.util.NavigableSet)":"java.util.collections.unmodifiablenavigableset（java.util.navigableset）\r\n","toType":"输入\r\n","Returns whether this <code>Calendar</code> represents a time\n            after the time represented by the specified\n            <code>Object</code>.":"返回此<code>日历</code>表示一个时间\r\n            在指定的时间代表的时间之后\r\n            <code>对象</code>。\r\n","java.sql.ResultSet.updateBinaryStream(int, java.io.InputStream, int)":"java.sql.Resultset.updatebinarystream（int，java.io.inputstream，int）\r\n","java.util.DuplicateFormatFlagsException":"java.util.duplicateformatflagsexception\r\n","Update the digest using the specified ByteBuffer.":"使用指定的字节更新摘要。\r\n","java.util.Scanner.locale()":"java.util.scanner.locale（）\r\n","java.security.spec.PKCS8EncodedKeySpec.PKCS8EncodedKeySpec(byte[])":"java.security.spec.pkcs8encodedkeyspec.pkcs8encodedkeyspec（byte []）\r\n","Creates a thread pool that creates new threads as needed, but\n            will reuse previously constructed threads when they are\n            available.":"创建一个线程池，可根据需要创建新线程，但是\r\n            将重复使用以前构造的线程\r\n            可用的。\r\n","java.sql.ResultSet.rowDeleted()":"java.sql.Resultset.Rowdeleted（）\r\n","java.text.BreakIterator.isBoundary(int)":"java.text.breakiterator.isboundary（int）\r\n","Deletes an observer from the set of observers of this object.":"从该对象的观察者组中删除一个观察者。\r\n","java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int, float, int)":"java.util.concurrent.concurrenthashmap.concurrenthashmap（int，float，int）\r\n","Writes an SQL <code>ROWID</code> value to the stream.":"将SQL <code> rowID </code>值写入流。\r\n","Retrieves the value of a JDBC <code>BLOB</code> parameter as a\n            ":"检索JDBC <code> blob </code>参数的值\r\n            \r\n","java.util.Calendar.SHORT_FORMAT":"java.util.calendar.short_format\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given <code>reason</code> and <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>和<code> FailedProperties </code>。\r\n","java.security.spec.EllipticCurve.EllipticCurve(java.security.spec.ECField, java.math.BigInteger, java.math.BigInteger)":"java.security.spec.ellipticcurve.ellipticcurve（java.security.spurity.spec.ecfield，java.math.biginteger，java.math.biginteger）\r\n","Constructs a new <code>Scanner</code> that produces values scanned\n            from the specified source.":"构建一个新的<code>扫描仪</code>，该</code>产生扫描的值\r\n            从指定的来源。\r\n","Constructs an object that implements the <code>NClob</code> interface.":"构造一个实现<code> nclob </code>接口的对象。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>byte</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的<code>字节</code>。\r\n","Returns the language code of this Locale.":"返回此语言环境的语言代码。\r\n","java.text.Collator.equals(java.lang.String, java.lang.String)":"java.text.collat​​or.equals（java.lang.string，java.lang.string）\r\n","java.security.KeyStoreSpi.engineIsCertificateEntry(java.lang.String)":"Java.security.Keystorespi.EngineIscerTificateAteTry（java.lang.string）\r\n","java.security.Provider.forEach(java.util.function.BiConsumer)":"java.security.provider.foreach（java.util.function.biconsumer）\r\n","java.sql.ResultSetMetaData.isCurrency(int)":"java.sql.ResultsetMetadata.iscurrency（int）\r\n","An object that configures how to open or create a file.":"配置如何打开或创建文件的对象。\r\n","Constant for a mode of start or end time specified as UTC.":"对于指定为UTC的开始或结束时间的模式常数。\r\n","if the task is null":"如果任务为null\r\n","Writes the next attribute to the stream as a Java boolean.":"将下一个属性写入流的java boolean。\r\n","java.util.List.get(int)":"java.util.list.get（int）\r\n","A container object which may or may not contain a ":"可能包含或不包含的容器对象\r\n","java.security.cert.CertificateFactory.generateCRLs(java.io.InputStream)":"java.security.cert.certificatefactory.generatecrls（java.io.inputstream）\r\n","Reads the next attribute in the stream and returns it as a <code>String</code>\n            in the Java programming language.":"读取流中的下一个属性，并将其返回为<code> String </code>\r\n            在Java编程语言中。\r\n","Tests whether the file located by this path does not exist.":"测试该路径位置的文件是否不存在。\r\n","Returns the length of the ":"返回长度\r\n","java.nio.file.Paths.get(java.lang.String, java.lang.String)":"java.nio.file.paths.get（java.lang.string，java.lang.string）\r\n","java.sql.ResultSet.updateCharacterStream(java.lang.String, java.io.Reader)":"java.sql.Resultset.updatecharacterstream（java.lang.string，java.io.reader）\r\n","Retrieves a description of the foreign key columns that reference the\n            given table's primary key columns (the foreign keys exported by a\n            table).":"检索引用的外键列的描述\r\n            给定表的主要键列（外国键导出了\r\n            桌子）。\r\n","Assigns the specified long value to each element of the specified array\n            of longs.":"将指定的长度分配给指定数组的每个元素\r\n            渴望。\r\n","Tests whether a file is a regular file with opaque content.":"测试文件是否是具有不透明内容的常规文件。\r\n","A thin wrapper around the <code>java.":"<code> Java周围的薄包装器。\r\n","Cancels the registration with the watch service.":"取消手表服务的注册。\r\n","java.util.Map.containsKey(java.lang.Object)":"java.util.map.containskey（java.lang.Object）\r\n","Creates a new timer task.":"创建一个新的计时器任务。\r\n","Retrieves whether this database supports concatenations between\n            <code>NULL</code> and non-<code>NULL</code> values being\n            <code>NULL</code>.":"检索此数据库是否支持在\r\n            <code> null </code>和non- <code> null </code>值为\r\n            <code> null </code>。\r\n","java.sql.Connection.TRANSACTION_REPEATABLE_READ":"java.sql.connection.transaction_repeatable_read\r\n","java.util.List.retainAll(java.util.Collection)":"java.util.list.RetainAll（Java.util.Collection）\r\n","\n            operations.":"\r\n            操作。\r\n","Regardless of pending count, invokes\n            ":"不管待定数量如何\r\n            \r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","PosixFileAttributes#permissions()\n            permissions":"posixfileattributes＃permissions（）\r\n            权限\r\n","Inserts all of the elements in the specified collection into this\n            list, starting at the specified position.":"将指定集合中的所有元素插入此处\r\n            列表，从指定位置开始。\r\n","java.security.cert.X509CertSelector.setIssuer(java.lang.String)":"java.security.cert.x509certselector.setissuer（java.lang.string）\r\n","java.util.Set.removeAll(java.util.Collection)":"java.util.set.removeall（java.util.Collection）\r\n","java.util.Map.get(java.lang.Object)":"java.util.map.get（java.lang.Object）\r\n","Retrieves whether this database supports keeping cursors open\n            across commits.":"检索该数据库是否支持保持光标打开\r\n            跨提交。\r\n","Date":"日期\r\n","<code>SimpleTimeZone</code> is a concrete subclass of <code>TimeZone</code>\n            that represents a time zone for use with a Gregorian calendar.":"<code> SimpletimeZone </code>是<code> TimeZone </code>的具体子类\r\n            这代表了与Gregorian日历一起使用的时区。\r\n","java.nio.file.attribute.PosixFileAttributes.owner()":"java.nio.file.attribute.posixfileattributes.owner（）\r\n","Constructs a parameter set for mask generation function MGF1\n            as defined in the PKCS #1 standard.":"构建用于掩码生成功能MGF1的参数集\r\n            如PKCS＃1标准所定义。\r\n","Returns the last component of the vector.":"返回向量的最后一个组件。\r\n","java.util.TreeMap.lowerEntry(java.lang.Object)":"java.util.treemap.lowerentry（java.lang.Object）\r\n","java.util.Scanner.hasNextBoolean()":"java.util.scanner.hasnextboolean（）\r\n","if there's no 3-letter country code for this locale.\n":"如果此语言环境没有三个字母的国家代码。\r\n\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.String, java.lang.String)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.string，java.lang.string）\r\n"," field of the\n            extended key usage extension, (OID = 2.":" 领域\r\n            扩展密钥使用扩展，（OID = 2。\r\n","java.util.Scanner.nextShort(int)":"java.util.scanner.nextshort（int）\r\n","java.security.Signature.verify(byte[])":"java.security.signature.verify（byte []）\r\n","java.util.concurrent.ExecutorCompletionService.ExecutorCompletionService(java.util.concurrent.Executor)":"java.util.concurrent.executorcompletionservice.executorcompletionservice（java.util.concurrent.executor）\r\n","if pool is null\n":"如果池为空\r\n\r\n"," describing the\n            result.":" 描述\r\n            结果。\r\n","java.security.cert.X509CRL.verify(java.security.PublicKey, java.lang.String)":"java.security.cert.x509crl.verify（java.security.publickey，java.lang.string）\r\n","java.security.KeyFactory.generatePublic(java.security.spec.KeySpec)":"java.security.keyfactory.generatePublic（java.security.spec.keyspec）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>BIGINT</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> bigint </code>。\r\n","java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrenthashmap.remove（java.lang.object，java.lang.object）\r\n","java.sql.DatabaseMetaData.versionColumnUnknown":"java.sql.databasemetadata.versioncolumnunknown\r\n","java.security.CodeSigner.getTimestamp()":"java.security.codesigner.getTimestamp（）\r\n","Updates the data to be signed or verified, using the specified\n            array of bytes, starting at the specified offset.":"使用指定的\r\n            字节数组，从指定偏移开始。\r\n","This is the exception for invalid key specifications.":"这是无效的关键规格的例外。\r\n","java.util.FormatFlagsConversionMismatchException.getFlags()":"java.util.formatflagsconversionmismatchexception.getFlags（）\r\n","Constructs a new formatter with the specified destination and locale.":"使用指定的目的地和语言环境构建新的格式化器。\r\n","Marks the day of the week part of a date.":"标记日期的一周部分。\r\n","java.security.cert.CertificateRevokedException.CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map)":"java.security.cert.certificaterevokedexception.certificaterevokedexception（java.util.date，java.security.cert.crlreason，javax.security.security.auth.auth.x500.x500.x500.x500principal，java.util.mmap）\r\n","java.util.concurrent.CopyOnWriteArrayList.remove(int)":"java.util.concurrent.copyonwritearraylist.remove（int）\r\n","java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)":"java.util.collections.unmodifiablesortedmap（java.util.sortedmap）\r\n","This constant stands for the number sign.":"这个常数代表数字符号。\r\n","java.util.TreeMap.headMap(java.lang.Object)":"java.util.treemap.headmap（java.lang.Object）\r\n","java.util.concurrent.ArrayBlockingQueue.spliterator()":"java.util.concurrent.ArrayBlockingQueue.spliterator（）\r\n","java.util.BitSet.get(int)":"java.util.bitset.get（int）\r\n","java.security.cert.X509CRLSelector.getIssuers()":"java.security.cert.x509crlselector.getissuers（）\r\n","Returns a view of the portion of this set whose elements are greater\n            than (or equal to, if ":"返回该集合的部分的视图，其元素更大\r\n            比（或等于，如果\r\n","java.sql.ResultSet.updateFloat(int, float)":"java.sql.Resultset.updateFloat（int，float）\r\n","java.sql.SQLNonTransientException.SQLNonTransientException()":"java.sql.sqlnontransientexception.sqlnontransientException（）\r\n","if the certificate is not yet valid.\n":"如果证书尚未有效。\r\n\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlwarning.sqlwarning（java.lang.string，java.lang.string，java.lang.throwable）\r\n","java.sql.SQLWarning.SQLWarning(java.lang.String, java.lang.String, int)":"java.sql.sqlwarning.sqlwarning（java.lang.string，java.lang.string，int）\r\n","java.util.IllegalFormatWidthException":"java.util.ILLEGALFORMATWIDTHEXCEPTION\r\n","java.util.UUID.nameUUIDFromBytes(byte[])":"java.util.uuid.nameuuidfrombytes（byte []）\r\n","Gets the keystore protection parameters for keystores in this\n            domain.":"在此获取密钥库的密钥库保护参数\r\n            领域。\r\n","WatchService":"手表服务\r\n","java.util.ServiceConfigurationError.ServiceConfigurationError(java.lang.String, java.lang.Throwable)":"java.util.serviceconfigurationerror.serviceconfigurationerror（java.lang.string，java.lang.lang.throbable.throwable）\r\n","java.util.Observer":"Java.util.Observer\r\n","Applies the given pattern string to this date format.":"将给定模式字符串应用于此日期格式。\r\n","Retrieves, but does not remove, the last element of this list,\n            or returns ":"检索但没有删除，这是此列表的最后一个元素，\r\n            或返回\r\n","Closes this scanner.":"关闭这个扫描仪。\r\n","java.sql.SQLOutput.writeClob(java.sql.Clob)":"java.sql.sqloutput.writeclob（java.sql.clob）\r\n","A rule expressing how to create a transition.":"表达如何创建过渡的规则。\r\n","Checked exception thrown when a file system operation, intended for a\n            directory, fails because the file is not a directory.":"当文件系统操作（旨在用于a）\r\n            目录，由于文件不是目录而失败。\r\n","Randomly permute the specified list using the specified source of\n            randomness.":"随机使用指定列表使用指定的列表\r\n            随机性。\r\n","Static factory to retrieve a type 4 (pseudo randomly generated) UUID.":"静态工厂以检索4型（随机生成的伪）UUID。\r\n","java.security.InvalidAlgorithmParameterException":"java.security.invalidalgorithmparameterexception\r\n","Returns the next pseudorandom, Gaussian (\"normally\") distributed\n            ":"返回下一个伪随机，高斯（“正常”）分布\r\n            \r\n","java.sql.ResultSet.updateClob(int, java.io.Reader)":"java.sql.Resultset.updateclob（int，java.io.reader）\r\n","java.util.OptionalLong.of(long)":"java.util.optionallong.of（long）\r\n","Normalization Form KD - Compatibility Decomposition.":"标准化形式KD-兼容性分解。\r\n","Hash table and linked list implementation of the ":"哈希表和链接的列表实现\r\n","Field number for <code>get</code> and <code>set</code> indicating\n            whether the <code>HOUR</code> is before or after noon.":"<code> get </code>和<code> set </code>指示的字段编号\r\n            <code>小时</code>是中午之前还是之后。\r\n","Returns the index of the first character of the run\n            with respect to the given ":"返回运行的第一个字符的索引\r\n            关于给定的\r\n","java.util.Properties.setProperty(java.lang.String, java.lang.String)":"java.util.properties.setproperty（java.lang.string，java.lang.string）\r\n"," objects for order.":" 订单的对象。\r\n","java.sql.Connection.TRANSACTION_READ_COMMITTED":"java.sql.connection.transaction_read_committen\r\n","Constructs an empty array deque with an initial capacity\n            sufficient to hold the specified number of elements.":"构建一个具有初始容量的空阵列Deque\r\n            足以容纳指定数量的元素。\r\n","java.util.concurrent.CyclicBarrier.getNumberWaiting()":"java.util.concurrent.cyclarer.getnumberwaiting（）\r\n","java.text.Bidi.createLineBidi(int, int)":"java.text.bidi.createlinebidi（int，int）\r\n","Verifies that this CRL was signed using the\n            private key that corresponds to the given public key.":"验证该CRL是否使用\r\n            与给定的公钥相对应的私钥。\r\n","java.security.KeyStore.getInstance(java.lang.String, java.lang.String)":"java.security.keystore.getinstance（java.lang.string，java.lang.string）\r\n","Indicates whether a column's case matters.":"指示列的情况是否重要。\r\n","Reads an SQL <code>REF</code> value from the stream and returns it as a\n            <code>Ref</code> object in the Java programming language.":"从流中读取SQL <code> ref </code>值，并将其返回为\r\n            <code> ref </code> Java编程语言中的对象。\r\n","java.sql.PreparedStatement.setNull(int, int, java.lang.String)":"java.sql.preparedstatement.setnull（int，int，java.lang.string）\r\n","Reads an SQL <code>ROWID</code> value from the stream and returns it as a\n            <code>RowId</code> object in the Java programming language.":"从流中读取SQL <code> ROWID </code>值，并将其返回为\r\n            <code> ROWID </code> Java编程语言中的对象。\r\n","Calculates the number of times that this tokenizer's\n            <code>nextToken</code> method can be called before it generates an\n            exception.":"计算此令牌的次数\r\n            <code> NextToken </code>方法可以在生成一个\r\n            例外。\r\n","Retrieves the value of the designated JDBC <code>TIMESTAMP</code> parameter as a\n            <code>java.":"检索指定的JDBC <code> timestamp </code>参数为一个\r\n            <code> Java。\r\n","java.util.TreeSet.headSet(java.lang.Object)":"java.util.treeset.headset（java.lang.Object）\r\n","Returns an immutable map containing seven mappings.":"返回一张包含七个映射的不变地图。\r\n","Appends a formatter to the builder which will optionally format/parse.":"将格式化器附加到构建器上，该格式将可选地格式化/解析。\r\n","java.sql.ResultSetMetaData.columnNullableUnknown":"java.sql.ResultsetMetadata.columnnullableUnknown\r\n","java.time.format.DateTimeFormatterBuilder.appendChronologyText(java.time.format.TextStyle)":"java.time.format.datetimeformatterbuilder.appendchronology Text（java.time.format.textstyle）\r\n","java.util.concurrent.ConcurrentSkipListMap.computeIfAbsent(java.lang.Object, java.util.function.Function)":"java.util.concurrent.concurrentskiplistmap.computeifabsent（java.lang.object，java.util.function.function.function）\r\n","java.util.Deque.addFirst(java.lang.Object)":"java.util.deque.addfirst（java.lang.Object）\r\n","java.security.cert.CertStore.getCertStoreParameters()":"java.security.cert.certstore.getcertstoreparameters（）\r\n","LoadStoreParameter":"负载store参数\r\n","java.sql.DatabaseMetaData.nullPlusNonNullIsNull()":"java.sql.databasemetadata.nullplusnonnullisnull（）\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string）\r\n","java.sql.CallableStatement.getBigDecimal(java.lang.String)":"java.sql.callablestatement.getbigdecimal（java.lang.string）\r\n","java.text.Bidi.isRightToLeft()":"java.text.bidi.isrighttoleft（）\r\n","java.nio.file.spi.FileSystemProvider.delete(java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.delete（java.nio.file.path）\r\n","java.nio.file.Path.resolve(java.nio.file.Path)":"java.nio.file.path.resolve（java.nio.file.path）\r\n","Retrieves whether a schema name can be used in a table definition statement.":"检索是否可以在表定义语句中使用模式名称。\r\n","java.time.format.DateTimeFormatter.ofLocalizedDateTime(java.time.format.FormatStyle)":"java.time.format.datetimeformatter.oflocalizeddateTime（java.time.format.formatstyle）\r\n","SHA-1":"SHA-1\r\n","java.security.KeyStore.setCertificateEntry(java.lang.String, java.security.cert.Certificate)":"java.security.keystore.setCertificateEntry（java.lang.string，java.security.cert.certificate）\r\n","java.sql.SQLData.readSQL(java.sql.SQLInput, java.lang.String)":"java.sql.sqldata.readsql（java.sql.sql.sqlinput，java.lang.string）\r\n","java.nio.file.attribute.DosFileAttributeView.setHidden(boolean)":"java.nio.file.attribute.dosfileattributeview.SETHIDDER（布尔值）\r\n","Assigns the specified float value to each element of the specified array\n            of floats.":"将指定的浮点值分配给指定数组的每个元素\r\n            浮子。\r\n",", the conversion does not support a precision, or the value is\n            otherwise unsupported.":"，转换不支持精度，或者值为\r\n            否则不支持。\r\n","Adds the given SQL command to the current list of commmands for this\n            <code>Statement</code> object.":"将给定的SQL命令添加到当前的commmands列表\r\n            <code>语句</code>对象。\r\n"," object and initializes it with\n            the data read from the ":" 对象并用\r\n            数据从\r\n","Runtime exception thrown when a provider of the required type cannot be found.":"当找不到所需类型的提供商时，会引发运行时异常。\r\n","Gets the locale that's used when creating or comparing subformats. -or- Sets the locale to be used when creating or comparing subformats.":"获取创建或比较子形式时使用的语言环境。 - 或设置创建或比较子形式时要使用的语言环境。\r\n","Constructs a <code>BatchUpdateException</code> object initialized with a given\n            <code>updateCounts</code>.":"构建<code> batchupdateException </code>用给定的对象\r\n            <code> UpdateCounts </code>。\r\n","Constructs an UnrecoverableEntryException with the specified detail\n            message, which provides more information about why this exception\n            has been thrown.":"用指定的详细信息构建不可恢复的术语\r\n            消息，提供有关为什么此异常的更多信息\r\n            被扔了。\r\n","Returns the version number for this provider.":"返回此提供商的版本号。\r\n","java.util.AbstractCollection":"Java.util.AbstractCollection\r\n","java.nio.file.Files.probeContentType(java.nio.file.Path)":"java.nio.file.files.probecontenttype（java.nio.file.path）\r\n","java.util.Comparator.thenComparing(java.util.function.Function, java.util.Comparator)":"java.util.comparator.thencomparing（java.util.function.function，java.util.comparator）\r\n","java.security.cert.CRLException.CRLException(java.lang.String)":"java.security.cert.crexception.crexception（java.lang.string）\r\n","java.util.Map.put(java.lang.Object, java.lang.Object)":"java.util.map.put（java.lang.Object，java.lang.object）\r\n","Creates a DecimalFormat using the default pattern and symbols\n            for the default ":"使用默认模式和符号创建一个十字形图\r\n            对于默认值\r\n","java.security.SignatureSpi.appRandom":"java.security.signaturespi.apprandom\r\n","java.sql.CallableStatement.setBlob(java.lang.String, java.io.InputStream)":"java.sql.callablestatement.setBlob（java.lang.string，java.io.inputstream）\r\n","java.nio.file.WatchEvent.count()":"java.nio.file.watchevent.count（）\r\n"," if this list contains no elements.":" 如果此列表不包含任何元素。\r\n","java.sql.SQLOutput.writeBinaryStream(java.io.InputStream)":"java.sql.sqloutput.writebinarystream（java.io.inputstream）\r\n","pathLen":"路径\r\n","Gets the maximum number of rows that a ":"获取最大行数\r\n","java.util.LinkedHashMap.LinkedHashMap(int, float)":"java.util.linkedhashmap.linkedhashmap（int，float）\r\n","Sets the designated parameter to the given input stream.":"将指定参数设置为给定的输入流。\r\n","if the current thread was interrupted\n         while waiting":"如果当前线程中断\r\n         等待\r\n","java.sql.CallableStatement.setBlob(java.lang.String, java.sql.Blob)":"java.sql.callablestatement.setBlob（java.lang.string，java.sql.blob）\r\n"," has already been\n             initialized, or the parameter could not be encoded.\n":" 已经过去了\r\n             初始化或参数无法编码。\r\n\r\n"," is passed to the\n            ":" 被传递给\r\n            \r\n","Updates the designated column with a <code>float </code> value.":"用<code> float </code>值更新指定的列。\r\n","java.sql.DatabaseMetaData.supportsOpenCursorsAcrossRollback()":"java.sql.databasemetadata.supportsopersorsorcroscrossrollback（）\r\n","java.util.StringJoiner.setEmptyValue(java.lang.CharSequence)":"java.util.stringjoiner.setemptyvalue（java.lang.CharSequence）\r\n","java.util.Arrays.equals(byte[], byte[])":"java.util.arrays.equals（byte []，byte []）\r\n","Retrieves and removes the head of this queue, or returns ":"检索并卸下此队列的头部或返回\r\n","java.sql.Array.free()":"java.sql.array.free（）\r\n",",\n            or created by a call to ":"，，，，\r\n            或通过呼叫创建\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>DECIMAL</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code>十进制</code>。\r\n","java.util.Locale.UK":"java.util.locale.uk\r\n","java.util.Set.iterator()":"java.util.set.iterator（）\r\n","Returns the subprime, ":"返回次级\r\n","java.util.List.of(java.lang.Object[])":"java.util.list.of（java.lang.object []）\r\n","A standard set of date periods units.":"一组标准的日期单元。\r\n","Seven-bit ASCII, a.":"七位ASCII，a。\r\n","java.sql.DatabaseMetaData.functionNoTable":"java.sql.databasemetadata.functionnotable\r\n","Returns the crtCoefficient.":"返回CRTCOFEFIED。\r\n","java.sql.ResultSetMetaData.getPrecision(int)":"java.sql.ResultsetMetadata.getPrecision（int）\r\n","java.util.IllegalFormatCodePointException":"Java.util.IllegalFormatCodePointException\r\n","Returns a three-letter abbreviation of this locale's language.":"返回该语言语言的三个字母的缩写。\r\n","java.text.DecimalFormat.setGroupingSize(int)":"java.text.decimalformat.setGroupingsize（int）\r\n","#calendar":"＃日历\r\n","java.sql.ResultSet.getBlob(java.lang.String)":"java.sql.Resultset.getBlob（java.lang.string）\r\n"," and decodes them\n            according to the specified decoding scheme.":" 并解码它们\r\n            根据指定的解码方案。\r\n","Performs the given action for each entry.":"为每个条目执行给定的动作。\r\n","Return the level of the nth logical run in this line.":"在此行中返回n逻辑运行的级别。\r\n"," if this collection contains the specified element.":" 如果此集合包含指定元素。\r\n","java.nio.file.spi.FileSystemProvider.copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption)":"java.nio.file.spi.filesystemprovider.copy（java.nio.file.path，java.nio.file.path，java.nio.file.copyoption）\r\n","expect":"预计\r\n","java.util.Arrays.copyOfRange(short[], int, int)":"java.util.arrays.copyofrange（short []，int，int）\r\n","java.text.DecimalFormatSymbols.getCurrency()":"java.text.decimalformatsymbols.getCurrency（）\r\n"," if this map contains no mapping for the key.":" 如果此地图不包含密钥的映射。\r\n","java.security.acl.Owner.deleteOwner(java.security.Principal, java.security.Principal)":"java.security.acl.owner.deleteowner（java.security.principal，java.security.principal）\r\n","java.util.Arrays.copyOfRange(boolean[], int, int)":"java.util.arrays.copyofrange（boolean []，int，int）\r\n","java.nio.ByteBuffer ByteBuffer":"java.nio.Bytebuffer bytebuffer\r\n","java.sql.CallableStatement.setDate(java.lang.String, java.sql.Date)":"java.sql.callablestatement.setdate（java.lang.string，java.sql.date）\r\n","CompletionStage":"完成阶段\r\n","java.text.ChoiceFormat.getLimits()":"java.text.choiceformat.getLimits（）\r\n","if the task cannot be\n         scheduled for execution\n":"如果任务不能是\r\n         计划执行\r\n\r\n","java.util.concurrent.CountedCompleter.setPendingCount(int)":"java.util.concurrent.countedcompleter.setpendingcount（int）\r\n","\n            (inclusive) to ":"\r\n            （包括）\r\n","java.util.UUID.UUID(long, long)":"java.util.uuid.uuid（长，长）\r\n","java.security.SecureRandomSpi.engineGenerateSeed(int)":"java.security.securerandomspi.enginegenerateseed（int）\r\n","Removes a single instance of the specified element from this\n            collection, if it is present (optional operation).":"从此删除指定元素的单个实例\r\n            收集，如果存在（可选操作）。\r\n","Interface for managing owners of Access Control Lists (ACLs) or ACL\n            configurations.":"访问控制列表（ACL）或ACL的管理所有者的接口\r\n            配置。\r\n","Creates an enum set initialized from the specified collection.":"创建从指定集合初始化的枚举集。\r\n","Returns a set of keys in this property list where\n            the key and its corresponding value are strings,\n            including distinct keys in the default property list if a key\n            of the same name has not already been found from the main\n            properties list.":"在此属性列表中返回一组键\r\n            钥匙及其相应的值是字符串，\r\n            如果键\r\n            同名尚未从主机上找到\r\n            属性列表。\r\n","Gets the ISO 4217 currency code of this currency.":"获取此货币的ISO 4217货币代码。\r\n","java.nio.file.attribute.AclEntryFlag":"java.nio.file.attribute.aclentryflag\r\n","java.sql.Types.DECIMAL":"java.sql.types.decimal\r\n","This class provides a cryptographically strong random number\n            generator (RNG).":"该课程提供一个密码强的随机数\r\n            发电机（RNG）。\r\n","if there is a problem accessing the database.\n":"如果访问数据库存在问题。\r\n\r\n","Constructs a NoSuchProviderException with no detail message.":"构建一个nosuchproviderexception，没有详细信息。\r\n","if an error occurs accessing the data\n":"如果发生错误访问数据\r\n\r\n","Constructs a NotOwnerException.":"构建一种不可思议的感受。\r\n","\n            using the default locale.":"\r\n            使用默认场所。\r\n","java.sql.PreparedStatement.setDate(int, java.sql.Date, java.util.Calendar)":"java.sql.preparedstatement.setdate（int，java.sql.date，java.util.calendar）\r\n","java.security.cert.CertPathValidatorSpi":"java.security.cert.certpathvalidatorspi\r\n","java.security.cert.LDAPCertStoreParameters.LDAPCertStoreParameters(java.lang.String, int)":"java.security.cert.ldapcertstoreparameters.ldapcertstoreparameters（java.lang.string，int）\r\n","java.text.DecimalFormat.format(double, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.decimalformat.format（double，java.lang.stringbuffer，java.text.fieldposition）\r\n","Returns the normal style with the same size.":"以相同的尺寸返回正常样式。\r\n","if a serialization error occurs.":"如果发生序列化误差。\r\n","Tests whether a file exists.":"测试是否存在文件。\r\n","Returns an immutable set containing seven elements.":"返回一个不变的套件，其中包含七个元素。\r\n","Replaces all of the elements of the specified list with the specified\n            element.":"用指定的列表替换指定列表的所有元素\r\n            元素。\r\n","java.util.Collections.copy(java.util.List, java.util.List)":"java.util.collections.copy（java.util.list，java.util.list）\r\n","Reads all the bytes from a file.":"从文件中读取所有字节。\r\n","java.security.cert.TrustAnchor.TrustAnchor(java.security.cert.X509Certificate, byte[])":"java.security.cert.trustanchor.trustanchor（java.security.cert.x509certificate，byte []）\r\n","Reads the target of a symbolic link.":"读取符号链接的目标。\r\n"," indicating a short name used for format.":" 指示用于格式的简短名称。\r\n","join":"加入\r\n","Returns the script for this locale, which should\n            either be the empty string or an ISO 15924 4-letter script\n            code.":"返回此语言环境的脚本，应该\r\n            是空字符串或ISO 15924 4字母脚本\r\n            代码。\r\n","java.sql.CallableStatement.setClob(java.lang.String, java.io.Reader)":"java.sql.callablestatement.setClob（java.lang.string，java.io.reader）\r\n","Returns the elliptic curve that this parameter defines.":"返回该参数定义的椭圆曲线。\r\n","Creates a new map with the same mappings as the given map.":"创建一个与给定地图相同的映射的新地图。\r\n","java.util.TreeMap.TreeMap()":"java.util.treemap.treemap（）\r\n","java.util.Date.getMonth()":"java.util.date.getMonth（）\r\n","Creates a new CountedCompleter with no completer\n            and an initial pending count of zero.":"创建一个没有完成者的新计数收费器\r\n            和最初的待处理计数为零。\r\n","java.util.ListIterator.remove()":"java.util.listiterator.remove（）\r\n","Returns the offset, measured in minutes, for the local time zone\n            relative to UTC that is appropriate for the time represented by\n            this <code>Date</code> object.":"返回以几分钟为单位的偏移量\r\n            相对于适用于代表时间的UTC\r\n            此<code> date </code>对象。\r\n","Inserts the specified element at the end of this deque unless it would\n            violate capacity restrictions.":"除非会在此Deque的末尾插入指定元素\r\n            违反能力限制。\r\n","Returns the JDBC driver's major version number.":"返回JDBC驱动程序的主要版本号。\r\n","Provides default implementations of ":"提供默认实现的\r\n","Compares this attribute with the specified object.":"将此属性与指定对象进行比较。\r\n","java.util.Map.putIfAbsent(java.lang.Object, java.lang.Object)":"java.util.map.putifabsent（java.lang.object，java.lang.object）\r\n","Returns the database's maximum number of concurrent connections.":"返回数据库的最大并发连接数。\r\n","java.util.concurrent.ForkJoinPool.getCommonPoolParallelism()":"java.util.concurrent.forkjoinpool.getCommonpoolalislism（）\r\n","Gets the concurrency mode of this ":"获取此并发模式\r\n","java.util.TreeMap":"java.util.treemap\r\n","Executes the SQL statement in this <code>PreparedStatement</code> object,\n            which must be an SQL Data Manipulation Language (DML) statement, such as <code>INSERT</code>, <code>UPDATE</code> or\n            <code>DELETE</code>; or an SQL statement that returns nothing,\n            such as a DDL statement.":"在此<code>准备</code>对象中执行SQL语句，\r\n            必须是SQL数据操作语言（DML）语句，例如<code> insert </code>，<code> update </code>或\r\n            <code> delete </code>;或一无所有的SQL语句\r\n            例如DDL语句。\r\n","Returns the issuer (issuer distinguished name) value from the\n            CRL as an ":"从返回发行人（发行人杰出名称）值\r\n            crl作为一个\r\n","Retrieves whether this database supports the ANSI92 intermediate SQL grammar supported.":"检索该数据库是否支持支持的ANSI92中级SQL语法。\r\n","java.sql.ResultSet.getBigDecimal(java.lang.String, int)":"java.sql.Resultset.getBigDecimal（java.lang.string，int）\r\n","java.util.Collections.unmodifiableCollection(java.util.Collection)":"java.util.collections.unmodifiablecollection（java.util.collection）\r\n","An interpreter for printf-style format strings.":"printf风格格式字符串的解释器。\r\n","java.util.concurrent.CountedCompleter.getPendingCount()":"java.util.concurrent.countedcompleter.getPendingCount（）\r\n","Returns the provider of this signature object.":"返回此签名对象的提供商。\r\n","java.util.Locale.getISO3Language()":"java.util.locale.getiso3language（）\r\n","java.nio.file.attribute.UserPrincipalNotFoundException":"java.nio.file.attribute.userprincipalnotfoundexception\r\n","bitCount ":"BitCount\r\n","java.sql.ResultSet.updateClob(java.lang.String, java.sql.Clob)":"java.sql.Resultset.updateclob（java.lang.string，java.sql.clob）\r\n","a constant that indicates cache will not be expired.":"表示缓存不会过期的常数。\r\n","Constructs a CertificateExpiredException with the specified detail\n            message.":"构建具有指定详细信息的证书expiredException\r\n            信息。\r\n","Constant for short style pattern.":"恒定样式模式。\r\n","java.security.IdentityScope.setSystemScope(java.security.IdentityScope)":"Java.Security.IdentityScope.Setsystemscope（Java.security.IdentityScope）\r\n","The remove operation is not supported by this implementation of\n            <code>Iterator</code>.":"此实现不支持删除操作\r\n            <code>迭代器</code>。\r\n","Appends an instant using ISO-8601 to the formatter with control over\n            the number of fractional digits.":"使用ISO-8601的瞬间附加到格式化器中，并控制\r\n            分数数字的数量。\r\n","java.sql.RowId.hashCode()":"java.sql.rowid.hashcode（）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a stream of\n            ASCII characters.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为流\r\n            ASCII字符。\r\n","Increases the capacity of and internally reorganizes this\n            hashtable, in order to accommodate and access its entries more\n            efficiently.":"提高并内部重组的能力和重组\r\n            标签，为了容纳和访问其条目\r\n            有效率的。\r\n","java.text.StringCharacterIterator.first()":"java.text.stringcharacterator.first（）\r\n","Creates an elliptic curve with the specified elliptic field\n            ":"使用指定的椭圆场创建椭圆曲线\r\n            \r\n","if the specified key can not be translated by this key\n             factory.\n":"如果指定的密钥无法由此密钥翻译\r\n             工厂。\r\n\r\n"," with no specified detail\n            message.":" 没有指定的细节\r\n            信息。\r\n","A generator of uniform pseudorandom values applicable for use in\n            (among other contexts) isolated parallel computations that may\n            generate subtasks.":"一个适用于用于使用的均匀伪随机值的发电机\r\n            （除其他情况外）可能的孤立平行计算\r\n            生成子任务。\r\n","java.text.NumberFormat.parse(java.lang.String)":"java.text.numberformat.parse（java.lang.string）\r\n","Gets an object for the given key from this resource bundle or one of its parents.":"从此资源捆绑或其父母之一中获取给定键的对象。\r\n","java.util.NavigableSet.tailSet(java.lang.Object)":"java.util.navigableset.tailset（java.lang.Object）\r\n","rp":"RP\r\n","java.text.DecimalFormatSymbols.setCurrency(java.util.Currency)":"java.text.decimalformatsymbols.setCurrency（java.util.currency）\r\n","Returns a default value for Publisher or Subscriber buffering,\n            that may be used in the absence of other constraints.":"返回发布者或订户缓冲的默认值，\r\n            在没有其他约束的情况下可以使用。\r\n","java.security.AlgorithmParameters.init(java.security.spec.AlgorithmParameterSpec)":"java.security.algorithmparameters.init（java.security.spec.algorithmparameterspec）\r\n","java.security.PrivilegedActionException.getException()":"java.security.privilegedActionException.getException（）\r\n","Returns the dateAndTime criterion. -or- Sets the dateAndTime criterion.":"返回DateAndTime标准。 - 或设置DateAndTime标准。\r\n","java.sql.Time.valueOf(java.lang.String)":"java.sql.time.valueof（java.lang.string）\r\n","Characteristic value signifying that encounter order follows a defined\n            sort order.":"特征值表示遇到顺序遵循定义的\r\n            排序。\r\n"," operating mode.":" 操作模式。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a <code>Clob</code> object\n            in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> clob </code>对象\r\n            在Java编程语言中。\r\n","Produces the ordered values of the attributes of the SQL\n            structured type that this <code>Struct</code> object represents.":"产生SQL属性的有序值\r\n            该<code> struct </code>对象代表的结构化类型。\r\n","Updates the designated column with an <code>Object</code> value.":"用<code>对象</code>值更新指定的列。\r\n","Unchecked exception thrown when the precision is a negative value other than\n            ":"当精度是负值以外的负值时，未选中的异常\r\n            \r\n","if an error occurs accessing the database or if the statement\n             produces a ":"如果发生错误访问数据库或语句\r\n             产生a\r\n","java.text.NumberFormat.NumberFormat()":"java.text.numberformat.numberformat（）\r\n","java.util.Calendar.UNDECIMBER":"java.util.calendar.undecimber\r\n","The constant indicating that the current <code>ResultSet</code> object\n            should be closed when calling <code>getMoreResults</code>.":"常数表示当前<code> Resultset </code>对象\r\n            调用<code> getmoreSults </code>时应关闭。\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            ordinal number of the day of the week within the current month.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            本月的一周中的序数。\r\n","java.util.AbstractList.indexOf(java.lang.Object)":"java.util.abstractlist.indexof（java.lang.Object）\r\n","java.security.cert.CertStore.getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.security.Provider)":"java.security.cert.certstore.getinstance（java.lang.string，java.security.cert.cert.certstoreparameters，java.security.provider）\r\n","java.text.DateFormat.getInstance()":"java.text.dateformat.getInstance（）\r\n","A file attribute view that supports reading or updating the owner of a file.":"文件属性视图，该视图支持读取或更新文件的所有者。\r\n","java.util.ArrayDeque.poll()":"java.util.arraydeque.poll（）\r\n","java.security.SignedObject":"java.security.signedObject\r\n","This constant stands for the exponent sign symbol.":"此常数代表指数符号符号。\r\n","Creates a copy of this <code>TimeZone</code>.":"创建此<Code> TimeZone </code>的副本。\r\n"," suitable for\n            presentation to the user in the specified ":" 适合\r\n            在指定的\r\n","DigestException":"DigestException\r\n","java.util.MissingFormatWidthException.getFormatSpecifier()":"java.util.missingformatwidthexception.getFormatsPecifier（）\r\n","Constructs a NoSuchProviderException with the specified detail\n            message.":"用指定的细节构建nosuchproviderexception\r\n            信息。\r\n","Gets the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            an <code>Object</code> in the Java programming language.":"获取当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的<code>对象</code>。\r\n","java.util.TreeSet.TreeSet(java.util.SortedSet)":"java.util.treeset.treeset（java.util.sortedset）\r\n","when the capacity is less than zero or the load factor is\n             less or equal to zero.\n":"当容量小于零或负载系数时\r\n             较少或等于零。\r\n\r\n","java.text.DateFormat.setCalendar(java.util.Calendar)":"java.text.dateformat.setcalendar（java.util.calendar）\r\n","java.security.cert.X509CertSelector.setSerialNumber(java.math.BigInteger)":"java.security.cert.x509certselector.setserialnumber（java.math.biginteger）\r\n","java.text.BreakIterator.getCharacterInstance(java.util.Locale)":"java.text.breakiterator.getCharacterinstance（java.util.locale）\r\n","Constructs a <code>Time</code> object using a milliseconds time value.":"使用毫秒的时间值构造<code>时间</code>对象。\r\n","An object that provides a read-only or updatable <em>view</em> of non-opaque\n            values associated with an object in a filesystem.":"提供非opaque的对象，可读取或更新\r\n            文件系统中与对象关联的值。\r\n","java.security.cert.CertPathValidatorException.getIndex()":"java.security.cert.certpathvalidatorexception.getIndex（）\r\n","Retrieves a description of the access rights for a table's columns.":"检索表列的访问权限的描述。\r\n","Reads an SQL <code>BLOB</code> value from the stream and returns it as a\n            <code>Blob</code> object in the Java programming language.":"从流中读取SQL <code> blob </code>值，并将其返回为\r\n            <code> blob </code> Java编程语言中的对象。\r\n","java.nio.file.FileSystem.close()":"java.nio.file.filesystem.close（）\r\n","Returns an immutable map containing zero mappings.":"返回包含零映射的不变地图。\r\n","java.sql.DatabaseMetaData.supportsIntegrityEnhancementFacility()":"java.sql.databasemetadata.supportsintegrityenhancementfacity（）\r\n","java.util.Calendar.roll(int, int)":"java.util.calendar.roll（int，int）\r\n","The object used for executing a static SQL statement\n            and returning the results it produces.":"用于执行静态SQL语句的对象\r\n            并返回其产生的结果。\r\n","java.util.EventListenerProxy":"Java.util.EventListenerproxy\r\n","java.sql.SQLIntegrityConstraintViolationException":"java.sql.sqlintegrityConstrateContrationVioLationException\r\n","if the provided decomposition rule is not valid. This includes\n            ":"如果提供的分解规则无效。这包括\r\n            \r\n","java.util.Date.setHours(int)":"java.util.date.sethours（int）\r\n","java.util.UUID.randomUUID()":"java.util.uuid.randomuuid（）\r\n","java.security.spec.InvalidParameterSpecException":"java.security.spec.invalidparameterspecexception\r\n","if a database error happens. Particular cases include the\n             cursor not being on the Insert Row or if any columns in the\n             row do not have a value where the column is declared as\n             not-nullable.\n":"如果发生数据库错误。特定情况包括\r\n             光标不在插入行上，或者是否在\r\n             行没有将列声明为\r\n             不可能。\r\n\r\n","Inserts the specified element at the front of this deque if it is\n            possible to do so immediately without violating capacity restrictions,\n            throwing an ":"如果是\r\n            可以立即这样做而不会违反能力限制，\r\n            扔一个\r\n","Returns the maximum value for the given calendar field of this\n            <code>Calendar</code> instance.":"返回给定日历字段的最大值\r\n            <code>日历</code>实例。\r\n","Returns the primeExponentQ.":"返回PrimeExponentQ。\r\n","A thin wrapper around a millisecond value that allows\n            JDBC to identify this as an SQL <code>DATE</code> value.":"围绕毫秒的薄包装器，允许\r\n            JDBC将其标识为SQL <code> date </code>值。\r\n","This class represents the ASN.":"该类代表ASN。\r\n","java.security.Identity.getInfo()":"java.security.Identity.getInfo（）\r\n","if the specified element is null\n         (":"如果指定的元素为null\r\n         （（\r\n","java.util.EnumMap.EnumMap(java.util.EnumMap)":"java.util.enummap.enummap（java.util.enummap）\r\n","FileStore":"文件\r\n","Inserts the specified element at the end of this list.":"将指定元素插入此列表的末尾。\r\n","java.security.spec.RSAPrivateKeySpec":"java.security.spec.rsaprivatekeyspec\r\n","java.sql.CallableStatement.getTimestamp(int, java.util.Calendar)":"java.sql.callablestatement.gettimestamp（int，java.util.calendar）\r\n","Watchable watchable":"可观察的\r\n"," if all tasks have completed following shut down.":" 如果所有任务都在关闭后完成。\r\n","Returns the first coefficient ":"返回第一个系数\r\n","Returns the public key of this certificate.":"返回此证书的公钥。\r\n","java.util.concurrent.ForkJoinTask.quietlyInvoke()":"java.util.concurrent.forkjointask.quietlyinvoke（）\r\n","java.sql.DriverManager.getDriver(java.lang.String)":"java.sql.drivermanager.getdriver（java.lang.string）\r\n","Retrieves whether columns in this database may be defined as non-nullable.":"检索该数据库中的列是否可以定义为不可删除。\r\n","Invoked for a file that could not be visited.":"调用无法访问的文件。\r\n","java.time.format.DateTimeFormatter.withLocale(java.util.Locale)":"java.time.format.datetimeformatter.withlocale（java.util.locale）\r\n","#NARROW_FORMAT":"#narrow_format\r\n","java.text.DecimalFormatSymbols.getDecimalSeparator()":"java.text.decimalformatsymbols.getDecimalSeparator（）\r\n","Creates an unnamed savepoint in the current transaction and\n            returns the new <code>Savepoint</code> object that represents it.":"在当前交易中创建一个未命名的保存点，\r\n            返回代表它的新的<code> savepoint </code>对象。\r\n","java.security.PKCS12Attribute.getValue()":"java.security.pkcs12attribute.getValue（）\r\n"," upon success and throwing an\n            ":" 成功并抛出\r\n            \r\n","Returns a null-friendly comparator that considers ":"返回一个无效的比较器，该比较器认为\r\n","Retrieves the value of a JDBC <code>CLOB</code> parameter as a\n            <code>java.":"检索JDBC <code> clob </code>参数为一个\r\n            <code> Java。\r\n","java.security.cert.CertSelector.clone()":"java.security.cert.certselector.clone（）\r\n","Returns the number of elements in this list.":"返回此列表中的元素数量。\r\n","java.security.AlgorithmParameters.getParameterSpec(java.lang.Class)":"java.security.algorithmparameters.getParameterspec（java.lang.class）\r\n","A private key.":"私钥。\r\n"," if the process of termination has\n            commenced but not yet completed.":" 如果终止过程有\r\n            开始但尚未完成。\r\n","if we can not access resources":"如果我们无法访问资源\r\n","it the iterator does not support removing elements from\n                this ":"它的迭代器不支持从中删除元素\r\n                这个\r\n","java.sql.DatabaseMetaData.getIndexInfo(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)":"java.sql.databasemetadata.getIndexinfo（java.lang.string，java.lang.string，java.lang.string，布尔，布尔，布尔值）\r\n","Constructs a new instance with the specified message.":"用指定消息构造新实例。\r\n","Pops an element from the stack represented by this list.":"从列表表示的堆栈中弹出一个元素。\r\n","java.util.concurrent.BlockingDeque.putLast(java.lang.Object)":"java.util.concurrent.blockingdeque.putlast（java.lang.object）\r\n","java.text.DateFormatSymbols.getInstance()":"java.text.dateformatsymbols.getInstance（）\r\n","java.sql.DatabaseMetaData.columnNoNulls":"java.sql.databasemetadata.columnnonulls\r\n"," containing the elements in the\n            specified priority queue.":" 包含元素\r\n            指定优先队列。\r\n","Combines the state of another ":"结合另一个状态\r\n","java.util.Deque.contains(java.lang.Object)":"java.util.deque.contains（java.lang.Object）\r\n","java.security.cert.CertSelector.match(java.security.cert.Certificate)":"java.security.cert.certselector.match（java.security.cert.certificate）\r\n","java.text.DecimalFormat.applyLocalizedPattern(java.lang.String)":"java.text.decimalformat.applylocalizedpattern（java.lang.string）\r\n","java.security.cert.CertPath.getType()":"java.security.cert.certpath.gettype（）\r\n","java.util.Arrays.parallelSort(short[])":"java.util.arrays.parallelsort（short []）\r\n","Writes an SQL <code>ARRAY</code> value to the stream.":"将SQL <code>数组</code>值写入流。\r\n","Returns a key-value mapping associated with the least\n key in this map, or ":"返回至少关联的键值映射\r\n 此地图中的键或\r\n","java.util.ArrayDeque.element()":"java.util.arraydeque.element（）\r\n","java.util.SortedMap.subMap(java.lang.Object, java.lang.Object)":"java.util.sortedmap.submap（java.lang.object，java.lang.object）\r\n","java.time.format.TextStyle.asStandalone()":"java.time.format.textstyle.asastandalone（）\r\n"," seed.":" 种子。\r\n","java.util.Arrays.setAll(double[], java.util.function.IntToDoubleFunction)":"java.util.arrays.setall（double []，java.util.function.inttodoublefunction）\r\n","java.util.TreeSet.ceiling(java.lang.Object)":"java.util.treeset.ceiling（java.lang.Object）\r\n","Constructs a <code>SQLWarning</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqlwarning </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Compares this UUID with the specified UUID.":"将此UUID与指定的UUID进行比较。\r\n","Queue#offer":"队列＃要约\r\n","Compares this transition to another based on the transition instant.":"根据过渡瞬间将此过渡与另一个过渡进行比较。\r\n","if the required algorithm is not available.":"如果所需的算法不可用。\r\n","Gets the formats used for the values passed into\n            <code>format</code> methods or returned from <code>parse</code>\n            methods.":"获取将值传递到的格式\r\n            <code>格式</code>方法或从<code>解析</code>返回\r\n            方法。\r\n","java.util.Arrays.equals(float[], float[])":"java.util.arrays.equals（float []，float []）\r\n","Returns the tag for this task.":"返回此任务的标签。\r\n","java.util.concurrent.BlockingQueue.take()":"java.util.concurrent.blockingqueue.take（）\r\n","Returns the public key of the subject (target) of the certification\n            path, including any inherited public key parameters if applicable.":"返回认证主题（目标）的公共密钥\r\n            路径，包括任何继承的公共密钥参数，如果适用。\r\n","bound":"边界\r\n","java.util.SortedMap.comparator()":"java.util.sortedmap.comparator（）\r\n","java.util.List.spliterator()":"java.util.list.spliterator（）\r\n","java.security.MessageDigest.update(java.nio.ByteBuffer)":"java.security.messagedigest.update（java.nio.bytebuffer）\r\n","Indicates that type of the parameter or column is unknown.":"指示参数或列的类型未知。\r\n","DateFormat.Field":"dateformat.field\r\n","Creates a new service loader for the given service type, using the\n            extension class loader.":"使用\r\n            扩展类加载程序。\r\n","Builder to create date-time formatters.":"建造者创建日期时间格式。\r\n","\n             is null.":"\r\n             一片空白。\r\n","java.util.HashSet.HashSet(int)":"java.util.hashset.hashset（int）\r\n","Returns the name of the authority that signed the certificate's\n            revocation status information.":"返回签署证书的机构的名称\r\n            撤销状态信息。\r\n","Returns the last boundary preceding the specified character offset.":"返回指定字符偏移之前的最后一个边界。\r\n","Create a new ParsePosition with the given initial index.":"使用给定的初始索引创建一个新的parseposition。\r\n"," that decodes using the\n            <a href=\"#basic\">Basic</a> type base64 encoding scheme.":" 使用\r\n            <a href=\"#basic\">基本</a>键入基本64编码方案。\r\n","java.util.concurrent.CountedCompleter.addToPendingCount(int)":"java.util.concurrent.countedcompleter.addtopendendcount（int）\r\n","java.security.interfaces.RSAPublicKey.serialVersionUID":"java.security.interfaces.rsapublickey.serialversionuid\r\n","Clears the current parameter values immediately.":"立即清除当前参数值。\r\n","Returns the greatest element in this set strictly less than the\n            given element, or ":"严格返回此组中最大的元素\r\n            给定元素，或\r\n","Returns an array of all locales for which the\n            <code>get*Instance</code> methods of this class can return\n            localized instances.":"返回所有位置的数组\r\n            <code>获取*实例</code>此类方法可以返回\r\n            本地化实例。\r\n","Format":"格式\r\n","java.util.concurrent.BlockingQueue.put(java.lang.Object)":"java.util.concurrent.blockingqueue.put（java.lang.Object）\r\n","Tell whether date/time parsing is to be lenient. -or- Specify whether or not date/time parsing is to be lenient.":"告诉日期/时间解析是否宽大。 - 或 - 指定日期/时间解析是否宽大。\r\n","Returns the day of the month represented by this ":"返回本月代表的一天\r\n","java.security.cert.CertSelector":"java.security.cert.certselector\r\n","java.util.Collections.checkedQueue(java.util.Queue, java.lang.Class)":"Java.util.Collections.Checkedqueue（Java.util.Queue，Java.lang.class）\r\n","Retrieves whether this database treats mixed case quoted SQL identifiers as\n            case sensitive and as a result stores them in mixed case.":"检索该数据库是否将混合案例视为SQL标识符为\r\n            病例敏感，结果将它们存储在混合情况下。\r\n","java.util.BitSet.and(java.util.BitSet)":"java.util.bitset.和（java.util.bitset）\r\n","java.util.concurrent.CountedCompleter.getRawResult()":"java.util.concurrent.countedcompleter.getrawresult（）\r\n","Creates a symbolic link to a target ":"创建与目标的符号链接\r\n","Gets a string array for the given key from this resource bundle or one of its parents.":"从此资源捆绑包或其父母之一中获取给定键的字符串阵列。\r\n","Constructs a <code>BatchUpdateException</code> object initialized with a given\n            <code>reason</code> and <code>updateCounts</code>.":"构建<code> batchupdateException </code>用给定的对象\r\n            <code>原因</code>和<code> UpdateCounts </code>。\r\n","java.sql.DatabaseMetaData.procedureNullable":"java.sql.databasemetadata.procedurenullaullable\r\n","Returns the result that would be returned by ":"返回将返回的结果\r\n","java.util.NavigableMap.firstEntry()":"java.util.navigablemap.firstentry（）\r\n","CRL":"CRL\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            era, e.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            时代，e。\r\n","java.util.concurrent.BlockingDeque.push(java.lang.Object)":"java.util.concurrent.blockingdeque.push（java.lang.object）\r\n","java.util.Set.spliterator()":"java.util.set.spliterator（）\r\n","The <code>value</code> field specifies the current value of\n            the property, based on a combination of the information\n            supplied to the method <code>getPropertyInfo</code>, the\n            Java environment, and the driver-supplied default values.":"<code> value </code>字段指定的当前值\r\n            该物业，基于信息的组合\r\n            提供给方法<code> getPropertyinfo </code>，\r\n            Java环境和驱动程序支持的默认值。\r\n","The node value associated with this UUID.":"与此uuid关联的节点值。\r\n","Compare this CollationKey to the target CollationKey.":"比较此Complation Keyke与目标Colation Keyke。\r\n","java.nio.file.attribute.GroupPrincipal":"java.nio.file.attribute.groupprincipal\r\n","java.security.cert.X509CertSelector.getPolicy()":"java.security.cert.x509certselector.getPolicy（）\r\n","Returns the expected policies for the next certificate to be valid.":"返回有效的下一个证书的预期政策。\r\n","if there is a database error.":"如果有数据库错误。\r\n","Accepts a function that extracts a ":"接受提取a的函数\r\n","java.util.concurrent.CopyOnWriteArrayList.spliterator()":"java.util.concurrent.copyonwritearraylist.spliterator（）\r\n","Writes all or part of the given <code>byte</code> array to the\n            <code>BLOB</code> value that this <code>Blob</code> object represents\n            and returns the number of bytes written.":"将给定<code>字节的全部或部分写入\r\n            <code> blob </code>值此<code> blob </code>对象代表\r\n            并返回编写的字节数。\r\n","if the specified timeout elapses":"如果指定的超时列表\r\n","java.sql.CallableStatement.setNClob(java.lang.String, java.io.Reader)":"java.sql.callablestatement.setnclob（java.lang.string，java.io.reader）\r\n","if the specified pattern match fails.\n":"如果指定的模式匹配失败。\r\n\r\n","java.text.DateFormat.DATE_FIELD":"java.text.dateformat.date_field\r\n","java.text.StringCharacterIterator.next()":"java.text.StringCharacterator.next（）\r\n"," that will trip when the\n            given number of parties (threads) are waiting upon it, and\n            does not perform a predefined action when the barrier is tripped.":" 那将在\r\n            给定的当事方（线程）正在等待，并且\r\n            障碍物绊倒时不会执行预定义的动作。\r\n","Retrieves a copy of the specified substring\n            in the <code>CLOB</code> value\n            designated by this <code>Clob</code> object.":"检索指定子字符串的副本\r\n            在<code> clob </code>值中\r\n            由此<code> clob </code>对象指定。\r\n","java.security.cert.CertPathBuilder.getProvider()":"java.security.cert.certpathbuilder.getProvider（）\r\n","java.sql.DatabaseMetaData.bestRowSession":"java.sql.databasemetadata.bestrowsession\r\n","Retrieves, but does not remove, the last element of this deque,\n or returns ":"检索但不会删除该deque的最后一个元素，\r\n 或返回\r\n"," class implements a growable array of\n            objects.":" 班级实现一个可生长的阵列\r\n            对象。\r\n","java.nio.file.StandardWatchEventKinds.OVERFLOW":"java.nio.file.standardwatcheventkinds.overflow\r\n","if the specified parameters cannot be used to build the path\n             with this builder.\n":"如果指定参数不能用于构建路径\r\n             与这个建筑商。\r\n\r\n","Retrieves whether the last OUT parameter read had the value of\n            SQL <code>NULL</code>.":"检索最后一个参数read是否具有\r\n            sql <code> null </code>。\r\n","java.sql.ResultSet.updateBlob(java.lang.String, java.io.InputStream, long)":"java.sql.Resultset.updateBlob（java.lang.string，java.io.inputstream，long）\r\n","java.util.Objects.requireNonNullElse(java.lang.Object, java.lang.Object)":"java.util.objects.requirenonnullelse（java.lang.object，java.lang.object）\r\n","java.security.acl.Acl.addEntry(java.security.Principal, java.security.acl.AclEntry)":"java.security.acl.acl.Addentry（Java.security.principal，java.security.acl.aclentry）\r\n","java.security.cert.X509CRLSelector.addIssuerName(byte[])":"java.security.cert.x509crlselector.addissuername（byte []）\r\n"," if this task\n is not known to have been completed.":" 如果这个任务\r\n 尚不知道已经完成。\r\n","CertPathValidator":"certPathvalidator\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object，java.object， java.lang.Object）\r\n"," into this one.":" 进入这个。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>TIMESTAMP</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <Code> Timestamp </code>。\r\n","if the invoking ":"如果是调用\r\n","java.sql.CallableStatement.getNString(java.lang.String)":"java.sql.callablestatement.getnstring（java.lang.string）\r\n","java.util.TimeZone.hasSameRules(java.util.TimeZone)":"java.util.timezone.hassamerules（java.util.timezone）\r\n","This immutable class defines an elliptic curve (EC) prime\n            finite field.":"这个不变的类定义了椭圆曲线（EC）Prime\r\n            有限领域。\r\n","java.sql.Statement.executeUpdate(java.lang.String, int)":"java.sql.statement.executeupdate（java.lang.string，int）\r\n","java.sql.CallableStatement.getTime(java.lang.String, java.util.Calendar)":"java.sql.callablestatement.getTime（java.lang.string，java.util.calendar）\r\n","java.sql.CallableStatement.getNCharacterStream(java.lang.String)":"java.sql.callablestatement.getncharacterstream（java.lang.string）\r\n","java.util.OptionalLong.orElseThrow(java.util.function.Supplier)":"java.util.optionallong.orelsethrow（java.util.function.supplier）\r\n","java.util.concurrent.CompletableFuture.join()":"java.util.concurrent.completablefuture.join（）\r\n","Exception thrown when a thread tries to wait upon a barrier that is\n            in a broken state, or which enters the broken state while the thread\n            is waiting.":"当线程试图等待屏障时，异常抛出\r\n            处于断裂状态，或者在线程时进入破碎状态\r\n            在等待。\r\n","Determines whether or not to allow access to the guarded object\n            ":"确定是否允许访问受保护的对象\r\n            \r\n","java.security.acl.Acl.entries()":"java.security.acl.acl.entries（）\r\n"," field indicating the\n            twelfth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的十二个月在格里高利和朱利安日历中。\r\n","java.sql.ResultSet.updateLong(java.lang.String, long)":"java.sql.Resultset.updatelong（java.lang.string，long）\r\n","estimateSize()":"估计（）\r\n"," produced by\n this instance will have.":" 由。。。生产\r\n 此实例将具有。\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, java.lang.String, int, int[])":"java.sql.batchupdateexception.batchupdateexception（java.lang.string，java.lang.string，int，int []）\r\n","Service service":"服务服务\r\n"," with\n the ":" 和\r\n 这\r\n","java.util.OptionalDouble.ifPresent(java.util.function.DoubleConsumer)":"java.util.optionaldouble.ifpresent（java.util.function.dubleconsumer）\r\n","java.util.Vector.lastIndexOf(java.lang.Object, int)":"java.util.vector.lastindexof（java.lang.Object，int）\r\n","Resets this watch key.":"重置此手表键。\r\n","java.util.EnumSet.noneOf(java.lang.Class)":"java.util.enumset.noneof（java.lang.class）\r\n","\n            to calendar field values in ":"\r\n            到日历字段值\r\n","java.security.MessageDigest.reset()":"java.security.messagedigest.reset（）\r\n","java.util.ArrayDeque.removeLast()":"java.util.arraydeque.removelast（）\r\n","Updates the designated column with a <code>null</code> value.":"用<code> null </code>值更新指定的列。\r\n","Date#parse":"日期＃解析\r\n"," methods to the given executor, but\n            not any other methods that might otherwise be accessible using\n            casts.":" 给定执行人的方法，但是\r\n            没有其他任何其他方法可以使用\r\n            演员。\r\n","Check whether the policy has granted a Permission to a ProtectionDomain.":"检查该政策是否已授予保护区的许可。\r\n","java.sql.ResultSetMetaData.getColumnType(int)":"java.sql.ResultsetMetadata.getColumnType（int）\r\n","This class specifies the set of parameters used with the DSA algorithm.":"此类指定DSA算法使用的一组参数。\r\n","java.util.Locale.getCountry()":"java.util.locale.getcountry（）\r\n","java.nio.file.attribute.FileTime.compareTo(java.nio.file.attribute.FileTime)":"java.nio.file.attribute.filetime.compareto（java.nio.file.attribute.filetime）\r\n","Returns the maximum value for the given calendar field of this\n            <code>GregorianCalendar</code> instance.":"返回给定日历字段的最大值\r\n            <code> GregorianCalendar </code>实例。\r\n","Sets each bit from the specified ":"从指定的\r\n","java.sql.ResultSet.updateBlob(java.lang.String, java.sql.Blob)":"java.sql.Resultset.updateBlob（java.lang.string，java.sql.blob）\r\n","java.util.Calendar.computeTime()":"java.util.calendar.computetime（）\r\n","java.security.KeyStore.setKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])":"java.security.keystore.setKeyentry（java.lang.string，java.security.key，char []，java.security.cert.cert.certificate []）\r\n","Initializes a new charset provider.":"初始化新的Charset提供商。\r\n","java.security.cert.CertificateFactory.generateCRL(java.io.InputStream)":"java.security.cert.certificatefactory.generatecrl（java.io.inputstream）\r\n","Returns the least element in this set strictly greater than the\n            given element, or ":"返回此组中最小的元素严格大于\r\n            给定元素，或\r\n","Assigns the specified int value to each element of the specified\n            range of the specified array of ints.":"将指定的int值分配给指定的每个元素\r\n            指定的INT阵列的范围。\r\n","Gets the default number of fraction digits used with this currency.":"获取此货币使用的默认分数数字。\r\n","java.util.Arrays.fill(byte[], int, int, byte)":"java.util.arrays.fill（byte []，int，int，byte）\r\n","java.sql.Savepoint":"java.sql.savepoint\r\n","if a database error happens.\n":"如果发生数据库错误。\r\n\r\n"," with the\n            specified detail message and cause.":" 与\r\n            指定的详细信息和原因。\r\n","java.security.cert.X509CRLSelector.getCertificateChecking()":"java.security.cert.x509crlselector.getCertificateChecking（）\r\n","Indicates that the column definitely allows <code>NULL</code> values.":"指示该列绝对允许<code> null </code>值。\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.String, java.lang.String, int)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.string，java.lang.string，int）\r\n","other.get()":"other.get（）\r\n"," type and is initialized with the specified\n            parameters.":" 类型并用指定的\r\n            参数。\r\n","java.util.Arrays.binarySearch(float[], float)":"java.util.arrays.binarysearch（float []，float）\r\n","java.util.Stack.pop()":"java.util.stack.pop（）\r\n","Returns the lifetime for which a RowId object remains valid if this data\n source supports the SQL ROWID type":"返回如果此数据，ROWID对象保持有效的寿命\r\n 来源支持SQL ROWID类型\r\n","java.util.Random.nextDouble()":"java.util.random.nextdouble（）\r\n","Returns an array containing all of the elements in this collection;\n            the runtime type of the returned array is that of the specified array.":"返回包含此集合中所有元素的数组；\r\n            返回的数组的运行时类型是指定数组的运行时类型。\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java，java。 lang.Object，java.lang.Object，java.lang.Object）\r\n","Removes the specified permission from this ACL entry.":"从此ACL条目中删除指定的许可。\r\n","Returns the number of elements in this set.":"返回此集合中的元素数量。\r\n"," has been closed.\n":" 已被关闭。\r\n\r\n","Constructs a CRLException with no detail message.":"构建一个没有详细信息的曲折感。\r\n","Returns a list of table types supported by the database.":"返回数据库支持的表类型列表。\r\n","java.text.DateFormatSymbols.setEras(java.lang.String[])":"java.text.dateformatsymbols.seteras（java.lang.string []）\r\n","Returns a new CompletionStage that, when this and the other\n            given stage both complete normally, executes the given action\n            using the supplied executor.":"返回一个新的完整舞台，当\r\n            给定阶段正常完成，执行给定的动作\r\n            使用提供的执行人。\r\n","java.util.Objects.deepEquals(java.lang.Object, java.lang.Object)":"java.util.objects.deepequals（java.lang.object，java.lang.object）\r\n"," can contain when\n produced from this statement.":" 可以包含何时\r\n 从这个说法产生。\r\n","java.sql.CallableStatement.getLong(int)":"java.sql.callablestatement.getlong（int）\r\n","java.util.Locale.FRANCE":"java.util.locale.france\r\n","java.util.Properties.stringPropertyNames()":"java.util.properties.stringpropertynames（）\r\n","java.security.InvalidParameterException.InvalidParameterException(java.lang.String)":"java.security.invalidparameterexception.invalidparameterexception（java.lang.string）\r\n","if the supplied time string is not in JDBC escape format.\n":"如果提供的时间字符串不采用JDBC逃生格式。\r\n\r\n","java.sql.ResultSet.getBoolean(java.lang.String)":"java.sql.Resultset.getBoolean（java.lang.string）\r\n","java.security.cert.CertPathBuilderSpi.engineBuild(java.security.cert.CertPathParameters)":"java.security.cert.certpathbuilderspi.enginebuild（java.security.cert.cert.certpathparameters）\r\n","java.sql.Clob.position(java.lang.String, long)":"Java.sql.Clob.Position（Java.lang.String，长）\r\n","java.util.Calendar.NARROW_FORMAT":"java.util.calendar.narrow_format\r\n","Returns the base name of this bundle, if known, or ":"返回此捆绑包的基本名称，如果已知或\r\n","Returns the maximum length of a cursor name for this database.":"返回此数据库的光标名称的最大长度。\r\n","This class consists exclusively of static methods that operate on sets of\n            ":"该类仅由在一组集合中运行的静态方法组成\r\n            \r\n","Creates an enum set with the same element type as the specified enum\n            set, initially containing all the elements of this type that are\n            ":"创建与指定枚举相同元素类型的枚举集\r\n            设置，最初包含此类型的所有元素\r\n            \r\n","java.sql.DatabaseMetaData.supportsExpressionsInOrderBy()":"java.sql.databasemetadata.supportsexpressionsinorderby（）\r\n","java.nio.file.FileSystems.newFileSystem(java.net.URI, java.util.Map, java.lang.ClassLoader)":"java.nio.file.filesystems.newfilesystem（java.net.uri，java.util.map，java.lang.classloader）\r\n","java.nio.file.Path.toFile()":"java.nio.file.path.tofile（）\r\n"," if cancelled, or ":" 如果被取消，或\r\n","if this instance is not of type ":"如果此实例不是类型\r\n","The main computation performed by this task.":"此任务执行的主要计算。\r\n","java.security.Provider.getService(java.lang.String, java.lang.String)":"java.security.provider.getService（java.lang.string，java.lang.string）\r\n","Constructs a new identity scope with the specified name.":"用指定名称构建新的身份范围。\r\n","java.sql.Statement.executeUpdate(java.lang.String)":"java.sql.statement.executeupdate（java.lang.string）\r\n","States the type of ":"说明\r\n","java.util.concurrent.CompletionStage.runAfterBoth(java.util.concurrent.CompletionStage, java.lang.Runnable)":"java.util.concurrent.completionstage.runafterboth（java.util.concurrent.completionstage，java.lang.runnable）\r\n","java.sql.Clob.truncate(long)":"java.sql.clob.truncate（long）\r\n","ParameterMetaData":"parametermetadata\r\n","nextUpdate":"NextUpdate\r\n","textStart":"textstart\r\n","Returns the certificates ":"返回证书\r\n","Removes all of this collection's elements that are also contained in the\n            specified collection (optional operation).":"删除了所有该集合的元素，这些元素也包含在\r\n            指定收集（可选操作）。\r\n","Returns a shallow copy of this list.":"返回此列表的浅副本。\r\n","Obtains an instance of ":"获得了一个实例\r\n","CallbackHandlerProtection":"CallbackHandlerProtection\r\n","java.security.PKCS12Attribute.PKCS12Attribute(java.lang.String, java.lang.String)":"java.security.pkcs12attribute.pkcs12attribute（java.lang.string，java.lang.string）\r\n","Gets month strings.":"获取月字符串。\r\n","java.security.GuardedObject.getObject()":"java.security.guardedobject.getObject（）\r\n"," if the two specified arrays of Objects are\n            ":" 如果两个指定的对象数组是\r\n            \r\n","java.sql.Statement.clearWarnings()":"java.sql.statement.clearwarnings（）\r\n","java.util.Calendar.LONG_FORMAT":"java.util.calendar.long_format\r\n","java.time.format.DateTimeFormatterBuilder.parseCaseSensitive()":"java.time.format.datetimeformatterbuilder.parsecasesististive（）\r\n","Parameters used as input for the Collection ":"参数用作集合的输入\r\n","java.sql.ResultSet.getCharacterStream(java.lang.String)":"java.sql.Resultset.getCharacterstream（java.lang.string）\r\n","java.util.Timer.Timer()":"java.util.timer.timer（）\r\n","Permission to list the entries of a directory (equal to ":"许可列出目录的条目（等于\r\n","Constructs a <code>SQLFeatureNotSupportedException</code> object.":"构造<code> sqlfeaturenotsupportedException </code>对象。\r\n","java.security.cert.LDAPCertStoreParameters.getPort()":"java.security.cert.ldapcertstoreparameters.getport（）\r\n","The constant indicating that a\n            parameter will not allow <code>NULL</code> values.":"常数表明\r\n            参数将不允许<code> null </code>值。\r\n"," if this map uses the Comparable\n            natural ordering of its keys.":" 如果此地图使用可比的\r\n            其钥匙的自然顺序。\r\n","Returns an unmodifiable view of the specified map.":"返回指定地图的无可置改的视图。\r\n","java.nio.file.StandardOpenOption":"java.nio.file.standardopenoption\r\n"," from this random\n            number generator's sequence.":" 从这个随机\r\n            数字生成器的序列。\r\n","Returns the list of extensions of X.509 certificates that this ":"返回X.509证书的扩展名列表\r\n","java.sql.DatabaseMetaData.supportsTransactions()":"java.sql.databasemetadata.supportstransactions（）\r\n"," is greater than the last\n             index + 1 in ":" 比最后一个\r\n             索引 + 1\r\n","java.nio.file.InvalidPathException":"java.nio.file.invalidpathexception\r\n","java.sql.SQLOutput.writeBoolean(boolean)":"java.sql.sqloutput.writeboolean（boolean）\r\n","java.util.Date.setSeconds(int)":"java.util.date.setseconds（int）\r\n","java.sql.DatabaseMetaData.ownUpdatesAreVisible(int)":"java.sql.databasemetadata.ownupdatesarevisible（int）\r\n","Adds a set of parameters to this <code>PreparedStatement</code>\n            object's batch of commands.":"将一组参数添加到此<code>准备序列</code>\r\n            对象的命令。\r\n","Returns an immutable map, mapping only the specified key to the\n            specified value.":"返回不变的地图，仅将指定键映射到\r\n            指定值。\r\n","Returns a string that identifies the algorithm, independent of\n            implementation details.":"返回一个识别算法的字符串，独立于\r\n            实施细节。\r\n","Retrieves the value of the designated JDBC <code>ARRAY</code> parameter as an\n            ":"检索指定的JDBC <code>数组的值</code>参数为一个\r\n            \r\n","java.security.Signature.update(byte)":"java.security.signature.update（字节）\r\n","a database error occurred\n":"发生数据库错误\r\n\r\n","java.util.HashMap.entrySet()":"java.util.hashmap.entryset（）\r\n","Gets the Gregorian Calendar change date. -or- Sets the <code>GregorianCalendar</code> change date.":"获取Gregorian日历更改日期。 - 或 - 设置<code> gregoriancalendar </code>更改日期。\r\n","java.util.concurrent.ForkJoinWorkerThread.onStart()":"java.util.concurrent.forkjoinworkerthread.onstart（）\r\n","Returns the name of the most-trusted CA in RFC 2253 ":"返回RFC 2253中最受信任的CA的名称\r\n","java.sql.SQLOutput.writeStruct(java.sql.Struct)":"java.sql.sqloutput.writestruct（java.sql.struct）\r\n","java.text.DateFormatSymbols.getEras()":"java.text.dateformatsymbols.geteras（）\r\n","Constructs a <code>BatchUpdateException</code> object initialized with a\n            given <code>cause</code> and <code>updateCounts</code>.":"构造<code> batchupdateException </code>用一个初始化的对象\r\n            给定<code>原因</code>和<code> UpdateCounts </code>。\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a long value in the specified radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n            \r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","An object that may be registered with a watch service so that it can be\n            <em>watched</em> for changes and events.":"可以用手表服务注册的对象，以便它可以\r\n            <em>观看</em>的变化和事件。\r\n","A linear collection that supports element insertion and removal at\n            both ends.":"一个线性集合，支持元素插入和去除\r\n            两端。\r\n","java.util.concurrent.ConcurrentHashMap.putIfAbsent(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrenthashmap.putifabsent（java.lang.object，java.lang.object）\r\n","java.util.Deque.removeLastOccurrence(java.lang.Object)":"java.util.deque.removelastoccurrence（java.lang.Object）\r\n","java.util.Collections.binarySearch(java.util.List, java.lang.Object, java.util.Comparator)":"java.util.collections.binarysearch（java.util.list，java.lang.object，java.util.comparator）\r\n","Returns this Collator's strength property. -or- Sets this Collator's strength property.":"返回该碰撞者的力量。 - 或设置该碰撞者的实力属性。\r\n","java.util.ConcurrentModificationException.ConcurrentModificationException(java.lang.Throwable)":"java.util.concurrentmodificationException.concurrentModificationException（java.lang.throwable）\r\n","Returns the date and time when the timestamp was generated.":"返回时间戳生成的日期和时间。\r\n"," with the specified alias is requested.":" 要求指定别名。\r\n","issuer":"发行人\r\n","java.sql.ResultSet.updateClob(java.lang.String, java.io.Reader)":"java.sql.Resultset.updateclob（java.lang.string，java.io.reader）\r\n","Constructs a TooManyListenersException with the specified detail message.":"用指定的详细信息构造ToomanylistenersExection。\r\n","Initializes the key pair generator for a given modulus length\n            (instead of parameters), and an optional SecureRandom bit source.":"初始化给定模量长度的密钥对发生器\r\n            （而不是参数）和一个可选的Secuererandom位源。\r\n","Forcibly causes subsequent invocations of method ":"强行导致随后的方法调用\r\n","java.sql.DatabaseMetaData.othersDeletesAreVisible(int)":"java.sql.databasemetadata.othersdeletesarevisible（int）\r\n","java.util.LinkedList.pollLast()":"java.util.linkedlist.polllast（）\r\n","java.util.Arrays.sort(long[])":"java.util.arrays.sort（long []）\r\n","Updates the designated column with a <code>java.":"用<code> Java更新指定的列。\r\n","java.util.Arrays.parallelPrefix(double[], java.util.function.DoubleBinaryOperator)":"java.util.arrays.parallelprefix（double []，java.util.function.doublebinaryoperator）\r\n","java.util.Date.clone()":"java.util.date.clone（）\r\n","java.util.EnumMap":"java.util.enummap\r\n","Creates a new directory in the default temporary-file directory, using\n            the given prefix to generate its name.":"使用默认临时文件目录中创建一个新目录\r\n            给定的前缀生成其名称。\r\n","java.util.concurrent.CountedCompleter.onExceptionalCompletion(java.lang.Throwable, java.util.concurrent.CountedCompleter)":"Java.util.concurrent.CountedCompleter.OnexceptionalCompletion（Java.lang.throwable，Java.util.concurrent.CountedCompleter）\r\n","java.util.ResourceBundle.ResourceBundle()":"java.util.resourcebundle.resourcebundle（）\r\n","java.security.spec.KeySpec":"java.security.spec.keyspec\r\n","java.nio.file.attribute.BasicFileAttributes.size()":"java.nio.file.attribute.basicfileattributes.size（）\r\n"," to access the contents of a file as a\n            file system.":" 访问文件的内容作为\r\n            文件系统。\r\n","if no provider can be found.":"如果找不到提供商。\r\n","java.sql.DatabaseMetaData.supportsResultSetConcurrency(int, int)":"java.sql.databasemetadata.supportsresultsetcolrency（int，int）\r\n","java.sql.Date.valueOf(java.lang.String)":"java.sql.date.valueof（java.lang.string）\r\n","Reads the next attribute in the stream and returns it as a stream of ASCII characters.":"读取流中的下一个属性，并将其返回为ASCII字符流。\r\n","Creates a signer with the specified identity name.":"使用指定的身份名称创建签名者。\r\n","java.text.CharacterIterator.clone()":"java.text.characteriter.clone（）\r\n","action.run()":"action.run（）\r\n","Retrieves the value of a JDBC <code>TINYINT</code> parameter as a <code>byte</code>\n            in the Java programming language.":"检索JDBC <code> tinyint </code>参数为<code> byte </code>的值\r\n            在Java编程语言中。\r\n"," is not initialized, or if the entry\n             can not be deleted.\n":" 未经初始化，或者输入\r\n             无法删除。\r\n\r\n","java.util.Spliterators.iterator(java.util.Spliterator)":"java.util.spliterators.iterator（java.util.spliterator）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            minute within the hour.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            小时内分钟。\r\n"," of the most-trusted\n            CAs. -or- Sets the ":" 最受信任的\r\n            CAS。 - 或设置\r\n","Scans the next token of the input into a boolean value and returns\n            that value.":"将输入的下一个令牌扫描为布尔值并返回\r\n            那个价值。\r\n","otherPrimeInfo":"其他promimeinfo\r\n","java.util.concurrent.BlockingDeque.removeLastOccurrence(java.lang.Object)":"java.util.concurrent.blockingdeque.removelastoccurrence（java.lang.object）\r\n"," if there is no such key.":" 如果没有这样的钥匙。\r\n","java.util.concurrent.CountedCompleter.compareAndSetPendingCount(int, int)":"java.util.concurrent.countedcompleter.compareandsetpendingCount（int，int）\r\n","java.util.Locale.filterTags(java.util.List, java.util.Collection)":"java.util.locale.filtertags（java.util.list，java.util.collection）\r\n","java.sql.SQLData":"java.sql.sqldata\r\n"," instance is not initialized\n             properly.\n":" 实例未初始化\r\n             适当地。\r\n\r\n","java.nio.file.Files.createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createdirectory（java.nio.file.path，java.nio.file.tribute.fileattribute）\r\n","This class implements the Unicode Bidirectional Algorithm.":"该类实现Unicode双向算法。\r\n","java.nio.file.Path.toRealPath(java.nio.file.LinkOption)":"java.nio.file.path.torealpath（java.nio.file.linkoption）\r\n","java.sql.Types.REAL":"java.sql.types.real\r\n","Returns a lexicographic-order comparator with another comparator.":"返回带有另一个比较器的词典阶订单比较器。\r\n","java.util.FormatFlagsConversionMismatchException":"java.util.formatflagsconversionmismatchException\r\n","Constructs a <code>SQLNonTransientException</code> object\n             with a given  <code>cause</code>.":"构造<code> sqlnontransientException </code>对象\r\n             使用给定的<code>原因</code>。\r\n","Constructs an InvalidKeySpecException with no detail message.":"构建无效的keyspecexception，没有详细信息。\r\n","java.util.SimpleTimeZone.STANDARD_TIME":"java.util.simpletimezone.standard_time\r\n","Retrieves whether a catalog name can be used in a procedure call statement.":"检索目录名称是否可以在过程调用语句中使用。\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","java.nio.file.FileStore.supportsFileAttributeView(java.lang.Class)":"java.nio.file.file.filestore.supportsfileattributeview（java.lang.class）\r\n","java.nio.file.attribute.AclEntry.type()":"java.nio.file.attribute.aclentry.type（）\r\n","java.sql.DriverManager.getLogStream()":"java.sql.drivermanager.getLogstream（）\r\n","This class specifies an RSA public key.":"该课程指定RSA公钥。\r\n","Sets era strings.":"设定时代弦。\r\n","Retrieves whether <code>NULL</code> values are sorted at the end regardless of\n            sort order.":"检索<code> null </code>值是否在最后排序\r\n            排序。\r\n","Returns true if this scanner has another token in its input.":"如果此扫描仪的输入中有另一个令牌，则返回true。\r\n","java.nio.file.FileStore.FileStore()":"java.nio.file.file.filestore.filestore（）\r\n","Generates an integer containing the user-specified number of\n            pseudo-random bits (right justified, with leading zeros).":"生成一个包含用户指定数量的整数\r\n            伪随机位（正确的零零）。\r\n","CertificateParsingException":"证书parsingException\r\n","java.util.concurrent.CopyOnWriteArraySet.CopyOnWriteArraySet()":"java.util.concurrent.copyonwritearrayset.copyonwritearrayset（）\r\n","java.util.Arrays.copyOf(boolean[], int)":"java.util.arrays.copyof（boolean []，int）\r\n","Swaps the elements at the specified positions in the specified list.":"在指定列表中的指定位置交换元素。\r\n","java.util.Calendar.before(java.lang.Object)":"java.util.calendar.be（java.lang.Object）\r\n","Returns the lowest maximum value for the given calendar field\n            of this <code>GregorianCalendar</code> instance.":"返回给定日历字段的最低值\r\n            此<code> gregoriancalendar </code>实例。\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>JAVA_OBJECT</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code> Java_Object </code>。\r\n","Creates a new timer whose associated thread has the specified name.":"创建一个新计时器，其关联线程具有指定的名称。\r\n","java.util.concurrent.AbstractExecutorService.submit(java.lang.Runnable)":"java.util.concurrent.abstractexecutorservice.submit（java.lang.runnable）\r\n","Returns an iterator over the elements in this list in proper sequence.":"以适当的顺序在此列表中的元素上返回迭代器。\r\n","java.sql.DatabaseMetaData.supportsSchemasInProcedureCalls()":"java.sql.databasemetadata.supportsschemasinprocedurecalls（）\r\n","zoneStrings == null":"Zonestrings == null\r\n","java.sql.PreparedStatement.setBoolean(int, boolean)":"java.sql.preparedstatement.setboolean（int，boolean）\r\n"," that additionally supports blocking operations that wait\n            for the deque to become non-empty when retrieving an element, and wait for\n            space to become available in the deque when storing an element.":" 另外支持阻止操作等待\r\n            让Deque在取回元素时变得非空，并等待\r\n            存储元素时，在Deque中可用的空间。\r\n","Returns the next token if it matches the specified pattern.":"返回下一个令牌，如果它与指定的模式匹配。\r\n","Indicates that type of the column is unknown.":"表示列的类型未知。\r\n","Removes an identity from this identity scope.":"从此身份范围中删除身份。\r\n"," if this CompletableFuture completed\n            exceptionally, in any way.":" 如果完成此完整图\r\n            异常以任何方式。\r\n","java.sql.ParameterMetaData.getParameterTypeName(int)":"java.sql.parametermetadata.getParameTypename（int）\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.util.Map)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.util.map）\r\n","java.time.format.DateTimeFormatterBuilder.toFormatter(java.util.Locale)":"java.time.format.datetimeformatterbuilder.toformatter（java.util.locale）\r\n","java.security.cert.CertificateFactorySpi":"java.security.cert.certificatefactoryspi\r\n"," instance with the specified type\n and encoded data.":" 带有指定类型的实例\r\n 和编码数据。\r\n","\"X.509\"":"“ X.509”\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>LONGVARBINARY</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> longvarbinary </code>。\r\n","Copies all of the mappings from the specified map to this map\n            (optional operation).":"将所有映射从指定地图复制到此地图\r\n            （可选操作）。\r\n","java.sql.CallableStatement.setBoolean(java.lang.String, boolean)":"java.sql.callablestatement.setboolean（java.lang.string，boolean）\r\n","java.security.cert.CertStoreParameters.clone()":"java.security.cert.certstoreparameters.clone（）\r\n"," of this\n            vector to be the specified object.":" 这个的\r\n            向量为指定对象。\r\n","java.security.InvalidAlgorithmParameterException.InvalidAlgorithmParameterException(java.lang.Throwable)":"java.security.invalidalgorithmparameterexception.invalidalgorithmparameterexception（java.lang.throwable）\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String, java.lang.String)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalidauthorizationspecexception（java.lang.string，java.lang.string）\r\n","Executes the SQL query in this <code>PreparedStatement</code> object\n            and returns the <code>ResultSet</code> object generated by the query.":"在此<code>准备</code>对象中执行SQL查询\r\n            并返回查询生成的<code> resultset </code>对象。\r\n","java.util.Set.hashCode()":"java.util.set.hashcode（）\r\n","java.security.interfaces.DSAParams.getP()":"java.security.interfaces.dsaparams.getp（）\r\n","Retrieves a description of the given catalog's stored procedure parameter\n            and result columns.":"检索给定目录的存储过程参数的描述\r\n            和结果列。\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String, java.lang.Throwable)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string，java.lang.thrang.throwable）\r\n","Checks if this field represents a component of a date.":"检查此字段是否代表日期的组成部分。\r\n","Indicates that the best row identifier is NOT a pseudo column.":"指示最好的行标识符不是伪列。\r\n","java.sql.DriverPropertyInfo.name":"java.sql.driverpropertyinfo.name\r\n","java.util.Collections.emptyListIterator()":"java.util.collections.emptylistiterator（）\r\n","Returns the event count.":"返回事件计数。\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>cause</code>.":"用给定的\r\n            <code>原因</code>。\r\n","java.text.StringCharacterIterator.StringCharacterIterator(java.lang.String, int)":"java.text.StringCharacterator.StringCharacteratorator（Java.lang.String，int）\r\n","java.util.Objects.requireNonNullElseGet(java.lang.Object, java.util.function.Supplier)":"java.util.objects.requirenonnullseget（java.lang.object，java.util.function.supplier）\r\n","Removes from the list the last element that was returned by ":"从列表中删除最后一个由\r\n","Returns the position where the error was found.":"返回发现错误的位置。\r\n","The constant indicating that the\n            nullability of a parameter is unknown.":"常数表明\r\n            参数的无效性是未知的。\r\n","java.sql.CallableStatement.getInt(int)":"java.sql.callablestatement.getint（int）\r\n","java.security.cert.X509CertSelector.setIssuer(byte[])":"java.security.cert.x509certselector.setissuer（byte []）\r\n","java.util.TreeSet.descendingIterator()":"java.util.treeset.descgenditerator（）\r\n","java.security.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"java.security.keypairgeneratorspi.initialize（java.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","java.util.ArrayDeque.getFirst()":"java.util.arraydeque.getFirst（）\r\n","Defines the <em>standard</em> event kinds.":"定义<em>标准</em>事件类型。\r\n","KeyFactory":"关键因素\r\n","Formats the object using the provided ":"使用提供的对象格式化对象\r\n","Returns the depth of this node in the policy tree.":"返回策略树中此节点的深度。\r\n","Transforms the String into a series of bits that can be compared bitwise\n            to other CollationKeys.":"将字符串转换为一系列可以比较的位\r\n            到其他分组。\r\n","java.util.IntSummaryStatistics.getCount()":"java.util.intsummarystatistics.getCount（）\r\n","java.util.Collections.synchronizedSet(java.util.Set)":"java.util.collections.synchronizedset（java.util.set）\r\n","java.util.Scanner.Scanner(java.lang.Readable)":"Java.util.Scanner.Scanner（Java.lang.able）\r\n","Retrieves a stream to be used to write the XML value that this SQLXML instance represents.":"检索用于编写此SQLXML实例代表的XML值的流。\r\n","java.sql.Statement.CLOSE_CURRENT_RESULT":"java.sql.statement.close_current_result\r\n"," is not one of SHORT, MEDIUM, LONG, FULL, or\n             DEFAULT.":" 不是短，中，长，完整或\r\n             默认。\r\n","\n                doesn't support ":"\r\n                不支持\r\n","java.text.CollationElementIterator":"java.text.Collat​​ionElementiterator\r\n","java.sql.DatabaseMetaData.procedureColumnUnknown":"java.sql.databasemetadata.procedurecolumnunknown\r\n","Removes the last occurrence of the specified element from this deque.":"从该deque中删除指定元素的最后一次出现。\r\n",",\n default is TTL_NO_EXPIRATION_CONTROL.":"，，，，\r\n 默认值为ttl_no_expiration_control。\r\n","java.nio.file.spi.FileSystemProvider.getFileSystem(java.net.URI)":"java.nio.file.spi.filesystemprovider.getfilesystem（java.net.uri）\r\n","java.sql.SQLException.SQLException(java.lang.String, java.lang.String, int)":"java.sql.sqlexception.sqlexception（java.lang.string，java.lang.string，int）\r\n","java.util.Spliterator.estimateSize()":"java.util.spliterator.stimatesize（）\r\n","java.util.Random.next(int)":"java.util.random.next（int）\r\n","Gets the identifier for the domain configuration data.":"获取域配置数据的标识符。\r\n","Returns the public point W.":"返回公共点W.\r\n"," field indicating\n            Thursday.":" 指示字段\r\n            周四。\r\n","Parses text from a string to produce an object.":"从字符串中解析文本以产生对象。\r\n","java.text.DateFormat.format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.dateformat.format（java.util.date，java.lang.stringbuffer，java.text.fieldposition）\r\n","if the object to look for isn't of the correct type.":"如果要寻找的对象不是正确的类型。\r\n","java.security.cert.CertPathValidator":"java.security.cert.certpathvalidator\r\n","java.security.acl.AclNotFoundException.AclNotFoundException()":"java.security.acl.aclnotfoundexception.aclnotfoundexception（）\r\n","Gets this <code>Timestamp</code> object's <code>nanos</code> value. -or- Sets this <code>Timestamp</code> object's <code>nanos</code> field\n            to the given value.":"获取此<code> timestamp </code>对象的<code> nanos </code>值。 - 或 - 设置此<code> timestamp </code>对象的<code> nanos </code>字段\r\n            给定值。\r\n","java.util.BitSet.get(int, int)":"java.util.bitset.get（int，int）\r\n","Trims the capacity of this ":"修剪这个能力\r\n","Retrieves the value of a JDBC <code>TIMESTAMP</code> parameter as a\n            <code>java.":"检索JDBC <code> TIMESTAMP </code>参数作为一个\r\n            <code> Java。\r\n","java.util.Calendar.SUNDAY":"java.util.calendar.sunday\r\n","java.text.BreakIterator.next()":"java.text.breakiterator.next（）\r\n","Constructs an instance of this class with the specified illegal code\n            point as defined by ":"使用指定的非法代码构建此类实例\r\n            定义的点\r\n","java.util.Deque":"java.util.deque\r\n","Returns an array containing all installed providers that satisfy the\n            specified* selection criteria, or null if no such providers have been\n            installed.":"返回一个包含满足所有已安装的提供商的数组\r\n            指定的*选择标准，如果没有这样的提供者，则无效\r\n            安装。\r\n","For the columns <code>UPDATE_RULE</code>\n            and <code>DELETE_RULE</code>, indicates that\n            if the primary key has been imported, it cannot be updated or deleted.":"对于列<code> update_rule </code>\r\n            和<code> delete_rule </code>，指示\r\n            如果主要键已导入，则无法更新或删除。\r\n","java.text.Collator.setStrength(int)":"java.text.collat​​or.setstrength（int）\r\n","Signals that an error has been reached unexpectedly\n            while parsing.":"信号表明已经意外遇到了错误\r\n            解析。\r\n"," if this queue is empty.":" 如果此队列为空。\r\n","java.security.KeyStore.entryInstanceOf(java.lang.String, java.lang.Class)":"java.security.keystore.entryinstanceof（java.lang.string，java.lang.class）\r\n","type, algorithm, format or encoded":"类型，算法，格式或编码\r\n","java.util.concurrent.CopyOnWriteArrayList.addAllAbsent(java.util.Collection)":"java.util.concurrent.copyonwritearraylist.addallabsent（java.util.collection）\r\n","Gets the name that is suitable for displaying this currency for\n            the default ":"获取适合显示此货币的名称\r\n            默认值\r\n","Performs the given action for each remaining element, sequentially in\n            the current thread, until all elements have been processed or the action\n            throws an exception.":"对每个剩余元素执行给定的动作，依次在\r\n            当前线程，直到处理所有元素或操作\r\n            引发例外。\r\n","java.util.concurrent.ArrayBlockingQueue":"java.util.concurrent.ArrayBlockingQueue\r\n","Retrieves the value of the designated JDBC <code>CLOB</code> parameter as a\n            <code>java.":"检索指定的JDBC <code> clob </code>参数为一个\r\n            <code> Java。\r\n","java.text.NumberFormat.getCurrencyInstance(java.util.Locale)":"java.text.numberformat.getCurrencyInstance（java.util.locale）\r\n","java.sql.DatabaseMetaData.functionColumnResult":"java.sql.databasemetadata.FunctionColumnResult\r\n"," instance\n            with the specified initial capacity and a default load factor (0.":" 实例\r\n            具有指定的初始容量和默认负载因子（0。\r\n","java.util.OptionalInt.isPresent()":"java.util.optionalint.ispresent（）\r\n"," if there\n            is no such key.":" 如果有\r\n            不是这样的关键。\r\n","The <code> TooManyListenersException </code> Exception is used as part of\n            the Java Event model to annotate and implement a unicast special case of\n            a multicast Event Source.":"<code> toomanylistenersexception </code>异常被用作\r\n            Java事件模型注释和实施单播特殊情况\r\n            多播事件源。\r\n","An exception  thrown as a <code>DataTruncation</code> exception\n            (on writes) or reported as a\n            <code>DataTruncation</code> warning (on reads)\n             when a data values is unexpectedly truncated for reasons other than its having\n             execeeded <code>MaxFieldSize</code>.":"作为<code> dataTruncation </code>异常的例外异常\r\n            （写）或报告为\r\n            <code> datatruncation </code>警告（在读取）\r\n             当数据值出于出乎意料的截断时，其原因除了\r\n             执行<code> maxFieldSize </code>。\r\n"," field indicating\n            Monday.":" 指示字段\r\n            周一。\r\n"," if the two specified arrays of doubles are\n            ":" 如果两个指定的双阵列是\r\n            \r\n","Chinese Remainder Theorem":"中国剩余定理\r\n","java.security.cert.CertPathParameters":"java.security.cert.certpathparameters\r\n","java.security.KeyPairGeneratorSpi":"java.security.keypairgeneratorspi\r\n","java.security.cert.X509CRLEntry.getEncoded()":"java.security.cert.x509crlentry.getencoded（）\r\n","java.util.NavigableMap.headMap(java.lang.Object, boolean)":"java.util.navigablemap.headmap（java.lang.Object，boolean）\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.text.StringCharacterIterator.clone()":"java.text.StringCharacterator.clone（）\r\n","java.sql.DatabaseMetaData.attributeNoNulls":"java.sql.databasemetadata.attributenonulls\r\n","java.sql.SQLWarning.getNextWarning()":"java.sql.sqlwarning.getnextwarning（）\r\n","java.text.CollationElementIterator.setText(java.text.CharacterIterator)":"java.text.Collat​​ionElementiter.setText（Java.text.CharacterIterator）\r\n","java.security.cert.CertificateFactory.CertificateFactory(java.security.cert.CertificateFactorySpi, java.security.Provider, java.lang.String)":"java.security.cert.certificatefactory.certificatefactory（java.security.cert.certificatefactoryspi，java.security.provider，java.lang.lang.string）\r\n","Constructs a new formatter with the specified file and charset.":"用指定的文件和charset构建一个新的格式化器。\r\n"," is greater than the last index +\n             1 in ":" 大于最后一个索引 +\r\n             1英寸\r\n","if the specified provider is not available":"如果指定的提供商不可用\r\n","BasicContraints":"基本控制\r\n","Clear this loader's provider cache so that all providers will be\n            reloaded.":"清除该装载机的提供商缓存，以便所有提供商将是\r\n            重新加载。\r\n","java.security.cert.CollectionCertStoreParameters.CollectionCertStoreParameters()":"java.security.cert.collectioncertstoreparameters.collectioncertstoreparameters（）\r\n","java.util.ServiceLoader.load(java.lang.Class)":"java.util.serviceloader.load（java.lang.class）\r\n","\n            for the given subrange of the array.":"\r\n            对于阵列的给定子量。\r\n","Returns an AlgorithmParameterGenerator object for generating\n            a set of parameters to be used with the specified algorithm.":"返回用于生成的算法帕克莱米计对象\r\n            一组应与指定算法一起使用的参数。\r\n","java.util.Arrays.toString(byte[])":"java.util.arrays.tostring（byte []）\r\n","This class represents an observable object, or \"data\"\n            in the model-view paradigm.":"该类代表可观察的对象或“数据”\r\n            在模型视图范式中。\r\n","Returns the port number of the LDAP server.":"返回LDAP服务器的端口号。\r\n","java.util.Vector.elements()":"java.util.vector.elements（）\r\n"," and returns\n            the second argument otherwise.":" 并返回\r\n            第二个参数。\r\n","Gets the character that represents the positive sign.":"获取代表积极信号的角色。\r\n","java.nio.file.Files.readAttributes(java.nio.file.Path, java.lang.Class, java.nio.file.LinkOption)":"java.nio.file.files.readattributes（java.nio.file.path，java.lang.class，java.nio.file.linkoption）\r\n","java.security.Provider":"java.security.provider\r\n","Gets localized date-time pattern characters. -or- Sets localized date-time pattern characters.":"获取本地化的日期时间模式字符。 - 或设置局部日期时间模式字符。\r\n","java.text.ChoiceFormat.applyPattern(java.lang.String)":"java.text.choiceformat.applypattern（java.lang.string）\r\n","Writes the next attribute to the stream as a Java int.":"将下一个属性作为Java int写入流。\r\n","java.util.Collections.singletonList(java.lang.Object)":"java.util.collections.singletonlist（java.lang.Object）\r\n","java.sql.ResultSet.getTimestamp(int, java.util.Calendar)":"java.sql.Resultset.getTimestamp（int，java.util.calendar）\r\n","java.security.cert.Certificate.verify(java.security.PublicKey, java.lang.String)":"java.security.cert.certificate.verify（java.security.publickey，java.lang.string）\r\n","java.util.Comparator.comparing(java.util.function.Function, java.util.Comparator)":"java.util.comparator.comparing（java.util.function.function，java.util.comparator）\r\n","Retrieves whether this database supports some form of outer join.":"检索该数据库是否支持某种形式的外部连接。\r\n","\n            interfaces.":"\r\n            接口。\r\n","java.util.PriorityQueue.PriorityQueue(java.util.Comparator)":"java.util.priorityqueue.priorityqueue（java.util.comparator）\r\n","java.text.NumberFormat.getMaximumFractionDigits()":"java.text.numberformat.getMaximumFractionDigits（）\r\n","java.util.Formatter.Formatter(java.lang.Appendable)":"java.util.formatter.formatter（java.lang.appendable）\r\n","if the creation of the alternate object fails.\n":"如果创建替代对象失败。\r\n\r\n","Creates an empty list.":"创建一个空列表。\r\n","An input stream that contains a stream of values representing an\n            instance of an SQL structured type or an SQL distinct type.":"一个包含代表一个值流的输入流\r\n            SQL结构化类型或SQL不同类型的实例。\r\n","Sets this scanner's delimiting pattern to the specified pattern.":"将此扫描仪的划界模式设置为指定模式。\r\n","java.security.UnresolvedPermission":"java.security.unresolvedpermission\r\n","java.security.cert.X509CertSelector.setSubject(byte[])":"java.security.cert.x509certselector.setsubject（byte []）\r\n","ResourceBundle.getBundle(...)":"ResourceBundle.GetBundle（...）\r\n","Returns the least key strictly greater than the given key, or\n            ":"严格返回至少密钥，大于给定键，或者\r\n            \r\n","Removes the specified element from this set if it is present\n            (optional operation).":"如果存在，则从该集合中删除指定的元素\r\n            （可选操作）。\r\n","java.util.List.hashCode()":"java.util.list.hashcode（）\r\n","Creates a KeyStore object of the given type, and encapsulates the given\n            provider implementation (SPI object) in it.":"创建给定类型的密钥库对象，并封装给给定的对象\r\n            提供者实现（SPI对象）。\r\n","java.nio.file.Files.createLink(java.nio.file.Path, java.nio.file.Path)":"java.nio.file.files.createlink（java.nio.file.path，java.nio.file.path）\r\n","java.util.AbstractCollection.toArray(java.lang.Object[])":"java.util.abstractcollection.toarray（java.lang.object []）\r\n","Collection#add":"集合＃添加\r\n","java.text.DecimalFormatSymbols.setPerMill(char)":"java.text.decimalformatsymbols.setpermill（char）\r\n","Returns a hash code based on the \"deep contents\" of the specified\n            array.":"根据指定的“深度内容”返回哈希代码\r\n            大批。\r\n","java.util.AbstractList.modCount":"java.util.abstractlist.modcount\r\n","An unbounded concurrent Deque deque based on linked nodes.":"基于链接节点的无限并发deque Deque。\r\n","java.security.spec.EncodedKeySpec":"java.security.spec.encodedkeyspec\r\n","java.util.Scanner.hasNextFloat()":"java.util.scanner.hasnextfloat（）\r\n","a utility method to answer the name of a resource bundle according to\n the given base name and locale":"一种实用方法来回答资源捆绑的名称\r\n 给定的基本名称和语言环境\r\n","java.util.concurrent.FutureTask":"java.util.concurrent.futuretask\r\n","java.text.DecimalFormatSymbols.setPercent(char)":"java.text.decimalformatsymbols.setpercent（char）\r\n","Unchecked exception thrown when an unknown conversion is given.":"当给出未知的转换时，未选中的例外。\r\n"," in the runtime environment.":" 在运行时环境中。\r\n","total ordering":"总订购\r\n","java.security.Signature.Signature(java.lang.String)":"java.security.signature.signature（java.lang.string）\r\n","java.util.ListIterator":"java.util.listiterator\r\n","For the column <code>UPDATE_RULE</code>, indicates that\n            a primary key may not be updated if it has been imported by\n            another table as a foreign key.":"对于列<code> update_rule </code>，指示\r\n            如果主要密钥已导入，则可能不会更新\r\n            另一个表作为外键。\r\n","java.sql.ResultSetMetaData.getScale(int)":"java.sql.ResultsetMetadata.getScale（int）\r\n","Application-specified source of randomness.":"应用指定的随机性来源。\r\n","Attempts to find the next occurrence of a pattern constructed from the\n            specified string, ignoring delimiters.":"试图找到下一个从该模式中构建的模式\r\n            指定的字符串，忽略定界符。\r\n","#getDisplayNames(int, int, Locale)\n            getDisplayNames":"#getDisplayNames（int，int，locale）\r\n            getDisplayNames\r\n","java.util.Calendar.MARCH":"java.util.calendar.march\r\n","Returns the trusted certificate.":"返回受信任的证书。\r\n","java.util.concurrent.Executors.newSingleThreadScheduledExecutor()":"java.util.concurrent.executors.newsinglethreadscheduledexecutor（）\r\n","java.util.Vector.Vector(int)":"Java.util.Vector.Vector（INT）\r\n",", and\n            returns a ":"， 和\r\n            返回a\r\n"," if this pool has been shut down.":" 如果这个池已关闭。\r\n","This exception is thrown by the AccessController to indicate\n            that a requested access (to a critical system resource such as the\n            file system or the network) is denied.":"该例外是由AccessController抛出的\r\n            请求访问（到关键系统资源，例如\r\n            文件系统或网络）被拒绝。\r\n","This class specifies the set of parameters used to generate an RSA\n            key pair.":"此类指定用于生成RSA的参数集\r\n            钥匙对。\r\n","Attempts to locate a driver that understands the given URL.":"试图找到了解给定URL的驱动程序。\r\n","java.nio.file.ClosedFileSystemException":"java.nio.file.closedfilesystemexception\r\n","Checks the existence, and optionally the accessibility, of a file.":"检查文件的存在以及可选的可访问性。\r\n","Assigns the specified Object reference to each element of the specified\n            array of Objects.":"将指定的对象引用分配给指定的每个元素\r\n            对象数组。\r\n","java.util.Observable.notifyObservers(java.lang.Object)":"java.util.observable.notifyObservers（java.lang.object）\r\n","java.security.AlgorithmConstraints.permits(java.util.Set, java.lang.String, java.security.Key, java.security.AlgorithmParameters)":"java.security.algorithmconstraints.permits（java.util.set，java.lang.string，java.security.key，java.security.algorithmparameters）\r\n","java.util.ResourceBundle.containsKey(java.lang.String)":"java.util.resourcebundle.containskey（java.lang.string）\r\n","java.util.Set.contains(java.lang.Object)":"java.util.set.contains（java.lang.Object）\r\n","java.security.spec.InvalidKeySpecException.InvalidKeySpecException(java.lang.Throwable)":"java.security.spec.invalidkeyspecexception.invalidkeyspecexception（java.lang.throwable）\r\n","Assigns the given key to the given alias, protecting it with the given\n            password.":"将给定的键分配给给定的别名，用给定的\r\n            密码。\r\n","A constant indicating that transactions are not supported.":"一个常数，表明不支持交易。\r\n","issuerUniqueID":"IssueruniqueID\r\n","java.sql.PreparedStatement.setDouble(int, double)":"java.sql.preparedstatement.setDouble（int，double）\r\n","java.nio.file.Files.walkFileTree(java.nio.file.Path, java.util.Set, int, java.nio.file.FileVisitor)":"java.nio.file.files.walkfiletree（java.nio.file.path，java.util.set，int，java.nio.file.filevisitor）\r\n","Retrieves, but does not remove, the head of the queue represented by\n            this deque.":"检索但不删除，队列的头由\r\n            这个Deque。\r\n","java.util.concurrent.BrokenBarrierException.BrokenBarrierException()":"java.util.concurrent.brokenbarrierexception.brokenbarrierexception（）\r\n","Returns a Long if possible (e.":"如果可能的话，返回很长的时间（e。\r\n","java.util.LinkedHashSet.LinkedHashSet(int)":"java.util.linkedhashset.linkedhashset（int）\r\n","NoSuchAlgorithmException":"Nosuchalgorithmexception\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， Java.lang.Object，Java.lang.Object，Java.lang.Object）\r\n","java.security.cert.CRLSelector.match(java.security.cert.CRL)":"java.security.cert.crlselector.match（java.security.cert.crl）\r\n","java.sql.ParameterMetaData":"java.sql.parametermetadata\r\n","java.sql.Statement.setCursorName(java.lang.String)":"java.sql.statement.setcursorname（java.lang.string）\r\n","java.util.IllegalFormatCodePointException.IllegalFormatCodePointException(int)":"java.util.illegalformatCodePointException.IllegalFormatCodePointException（int）\r\n"," after\n            it runs the given action.":" 后\r\n            它运行给定的动作。\r\n","The MGF1ParameterSpec which uses \"SHA-1\" message digest.":"使用“ SHA-1”消息摘要的MGF1ParametersPec。\r\n","java.security.spec.DSAPublicKeySpec":"java.security.spec.dsapublickeyspec\r\n","s\n            and ":"s\r\n            和\r\n","java.util.concurrent.ConcurrentSkipListMap.clone()":"java.util.concurrent.concurrentskiplistmap.clone（）\r\n","Inserts the contents of the insert row into this\n            <code>ResultSet</code> object and into the database.":"将插入行的内容插入此处\r\n            <code> Resultset </code>对象并进入数据库。\r\n","java.util.Vector.size()":"java.util.vector.size（）\r\n","java.sql.DatabaseMetaData.procedureResultUnknown":"java.sql.databasemetadata.procedureresultunknown\r\n","Returns the last element in this list.":"返回此列表中的最后一个元素。\r\n","java.util.concurrent.ConcurrentLinkedQueue.ConcurrentLinkedQueue(java.util.Collection)":"java.util.concurrent.concurrentlinkedqueue.concurrentlinkedqueue（java.util.collection）\r\n","java.nio.file.Files.newDirectoryStream(java.nio.file.Path)":"java.nio.file.files.newdirectorystream（java.nio.file.path）\r\n","java.nio.file.attribute.DosFileAttributeView":"java.nio.file.attribute.dosfileattributeview\r\n","java.sql.DatabaseMetaData.tableIndexClustered":"java.sql.databasemetadata.tableIndexClustered\r\n","Returns the minimum element of the given collection, according to the\n            ":"返回给定集合的最低元素，根据\r\n            \r\n","if the private key is not valid.":"如果私钥无效。\r\n","if the decoding of the name constraints fail.\n":"如果名称约束的解码失败。\r\n\r\n","Creates a certificate of the specified type.":"创建指定类型的证书。\r\n","\n            interface, to minimize the effort required to implement this interface.":"\r\n            接口，以最大程度地减少实现此接口所需的努力。\r\n","Constructs a <code>SQLSyntaxErrorException</code> object.":"构造<code> sqlsyntaxerrorexception </code>对象。\r\n","java.sql.Timestamp.equals(java.sql.Timestamp)":"java.sql.timestamp.equals（java.sql.timestamp）\r\n","Pushes an element onto the stack represented by this list.":"将一个元素推到该列表表示的堆栈上。\r\n","This immutable class specifies the set of domain parameters\n            used with elliptic curve cryptography (ECC).":"这个不变的类指定域参数集\r\n            与椭圆曲线密码学（ECC）一起使用。\r\n","java.sql.DatabaseMetaData.bestRowTransaction":"java.sql.databasemetadata.bestrowtransaction\r\n","Returns a key-value mapping associated with the greatest key\n            less than or equal to the given key, or ":"返回与最大键关联的键值映射\r\n            小于或等于给定的键，或\r\n"," equivalent to ":" 相当于\r\n","Retrieves the value of the designated JDBC <code>BINARY</code> or\n            <code>VARBINARY</code> parameter as an array of <code>byte</code>\n            values in the Java programming language.":"检索指定的JDBC <code>二进制</code>或\r\n            <code> varbinary </code>参数作为<code>字节的数组</code>\r\n            Java编程语言中的值。\r\n","If this object has changed, as indicated by the\n            <code>hasChanged</code> method, then notify all of its observers\n            and then call the <code>clearChanged</code> method to\n            indicate that this object has no longer changed.":"如果此对象已更改，如\r\n            <code> haschanged </code>方法，然后通知其所有观察者\r\n            然后将<code> ClearChanged </code>方法调用\r\n            表明此对象不再更改。\r\n"," is closed.\n":" 已经关了。\r\n\r\n","\n            path.":"\r\n            小路。\r\n","java.nio.file.spi.FileTypeDetector.probeContentType(java.nio.file.Path)":"java.nio.file.spi.filetypedetector.probecontenttype（java.nio.file.path）\r\n","java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream)":"java.sql.preparedstatement.setbinarystream（int，java.io.inputstream）\r\n","Gets the number of bytes of data that should have been transferred.":"获取本应传输的数据字节数。\r\n","java.util.AbstractSequentialList":"java.util.AbstractSequentionList\r\n","java.util.OptionalDouble":"Java.util.OptionalDouble\r\n","Constructs a prototypical Event.":"构建典型事件。\r\n","java.sql.ResultSet.updateDate(int, java.sql.Date)":"java.sql.Resultset.updatedate（int，java.sql.date）\r\n","java.security.cert.CertPathValidatorException.CertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)":"java.security.cert.certpathvalidatorexception.certpathvalidatorexception（java.lang.string，java.lang.throwable，throwable，java.security.cert.cert.cert.certpath，int），int）\r\n","java.security.KeyPair":"java.security.keypair\r\n","java.time.format.DecimalStyle.getPositiveSign()":"java.time.format.decimalstyle.getPositivesign（）\r\n","java.sql.DatabaseMetaData.supportsSchemasInPrivilegeDefinitions()":"java.sql.databasemetadata.supportsschemasinprivilegedefinitions（）\r\n","Characteristic value signifying that the source guarantees that\n            encountered elements will not be ":"特征价值表示来源保证\r\n            遇到的元素不会\r\n","Delayed":"延迟\r\n","Returns an enumeration of the values in this hashtable.":"返回此标签中值的枚举。\r\n"," with the specified initial\n            capacity and load factor.":" 指定的初始\r\n            容量和负载因子。\r\n","java.nio.file.attribute.AclEntryPermission":"java.nio.file.attribute.aclentrypermission\r\n","java.sql.Types.BLOB":"java.sql.types.blob\r\n","Get the positive suffix. -or- Set the positive suffix.":"获得正后缀。 - 或设置正后缀。\r\n","Indicates that the best row identifier may or may not be a pseudo column.":"表示最佳的行标识符可能是伪列也可能不是伪列。\r\n","java.sql.CallableStatement.getRowId(java.lang.String)":"java.sql.callablestatement.getrowid（java.lang.string）\r\n","Return the maximum length of any expansion sequences that end\n            with the specified comparison order.":"返回结束的任何扩展序列的最大长度\r\n            带有指定的比较顺序。\r\n","java.sql.DriverManager.registerDriver(java.sql.Driver)":"java.sql.drivermanager.registerdriver（java.sql.driver）\r\n","ZONE_OFFSET":"Zone_Offset\r\n","Constructs an AttributedString instance with the given text and attributes.":"用给定的文本和属性构造一个属性的实例。\r\n","java.util.Timer.scheduleAtFixedRate(java.util.TimerTask, java.util.Date, long)":"java.util.timer.scheduleatfixedrate（java.util.timertask，java.util.date，long）\r\n","java.security.cert.CRL.isRevoked(java.security.cert.Certificate)":"java.security.cert.crl.isrevoked（java.security.cert.certificate）\r\n","java.util.List.of(java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.Object，java.lang.object）\r\n","java.security.interfaces.RSAPrivateCrtKey":"java.security.interfaces.rsaprivatecrtkey\r\n","java.nio.file.Files.newBufferedReader(java.nio.file.Path, java.nio.charset.Charset)":"java.nio.file.files.newbufferedreader（java.nio.file.path，java.nio.charset.Charset）\r\n","java.util.Queue.peek()":"java.util.queue.peek（）\r\n","Returns the least key greater than or equal to the given key,\n            or ":"返回最小密钥大于或等于给定密钥，\r\n            或者\r\n","Retrieves whether this database supports getting multiple\n            <code>ResultSet</code> objects from a single call to the\n            method <code>execute</code>.":"检索该数据库是否支持获得多个\r\n            <code> RESTERSET </code>来自单个调用的对象\r\n            方法<code>执行</code>。\r\n"," to\n            indicate that an argument is not a well-formed BCP 47 tag.":" 至\r\n            表明参数不是形式良好的BCP 47标签。\r\n"," value (the raw signature bits) from\n            the CRL.":"值（原始签名位）\r\n            CRL。\r\n","java.util.Map.replaceAll(java.util.function.BiFunction)":"java.util.map.replaceall（java.util.function.bifunction）\r\n","Constructs a <code>SQLNonTransientException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlnontransientException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","#SATURDAY":"＃周六\r\n","(-(":"（ - （（（（\r\n","java.nio.file.NoSuchFileException.NoSuchFileException(java.lang.String)":"java.nio.file.nosuchfileexception.nosuchfileException（java.lang.string）\r\n","The constant indicating that generated keys should not be made\n            available for retrieval.":"常数表示不应制作生成的密钥\r\n            可用于检索。\r\n","Returns the invalidity date, as specified in the Invalidity Date\n            extension of this ":"返回无效日期的无效日期\r\n            扩展\r\n","java.util.WeakHashMap":"Java.util.WeakhashMap\r\n","java.sql.ResultSet.updateFloat(java.lang.String, float)":"java.sql.Resultset.updateFloat（java.lang.string，float）\r\n","java.util.Scanner.hasNextDouble()":"java.util.scanner.hasnextdouble（）\r\n","java.util.Arrays.sort(double[])":"java.util.arrays.sort（double []）\r\n","java.sql.ResultSet.getNString(java.lang.String)":"java.sql.Resultset.getnstring（java.lang.string）\r\n","java.sql.ResultSet.getObject(java.lang.String, java.util.Map)":"java.sql.Resultset.getObject（java.lang.string，java.util.map）\r\n","java.text.DecimalFormatSymbols.setInternationalCurrencySymbol(java.lang.String)":"java.text.decimalformatsymbols.setinternationalCurrencySymbol（java.lang.string）\r\n","ZoneOffset":"区域offset\r\n","java.security.SecureClassLoader.SecureClassLoader()":"java.security.secureclassloader.secureclassloader（）\r\n","java.util.concurrent.CompletionStage.handleAsync(java.util.function.BiFunction, java.util.concurrent.Executor)":"java.util.concurrent.completionstage.handleasync（java.util.function.bifunction，java.util.concurrent.executor）\r\n"," that defines operations on files that are located\n            relative to an open directory.":" 该定义在位于文件的文件上的操作\r\n            相对于开放目录。\r\n","The MGF1ParameterSpec which uses \"SHA-384\" message digest.":"使用“ SHA-384”消息摘要的MGF1ParametersPec。\r\n","Empties this <code>Statement</code> object's current list of\n            SQL commands.":"清空此<code>语句</code>对象的当前列表\r\n            SQL命令。\r\n","Normalization Form KC - Compatibility Decomposition, followed by Canonical Composition.":"标准化形式KC-兼容性分解，然后是规范组成。\r\n","#NARROW_STANDALONE":"#narrow_standalone\r\n","Searches the specified array of floats for the specified value using\n            the binary search algorithm.":"使用\r\n            二进制搜索算法。\r\n"," over the elements in this set.":" 在此集合中的元素上。\r\n","Returns the next element in the iteration.":"返回迭代中的下一个元素。\r\n"," if all worker threads are currently idle.":" 如果所有工作线程当前都是空闲的。\r\n","java.util.SortedMap":"java.util.sortedmap\r\n","Searches for the property with the specified key in this property list.":"在此属性列表中使用指定密钥搜索属性。\r\n","Construct a locale from language, country and variant.":"从语言，国家和变体中构建一个语言环境。\r\n","Compares two abstract paths lexicographically.":"在词典上比较了两个抽象路径。\r\n","java.util.SplittableRandom.nextBoolean()":"java.util.splittablerandom.nextboolean（）\r\n","The <code>Calendar</code> class is an abstract class that provides methods\n            for converting between a specific instant in time and a set of ":"<code>日历</code>类是一个抽象类，提供方法\r\n            用于在时间和一组特定的瞬间之间转换\r\n","Executes the given SQL statement and signals the driver that the\n            auto-generated keys indicated in the given array should be made available\n            for retrieval.":"执行给定的SQL语句，并向驾驶员发出信号\r\n            在给定阵列中指示的自动生成键应提供\r\n            取回。\r\n","<strong>Note:</strong> use #setIssuers(Collection) instead\n            or only specify the byte array form of distinguished names when using\n            this method.":"<strong>注意：</strong>使用#setissuers（集合）\r\n            或者仅指定使用时的字节数组形式\r\n            这个方法。\r\n","java.util.concurrent.BlockingQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.blockingqueue.drainto（java.util.collection，int）\r\n","java.sql.CallableStatement.getFloat(java.lang.String)":"java.sql.callablestatement.getfloat（java.lang.string）\r\n","java.nio.charset.StandardCharsets.UTF_8":"java.nio.charset.standardcharsets.utf_8\r\n","Returns true if this zone has the same rule and offset as another zone.":"如果该区域具有与另一个区域相同的规则和偏移，则返回true。\r\n","java.sql.SQLNonTransientConnectionException":"java.sql.sqlnontransientConnectionException\r\n","Retrieves and removes the head of the queue represented by this deque\n            (in other words, the first element of this deque), waiting if\n            necessary until an element becomes available.":"检索并卸下该Deque代表的队列的头部\r\n            （换句话说，这是该deque的第一个元素），等待\r\n            需要直到元素可用。\r\n","Returns a copy of the decimal format symbols, which is generally not\n            changed by the programmer or user. -or- Sets the decimal format symbols, which is generally not changed\n            by the programmer or user.":"返回小数格式符号的副本，通常不是\r\n            由程序员或用户更改。 - 或设置小数格式符号，通常不会更改\r\n            由程序员或用户。\r\n","savepoint":"保存点\r\n","keys":"钥匙\r\n","java.util.Scanner.Scanner(java.io.InputStream, java.lang.String)":"Java.util.Scanner.Scanner（Java.io.inputstream，Java.lang.String）\r\n","java.sql.DatabaseMetaData.procedureColumnInOut":"java.sql.databasemetadata.procedurecolumninout\r\n","java.util.Collections.synchronizedList(java.util.List)":"java.util.collections.synchronizedlist（java.util.list）\r\n","Creates an empty property list with the specified defaults.":"使用指定的默认值创建一个空属性列表。\r\n","if this connection is closed, or there's a problem creating a new nclob.\n":"如果该连接已关闭，或者存在一个问题，可以创建新的NCLOB。\r\n\r\n","Returns an iterator over the elements in this queue.":"在该队列中的元素上返回迭代器。\r\n","queue":"队列\r\n","java.util.concurrent.ForkJoinTask.isCompletedNormally()":"java.util.concurrent.forkjointask.iscompletednormally（）\r\n","java.util.concurrent.CountDownLatch.countDown()":"java.util.concurrent.countdownlatch.countdown（）\r\n","java.text.NumberFormat.setRoundingMode(java.math.RoundingMode)":"java.text.numberformat.setRoundingMode（java.math.RoundingMode）\r\n","Encodes the certificate to an output stream in a format that can\n            be decoded by the ":"以可以将证书编码为输出流的格式可以\r\n            被解码\r\n","Returns the number of additional elements that this queue can ideally\n            (in the absence of memory or resource constraints) accept without\n            blocking, or ":"返回该队列理想的其他元素的数量\r\n            （在没有内存或资源约束的情况下）接受\r\n            阻塞，或\r\n","java.util.Calendar.set(int, int, int)":"java.util.calendar.set（int，int，int）\r\n","Updates the data to be signed or verified, using the\n            specified array of bytes, starting at the specified offset.":"更新要签署或验证的数据，使用\r\n            指定的字节数组，从指定的偏移开始。\r\n"," with the specified value present.":" 带有指定的值。\r\n","java.security.KeyStoreSpi.engineGetCreationDate(java.lang.String)":"Java.security.Keystorespi.EngineGetCreationDate（Java.lang.String）\r\n","java.security.cert.PKIXParameters.setSigProvider(java.lang.String)":"java.security.cert.pkixparameters.setsigprovider（java.lang.string）\r\n","java.security.cert.X509CRLSelector.setDateAndTime(java.util.Date)":"java.security.cert.x509crlselector.setdateandtime（java.util.date）\r\n","java.util.concurrent.Exchanger":"java.util.concurrent.exchanger\r\n","This class consists exclusively of static methods that return a ":"此类仅由返回返回的静态方法组成\r\n","Sixteen-bit UCS Transformation Format, byte order identified by an\n            optional byte-order mark":"16位UCS转换格式，字节顺序由\r\n            可选的字节级标记\r\n","a constant that indicates cache will not be used.":"表示缓存的常数不会使用。\r\n","java.util.Scanner.hasNextLong()":"java.util.scanner.hasnextlong（）\r\n","#LONG long":"＃长长\r\n","java.sql.DatabaseMetaData.functionColumnIn":"java.sql.databasemetadata.FunctionColumnin\r\n","Returns the user principal name if this exception was created with the\n            user principal name that was not found, otherwise ":"如果使用此异常，则返回用户主名称\r\n            未找到的用户主名称，否则\r\n","if an ":"如果\r\n","java.util.Collections.synchronizedCollection(java.util.Collection)":"java.util.collections.SynchronizedCollection（Java.util.Collection）\r\n","java.security.KeyStoreSpi":"java.security.keystorespi\r\n"," is a key/value mapping contained in a ":" 是一个键/值映射\r\n","Returns the same value as the <code>nextToken</code> method,\n            except that its declared return value is <code>Object</code> rather than\n            <code>String</code>.":"返回与<code> NextToken </code>方法相同的值，\r\n            除了其声明为返回值是<code>对象</code>而不是\r\n            <code>字符串</code>。\r\n","java.sql.ResultSet.updateCharacterStream(int, java.io.Reader, int)":"java.sql.Resultset.updatecharacterstream（int，java.io.reader，int）\r\n","java.security.spec.EllipticCurve":"java.security.spec.ellipticcurve\r\n","Returns the number of parties currently waiting at the barrier.":"返回当前在障碍处等待的政党人数。\r\n","java.util.Locale.getUnicodeLocaleAttributes()":"java.util.locale.getunicodelecaleattributes（）\r\n","java.util.Scanner.findWithinHorizon(java.lang.String, int)":"java.util.scanner.findwithinhorizo​​n（java.lang.string，int）\r\n","java.sql.PreparedStatement.setSQLXML(int, java.sql.SQLXML)":"java.sql.preparedstatement.setsqlxml（int，java.sql.sqlxml）\r\n","Waits for another thread to arrive at this exchange point (unless\n            the current thread is Thread#interrupt interrupted),\n            and then transfers the given object to it, receiving its object\n            in return.":"等待另一个线程到达此交换点（除非\r\n            当前线程是线程＃中断），\r\n            然后将给定的对象传输到它，接收其对象\r\n            作为回报。\r\n","java.sql.DatabaseMetaData.supportsLimitedOuterJoins()":"java.sql.databasemetadata.supportslimitedouterjoins（）\r\n","An unbounded thread-safe Queue queue based on linked nodes.":"基于链接节点的无界线程安全队列队列。\r\n","java.util.IntSummaryStatistics.accept(int)":"java.util.intsummarystatistics.accept（int）\r\n","Returns a file's POSIX file permissions.":"返回文件的POSIX文件权限。\r\n","Gets what the minimal days required in the first week of the year are;\n            e. -or- Sets what the minimal days required in the first week of the year are;\n            For example, if the first week is defined as one that contains the first\n            day of the first month of a year, call this method with value 1.":"得到一年中第一周所需的最小日子；\r\n            e。 - 或设置一年中第一周所需的最小日子；\r\n            例如，如果将第一周定义为包含第一周的\r\n            一年中的第一个月的一天，以价值1调用此方法。\r\n","java.sql.SQLTransactionRollbackException":"java.sql.sqltransactionrollbackexception\r\n","java.security.cert.CRLException.CRLException()":"java.security.cert.crlexception.crlexception（）\r\n","java.security.GuardedObject":"java.security.guardedObject\r\n","java.util.concurrent.DelayQueue.put(java.util.concurrent.Delayed)":"java.util.concurrent.delayqueue.put（java.util.concurrent.delayed）\r\n","Returns the value of the maximum number of intermediate non-self-issued\n            certificates that may exist in a certification path. -or- Sets the value of the maximum number of non-self-issued intermediate\n            certificates that may exist in a certification path.":"返回中间非自我发行的最大数量的值\r\n            可能存在于认证路径中的证书。 - 或设置非自我签发的中间体的最大数量的值\r\n            可能存在于认证路径中的证书。\r\n","Returns the size of the field (in bits).":"返回字段的大小（以位）。\r\n","Gets ampm strings.":"获取AMPM字符串。\r\n","Retrieves the value of the designated parameter as an <code>Object</code>\n            in the Java programming language.":"将指定参数的值检索为<code>对象</code>\r\n            在Java编程语言中。\r\n"," has any <a href=\"#def_extensions\">\n            extensions</a>.":" 有任何<a href=\"#def_extensions\">\r\n            扩展</a>。\r\n","java.util.concurrent.ExecutorService.shutdown()":"java.util.concurrent.executorservice.shutdown（）\r\n","Decoder":"解码器\r\n","Returns the comparator used to order the elements in this set,\n            or ":"返回用于订购此集元素的比较器，\r\n            或者\r\n"," instance, if\n            necessary, to ensure that it can hold at least the number of elements\n            specified by the minimum capacity argument.":" 实例，如果\r\n            有必要，以确保它至少可以容纳元素数量\r\n            由最低容量参数指定。\r\n","Returns a list of time and date functions available for the database.":"返回数据库可用的时间和日期功能列表。\r\n"," contain all of the given characteristics.":" 包含所有给定的特征。\r\n","Gets if the cursor is on the last row of the ":"如果光标在最后一行\r\n"," value of this CRL.":" 此CRL的价值。\r\n","AttributedCharacterIterator":"属性characteriter\r\n","java.util.concurrent.ConcurrentHashMap.forEachKey(long, java.util.function.Consumer)":"java.util.concurrent.concurrenthashmap.foreachkey（long，java.util.function.consumer）\r\n","java.util.Vector.elementAt(int)":"Java.util.Vector.Elementat（INT）\r\n","Creates a digest output stream, using the specified output stream\n            and message digest.":"使用指定的输出流创建摘要输出流\r\n            和消息摘要。\r\n","java.sql.Types.TIME":"java.sql.types.time\r\n","java.util.SimpleTimeZone.setStartYear(int)":"java.util.simpletimezone.setstartyear（int）\r\n","java.sql.ResultSet.updateRowId(int, java.sql.RowId)":"java.sql.Resultset.updaterowid（int，java.sql.rowid）\r\n","Returns a file attribute view of a given type.":"返回给定类型的文件属性视图。\r\n","if any of the parameters is not supported.\n":"如果不支持任何参数。\r\n\r\n","c.compare(a, b)":"c.compare（a，b）\r\n","Returns a synchronized (thread-safe) navigable map backed by the\n            specified navigable map.":"返回一张同步（线程安全）可导航的地图。\r\n            指定的可通航地图。\r\n","java.sql.CallableStatement.setBytes(java.lang.String, byte[])":"java.sql.callablestatement.setbytes（java.lang.string，byte []）\r\n","Checks if the specified permission is part of the\n            permission set in this entry.":"检查指定的权限是否是\r\n            此条目中的权限设置。\r\n",", else returns the current value.":"，否则返回当前值。\r\n","java.security.SecureClassLoader":"java.security.secureclassloader\r\n","java.security.AlgorithmParameters.getEncoded()":"java.security.algorithmparameters.getencoded（）\r\n","java.security.InvalidAlgorithmParameterException.InvalidAlgorithmParameterException(java.lang.String)":"java.security.invalidalgorithmparameterexception.invalidalgorithmparameterexception（java.lang.string）\r\n","Inserts the specified element into this delay queue.":"将指定元素插入此延迟队列中。\r\n","ConcurrentLinkedQueue":"conrentlinkedqueue\r\n","Constructs a  <code>SQLWarning</code> object\n             with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlwarning </code>对象\r\n             使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Constructs a <code>SQLRecoverableException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlrecoverableException </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","if the publicKey in the certificate is not valid or not to be\n             used for signing.\n":"如果证书中的publicKey无效或不可行\r\n             用于签名。\r\n\r\n","Constructs a <code>SQLRecoverableException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqlrecoverableException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.putifabsent（java.lang.object，java.lang.object）\r\n","Returns true if this set has no elements.":"如果此集合没有元素，则返回true。\r\n","toElement":"to\r\n","java.security.cert.CertPathValidator.CertPathValidator(java.security.cert.CertPathValidatorSpi, java.security.Provider, java.lang.String)":"java.security.cert.certpathvalidator.certpathvalidator（java.security.cert.cert.certpathvalidatorspi，java.security.provider，java.lang.lang.string）\r\n","java.sql.ResultSet.updateTimestamp(int, java.sql.Timestamp)":"java.sql.Resultset.updatetimestamp（int，java.sql.timestamp）\r\n","Creates a <code>PreparedStatement</code> object that will generate\n            <code>ResultSet</code> objects with the given type, concurrency,\n            and holdability.":"创建一个将生成的<code>准备的</code>对象\r\n            <code> resultset </code>带有给定类型的对象，并发，\r\n            和可持续性。\r\n","java.util.UnknownFormatFlagsException.getFlags()":"java.util.unknownformatflagsexception.getFlags（）\r\n","Constructs a certificate exception with no detail message.":"构建一个没有详细信息的证书例外。\r\n","java.security.acl.AclEntry":"java.security.acl.aclentry\r\n","java.util.TreeMap.subMap(java.lang.Object, boolean, java.lang.Object, boolean)":"java.util.treemap.submap（java.lang.Object，boolean，java.lang.Object，boolean）\r\n","java.sql.Driver.jdbcCompliant()":"java.sql.driver.jdbccompoliant（）\r\n","java.util.Arrays.fill(char[], int, int, char)":"java.util.arrays.fill（char []，int，int，char）\r\n","Gets the range of valid values for the field.":"获取该字段的有效值的范围。\r\n","Error thrown when something goes wrong while loading a service provider.":"加载服务提供商时出现问题时会丢弃错误。\r\n","Adds an observer to the set of observers for this object, provided\n            that it is not the same as some observer already in the set.":"将观察者添加到此对象的观察者集中\r\n            它与集合中的某些观察者不同。\r\n","java.text.MessageFormat.MessageFormat(java.lang.String)":"java.text.messageformat.messageformat（java.lang.string）\r\n","java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String, java.text.DateFormatSymbols)":"java.text.simpledateformat.simpledateformat（java.lang.string，java.text.dateformatsymbols）\r\n","Indicates whether this <code>Timestamp</code> object is\n            earlier than the given <code>Timestamp</code> object.":"指示此<code> timestamp </code>对象是\r\n            早于给定的<code>时间戳</code>对象。\r\n","java.util.Arrays.binarySearch(double[], int, int, double)":"java.util.arrays.binarysearch（double []，int，int，double）\r\n","java.security.cert.CertificateExpiredException.CertificateExpiredException(java.lang.String)":"java.security.cert.certificate expiredException.certificateExpiredException（java.lang.string）\r\n","Retrieves a description of the foreign key columns in the given foreign key\n            table that reference the primary key or the columns representing a unique constraint of the  parent table (could be the same or a different table).":"检索给定外键中外键列的描述\r\n            参考代表父表唯一约束的主键或列的表（可能是相同或另一个表）。\r\n","Returns a set of attributes present in the ":"返回一组属性\r\n","Returns an <a href=\"#unmodifiable\">unmodifiable List</a> containing the elements of\n            the given Collection, in its iteration order.":"返回<a href=\"#unmodifable\">无法解码的列表</a>包含的元素\r\n            给定的收集，以其迭代顺序。\r\n","A style specifier for <code>getDisplayName()</code> indicating\n            a long name, such as \"Pacific Standard Time.":"<code> getDisPlayName（）</code>指示的样式说明符\r\n            一个长名，例如“太平洋标准时间。\r\n","Gets the OCSP responder's certificate. -or- Sets the OCSP responder's certificate.":"获取OCSP响应者的证书。 - 或设置OCSP响应者的证书。\r\n","AlgorithmParameterGenerator":"算法帕克莱姆计\r\n","Constructs a <code>SQLTransientException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqltransientException </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","SQLException.getSQLState":"sqlexception.getsqlstate\r\n","java.util.concurrent.ConcurrentHashMap.replace(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrenthashmap.replace（java.lang.object，java.lang.object，java.lang.object）\r\n","java.security.Provider.replace(java.lang.Object, java.lang.Object)":"java.security.provider.replace（java.lang.object，java.lang.object）\r\n","Returns an immutable List of the ":"返回不变的清单\r\n","Returns a comparator that imposes the reverse ordering of this\n            comparator.":"返回一个比较器，该比较器强加了反向排序\r\n            比较器。\r\n","Gets the character used for thousands separator. -or- Sets the character used for thousands separator.":"获取数千个分隔符的字符。 - 或设置用于数千个分隔符的字符。\r\n","java.sql.DataTruncation.getRead()":"java.sql.datatruncation.getRead（）\r\n","java.sql.ResultSetMetaData.getCatalogName(int)":"java.sql.ResultsetMetadata.getCataLogname（int）\r\n","Returns the identity in this scope with the specified name (if any).":"用指定名称（如果有）返回此范围中的身份。\r\n","Returns the hash code value for this set.":"返回此集合的哈希代码值。\r\n","s contained\n in the ":"S包含\r\n 在里面\r\n","java.time.format.DateTimeFormatter.ISO_WEEK_DATE":"java.time.format.datetimeformatter.iso_week_date\r\n","This method frees the <code>Array</code> object and releases the resources that\n            it holds.":"此方法可以释放<code>数组</code>对象并释放资源\r\n            它拥有。\r\n","java.util.Calendar.AM":"java.util.calendar.am\r\n","java.sql.ResultSet.updateDate(java.lang.String, java.sql.Date)":"java.sql.Resultset.updatedate（java.lang.string，java.sql.date）\r\n","Gets if the cursor is before the first row of the ":"如果光标是在第一行之前\r\n","java.util.Calendar.DECEMBER":"java.util.calendar.dember\r\n","Returns a name for the the locale's script that is appropriate for display to\n            the user.":"返回适合显示的语言环境脚本的名称\r\n            用户。\r\n","Indicates that this version column may or may not be a pseudo column.":"指示此版本列可能是伪列或可能不是伪列。\r\n","Sets the value of the client info property specified by name to the\n            value specified by value.":"设置按名称指定的客户端信息属性的值\r\n            按值指定的值。\r\n","Returns the parent policy node.":"返回父策略节点。\r\n","end > array.length":"end> array.length\r\n","java.security.spec.EllipticCurve.getField()":"java.security.spec.ellipticcurve.getfield（）\r\n","java.sql.CallableStatement.setByte(java.lang.String, byte)":"java.sql.callablestatement.setbyte（java.lang.string，byte）\r\n","java.nio.file.Files.notExists(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.notexists（java.nio.file.path，java.nio.file.linkoption）\r\n","java.sql.SQLOutput.writeBytes(byte[])":"java.sql.sqloutput.writebytes（byte []）\r\n","Useful constant for DAY_OF_WEEK_IN_MONTH field alignment.":"Day_of_week_in_month字段对齐的有用常数。\r\n","java.security.AlgorithmParameterGenerator.init(int, java.security.SecureRandom)":"java.security.algorithmparametergenerator.init（int，java.security.securerandom）\r\n","java.security.AlgorithmParameterGeneratorSpi.engineInit(int, java.security.SecureRandom)":"java.security.algorithmparametergeneratorspi.engineinit（int，java.security.securerandom）\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type <code>LONGNVARCHAR</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，可以标识通用SQL类型<code> longnvarchar </code>。\r\n","java.security.cert.X509CertSelector.setNameConstraints(byte[])":"java.security.cert.x509certselector.setnamecontaints（byte []）\r\n","java.security.KeyStore.getEntry(java.lang.String, java.security.ProtectionParameter)":"java.security.keystore.getentry（java.lang.string，java.security.protectionparameter）\r\n","Format a long to produce a string.":"格式化长时间生成字符串。\r\n","java.security.AlgorithmParameters.init(byte[], java.lang.String)":"java.security.algorithmparameters.init（byte []，java.lang.string）\r\n","java.text.MessageFormat.MessageFormat(java.lang.String, java.util.Locale)":"java.text.messageformat.messageformat（java.lang.string，java.util.locale）\r\n","java.nio.file.FileSystem.FileSystem()":"java.nio.file.filesystem.filesystem（）\r\n","other.getAsDouble()":"other.getAsdouble（）\r\n","java.util.concurrent.Executors.defaultThreadFactory()":"java.util.concurrent.executors.defaultthreadfactory（）\r\n","java.sql.DatabaseMetaData.supportsCatalogsInTableDefinitions()":"java.sql.databasemetadata.supportscatalogsintabledefinitions（）\r\n","\n            given the prime, primeExponent, and\n            crtCoefficient as defined in PKCS#1.":"\r\n            给定素数，质量eppent和\r\n            PKCS＃1中定义的CRTCOFED。\r\n","Returns the policy criterion. -or- Sets the policy constraint.":"返回政策标准。 - 或设置策略约束。\r\n"," of this prime finite field.":" 这个主要有限的领域。\r\n","java.util.Timer.Timer(boolean)":"java.util.timer.timer（布尔）\r\n","java.sql.ResultSet.updateNCharacterStream(int, java.io.Reader)":"java.sql.Resultset.updatencharacterstream（int，java.io.reader）\r\n","java.time.zone.ZoneOffsetTransition.isGap()":"java.time.zone.zoneoffsettransition.isgap（）\r\n","java.security.Permissions":"Java.security.Permissions\r\n","java.util.NavigableMap.tailMap(java.lang.Object)":"java.util.navigablemap.tailmap（java.lang.Object）\r\n","java.util.BitSet.andNot(java.util.BitSet)":"java.util.bitset.andnot（java.util.bitset）\r\n","java.util.concurrent.ConcurrentSkipListMap.floorEntry(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.floortry（java.lang.object）\r\n","Removes from this set all of its elements that are contained in the\n            specified collection (optional operation).":"从该集合中删除所有包含的元素\r\n            指定收集（可选操作）。\r\n","java.security.spec.InvalidKeySpecException.InvalidKeySpecException(java.lang.String)":"java.security.spec.invalidkeyspecexception.invalidkeyspecexception（java.lang.string）\r\n","Returns an array containing all the installed providers.":"返回包含所有已安装提供商的数组。\r\n","Set the choices to be used in formatting.":"设置用于格式化的选择。\r\n","Sets the designated parameter to the given\n             <code>REF(&lt;structured-type&gt;)</code> value.":"将指定的参数设置为给定\r\n             <code> ref（＆lt; structred-type＆gt;）</code>值。\r\n","java.sql.DatabaseMetaData.functionColumnUnknown":"java.sql.databasemetadata.functioncolumnunknown\r\n"," of most-trusted CAs.":" 最受信任的CA。\r\n","m <= zero":"m <=零\r\n","Retrieves whether this database supports expressions in\n            <code>ORDER BY</code> lists.":"检索该数据库是否支持\r\n            <代码> </code>列表订购。\r\n","java.security.cert.TrustAnchor.getCAName()":"java.security.cert.trustanchor.getCaname（）\r\n","if interrupted while waiting\n":"如果在等待时被打断\r\n\r\n","java.util.concurrent.BlockingDeque.offerLast(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.offerlast（java.lang.object，long，java.util.concurrent.timeunit）\r\n"," object. -or- Sets the month of this date to the specified value.":" 目的。 - 或 - 将该日期的月份设置为指定值。\r\n","If not already completed, sets the value returned by ":"如果尚未完成，请设置由\r\n","java.sql.Statement.getMoreResults(int)":"java.sql.statement.getmoreresults（int）\r\n","CollectionCertStoreParameters":"CollectionCertStoreParameters\r\n","java.sql.ResultSet.getRef(int)":"java.sql.Resultset.getRef（int）\r\n","java.security.Signature.setParameter(java.lang.String, java.lang.Object)":"java.security.signature.setParameter（java.lang.string，java.lang.object）\r\n","java.util.Calendar.SEPTEMBER":"java.util.calendar\r\n","java.security.SignatureSpi":"java.security.signaturespi\r\n","Sets the values for the fields <code>YEAR</code>, <code>MONTH</code>,\n            <code>DAY_OF_MONTH</code>, <code>HOUR_OF_DAY</code>, <code>MINUTE</code>, and\n            <code>SECOND</code>.":"设置字段的值<code>年</code>，<code>月</code>，\r\n            <code> day_of_month </code>，<code> hour_of_day </code>，<code> minute </code>和\r\n            <code>第二</code>。\r\n"," is greater than the length\n             of this string, or if ":" 大于长度\r\n             这个字符串，或者\r\n","java.time.format.DateTimeFormatter.ofPattern(java.lang.String)":"java.time.format.datetimeformatter.ofpattern（java.lang.string）\r\n"," value.\n":" 价值。\r\n\r\n","java.security.SecureRandom.getInstance(java.lang.String)":"java.security.securerandom.getinstance（java.lang.string）\r\n","java.util.Calendar.AM_PM":"java.util.calendar.am_pm\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            使用给定的<code>原因</code>。\r\n","This constant stands for the exponent part of the number.":"这个常数代表数字的指数部分。\r\n","java.util.SplittableRandom.nextDouble(double)":"java.util.splittablerandom.nextdouble（double）\r\n","java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream, int)":"java.sql.preparedstatement.setbinarystream（int，java.io.inputstream，int）\r\n","java.util.IntSummaryStatistics.getMin()":"java.util.intsummarystatistics.getmin（）\r\n","if encoding or decoding fails.":"如果编码或解码失败。\r\n"," field indicating the\n            fifth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的第五个月在格里高利和朱利安日历中。\r\n","Returns the pool hosting this thread.":"返回托管此线程的池。\r\n","java.util.Objects.nonNull(java.lang.Object)":"java.util.objects.nonnull（java.lang.object）\r\n","Initializes this object for verification.":"初始化此对象以进行验证。\r\n","This method frees the <code>Clob</code> object and releases the resources the resources\n            that it holds.":"此方法释放<code> clob </code>对象并释放资源资源\r\n            它的成就。\r\n","java.security.cert.X509CRL.getSignature()":"java.security.cert.x509crl.getSignature（）\r\n","java.util.Spliterator.trySplit()":"java.util.spliterator.trysplit（）\r\n","java.util.concurrent.FutureTask.set(java.lang.Object)":"java.util.concurrent.futuretask.set（java.lang.Object）\r\n","java.nio.file.spi.FileSystemProvider.newFileSystem(java.net.URI, java.util.Map)":"java.nio.file.spi.filesystemprovider.newfilesystem（java.net.uri，java.util.map）\r\n","Integer.MIN_VALUE":"integer.min_value\r\n"," is not big enough.":" 还不够大。\r\n","it ":"它\r\n","if an error occurs accessing the ":"如果发生错误访问\r\n","java.text.Bidi.Bidi(char[], int, byte[], int, int, int)":"java.text.bidi.bidi（char []，int，byte []，int，int，int）\r\n","java.util.Currency.getSymbol()":"java.util.currency.getSymbol（）\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, int[], java.lang.Throwable)":"java.sql.batchupdateexception.batchupdateexception（java.lang.string，int []，java.lang.throwable.throwable）\r\n","java.util.OptionalInt.empty()":"java.util.optionalint.empty（）\r\n","java.security.cert.Extension":"java.security.cert.extension\r\n","java.util.Formatter.locale()":"java.util.formatter.locale（）\r\n","java.sql.SQLException.SQLException(java.lang.String)":"java.sql.sqlexception.sqlexception（java.lang.string）\r\n","java.util.AbstractList.remove(int)":"java.util.abstractlist.remove（int）\r\n","java.sql.SQLXML.free()":"java.sql.sqlxml.free（）\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构建<Code> SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Returns the reason the certificate was revoked.":"返回证书被吊销的原因。\r\n","Constructs a ConcurrentModificationException with no\n            detail message.":"构建一个conturrentModification exception，no\r\n            详细信息。\r\n","java.util.StringTokenizer.nextElement()":"java.util.stringtokenizer.nextelement（）\r\n","java.sql.Connection.createStatement(int, int, int)":"java.sql.connection.createStatement（int，int，int）\r\n","java.util.GregorianCalendar.setGregorianChange(java.util.Date)":"java.util.gregoriancalendar.setgregorianchange（java.util.date）\r\n","java.util.ArrayDeque.offerLast(java.lang.Object)":"java.util.arraydeque.offerlast（java.lang.Object）\r\n","Returns the index of the last occurrence of the specified element in\n            this list, searching backwards from ":"返回在\r\n            此列表，从\r\n","java.sql.BatchUpdateException.BatchUpdateException(int[])":"java.sql.batchupdateexception.batchupdateexception（int []）\r\n","java.security.DigestInputStream.digest":"java.security.digestinputstream.digest\r\n","java.security.spec.ECGenParameterSpec.getName()":"java.security.spec.ecgenparameterspec.getName（）\r\n","\n arrays.":"\r\n 数组。\r\n","java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String)":"java.text.simpledateformat.simpledateformat（java.lang.string）\r\n","Characteristic value signifying that the value returned from\n            ":"特征值表示该值从\r\n            \r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object，java.object， Java.lang.Object，Java.lang.Object，Java.lang.Object）\r\n","Returns an unmodifiable view of the specified navigable set.":"返回指定可导航集的不可修复的视图。\r\n","java.sql.Timestamp.after(java.sql.Timestamp)":"java.sql.timestamp.fter（java.sql.timestamp）\r\n","java.io.Reader\n            Reader":"Java.io.Reader\r\n            读者\r\n"," of the\n            elliptic curve.":" 的\r\n            椭圆曲线。\r\n","Gets the DER-encoded signature algorithm parameters from this\n            certificate's signature algorithm.":"从此获取DER编码的签名算法参数\r\n            证书的签名算法。\r\n"," with the\n            specified cause and a detail message of\n            ":" 与\r\n            指定原因和详细信息\r\n            \r\n","java.nio.file.NotLinkException.NotLinkException(java.lang.String)":"java.nio.file.notlinkexception.notlinkexception（java.lang.string）\r\n","java.nio.file.spi.FileSystemProvider.move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption)":"java.nio.file.spi.filesystemprovider.move（java.nio.file.path，java.nio.file.path，java.nio.file.copyoption）\r\n","java.text.DecimalFormat.getMultiplier()":"java.text.decimalformat.getmultiplipier（）\r\n","This class specifies the set of parameters used with mask generation\n            function MGF1 in OAEP Padding and RSA-PSS signature scheme, as\n            defined in the\n            <a href=\"http://www.":"此类指定蒙版生成的一组参数\r\n            OAEP填充和RSA-PSS签名方案中的功能MGF1，AS\r\n            定义在\r\n            <a href =“ http：//www。\r\n","java.util.concurrent.CopyOnWriteArrayList.retainAll(java.util.Collection)":"java.util.concurrent.copyonwritearraylist.RetainAll（Java.util.Collection）\r\n","java.security.cert.X509CertSelector.setBasicConstraints(int)":"java.security.cert.x509certselector.setbasicconstraints（int）\r\n"," and index is not ":" 索引不是\r\n","java.util.Locale.getVariant()":"java.util.locale.getVariant（）\r\n","Sets the keyUsage criterion.":"设置键盘标准。\r\n","negative":"消极的\r\n","java.security.InvalidKeyException.InvalidKeyException(java.lang.String, java.lang.Throwable)":"java.security.invalidkeyexception.invalidkeyexception（java.lang.string，java.lang.throwable）\r\n","Inserts the specified element at the tail of this deque.":"将指定元素插入此Deque的尾部。\r\n","java.text.NumberFormat.INTEGER_FIELD":"java.text.numberformat.integer_field\r\n","Returns the group owner of the file.":"返回文件的组所有者。\r\n","java.sql.ResultSetMetaData.isCaseSensitive(int)":"java.sql.ResultsetMetadata.iscasessitive（int）\r\n","\n            max and zero average.":"\r\n            最大和零平均值。\r\n","java.util.Locale.ENGLISH":"java.util.locale.english\r\n","java.sql.DatabaseMetaData.supportsGroupBy()":"java.sql.databasemetadata.supportsgroupby（）\r\n","detailed":"详细的\r\n","Adds a name to the issuerNames criterion.":"在发行标准中添加名称。\r\n","Creates a string representation of this ":"创建一个字符串表示\r\n","is before or after noon. ":"是中午之前或之后。\r\n"," on the first\n            argument if the first argument is not ":" 在第一个\r\n            论点如果第一个参数不是\r\n","Marks the year part of a date.":"标记日期的一部分。\r\n","java.util.AbstractMap.clear()":"java.util.abstractmap.clear（）\r\n","Retrieves whether this database supports statement pooling.":"检索该数据库是否支持语句池。\r\n","java.sql.ResultSetMetaData.isReadOnly(int)":"java.sql.ResultsetMetadata.isReadonly（int）\r\n","Returns the reason that the validation failed.":"返回验证失败的原因。\r\n","\n            if not set. -or- Sets the signature provider's name.":"\r\n            如果未设置。 - 或设置签名提供商的名称。\r\n","A synchronization aid that allows one or more threads to wait until\n            a set of operations being performed in other threads completes.":"同步辅助辅助辅助，允许一个或多个线程等到\r\n            在其他线程中执行的一组操作完成。\r\n","Determines if the keystore ":"确定密钥库是否\r\n","A watch service that <em>watches</em> registered objects for changes and\n            events.":"<em>手表的手表服务</em>注册的对象进行更改和\r\n            事件。\r\n","java.security.cert.CertPathValidatorSpi.engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters)":"java.security.cert.certpathvalidatorspi.enginevalidate（java.security.cert.cert.certpath，java.security.cert.cert.certpathparameters）\r\n","java.security.Certificate.toString(boolean)":"java.security.certificate.tostring（boolean）\r\n","java.util.List.listIterator()":"java.util.list.listiterator（）\r\n","key specifications":"关键规格\r\n","java.time.format.DateTimeFormatter.ISO_DATE":"java.time.format.datetimeformatter.iso_date\r\n","java.util.LinkedList.poll()":"java.util.linkedlist.poll（）\r\n","Removes all of the elements from this set (optional operation).":"删除此组中的所有元素（可选操作）。\r\n","java.text.CollationElementIterator.getOffset()":"java.text.collat​​ionElementiter.getOffset（）\r\n","style":"风格\r\n","\n            value between ":"\r\n            之间的值\r\n","java.security.cert.X509Certificate.verify(java.security.PublicKey, java.security.Provider)":"java.security.cert.x509certificate.verify（java.security.publickey，java.security.provider）\r\n","Returns the certificate associated with the given alias.":"返回与给定别名相关的证书。\r\n"," that wraps the\n            specified throwable.":" 包裹\r\n            指定可投掷。\r\n","java.sql.ResultSetMetaData.getColumnClassName(int)":"java.sql.ResultSetMetadata.getColumnClassName（int）\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.lang.String, java.util.Map, java.lang.Throwable)":"java.sql.sqlclientinfoexception.sqlclclientinfoexception（java.lang.string，java.lang.string，java.util.map，java.lang.throwable）\r\n","Indicates whether this <code>Timestamp</code> object is\n            later than the given <code>Timestamp</code> object.":"指示此<code> timestamp </code>对象是\r\n            比给定的<code> timestamp </code>对象晚。\r\n","java.sql.SQLOutput.writeLong(long)":"java.sql.sqloutput.writelong（long）\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentQ()":"java.security.spec.rsamultimeprimeprivatecrtkeyspec.getPrimeExponentQ（）\r\n","An exception indicating one of a variety of problems retrieving\n            certificates and CRLs from a ":"一个例外，指示检索的各种问题之一\r\n            证书和CRL\r\n","java.nio.file.spi.FileSystemProvider.newDirectoryStream(java.nio.file.Path, java.nio.file.Filter)":"java.nio.file.spi.filesystemprovider.newdirectorystream（java.nio.file.path，java.nio.file.file.file.file.file）\r\n","java.util.Vector.removeElementAt(int)":"Java.util.Vector.RemoveElementat（INT）\r\n","Certificate is not yet valid exception.":"证书尚未有效异常。\r\n","java.util.Collections.emptyNavigableSet()":"java.util.collections.emptynavigableset（）\r\n","CompletionException":"完整折衷\r\n"," interface with a hash table, using\n            reference-equality in place of object-equality when comparing keys (and\n            values).":" 与哈希表接口，使用\r\n            比较键时，参考 - 等于对象平等（和\r\n            值）。\r\n","embStart":"胚胎\r\n","Creates a <code>Statement</code> object for sending\n            SQL statements to the database.":"创建一个<code>语句</code>用于发送的对象\r\n            SQL语句到数据库。\r\n","java.util.ResourceBundle.getBundle(java.lang.String)":"java.util.resourcebundle.getBundle（java.lang.string）\r\n","java.util.GregorianCalendar.add(int, int)":"java.util.gregoriancalendar.add（int，int）\r\n","Constructor for serialization only.":"仅用于序列化的构造函数。\r\n","Converts calendar field values to the time value (millisecond\n            offset from the <a href=\"Calendar.":"将日历字段值转换为时间值（毫秒\r\n            偏离<a href =“日历。\r\n","java.util.Arrays.parallelSort(long[], int, int)":"java.util.arrays.parallelsort（long []，int，int）\r\n"," if the two specified arrays of longs are\n            ":" 如果两个指定的阵列是\r\n            \r\n","java.security.cert.LDAPCertStoreParameters.LDAPCertStoreParameters()":"java.security.cert.ldapcertstoreparameters.ldapcertstoreparameters（）\r\n","java.security.AlgorithmConstraints.permits(java.util.Set, java.security.Key)":"java.security.algorithmconstraints.permits（java.util.set，java.security.key）\r\n","java.security.Provider.putIfAbsent(java.lang.Object, java.lang.Object)":"java.security.provider.putifabsent（java.lang.object，java.lang.object）\r\n","Indicates whether the designated column can be used in a where clause.":"指示指定的列是否可以在WHERE子句中使用。\r\n","java.util.concurrent.ConcurrentSkipListMap.lowerEntry(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.lowerentry（java.lang.object）\r\n","java.util.NavigableSet.subSet(java.lang.Object, boolean, java.lang.Object, boolean)":"java.util.navigableset.subset（java.lang.Object，boolean，java.lang.object，boolean）\r\n"," is not initialized.":" 不是初始化的。\r\n","Identity":"身份\r\n","java.util.SimpleTimeZone.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int, int)":"java.util.simpletimezone.simpletimezone（int，java.lang.string，int，int，int，int，int，int，int，int，int，int，int，int，int）\r\n","java.util.Locale.getDisplayCountry(java.util.Locale)":"java.util.locale.getdisplaycountry（java.util.locale）\r\n","java.util.concurrent.ConcurrentHashMap.compute(java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.com upe（java.lang.object，java.util.function.bifunction）\r\n","java.util.concurrent.ConcurrentLinkedDeque.addLast(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.addlast（java.lang.object）\r\n","java.util.Vector.spliterator()":"java.util.vector.spliterator（）\r\n","java.sql.Types.REF":"java.sql.types.ref\r\n","Retrieves, but does not remove, the head of the queue represented by\n            this deque, or returns ":"检索但不删除，队列的头由\r\n            这个Deque或返回\r\n","java.security.cert.CertificateParsingException":"java.security.cert.certificateParsingException\r\n","java.util.concurrent.BlockingDeque.poll()":"java.util.concurrent.blockingdeque.poll（）\r\n","Calls the ":"打电话\r\n","Returns the type of this keystore.":"返回此密钥库的类型。\r\n","java.util.concurrent.CompletableFuture.obtrudeException(java.lang.Throwable)":"java.util.concurrent.completablefuture.obtrudeexception（java.lang.throwable）\r\n","java.security.cert.CertPathValidatorSpi.engineGetRevocationChecker()":"java.security.cert.certpathvalidatorspi.enginegetrevocation checker（）\r\n","java.util.concurrent.Executors.newFixedThreadPool(int)":"java.util.concurrent.executors.newfixedthreadpool（int）\r\n","Produces concatenated messages in language-neutral way.":"以语言中性的方式产生串联消息。\r\n","Constructs a <code>Timestamp</code> object\n            using a milliseconds time value.":"构造<code> timestamp </code>对象\r\n            使用毫秒的时间值。\r\n","java.util.SimpleTimeZone.useDaylightTime()":"java.util.simpletimezone.usedaylighttime（）\r\n","Returns the policy qualifiers associated with the policy of this node.":"返回与该节点策略相关的策略预选赛。\r\n","java.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.isdirectory（java.nio.file.path，java.nio.file.linkoption）\r\n","java.nio.file.attribute.BasicFileAttributeView":"java.nio.file.attribute.basicfileattributeview\r\n","Creates a property resource bundle from an ":"从一个\r\n","This class defines the ":"此类定义\r\n","Key":"钥匙\r\n","java.util.concurrent.CountedCompleter.propagateCompletion()":"java.util.concurrent.countedcompleter.propagatecompletion（）\r\n","Returns the value of the private key, ":"返回私钥的价值，\r\n","Parameters used as input for the PKIX ":"参数用作PKIX的输入\r\n","java.util.Calendar.APRIL":"Java.util.calendar.April\r\n","java.sql.Timestamp.Timestamp(long)":"java.sql.timestamp.timestamp（long）\r\n","If called by a ForkJoinTask operating in this pool, equivalent\n            in effect to ":"如果由在此池中运行的forkjointask调用，则等效\r\n            实际上\r\n","java.util.Deque.offerFirst(java.lang.Object)":"java.util.deque.offerfirst（java.lang.Object）\r\n","java.security.Provider.getName()":"java.security.provider.getName（）\r\n","java.util.concurrent.BlockingDeque.remove(java.lang.Object)":"java.util.concurrent.blockingdeque.remove（java.lang.object）\r\n","java.util.concurrent.ForkJoinPool.getFactory()":"java.util.concurrent.forkjoinpool.getFactory（）\r\n","java.util.Scanner.close()":"java.util.scanner.close（）\r\n","java.sql.ResultSet.updateInt(int, int)":"java.sql.Resultset.updateInt（int，int）\r\n","java.nio.file.FileSystemException.getOtherFile()":"java.nio.file.filesystemexception.getotherfile（）\r\n","Creates a KeyFactory object.":"创建一个键因素对象。\r\n","java.util.concurrent.ConcurrentLinkedDeque.removeLastOccurrence(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.removelastoccurrence（java.lang.object）\r\n","java.sql.DataTruncation":"java.sql.datatruncation\r\n","Updates the data to be signed or verified, using the specified\n            array of bytes.":"使用指定的\r\n            字节数组。\r\n","java.security.spec.DSAPublicKeySpec.DSAPublicKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"java.security.spec.dsapublickeyspec.dsapublickeyspec（java.math.biginteger，java.math.biginteger，java.math.biginteger，java.math.math.biginteger）\r\n","horizon":"地平线\r\n","if the password has been destroyed.\n":"如果密码已被破坏。\r\n\r\n","java.security.IdentityScope.IdentityScope()":"java.security.IdentityScope.IdentityScope（）\r\n","if this operation fails.\n":"如果此操作失败。\r\n\r\n","Overrides Cloneable.":"覆盖可克隆。\r\n","Returns a string of characters that may be used in unquoted identifier\n names.":"返回一串字符字符串，这些字符可用于未引用的标识符\r\n 名称。\r\n","Return the secondary component of a collation element.":"返回整理元件的辅助组件。\r\n","java.security.cert.PKIXBuilderParameters.PKIXBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector)":"java.security.cert.pkixbuilderparameters.pkixbuilderparameters（java.security.keystore，java.security.cert.certselector）\r\n","java.util.Optional.get()":"java.util.optional.get（）\r\n","Generates the hash code for this Collator.":"为此碰撞器生成哈希代码。\r\n","Constructs a new tree map containing the same mappings as the given\n            map, ordered according to the <em>natural ordering</em> of its keys.":"构造一个新的树地图，该图包含与给定的相同映射\r\n            地图，按照其键的自然排序排序。\r\n","delay":"延迟\r\n","java.security.spec.ECFieldF2m.ECFieldF2m(int, int[])":"java.security.spec.ecfieldf2m.ecfieldf2m（int，int []）\r\n","java.util.concurrent.BlockingDeque.element()":"java.util.concurrent.blockingdeque.element（）\r\n","java.nio.file.FileStore.getFileStoreAttributeView(java.lang.Class)":"java.nio.file.file.filestore.getFileStoreatTributeView（java.lang.class）\r\n","Retrieves the value of the designated JDBC <code>NCLOB</code> parameter as a\n            <code>java.":"检索指定的JDBC <code> NCLOB </code>参数为一个\r\n            <code> Java。\r\n","currency":"货币\r\n","java.util.concurrent.ForkJoinTask.setRawResult(java.lang.Object)":"java.util.concurrent.forkjointask.setrawresult（java.lang.Object）\r\n"," field indicating the\n            period of the day from noon to just before midnight.":" 指示\r\n            从中午到午夜之前的一天中的时期。\r\n","A class for building certification paths (also known as certificate chains).":"建筑认证路径的课程（也称为证书链）。\r\n","Retrieves whether or not a visible row update can be detected by\n            calling the method <code>ResultSet.":"检索是否可以检测到可见的行更新\r\n            调用方法<code>结果集。\r\n","java.security.AlgorithmParameterGeneratorSpi":"java.security.algorithmparametergeneratorspi\r\n","Gets the Collator for the current default locale.":"获取当前默认场所的碰撞器。\r\n"," has been closed,\n":" 已被关闭，\r\n\r\n","Returns true if grouping is used in this format. -or- Set whether or not grouping will be used in this format.":"如果在此格式中使用分组，则返回true。 - 或设置该格式是否使用分组。\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String, java.lang.Throwable)":"java.sql.sqltransientexception.sqltransientException（java.lang.string，java.lang.throwable）\r\n","Constructs a <code>BatchUpdateException</code> object.":"构造<code> batchupDateException </code>对象。\r\n","java.util.AbstractCollection.isEmpty()":"java.util.abstractcollection.isempty（）\r\n","if parallelism less than or\n         equal to zero, or greater than implementation limit":"如果平行性小于或\r\n         等于零，或大于实施极限\r\n","java.util.Arrays.parallelSort(float[])":"java.util.arrays.parallelsort（float []）\r\n","java.security.SecureClassLoader.defineClass(java.lang.String, java.nio.ByteBuffer, java.security.CodeSource)":"java.security.secureclassloader.defineclass（java.lang.string，java.nio.bytebuffer，java.security.codesource）\r\n","DoubleSupplier":"倍增器\r\n","Returns a non-null result from applying the given search\n            function on each value, or null if none.":"返回通过应用给定搜索的非零结果\r\n            在每个值上功能，如果没有功能，则为null。\r\n","java.util.concurrent.CountedCompleter.compute()":"java.util.concurrent.countedcompleter.compute（）\r\n","policyQualifierId":"PolicyQualifierID\r\n","java.text.BreakIterator.BreakIterator()":"java.text.breakiterator.breakiterator（）\r\n","java.util.BitSet.previousClearBit(int)":"java.util.bitset.previousclearbit（int）\r\n","\n            for this characteristic 2 finite field.":"\r\n            对于这个特征2有限字段。\r\n","java.util.OptionalDouble.getAsDouble()":"java.util.optionaldouble.getAsdouble（）\r\n","java.nio.file.Files.setOwner(java.nio.file.Path, java.nio.file.attribute.UserPrincipal)":"java.nio.file.files.setowner（java.nio.file.path，java.nio.file.attribute.userprincipal）\r\n","java.security.cert.CertPathBuilder.getInstance(java.lang.String, java.security.Provider)":"java.security.cert.certpathbuilder.getinstance（java.lang.string，java.security.provider）\r\n","java.sql.Types.INTEGER":"java.sql.types.integer\r\n","java.text.Format.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.format.format（java.lang.object，java.lang.stringbuffer，java.text.fieldposition）\r\n","java.text.CollationElementIterator.primaryOrder(int)":"java.text.collat​​ionElementiter.primaryorder（int）\r\n","java.sql.ResultSet.getString(int)":"java.sql.Resultset.getString（int）\r\n","FileStoreAttributeView":"FileStoreAtTributeView\r\n","java.security.PolicySpi.engineImplies(java.security.ProtectionDomain, java.security.Permission)":"java.security.policyspi.engineimplies（java.security.protectiondomain，java.security.permission）\r\n","java.text.DateFormat.setTimeZone(java.util.TimeZone)":"java.text.dateformat.settimezone（java.util.timezone）\r\n","java.util.Arrays.setAll(long[], java.util.function.IntToLongFunction)":"java.util.arrays.setall（long []，java.util.function.inttolongfunction）\r\n","Assigns the specified short value to each element of the specified array\n            of shorts.":"将指定的短值分配给指定数组的每个元素\r\n            短裤。\r\n","Returns the maximum length in bytes for an Index for this database.":"返回此数据库索引中的最大长度。\r\n"," type as specified by\n            the ":" 按照指定的类型\r\n            这\r\n","indicating the\n minute within the hour. ":"指示\r\n 小时内分钟。\r\n","Sets the values for the calendar fields <code>YEAR</code>,\n            <code>MONTH</code>, and <code>DAY_OF_MONTH</code>.":"设置日历字段的值<code>年</code>，\r\n            <code>月</code>和<code> day_of_month </code>。\r\n","Retrieves the value of the designated column in  the current row of\n             this <code>ResultSet</code> as a\n            <code>java.":"检索当前行中指定列的值\r\n             此<code> resultset </code>作为一个\r\n            <code> Java。\r\n","java.util.UUID.timestamp()":"java.util.uuid.timestamp（）\r\n","java.security.cert.CertPathValidator.getProvider()":"java.security.cert.certpathvalidator.getProvider（）\r\n"," extended with navigation methods reporting\n            closest matches for given search targets.":" 随导航方法报告扩展\r\n            给定搜索目标的最接近匹配。\r\n","java.security.cert.PKIXRevocationChecker.getOcspResponses()":"java.security.cert.pkixrevocation checker.getocsprespons（）\r\n","java.util.Spliterator.characteristics()":"java.util.spliterator.characteristics（）\r\n","Returns the index of the last occurrence of the specified element\n            in this list, or -1 if this list does not contain the element.":"返回指定元素的最后一次出现的索引\r\n            在此列表中，或-1如果此列表不包含元素。\r\n","Returns the index of the last occurrence of the specified element in\n            this vector, searching backwards from ":"返回在\r\n            这个向量，从\r\n","java.sql.ParameterMetaData.parameterNoNulls":"java.sql.parametermetadata.parameternonulls\r\n","CertPathBuilder CertPathBuilder":"certPathbuilder certpathbuilder\r\n","java.util.concurrent.BlockingDeque.iterator()":"java.util.concurrent.blockingdeque.iterator（）\r\n","java.security.UnrecoverableEntryException":"java.security.unrecoverableentryException\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as an int value in the specified radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n            \r\n","Return true if the line is all left-to-right text and the base direction is left-to-right.":"如果该行是全部到右文本，并且基本方向是从左到右的，则返回true。\r\n","Assigns the specified byte value to each element of the specified array\n            of bytes.":"将指定字节值分配给指定数组的每个元素\r\n            字节。\r\n"," plus one.":" 加一。\r\n","42":"42\r\n","java.util.concurrent.BrokenBarrierException":"java.util.concurrent.brokenbarrierexception\r\n","Returns an immutable map containing six mappings.":"返回一张包含六个映射的不变地图。\r\n","java.security.spec.RSAPublicKeySpec.RSAPublicKeySpec(java.math.BigInteger, java.math.BigInteger)":"java.security.spec.rsapublickeyspec.rsapublickeyspec（java.math.biginteger，java.math.biginteger）\r\n","java.util.concurrent.CompletableFuture.allOf(java.util.concurrent.CompletableFuture)":"java.util.concurrent.completablefuture.allof（java.util.concurrent.completablefuture）\r\n","java.text.DecimalFormat.toPattern()":"java.text.decimalformat.topattern（）\r\n","Move a file from this directory to another directory.":"将文件从此目录移动到另一个目录。\r\n","#setChoices(double[], String[])":"#setchoices（double []，string []）\r\n","Protected method invoked when this task transitions to state\n            ":"当此任务过渡到状态时，受保护的方法调用\r\n            \r\n","java.security.KeyFactorySpi.engineGetKeySpec(java.security.Key, java.lang.Class)":"java.security.keyfactoryspi.enginegetekeyspec（java.security.key，java.lang.class）\r\n","java.time.temporal.ChronoField.isTimeBased()":"java.time.temporal.chronofield.istimebased（）\r\n","Gets the first instance of any ":"获取任何一个实例\r\n","java.util.concurrent.ForkJoinTask.invokeAll(java.util.concurrent.ForkJoinTask, java.util.concurrent.ForkJoinTask)":"java.util.concurrent.forkjointask.invokeall（java.util.concurrent.forkjointask，java.util.concurrent.forkjointask）\r\n","java.security.cert.X509Certificate.getTBSCertificate()":"java.security.cert.x509certificate.gettbscertificate（）\r\n"," in exactly the manner specified by the ":" 完全按照\r\n","Returns the issuerNames criterion. -or- Sets the issuerNames criterion.":"返回发行标准。 - 或设置发行标准。\r\n","java.sql.Connection.createStatement(int, int)":"java.sql.connection.createstatement（int，int）\r\n"," is the common interface for private keys.":" 是私钥的常见接口。\r\n","Updates the designated column with a <code>String</code> value.":"用<code> String </code>值更新指定的列。\r\n","java.sql.ResultSet.getObject(int)":"java.sql.Resultset.getObject（int）\r\n"," value, signifying that\n            this signature object has not yet been initialized.":" 价值，表示\r\n            此签名对象尚未初始化。\r\n","java.text.DecimalFormat.setPositivePrefix(java.lang.String)":"java.text.decimalformat.setposiveprefix（java.lang.string）\r\n"," value into the summary information.":" 重视摘要信息。\r\n","java.util.TreeMap.ceilingEntry(java.lang.Object)":"java.util.treemap.ceilingentry（java.lang.Object）\r\n","java.security.KeyException":"java.security.keyexception\r\n","java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList(java.lang.Object[])":"java.util.concurrent.copyonwritearraylist.copyonwritearraylist（java.lang.object []）\r\n","Appends the time-zone name, such as 'British Summer Time', to the formatter.":"将时区的名称（例如“英国夏季”）附加到格式化器中。\r\n","Returns true if the passed principal is a member of the group.":"如果传递的本金是该小组的成员，则返回为真。\r\n","if the specified certificate type is not available at any\n             installed provider.":"如果指定的证书类型在任何地方都不可用\r\n             已安装的提供商。\r\n","java.security.cert.CertPathBuilder.getDefaultType()":"java.security.cert.certpathbuilder.getDefaultType（）\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqltransientexception.sqltransientException（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","Replaces the entry for the specified key only if currently\n            mapped to the specified value.":"仅在当前时才替换指定密钥的条目\r\n            映射到指定值。\r\n","java.util.SortedSet.first()":"java.util.sortedset.first（）\r\n","java.sql.DatabaseMetaData.storesUpperCaseQuotedIdentifiers()":"java.sql.databasemetadata.storesuppercasequotedIdentifiers（）\r\n","Creates a formatter using the specified pattern.":"使用指定模式创建格式化器。\r\n","java.sql.SQLInput.readLong()":"java.sql.sqlinput.readlong（）\r\n","Returns the provider of this message digest object.":"返回此消息Digest对象的提供商。\r\n","Returns whether this <code>Calendar</code> represents a time\n            before the time represented by the specified\n            <code>Object</code>.":"返回此<code>日历</code>表示一个时间\r\n            在指定的时间之前\r\n            <code>对象</code>。\r\n","java.security.cert.CertificateException.CertificateException(java.lang.Throwable)":"java.security.cert.certificateException.certificateException（java.lang.throwable）\r\n","java.security.Security":"java.security.security\r\n","Returns an estimate of the number of tasks submitted to this\n            pool that have not yet begun executing.":"返回对此提交的任务数量的估计值\r\n            尚未开始执行的池。\r\n","java.util.Scanner.nextLong()":"java.util.scanner.nextlong（）\r\n","java.sql.Connection.createSQLXML()":"java.sql.connection.createsqlxml（）\r\n","#time":"＃时间\r\n","Gets the GMT offset for this time zone. -or- Sets the base time zone offset to GMT.":"获取此时区的GMT偏移。 - 或将基本时区偏移设置为GMT。\r\n","Integer.MAX_VALUE":"integer.max_value\r\n"," is the common interface for all keys.":" 是所有密钥的常见接口。\r\n","If the specified key is not already associated with a value or is\n            associated with null, associates it with the given non-null value.":"如果指定的密钥尚未与一个值相关联或\r\n            与NULL相关联，将其与给定的非零值相关联。\r\n","Returns a non-null result from applying the given search\n            function on each key, or null if none.":"返回通过应用给定搜索的非零结果\r\n            在每个键上功能，如果无效，则功能为null。\r\n","java.sql.SQLXML.setCharacterStream()":"java.sql.sqlxml.setcharacterstream（）\r\n","java.sql.DriverManager.setLogStream(java.io.PrintStream)":"java.sql.drivermanager.setlogstream（java.io.printstream）\r\n","if the invoking principal is not an owner.":"如果调用本金不是所有者。\r\n","if the certificate has expired.":"如果证书已过期。\r\n","java.nio.charset.spi.CharsetProvider":"Java.nio.Charset.spi.CharsetProvider\r\n","java.security.spec.RSAOtherPrimeInfo.getPrime()":"java.security.spec.rsaotherprimeinfo.getPrime（）\r\n","java.sql.ParameterMetaData.getPrecision(int)":"java.sql.parametermetadata.getPrecision（int）\r\n","Returns a locale specific date and time format for the ISO chronology.":"返回ISO年表特定的特定日期和时间格式。\r\n","java.util.concurrent.BlockingQueue.remove(java.lang.Object)":"java.util.concurrent.blockingqueue.remove（java.lang.object）\r\n","Sets the date of this ":"设置此日期\r\n","java.sql.SQLInvalidAuthorizationSpecException":"java.sql.sqlinvalidauthorizationspecexception\r\n","Returns a map of all attributes of the current character.":"返回当前字符的所有属性的地图。\r\n","Retrieves and removes the first (lowest) element,\n or returns ":"检索并删除第一个（最低）元素，\r\n 或返回\r\n","Returns the result set's default holdability.":"返回结果集的默认可持续性。\r\n","java.text.DecimalFormat.setMultiplier(int)":"java.text.decimalformat.setmultiplier（int）\r\n","Returns the value at the given unit of granularity.":"返回给定粒度单位的值。\r\n","java.sql.Types.NVARCHAR":"java.sql.types.nvarchar\r\n"," throws an exception, and this task has not already\n            otherwise completed normally.":" 引发异常，此任务尚未\r\n            否则正常完成。\r\n","Sets the designated parameter to the given Java array of bytes.":"将指定的参数设置为给定的Java字节阵列。\r\n"," indicating a narrow name independently.":" 独立指示一个狭窄的名字。\r\n","A class that represents an immutable universally unique identifier (UUID).":"代表不变的普遍唯一标识符（UUID）的类。\r\n","Converts the CollationKey to a sequence of bits.":"将整理键转换为一系列位。\r\n","java.security.SecureRandom":"java.security.securerandom\r\n","Gets the time formatter with the given formatting style\n            for the default ":"使用给定格式的样式获取时间格式化\r\n            对于默认值\r\n","Reads a property list (key and element pairs) from the input\n            byte stream.":"从输入中读取属性列表（键和元素对）\r\n            字节流。\r\n","java.util.Calendar.WEDNESDAY":"java.util.calendar.wednesday\r\n"," in which all mutative\n            operations (":" 其中所有突变\r\n            操作（\r\n","java.sql.ResultSet.TYPE_SCROLL_SENSITIVE":"java.sql.Resultset.Type_scroll_sensitive\r\n","java.nio.file.Files.getLastModifiedTime(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.getlastmodified时间（java.nio.file.path，java.nio.file.linkoption）\r\n","java.util.DoubleSummaryStatistics.combine(java.util.DoubleSummaryStatistics)":"java.util.doublesummarystatistics.combine（java.util.doublesummaryStatistics）\r\n","Returns the <code>Pattern</code> this <code>Scanner</code> is currently\n            using to match delimiters.":"返回<code>模式</code>此<code> scanner </code>当前是\r\n            用于匹配定界符。\r\n","java.sql.ResultSet.absolute(int)":"java.sql.Resultset.absolute（int）\r\n","java.util.Calendar.getWeekYear()":"java.util.calendar.getweekyear（）\r\n","If this task's pending count is zero, returns this task;\n            otherwise decrements its pending count and returns ":"如果此任务的待处理计数为零，请返回此任务；\r\n            否则会减少其未决计数并返回\r\n","This exception, designed for use by the JCA/JCE engine classes,\n            is thrown when an invalid parameter is passed\n            to a method.":"此例外，旨在由JCA/JCE引擎类使用，\r\n            通过无效参数时被抛弃\r\n            到一种方法。\r\n","java.util.BitSet.toLongArray()":"java.util.bitset.tolongarray（）\r\n","java.nio.file.attribute.BasicFileAttributes.creationTime()":"java.nio.file.attribute.basicfileattributes.creationtime（）\r\n","java.util.ArrayDeque.push(java.lang.Object)":"java.util.arraydeque.push（java.lang.Object）\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String, java.lang.Throwable)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string，java.lang.lang.throwable）\r\n","Returns a localized pattern string describing this date format.":"返回描述此日期格式的局部模式字符串。\r\n","java.util.concurrent.FutureTask.done()":"java.util.concurrent.futuretask.done（）\r\n","java.util.concurrent.ArrayBlockingQueue.put(java.lang.Object)":"java.util.concurrent.ArrayBlockingQueue.put（java.lang.Object）\r\n","Lazily loads the available providers of this loader's service.":"懒惰地加载了该装载机服务的可用提供商。\r\n","java.util.Map.copyOf(java.util.Map)":"java.util.map.copyof（java.util.map）\r\n","java.util.Random.nextBoolean()":"java.util.random.nextboolean（）\r\n","if an element in the array or the search element does not\n         implement ":"如果数组或搜索元素中的元素没有\r\n         实施\r\n","java.text.DecimalFormatSymbols.setNaN(java.lang.String)":"java.text.decimalformatsymbols.setnan（java.lang.string）\r\n"," and returns ":" 并返回\r\n","java.util.Arrays.sort(byte[], int, int)":"java.util.arrays.sort（byte []，int，int）\r\n","Compares the specified object with this map for equality.":"将指定的对象与此地图进行比较以获得平等。\r\n","Returns a string representation of this <code>Locale</code>\n            object, consisting of language, country, variant, script,\n            and extensions as below:\n            <blockquote>\n            language + \"_\" + country + \"_\" + (variant + \"_#\" | \"#\") + script + \"-\" + extensions\n            </blockquote>\n            \n            Language is always lower case, country is always upper case, script is always title\n            case, and extensions are always lower case.":"返回此<code> locale </code>的字符串表示形式\r\n            对象，由语言，国家，变体，脚本组成，\r\n            和以下的扩展：\r\n            <BlockQuote>\r\n            语言 +“ _” + country +“ _” +（变体 +“ _＃” |“＃”） +脚本 +“  - ” +扩展\r\n            </blockquote>\r\n            \r\n            语言总是较低的情况，国家总是较高的案例，脚本总是标题\r\n            案例和扩展总是较低的情况。\r\n","java.security.cert.PKIXParameters.setInitialPolicies(java.util.Set)":"java.security.cert.pkixparameters.setinitialpolicies（java.util.set）\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException()":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalideuthorizationspecexception（）\r\n","java.sql.ParameterMetaData.isNullable(int)":"java.sql.parametermetadata.isnullable（int）\r\n","Scans the next token of the input as an ":"扫描输入的下一个令牌\r\n"," and affine y-coordinate ":" 和仿射y坐标\r\n","java.sql.Array.getResultSet(java.util.Map)":"java.sql.array.getResultset（java.util.map）\r\n","Constructs an empty insertion-ordered ":"构建一个空插入订单\r\n","True iff the values in ":"是iff中的值\r\n","java.util.concurrent.CopyOnWriteArrayList.indexOf(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.indexof（java.lang.object）\r\n","if the wait timed out\n":"如果等待时间\r\n\r\n","Sets the bit at the specified index to ":"将位设置为指定索引\r\n","java.sql.ResultSet.updateTimestamp(java.lang.String, java.sql.Timestamp)":"java.sql.Resultset.updatetimestamp（java.lang.string，java.sql.timestamp）\r\n"," table to the output character stream in a\n            format suitable for using the ":" 表格到输出字符流\r\n            适合使用的格式\r\n","java.util.Collections.unmodifiableNavigableMap(java.util.NavigableMap)":"java.util.collections.unmodifiablenavigablemap（java.util.navigableMap）\r\n","java.security.spec.ECFieldF2m.ECFieldF2m(int, java.math.BigInteger)":"java.security.spec.ecfieldf2m.ecfieldf2m（int，java.math.biginteger）\r\n","java.sql.SQLPermission":"java.sql.sqlpermission\r\n","store(OutputStream out, String comments)":"存储（OutputStream Out，字符串注释）\r\n","java.security.cert.PKIXCertPathValidatorResult.getPublicKey()":"java.security.cert.pkixcertpathvalidatoresult.getpublickey（）\r\n","Returns the highest minimum value for the given calendar field\n            of this <code>GregorianCalendar</code> instance.":"返回给定日历字段的最高最小值\r\n            此<code> gregoriancalendar </code>实例。\r\n","java.util.Arrays.fill(boolean[], boolean)":"java.util.arrays.fill（布尔[]，布尔）\r\n","<strong>Denigrated</strong>, use #setSubject(X500Principal)\n            or #setSubject(byte[]) instead.":"<strong>贬低</strong>，使用#setsubject（x500principal）\r\n            或#setsubject（byte []）。\r\n","Returns the named resource from this ":"从此返回命名资源\r\n","java.security.IdentityScope.IdentityScope(java.lang.String, java.security.IdentityScope)":"java.security.IdentityScope.IdentityScope（java.lang.string，java.security.inderityscope）\r\n","java.security.Security.getProviders(java.lang.String)":"java.security.security.getProviders（java.lang.string）\r\n","java.security.Signer.Signer(java.lang.String, java.security.IdentityScope)":"java.security.signer.signer（java.lang.string，java.security.IdentityScope）\r\n","java.sql.DatabaseMetaData.attributeNullableUnknown":"java.sql.databasemetadata.attributenullableunknown\r\n","Retrieves and removes the last element of this list,\n            or returns ":"检索并删除此列表的最后一个元素，\r\n            或返回\r\n","Returns this Calendar's time value in milliseconds. -or- Sets this Calendar's current time from the given long value.":"以毫秒为单位返回该日历的时间值。 - 或 - 设置本日历的当前时间，从给定的长度值。\r\n","java.security.cert.PKIXParameters.setRevocationEnabled(boolean)":"java.security.cert.pkixparameters.setRevocationEnabled（boolean）\r\n","This class specifies a DSA public key with its associated parameters.":"该类指定具有其关联参数的DSA公钥。\r\n","java.sql.DatabaseMetaData.supportsSavepoints()":"java.sql.databasemetadata.supportssavepoints（）\r\n","Accepts a function that extracts a sort key from a type ":"接受从类型中提取排序键的函数\r\n","java.util.concurrent.FutureTask.get(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.futuretask.get（long，java.util.concurrent.timeunit）\r\n","java.util.Collections.sort(java.util.List, java.util.Comparator)":"java.util.collections.sort（java.util.list，java.util.comparator）\r\n","java.security.Principal":"Java.security.Principal\r\n"," nor a\n            ":" 也不\r\n            \r\n","java.sql.ResultSetMetaData.isSearchable(int)":"java.sql.ResultsetMetadata.issearchable（int）\r\n","Generates a public key object from the provided key\n            specification (key material).":"从提供的密钥中生成公共密钥对象\r\n            规格（关键材料）。\r\n","Checks if all values in the range fit in an ":"检查该范围内的所有值是否适合\r\n","Defines keys for text attributes.":"定义文本属性的键。\r\n","Returns an iteration of the ":"返回迭代\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code> and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>和<code>原因</code>。\r\n","java.sql.PreparedStatement.setClob(int, java.io.Reader, long)":"java.sql.preparedstatement.setClob（int，java.io.Reader，long）\r\n","Sets the minCRLNumber criterion.":"设置Mincrlnumber标准。\r\n","Adds the specified element as the tail (last element) of this list.":"将指定元素作为此列表的尾巴（最后一个元素）。\r\n","java.util.concurrent.DelayQueue.drainTo(java.util.Collection)":"java.util.concurrent.delayqueue.drainto（java.util.collection）\r\n","Have the specified consumer accept the value if a value is present,\n            otherwise do nothing.":"如果存在一个值，请指定的消费者接受该值，\r\n            否则什么都不做。\r\n","if the stack is empty.":"如果堆栈为空。\r\n","java.util.Arrays.equals(boolean[], boolean[])":"java.util.arrays.equals（boolean []，boolean []）\r\n","Converts a given path string to a ":"将给定的路径字符串转换为\r\n","java.text.MessageFormat.applyPattern(java.lang.String)":"java.text.messageformat.applypattern（java.lang.string）\r\n","Returns an immutable set containing ten elements.":"返回一个不变的套件，其中包含十个元素。\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object），java.object）\r\n","java.sql.SQLOutput.writeByte(byte)":"java.sql.sqloutput.writebyte（字节）\r\n","java.util.EnumMap.entrySet()":"java.util.enummap.entryset（）\r\n","java.util.BitSet.flip(int, int)":"java.util.bitset.flip（int，int）\r\n","Adds all of the elements in the specified collection to this set if\n            they're not already present (optional operation).":"如果\r\n            它们尚未存在（可选操作）。\r\n","java.sql.DatabaseMetaData.functionResultUnknown":"java.sql.databasemetadata.functionResultunknown\r\n","java.util.Scanner.hasNext()":"java.util.scanner.hasnext（）\r\n"," that encodes using the\n            <a href=\"#basic\">Basic</a> type base64 encoding scheme.":" 使用\r\n            <a href=\"#basic\">基本</a>键入基本64编码方案。\r\n","Returns the number of keys in this hashtable.":"返回此标签中的键数。\r\n","java.util.Locale.ITALIAN":"java.util.locale.italian\r\n"," if none are\n            present.":" 如果没有\r\n            当下。\r\n","Advances this scanner past the current line and returns the input\n            that was skipped.":"将此扫描仪超越当前线路并返回输入\r\n            那是跳过的。\r\n","java.util.ConcurrentModificationException.ConcurrentModificationException()":"Java.util.concurrentModificationException.concurrentModificationException（）\r\n","Constant for default style pattern.":"默认样式模式的常数。\r\n","java.nio.file.WatchKey.pollEvents()":"java.nio.file.watchkey.pollevents（）\r\n","The constant for representing a start or end time in local wall clock time\n mode, based on timezone's adjusted offset from GMT; includes\n Daylight savings.":"代表本地壁时钟时间开始或结束时间的常数\r\n 模式，基于GMT的时区调整后的偏移；包括\r\n 日光节省。\r\n","java.util.concurrent.FutureTask.get()":"java.util.concurrent.futuretask.get（）\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqltransientexception.sqltransientException（java.lang.string，java.lang.string，int，int，java.lang.thrang.throwable）\r\n","java.util.Arrays.sort(java.lang.Object[], int, int)":"java.util.arrays.sort（java.lang.object []，int，int）\r\n","cofactor <= zero":"cofactor <=零\r\n","java.util.Locale.GERMANY":"java.util.locale.germany\r\n","Retrieves and removes the head of the queue represented by this deque\n            (in other words, the first element of this deque), or returns\n            ":"检索并卸下该Deque代表的队列的头部\r\n            （换句话说，这是此Deque的第一个元素）或返回\r\n            \r\n","java.nio.file.DirectoryNotEmptyException.DirectoryNotEmptyException(java.lang.String)":"java.nio.file.directorynotemptyexception.directorynotemptyException（java.lang.string）\r\n","java.util.LinkedList":"java.util.linkedlist\r\n","java.security.KeyPairGenerator.initialize(int)":"java.security.keypairgenerator.initialize（int）\r\n","This immutable class specifies an elliptic curve private key with\n            its associated parameters.":"这个不变的班级指定了带有椭圆曲线的私钥\r\n            其关联的参数。\r\n","if the initial capacity of\n elements is negative or the load factor is nonpositive":"如果最初的能力\r\n 元素为负或负载因子是非阳性的\r\n","java.security.GeneralSecurityException":"java.security.generalsecurityException\r\n","java.nio.file.Files.isSameFile(java.nio.file.Path, java.nio.file.Path)":"java.nio.file.files.issamefile（java.nio.file.path，java.nio.file.path）\r\n","java.sql.ResultSet.getNClob(java.lang.String)":"java.sql.Resultset.getnClob（java.lang.string）\r\n","if the field is not inside the range of possible fields.\n                The range is starting at 0 up to ":"如果该字段不在可能的字段范围内。\r\n                范围从0到\r\n","java.security.DigestException.DigestException()":"java.security.digestexception.digestexception（）\r\n","java.security.cert.X509CRLEntry":"java.security.cert.x509crlentry\r\n","Retrieves, but does not remove, the head (first element) of this list.":"检索但不删除此列表的头部（第一个元素）。\r\n","Constructs a key pair from the given public key and private key.":"从给定的公共密钥和私钥构造一个密钥对。\r\n","java.sql.ResultSet.updateBoolean(int, boolean)":"java.sql.Resultset.updateboolean（int，boolean）\r\n","Gets the number of bytes of data actually transferred.":"获取实际传输的数据字节数。\r\n"," is invoked\n            and the pending count is zero, or when the unconditional\n            method ":" 被调用\r\n            待处理的数量为零，或者无条件的\r\n            方法\r\n","java.security.CodeSigner.getSignerCertPath()":"java.security.codesigner.getSignerCertPath（）\r\n","Type for private keys.":"输入私钥。\r\n","Constructs a SignedObject from any Serializable object.":"构造来自任何可序列化对象的签名对象。\r\n","java.sql.SQLSyntaxErrorException":"java.sql.sqlsyntaxerrorexception\r\n","java.text.DecimalFormat.DecimalFormat(java.lang.String)":"java.text.decimalformat.decimalformat（java.lang.string）\r\n","java.nio.file.attribute.DosFileAttributeView.setReadOnly(boolean)":"java.nio.file.attribute.dosfileattributeview.setReadonly（boolean）\r\n","ConcurrentSkipListMap":"ConcurrentsKiplistMap\r\n","An object that can be used to get information about the types\n            and properties for each parameter marker in a\n            <code>PreparedStatement</code> object.":"可用于获取有关类型的信息的对象\r\n            和每个参数标记的属性\r\n            <code>准备序列</code>对象。\r\n","java.util.ArrayDeque.offer(java.lang.Object)":"java.util.arraydeque.offer（java.lang.Object）\r\n","dateStyle":"DADESTYLE\r\n","Remove a service previously added using\n            ":"删除先前使用的服务\r\n            \r\n","Returns the creation time.":"返回创建时间。\r\n","if the specified coding does not exist.\n":"如果指定的编码不存在。\r\n\r\n"," of this characteristic\n            2 finite field.":" 这个特征\r\n            2个有限场。\r\n","Constant that is returned when the iterator has reached either the end\n            or the beginning of the text.":"迭代器到达末端时返回的常数\r\n            或文本的开始。\r\n","java.security.acl.Acl.getPermissions(java.security.Principal)":"java.security.acl.acl.getpermissions（java.security.principal）\r\n","Returns the boundary preceding the current boundary.":"返回当前边界之前的边界。\r\n","Get a list of the standard SQL types supported by this database.":"获取此数据库支持的标准SQL类型的列表。\r\n","Retrieves, but does not remove, the head of the queue represented by\n            this deque (in other words, the first element of this deque).":"检索但不删除，队列的头由\r\n            这个Deque（换句话说，这是该deque的第一个要素）。\r\n","This class provides a skeletal implementation of the ":"该课程提供了骨骼实现\r\n","Returns a currency format for the current default\n            ":"返回当前默认值的货币格式\r\n            \r\n","java.nio.file.attribute.BasicFileAttributes":"java.nio.file.attribute.basicfileattributes\r\n","java.sql.SQLException.SQLException(java.lang.String, java.lang.String)":"java.sql.sqlexception.sqlexception（java.lang.string，java.lang.string）\r\n","Sets the designated parameter to the given <code>java.":"将指定的参数设置为给定的<code> Java。\r\n","Returns the database vendor's preferred name for \"procedure\".":"返回数据库供应商的“过程”的首选名称。\r\n","java.util.Arrays.parallelSort(long[])":"java.util.arrays.parallelsort（long []）\r\n","java.util.AbstractSet.AbstractSet()":"java.util.abstractset.abstractset（）\r\n"," such as <code>YEAR</code>, <code>MONTH</code>,\n            <code>DAY_OF_MONTH</code>, <code>HOUR</code>, and so on, and for\n            manipulating the calendar fields, such as getting the date of the next\n            week.":" 例如<code>年</code>，<code>月</code>，\r\n            <code> day_of_month </code>，<code>小时</code>等等\r\n            操纵日历字段，例如获取下一个日期\r\n            星期。\r\n","java.sql.DatabaseMetaData.nullsAreSortedLow()":"java.sql.databasemetadata.nullsaresortedlow（）\r\n","java.time.format.DateTimeFormatterBuilder.padNext(int, char)":"java.time.format.datetimeformatterbuilder.padnext（int，char）\r\n","Sets the size of this vector.":"设置该向量的大小。\r\n","Type for public keys.":"输入公共钥匙。\r\n","java.sql.Connection.createArrayOf(java.lang.String, java.lang.Object[])":"java.sql.connection.createarrayof（java.lang.string，java.lang.object []）\r\n","Closes this file system.":"关闭此文件系统。\r\n","Retrieves a stream that can be used to write to the <code>BLOB</code>\n            value that this <code>Blob</code> object represents.":"检索可用于写入<code> blob </code>的流\r\n            该<code> blob </code>对象表示的值。\r\n","if a database error happens or if the SQL statement returns a\n             ":"如果发生数据库错误或SQL语句返回\r\n             \r\n","java.util.EnumSet.copyOf(java.util.Collection)":"java.util.enumset.copyof（java.util.Collection）\r\n","java.util.ResourceBundle.handleGetObject(java.lang.String)":"java.util.resourcebundle.handlegetObject（java.lang.string）\r\n","java.security.AccessControlException.AccessControlException(java.lang.String, java.security.Permission)":"java.security.accesscontrolexception.accesscontrolexception（java.lang.string，java.security.permission.permission）\r\n"," class, which is used to provide the\n            functionality of a digital signature algorithm.":" 班级，用于提供\r\n            数字签名算法的功能。\r\n","Useful constant for the root locale.":"有用的常数可用于根部位置。\r\n","java.util.Spliterators.spliterator(java.lang.Object[], int)":"java.util.spliterators.spliterator（java.lang.object []，int）\r\n","Unchecked exception thrown when there is a format specifier which does not\n            have a corresponding argument or if an argument index refers to an argument\n            that does not exist.":"当有一个格式指定符时，未选中的异常\r\n            具有相应的参数或参数索引是否指参数\r\n            那不存在。\r\n","Returns the name of the format used to encode this key, or ":"返回用于编码此密钥的格式的名称，或\r\n","Useful constant for SECOND field alignment.":"用于第二场对齐的有用常数。\r\n","Retrieves and removes the head of the queue represented by this deque\n            (in other words, the first element of this deque).":"检索并卸下该Deque代表的队列的头部\r\n            （换句话说，这是该deque的第一个要素）。\r\n","java.nio.file.Path.relativize(java.nio.file.Path)":"java.nio.file.path.relativize（java.nio.file.path）\r\n","java.text.StringCharacterIterator.StringCharacterIterator(java.lang.String)":"Java.text.StringCharacterator.StringCharacterator（Java.lang.String）\r\n","CountDownLatch":"Countdownlatch\r\n","Get the CRL entry, if any, for the given certificate.":"获取给定证书的CRL条目（如果有）。\r\n","Retrieves whether the last value read was SQL <code>NULL</code>.":"检索最后一个值是否为sql <code> null </code>。\r\n","Attribute.class":"attribute.class\r\n","Is the transition local time midnight at the end of day.":"是一天结束时午夜的当地时间。\r\n","java.sql.DatabaseMetaData.supportsDifferentTableCorrelationNames()":"java.sql.databasemetadata.supportsdifferenttablecorrelationnames（）\r\n","Returns a dynamically typesafe view of the specified sorted map.":"返回指定排序地图的动态类型AFTE视图。\r\n"," entry that\n holds a private key.":" 进入\r\n 持有私钥。\r\n","Returns a new CompletableFuture that is completed normally with\n            the same value as this CompletableFuture when it completes\n            normally.":"返回正常完成的新的完整图\r\n            完成时的值与此完整未来相同\r\n            一般。\r\n","Create Bidi from the given text, embedding, and direction information.":"从给定文本，嵌入和指示信息中创建BIDI。\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            hour of the morning or afternoon.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            早晨或下午的小时。\r\n","Gets the current result.":"获取当前结果。\r\n"," and standard\n            deviation ":" 和标准\r\n            偏差\r\n","Sets the bit at the specified index to the complement of its\n            current value.":"将位设置为指定索引的补充\r\n            当前值。\r\n","java.util.concurrent.ConcurrentSkipListMap.ceilingEntry(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.ceilingentry（java.lang.object）\r\n","Constructs an instance of this class with the specified flags.":"用指定的标志构造此类的实例。\r\n","java.util.Calendar.complete()":"java.util.calendar.complete（）\r\n","java.util.LinkedHashSet.LinkedHashSet(java.util.Collection)":"java.util.linkedhashset.linkedhashset（java.util.collection）\r\n","getParties() - 1":"getParties（） -  1\r\n","java.text.CollationElementIterator.getMaxExpansion(int)":"java.text.Collat​​ionElementiter.getMaxExpansion（int）\r\n","java.util.LongSummaryStatistics.accept(int)":"java.util.longsummarystatistics.accept（int）\r\n","Retrieves whether this database supports positioned <code>UPDATE</code>\n            statements.":"检索此数据库是否支持定位<code>更新</code>\r\n            语句。\r\n","Appends a string literal to the formatter.":"将字符串字面添加到格式化器上。\r\n","java.security.AlgorithmParametersSpi.engineGetParameterSpec(java.lang.Class)":"java.security.algorithmparametersspi.enginegetparameterspec（java.lang.class）\r\n","if the month, day, dayOfWeek, or time parameters are out of\n                range for the start or end rule.\n":"如果一个月，日，dayofweek或时间参数不超出\r\n                范围起始规则或最终规则。\r\n\r\n"," method\n            and suppresses IOExceptions that were thrown.":" 方法\r\n            并抑制了被抛出的IOExceptions。\r\n","Adds a provider to the next position available.":"将提供商添加到下一个可用位置。\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, java.lang.String, int, int[], java.lang.Throwable)":"java.sql.batchupdateexception.batchupdateexception（java.lang.string，java.lang.string，int，int，int []，java.lang.thrang.throwable）\r\n","Creates a new DSAPrivateKeySpec with the specified parameter values.":"使用指定的参数值创建一个新的DSAPRIVATEKEYSPEC。\r\n","Returns a KeyFactory object that converts\n            public/private keys of the specified algorithm.":"返回一个转换的键factory对象\r\n            指定算法的公共/私钥。\r\n","if the initial capacity of\n elements is negative\n":"如果最初的能力\r\n 元素为负\r\n\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.string，java.lang.string，java.lang.lang.throwable）\r\n","java.util.Spliterator.ORDERED":"java.util.spliterator.ordered\r\n","java.sql.CallableStatement.getBytes(java.lang.String)":"java.sql.callablestatement.getbytes（java.lang.string）\r\n"," (exclusive) to the complement of its current\n            value.":" （独家）当前的补充\r\n            价值。\r\n","java.nio.charset.StandardCharsets":"Java.nio.Charset.StandardCharsets\r\n","java.time.format.DecimalStyle.withNegativeSign(char)":"java.time.format.decimalstyle.withnegativesign（char）\r\n","java.util.Calendar.JUNE":"java.util.calendar.june\r\n","Indicates that the column stores IN parameters.":"指示该列存储在参数中。\r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.text.DecimalFormatSymbols.getPercent()":"java.text.decimalformatsymbols.getpercent（）\r\n","java.text.DecimalFormatSymbols.setGroupingSeparator(char)":"java.text.decimalformatsymbols.setGroupingSeparator（char）\r\n","java.util.Calendar.add(int, int)":"java.util.calendar.add（int，int）\r\n","java.sql.DatabaseMetaData.procedureColumnResult":"java.sql.databasemetadata.procedurecolumnresult\r\n","java.security.GeneralSecurityException.GeneralSecurityException(java.lang.String)":"java.security.generalsecurityexception.generalsecurityexception（java.lang.string）\r\n","Performs the given task, returning its result upon completion.":"执行给定的任务，在完成后返回结果。\r\n","java.security.KeyStoreSpi.engineStore(java.io.OutputStream, char[])":"java.security.keystorespi.enginestore（java.io.outputstream，char []）\r\n","java.nio.file.spi.FileSystemProvider.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption)":"java.nio.file.spi.filesystemprovider.newoutputstream（java.nio.file.path，java.nio.file.openoption）\r\n","Retrieves a stream that can be used to write the XML value that this SQLXML instance represents.":"检索可以用来编写此SQLXML实例代表的XML值的流。\r\n","java.util.Calendar.setTimeZone(java.util.TimeZone)":"java.util.calendar.settimezone（java.util.timezone）\r\n","java.security.interfaces.DSAParams":"java.security.interfaces.dsaparams\r\n","A connection represents a link from a Java application to a database.":"连接表示从Java应用程序到数据库的链接。\r\n","Implements CharacterIterator.":"实现字符标准器。\r\n","Returns a string identifying the format of this certificate.":"返回识别此证书格式的字符串。\r\n","java.security.Timestamp.getSignerCertPath()":"java.security.timestamp.getSignerCertPath（）\r\n","Returns the name constraints parameter.":"返回名称约束参数。\r\n","Retrieves the value of the designated JDBC <code>TIME</code> parameter as a\n            <code>java.":"检索指定的JDBC <code>时间</code>参数为一个\r\n            <code> Java。\r\n","java.util.Vector.setElementAt(java.lang.Object, int)":"java.util.vector.setelementat（java.lang.Object，int）\r\n","if number of nanoseconds smaller than 0 or greater than\n             999,999,999.\n":"如果小于0或大于0的纳秒数量\r\n             999,999,999。\r\n\r\n","Constructs a new, empty map with the specified expected maximum size.":"构建一个新的空图，其中指定的预期最大尺寸。\r\n","java.util.UUID.compareTo(java.util.UUID)":"java.util.uuid.compareto（java.util.uuid）\r\n","This is the generic Signature exception.":"这是通用签名例外。\r\n","java.sql.SQLWarning.setNextWarning(java.sql.SQLWarning)":"java.sql.sqlwarning.setnextwarning（java.sql.sqlwarning）\r\n","java.security.cert.CertPathChecker":"java.security.cert.certpathchecker\r\n","Possibly initiates an orderly shutdown in which previously\n            submitted tasks are executed, but no new tasks will be\n            accepted.":"可能会启动有序的关闭\r\n            执行提交的任务，但不会新任务\r\n            公认。\r\n","indicating the\n era, e.g., AD or BC in the Julian calendar. ":"指示\r\n 朱利安日历中的AD或BC时代。\r\n","ForkJoinPool#commonPool()":"forkjoinpool＃commonpool（）\r\n","java.util.GregorianCalendar.roll(int, boolean)":"java.util.gregoriancalendar.roll（int，boolean）\r\n"," if no\n            values have been recorded.":" 如果不\r\n            值已记录。\r\n","java.text.CollationKey":"java.text.Collat​​ionKey\r\n","java.util.concurrent.CompletableFuture.delayedExecutor(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.completablefuture.delayedexecutor（long，java.util.concurrent.timeunit）\r\n","Returns the result of accumulating all values using the\n            given reducer to combine values, or null if none.":"返回使用\r\n            给定的还原器以组合值，或者如果没有值，则为null。\r\n","Retrieves the value of the designated JDBC <code>BLOB</code> parameter as a\n            ":"检索指定的JDBC <code> blob </code>参数为一个\r\n            \r\n","Inserts the specified element at the tail of this queue, waiting\n            for space to become available if the queue is full.":"将指定元素插入该队列的尾部，等待\r\n            如果队列已满，则可以使用空间。\r\n","java.text.DateFormat.HOUR_OF_DAY0_FIELD":"java.text.dateformat.hour_of_day0_field\r\n","SecretKeyEntry":"SecretKeyentry\r\n","(oldVal==null ?  e==null : oldVal.equals(e))":"（oldVal == null？e == null：oldval.equals（e））\r\n"," object of\n            the form:\n            <blockquote>":" 对象的\r\n            表格：\r\n            <BlockQuote>\r\n","Constructs a string tokenizer for the specified string.":"为指定的字符串构造字符串令牌。\r\n","Tells whether or not a file is considered <em>hidden</em>.":"告诉是否将文件视为<em>隐藏</em>。\r\n"," elements with normal basis.":" 正常基础的元素。\r\n","java.util.ResourceBundle.keySet()":"java.util.resourcebundle.keyset（）\r\n","java.security.InvalidKeyException.InvalidKeyException(java.lang.Throwable)":"java.security.invalidkeyexception.invalidkeyexception（java.lang.throwable）\r\n","java.util.concurrent.ForkJoinPool.hasQueuedSubmissions()":"java.util.concurrent.forkjoinpool.hasqueuedsubmissions（）\r\n","java.sql.CallableStatement.getClob(int)":"java.sql.callablestatement.getClob（int）\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCertificate(java.io.InputStream)":"java.security.cert.certificatefactoryspi.enginegeneratecertificate（java.io.inputstream）\r\n","java.security.spec.RSAPrivateKeySpec.getModulus()":"java.security.spec.rsaprivatekeyspec.getmodulus（）\r\n","java.util.DoubleSummaryStatistics.getCount()":"java.util.doublesummarystatistics.getCount（）\r\n","Removes the first occurrence of the specified element in this\n            deque (when traversing the deque from head to tail).":"删除此中指定元素的第一次出现\r\n            Deque（从头部到尾巴穿越deque时）。\r\n","java.util.TimeZone.getID()":"java.util.timezone.getID（）\r\n","java.security.spec.RSAOtherPrimeInfo.RSAOtherPrimeInfo(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)":"java.security.spec.rsaotherprimeinfo.rsaotherprimeinfo（java.math.biginteger，java.math.biginteger，java.math.biginteger）\r\n","java.util.StringTokenizer.countTokens()":"java.util.stringtokenizer.counttokens（）\r\n","Retrieves the character position at which the specified\n            <code>Clob</code> object <code>searchstr</code> appears in this\n            <code>Clob</code> object.":"检索指定的角色位置\r\n            <code> clob </code>对象<code> searchstr </code>出现在此中\r\n            <code> clob </code>对象。\r\n","This class consists exclusively of static methods for obtaining\n            encoders and decoders for the Base64 encoding scheme.":"此类仅由用于获取的静态方法组成\r\n            基本64编码方案的编码和解码器。\r\n","java.util.LinkedList.size()":"java.util.linkedlist.size（）\r\n","Reads the value of a file attribute.":"读取文件属性的值。\r\n","java.util.TimeZone.getAvailableIDs(int)":"java.util.timezone.getavailableids（int）\r\n","The constructor for an ":"一个构造函数\r\n","Returns a dynamically typesafe view of the specified queue.":"返回指定队列的动态类型AFTE视图。\r\n","Initializes this signature engine with the specified parameter set.":"用指定的参数集初始化此签名引擎。\r\n","java.sql.SQLException":"java.sql.sqlexception\r\n"," if this list contains the specified element.":" 如果此列表包含指定元素。\r\n"," that this\n            elliptic curve is over.":" 那\r\n            椭圆曲线已经结束。\r\n","java.text.CharacterIterator":"java.text.CharacterIterator\r\n","java.util.ResourceBundle.setParent(java.util.ResourceBundle)":"java.util.resourcebundle.setparent（java.util.resourcebundle）\r\n","java.text.Collator.getStrength()":"java.text.collat​​or.getstrength（）\r\n","java.util.Calendar.get(int)":"java.util.calendar.get（int）\r\n","#READ_DATA":"#Read_Data\r\n","Formats a Date into a date/time string.":"将日期格式化为日期/时间字符串。\r\n","java.util.AbstractList":"Java.util.AbstractList\r\n","java.util.DuplicateFormatFlagsException.getFlags()":"java.util.duplicateformatflagsexception.getFlags（）\r\n","java.sql.CallableStatement.getObject(int, java.util.Map)":"java.sql.callablestatement.getObject（int，java.util.map）\r\n","Retrieves the number of characters\n            in the <code>CLOB</code> value\n            designated by this <code>Clob</code> object.":"检索字符的数量\r\n            在<code> clob </code>值中\r\n            由此<code> clob </code>对象指定。\r\n"," for the specified alias\n            with the specified protection parameter.":" 对于指定的别名\r\n            带有指定的保护参数。\r\n","Defines the bits for use with the ":"定义用于与\r\n","Returns a Set of Strings containing the names of all available\n            algorithms or types for the specified Java cryptographic service\n            (e.":"返回一组包含所有可用名称的字符串\r\n            指定Java加密服务的算法或类型\r\n            （e。\r\n","java.util.Arrays.parallelSort(java.lang.Object[], int, int, java.util.Comparator)":"java.util.arrays.parallelsort（java.lang.object []，int，int，java.util.comparator）\r\n"," have not been called, or\n             ":" 尚未打电话给\r\n             \r\n","java.util.Collections.unmodifiableList(java.util.List)":"java.util.collections.unmodifiablestist（java.util.list）\r\n","java.util.LinkedList.peekFirst()":"java.util.linkedlist.peekfirst（）\r\n"," and the coefficients ":" 和系数\r\n"," doesn't support ":" 不支持\r\n"," if this list is empty.":" 如果此列表为空。\r\n","Returns a Source for reading the XML value designated by this SQLXML instance.":"返回读取该SQLXML实例指定的XML值的来源。\r\n","java.util.Collections.swap(java.util.List, int, int)":"java.util.collections.swap（java.util.list，int，int）\r\n","java.util.NavigableMap.tailMap(java.lang.Object, boolean)":"java.util.navigablemap.tailmap（java.lang.Object，boolean）\r\n","Sets the format to use for the format elements within the\n            previously set pattern string that use the given argument\n            index.":"设置用于用于格式元素的格式\r\n            先前设置的模式字符串，使用给定参数\r\n            指数。\r\n","Returns a file's last modified time.":"返回文件的最后修改时间。\r\n","java.security.NoSuchAlgorithmException.NoSuchAlgorithmException()":"java.security.nosuchalgorithmexception.nosuchalgorithmexception（）\r\n","java.sql.ResultSet.updateAsciiStream(java.lang.String, java.io.InputStream, long)":"java.sql.Resultset.updateasciistream（java.lang.string，java.io.inputstream，long）\r\n","Updates the digest using the specified array of bytes,\n            starting at the specified offset.":"使用指定的字节数组更新摘要，\r\n            从指定的偏移开始。\r\n","java.util.concurrent.ExecutionException.ExecutionException(java.lang.String, java.lang.Throwable)":"java.util.concurrent.executionexception.executionException（java.lang.string，java.lang.throwable）\r\n","Returns the given number of seed bytes.":"返回给定的种子字节数。\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getCrtCoefficient()":"java.security.spec.rsamultimeprimeprimprivatecrtkeyspec.getcrtceefficer（）\r\n","java.sql.ResultSet.moveToInsertRow()":"java.sql.Resultset.movetoinsertrow（）\r\n","java.util.BitSet.previousSetBit(int)":"java.util.bitset.previoussetbit（int）\r\n","java.sql.DatabaseMetaData.importedKeySetDefault":"java.sql.databasemetadata.importedkeysetdefault\r\n","java.util.Enumeration.nextElement()":"java.util.enumeration.nextelement（）\r\n","java.util.ArrayList.spliterator()":"java.util.arraylist.spliterator（）\r\n"," of certification path checkers. -or- Sets a ":" 认证路径检查器。 - 或设置a\r\n","java.sql.CallableStatement.setCharacterStream(java.lang.String, java.io.Reader, int)":"java.sql.callablestatement.setcharacterstream（java.lang.string，java.io.Reader，int）\r\n","Returns the starting position of the first occurrence of the specified\n            target list within the specified source list, or -1 if there is no\n            such occurrence.":"返回指定的首次出现的起始位置\r\n            指定源列表中的目标列表，如果没有，则-1\r\n            这种情况。\r\n","java.nio.file.attribute.FileAttribute.name()":"java.nio.file.attribute.fileattribute.name（）\r\n","java.security.KeyManagementException.KeyManagementException()":"Java.Security.KeyManagementException.KeyManagementException（）\r\n","StringJoiner":"弦乐器\r\n","Sets the daylight saving time start rule to a fixed date within a month.":"将日光节省时间开始规则设置为一个月内的固定日期。\r\n","Writes the next attribute to the stream as a <code>String</code>\n            in the Java programming language.":"将下一个属性写入流的<code>字符串</code>\r\n            在Java编程语言中。\r\n","Charset Charsets":"charset charset\r\n","Gets the time definition, specifying how to convert the time to an instant.":"获取时间定义，指定如何将时间转换为即时。\r\n","Tests if some key maps into the specified value in this hashtable.":"测试是否在此标签中为指定值中的一些密钥映射。\r\n","Returns the maximum number of characters in a user name for the database.":"返回数据库用户名中的最大字符数。\r\n","java.util.SplittableRandom.nextLong(long, long)":"java.util.splittablerandom.nextlong（长，长）\r\n","java.sql.ResultSet.getSQLXML(int)":"java.sql.Resultset.getSqlxml（int）\r\n","Retrieves, but does not remove, the first element of this deque,\n            or returns ":"检索但不会删除该deque的第一个元素，\r\n            或返回\r\n","Gets and removes the head of the queue.":"获取并卸下队列的头部。\r\n","qualifier":"预选赛\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>DISTINCT</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code>不同的</code>。\r\n"," if no values were\n            recorded.":" 如果没有值是\r\n            记录。\r\n","Returns the precision":"返回精度\r\n","Returns a count of how many objects this ":"返回计数多少物体\r\n","java.util.SplittableRandom.split()":"java.util.splittablerandom.split（）\r\n","Appends a localized date-time pattern to the formatter.":"将局部日期时间模式附加到格式化器中。\r\n","Returns the current count.":"返回当前计数。\r\n","A runtime exception for Provider exceptions (such as\n            misconfiguration errors or unrecoverable internal errors),\n            which may be subclassed by Providers to\n            throw specialized, provider-specific runtime errors.":"提供商例外的运行时例外（例如\r\n            配置错误或无法恢复的内部错误），\r\n            提供者可能会将\r\n            投掷专业的，特定于提供商的运行时错误。\r\n","Directory entry modified.":"目录条目修改。\r\n","KeyStoreException":"KeyStoreException\r\n","Returns the previous element in the list and moves the cursor\n            position backwards.":"返回列表中的先前元素并移动光标\r\n            位置向后。\r\n","java.sql.CallableStatement.getDate(int)":"java.sql.callablestatement.getdate（int）\r\n","java.security.cert.PKIXRevocationChecker.setOcspExtensions(java.util.List)":"java.security.cert.pkixrevocation checker.setocspextensions（java.util.list）\r\n","java.security.SignatureException.SignatureException()":"java.security.signatureexception.signatureexception（）\r\n","java.util.Collections.fill(java.util.List, java.lang.Object)":"java.util.collections.fill（java.util.list，java.lang.Object）\r\n","java.security.SecureRandom.setSeed(byte[])":"java.security.securerandom.setseed（byte []）\r\n","The output stream for writing the attributes of a user-defined\n            type back to the database.":"用于编写用户定义的属性的输出流\r\n            键入数据库。\r\n","java.util.concurrent.ConcurrentHashMap.reduceValuesToLong(long, java.util.function.ToLongFunction, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducevaluestolong（long，java.util.function.tolongfunction.tolongfunction，long，java.util.function.function.longbinaryoperator）\r\n","java.util.OptionalDouble.orElse(double)":"java.util.optionaldouble.orelse（double）\r\n","Returns a CollationElementIterator for the given CharacterIterator.":"返回给定字符标准仪的colationelementerator。\r\n","Subject":"主题\r\n","DONE is returned by previous(), next(), next(int), preceding(int)\n            and following(int) when either the first or last text boundary has been\n            reached.":"完成由上一个（），next（），next（int）返回（int）\r\n            并在第一个文本边界或最后一个文本边界时进行以下（int）\r\n            到达。\r\n","Returns a default thread factory used to create new threads.":"返回用于创建新线程的默认线程工厂。\r\n","Returns an enumeration of the permissions in this ACL entry.":"返回此ACL条目中权限的枚举。\r\n","java.util.DoubleSummaryStatistics.getAverage()":"java.util.doublesummarystatistics.getAverage（）\r\n","Clones this ACL entry.":"克隆这个ACL条目。\r\n","Gets a keystore ":"获取一个密钥库\r\n","Returns the lowest maximum value for the given calendar field\n            of this <code>Calendar</code> instance.":"返回给定日历字段的最低值\r\n            此<code>日历</code>实例。\r\n","java.util.AbstractCollection.clear()":"java.util.abstractcollection.clear（）\r\n"," (instead of\n             NoSuchAlgorithmException) as in 1.4 release":" （代替\r\n             nosuchalgorithmexception）如1.4释放\r\n","java.util.concurrent.ForkJoinPool.getActiveThreadCount()":"java.util.concurrent.forkjoinpool.getactivethreadcount（）\r\n","java.security.PrivilegedExceptionAction":"Java.security.privilegedExceptionAction\r\n","java.util.Scanner.nextBigInteger()":"java.util.scanner.nextbiginteger（）\r\n","Returns a new ResourceBundle.":"返回一个新的资源围栏。\r\n","Sets the designated parameter to the given <code>Reader</code>\n            object, which is the given number of characters long.":"将指定的参数设置为给定的<code>读取器</code>\r\n            对象，这是给定的字符数。\r\n",", inclusive, and ":"，包容性，以及\r\n","Constructor for X.":"X的构造函数。\r\n","Returns number of columns contained in the associated result set.":"返回相关结果集中包含的列数。\r\n","Sets the result of this future to the given value unless\n            this future has already been set or has been cancelled.":"将未来的结果设置为给定值，除非\r\n            这个未来已经设置或已取消。\r\n","Useful constant for DATE field alignment.":"日期字段对齐的有用常数。\r\n","Compares the character data stored in two different strings based on the\n            collation rules.":"比较基于两个不同字符串中存储的字符数据\r\n            整理规则。\r\n","java.util.Hashtable.containsKey(java.lang.Object)":"java.util.hashtable.containskey（java.lang.Object）\r\n","java.security.NoSuchAlgorithmException.NoSuchAlgorithmException(java.lang.String, java.lang.Throwable)":"java.security.nosuchalgorithmexception.nosuchalgorithmexception（java.lang.string，java.lang.lang.throwable）\r\n","java.security.interfaces.DSAKey":"java.security.interfaces.dsakey\r\n","Gets information about the possible properties for this driver.":"获取有关此驱动程序可能属性的信息。\r\n","java.util.Vector.lastElement()":"java.util.vector.lastelement（）\r\n","Returns an array of all locales for which the\n            <code>getInstance</code> methods of this class can return\n            localized instances.":"返回所有位置的数组\r\n            <code> getInstance </code>此类的方法可以返回\r\n            本地化实例。\r\n"," enumerates the potential PKIX-specific reasons\n            that an X.":" 列举潜在的PKIX特定原因\r\n            那个X。\r\n","Computes a result, or throws an exception if unable to do so.":"计算结果，或者如果无法这样做，则会引发异常。\r\n","Retrieves a description of the user-defined types (UDTs) defined\n            in a particular schema.":"检索定义的用户定义类型（UDT）的描述\r\n            在特定的模式中。\r\n","Retrieves whether this database supports some form of\n            <code>GROUP BY</code> clause.":"检索此数据库是否支持某种形式的\r\n            </code> </code>子句组。\r\n","java.util.Arrays.hashCode(float[])":"java.util.arrays.hashcode（float []）\r\n","ProviderException":"ProvidErexception\r\n","Returns a list of candidate locales according to ":"根据\r\n","java.sql.Statement.RETURN_GENERATED_KEYS":"java.sql.statement.return_generated_keys\r\n","Determines whether the database is in read-only mode.":"确定数据库是否处于仅读取模式。\r\n","Runs the given possibly blocking task.":"运行给定的可能阻止任务。\r\n","Create Bidi from the given paragraph of text and base direction.":"从给定的文本和基本方向的给定段落创建比迪。\r\n","java.security.DigestInputStream.on(boolean)":"java.security.digestinputstream.on（布尔）\r\n","java.util.concurrent.ConcurrentHashMap.contains(java.lang.Object)":"java.util.concurrent.concurrenthashmap.contains（java.lang.object）\r\n","java.util.Properties.storeToXML(java.io.OutputStream, java.lang.String, java.lang.String)":"java.util.properties.storetoxml（java.io.outputstream，java.lang.string，java.lang.string）\r\n","java.security.KeyException.KeyException()":"java.security.keyexception.keyexception（）\r\n"," is less than first index of\n             ":"小于第一个索引的\r\n             \r\n","Returns the otherPrimeInfo or null if there are only\n            two prime factors (p and q).":"如果只有\r\n            两个主要因素（P和Q）。\r\n","java.util.Locale.setDefault(java.util.Category, java.util.Locale)":"java.util.locale.setdefault（java.util.category，java.util.locale）\r\n","Writes the next attribute to the stream as an array of bytes.":"将下一个属性作为字节数组写入流。\r\n","java.nio.file.FileSystem.supportedFileAttributeViews()":"java.nio.file.filesystem.supportedfileattributeviews（）\r\n","Indicates that the scope of the best row identifier is\n            very temporary, lasting only while the\n            row is being used.":"表示最佳行标识符的范围是\r\n            非常暂时，仅持续\r\n            正在使用行。\r\n","Returns a (transparent) specification of this parameter object.":"返回此参数对象的（透明）规范。\r\n","java.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createfile（java.nio.file.path，java.nio.file.tribute.fileattribute）\r\n","Gets the character used to separate positive and negative subpatterns\n            in a pattern. -or- Sets the character used to separate positive and negative subpatterns\n            in a pattern.":"获取用来分离正面和负面的角色\r\n            以模式。 - 或设置用于分离正面和阴性子图案的字符\r\n            以模式。\r\n","java.nio.file.Path.endsWith(java.nio.file.Path)":"java.nio.file.path.endswith（java.nio.file.path）\r\n","Removes the first occurrence of the specified element from this deque.":"去除该deque的指定元素的第一次出现。\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPublicExponent()":"java.security.spec.rsamultimeprimeprimprivatecrtkeyspec.getpublicexponent（）\r\n","java.sql.CallableStatement.getTime(int, java.util.Calendar)":"java.sql.callablestatement.getTime（int，java.util.calendar）\r\n"," object. -or- Sets this <code>Date</code> object to represent a point in time that is\n            <code>time</code> milliseconds after January 1, 1970 00:00:00 GMT.":" 目的。 - 或 - 设置此<code> date </code>对象表示一个时间点\r\n            <code>时间</code>毫秒在1970年1月1日之后00:00：00 GMT。\r\n","if decoding fails.":"如果解码失败。\r\n","java.util.EnumMap.clone()":"java.util.enummap.clone（）\r\n","Driver properties for making a connection.":"建立连接的驱动程序属性。\r\n","java.security.MessageDigest.update(byte[])":"java.security.messagedigest.update（byte []）\r\n","if the provided string is ":"如果提供的字符串是\r\n","java.util.OptionalInt.of(int)":"java.util.optionalint.of（int）\r\n","Sets the designated parameter to the given input stream, which will have\n            the specified number of bytes.":"将指定的参数设置为给定的输入流，将\r\n            指定的字节数。\r\n","The <code>CollationElementIterator</code> class is used as an iterator\n            to walk through each character of an international string.":"<code> ColationElementerator </code>类用作迭代器\r\n            浏览国际字符串的每个角色。\r\n","\n            which will allow certificates and CRLs to be retrieved from the\n            specified ":"\r\n            这将允许证书和CRL从\r\n            指定的\r\n","java.time.temporal.ValueRange.getMaximum()":"java.time.temporal.valuerange.getMaximum（）\r\n","Returns an array containing all of the elements in this set; the\n            runtime type of the returned array is that of the specified array.":"返回包含本集中所有元素的数组；这\r\n            返回的数组的运行时类型是指定数组的运行时类型。\r\n","java.util.AbstractSequentialList.AbstractSequentialList()":"java.util.abstractsequelylist.abstractsequersentiallist（）\r\n"," object that, when\n            called, runs the given privileged exception action and returns\n            its result.":" 对象，当\r\n            称为，运行给定的特权异常诉讼并返回\r\n            它的结果。\r\n","Replaces all occurrences of one specified value in a list with another.":"用另一个指定值替换一个指定值的所有出现。\r\n","java.util.Spliterators.spliterator(java.util.Iterator, long, int)":"java.util.spliterators.spliterator（java.util.iterator，long，int）\r\n","java.sql.BatchUpdateException.BatchUpdateException(java.lang.String, int[])":"java.sql.batchupdateexception.batchupdateexception（java.lang.string，int []）\r\n","java.util.concurrent.ConcurrentHashMap.reduceKeysToLong(long, java.util.function.ToLongFunction, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducekeystolong（long，java.util.function.tolongfunction，long，java.util.function.longbinaryoperator）\r\n","GregorianCalendar":"公历\r\n","java.nio.file.WatchService":"java.nio.file.watchservice\r\n","Returns a human-readable description of the provider and its\n            services.":"返回对提供商及其的可读描述\r\n            服务。\r\n","java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption)":"java.nio.file.files.newinputstream（java.nio.file.path，java.nio.file.openoption）\r\n","java.security.AlgorithmParametersSpi.engineInit(java.security.spec.AlgorithmParameterSpec)":"java.security.algorithmparametersspi.engineinit（java.security.spec.algorithmparameterspec）\r\n","Registers an object with a watch service.":"用手表服务注册对象。\r\n","java.util.DoubleSummaryStatistics.accept(double)":"java.util.doublesummarystatistics.accept（double）\r\n","The representation (mapping) in the Java programming language of an SQL ROWID\n            value.":"SQL ROWID的Java编程语言中的表示形式（映射）\r\n            价值。\r\n","Spliterator.OfLong":"分解器\r\n","java.util.Calendar.TUESDAY":"java.util.calendar.tuesday\r\n","Returns the name of the algorithm implemented by this ":"返回由此实现的算法的名称\r\n","OptionalLong":"Optionallong\r\n","java.sql.Connection.TRANSACTION_SERIALIZABLE":"java.sql.connection.transaction_serializable\r\n","java.sql.ResultSet.findColumn(java.lang.String)":"java.sql.Resultset.findcolumn（java.lang.string）\r\n","java.text.DateFormat.DAY_OF_YEAR_FIELD":"java.text.dateformat.day_of_year_field\r\n"," with no characters in it using copies\n            of the supplied ":" 没有字符使用副本\r\n            提供的\r\n","java.sql.DataTruncation.DataTruncation(int, boolean, boolean, int, int, java.lang.Throwable)":"java.sql.datatruncation.datatruncation（int，布尔值，布尔值，int，int，java.lang.throwable）\r\n","Retrieves whether this database ignores a data definition statement\n            within a transaction.":"检索该数据库是否忽略数据定义语句\r\n            在交易中。\r\n","Checks if policy mapping is inhibited. -or- Sets the PolicyMappingInhibited flag.":"检查是否禁止策略映射。 - 或设置政策合并的标志。\r\n","java.util.Dictionary.remove(java.lang.Object)":"java.util.dictionary.remove（java.lang.Object）\r\n","Returns an enumeration of the values in this dictionary.":"返回该字典中值的列举。\r\n","java.security.Signature.state":"java.security.signature.state\r\n","Changes the parse style to be case insensitive for the remainder of the formatter.":"更改解析样式对格式的其余部分不敏感。\r\n","Returns the value ":"返回值\r\n","java.util.Random.nextLong()":"java.util.random.nextlong（）\r\n","java.util.UUID":"java.util.uuid\r\n","genParams":"Genparams\r\n","The representation (mapping) in\n            the Java<sup><font size=-2>TM</font></sup> programming\n            language of an SQL\n            <code>BLOB</code> value.":"表示（映射）\r\n            java <sup> <font size = -2> tm </font> </sup>编程\r\n            SQL的语言\r\n            <code> blob </code>值。\r\n"," with the given detail\n            message.":"带有给定的细节\r\n            信息。\r\n","if the algorithm for recovering the key is not available.":"如果无法恢复密钥的算法。\r\n","java.util.Calendar.getGreatestMinimum(int)":"java.util.calendar.getgreatestminimine（int）\r\n","java.security.Signature.initVerify(java.security.cert.Certificate)":"java.security.signature.initverify（java.security.cert.certificate）\r\n","IssuerAltName":"IssueralTname\r\n","java.util.concurrent.ConcurrentHashMap.forEach(long, java.util.function.BiConsumer)":"java.util.concurrent.concurrenthashmap.foreach（long，java.util.function.biconsumer）\r\n","java.util.Arrays.parallelSort(int[])":"java.util.arrays.parallelsort（int []）\r\n","count > levels.length - levelStart":"count> Levels.Length -LevelStart\r\n","java.text.DecimalFormatSymbols.getPerMill()":"java.text.decimalformatsymbols.getpermill（）\r\n","if access is not granted.\n":"如果未授予访问。\r\n\r\n","java.sql.DatabaseMetaData.supportsOpenStatementsAcrossCommit()":"java.sql.databasemetadata.supportsopenstatementsacrosscommit（）\r\n","Searches the specified array for the specified object using the binary\n            search algorithm.":"使用二进制文件搜索指定对象的指定数组\r\n            搜索算法。\r\n","java.util.concurrent.CompletableFuture.defaultExecutor()":"java.util.concurrent.completablefuture.defaultexecutor（）\r\n","ResultSetMetaData":"RusticlesetMetadata\r\n","Resource bundles contain locale-specific objects.":"资源捆绑包含特定于区域的对象。\r\n","Reset this iterator to point to a new string.":"重置此迭代器以指向一个新字符串。\r\n","Returns the list of children of this node as an ":"返回该节点的孩子列表\r\n","java.sql.Date":"java.sql.date\r\n","inStream":"乐器\r\n","java.util.concurrent.ExecutionException.ExecutionException()":"java.util.concurrent.executionException.executionException（）\r\n","java.util.Calendar.setLenient(boolean)":"java.util.calendar.setlenient（boolean）\r\n","location = size()":"位置= size（）\r\n","java.security.spec.InvalidKeySpecException.InvalidKeySpecException()":"java.security.spec.invalidkeyspecexception.invalidkeyspecexception（）\r\n","Sets a security property value.":"设置安全属性值。\r\n","java.util.concurrent.BlockingDeque.put(java.lang.Object)":"java.util.concurrent.blockingdeque.put（java.lang.Object）\r\n","java.security.NoSuchAlgorithmException":"java.security.nosuchalgorithmexception\r\n","\n            specification.":"\r\n            规格。\r\n","java.text.Collator.CANONICAL_DECOMPOSITION":"java.text.collat​​or.canonical_decomposition\r\n","Retrieves whether this database supports the ODBC Extended SQL grammar.":"检索该数据库是否支持ODBC扩展SQL语法。\r\n"," with the\n            specified, detailed message.":" 与\r\n            指定的详细消息。\r\n","java.text.AttributedString.AttributedString(java.text.AttributedCharacterIterator)":"java.text.AttributedString.AttributedString（java.text.attributed Characteriterator）\r\n","java.nio.file.ClosedDirectoryStreamException.ClosedDirectoryStreamException()":"java.nio.file.closeddirectorystreamexception.closeddirectorystreamexception（）\r\n","XML":"XML\r\n","java.util.concurrent.ForkJoinPool.shutdown()":"java.util.concurrent.forkjoinpool.shutdown（）\r\n","Removes all of the elements from this collection (optional operation).":"删除此集合中的所有元素（可选操作）。\r\n","java.security.cert.PKIXCertPathBuilderResult":"java.security.cert.pkixcertpathbuilderresult\r\n","java.sql.DataTruncation.getIndex()":"java.sql.datatruncation.getIndex（）\r\n","Returns the standard name of the algorithm for this key pair generator.":"返回此密钥对生成器的算法的标准名称。\r\n","java.nio.file.FileSystem.provider()":"java.nio.file.filesystem.provider（）\r\n","java.security.cert.X509Certificate.getIssuerX500Principal()":"java.security.cert.x509certificate.getissuerx500principal（）\r\n"," as\n            its detail message.":" 作为\r\n            它的详细信息。\r\n","java.util.concurrent.Callable":"java.util.concurrent.clable\r\n","java.security.cert.X509Certificate.getKeyUsage()":"java.security.cert.x509certificate.getKeyusage（）\r\n","Returns the minimum value that the specified calendar field\n            could have, given the time value of this <code>Calendar</code>.":"返回指定日历字段的最小值\r\n            鉴于此<code>日历</code>的时间值。\r\n","java.util.Formatter.Formatter(java.io.OutputStream, java.lang.String, java.util.Locale)":"java.util.formatter.formatter（java.io.outputstream，java.lang.string，java.util.locale）\r\n","java.security.acl.Acl.removeEntry(java.security.Principal, java.security.acl.AclEntry)":"java.security.acl.acl.removeentry（java.security.principal，java.security.acl.acl.aclentry）\r\n","The interface for a Multi-Prime RSA private key.":"多功能RSA私钥的接口。\r\n","A key-value mapping with mutable values.":"具有可变值的键值映射。\r\n","java.util.AbstractQueue.element()":"java.util.abstractqueue.element（）\r\n","Retrieves whether this database supports column aliasing.":"检索此数据库是否支持列混叠。\r\n","KeyException":"KeyException\r\n","Retrieves, but does not remove, the head of this queue,\n            or returns ":"检索但不删除该队列的头部，\r\n            或返回\r\n","Retrieves and removes the last element of this deque, waiting\n            up to the specified wait time if necessary for an element to\n            become available.":"检索并删除该deque的最后一个元素，等待\r\n            如果必要的元素，则达到指定的等待时间\r\n            可用。\r\n","java.sql.CallableStatement.setNCharacterStream(java.lang.String, java.io.Reader, long)":"java.sql.callablestatement.setncharacterstream（java.lang.string，java.io.Reader，long）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as an int value in the default radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用默认radix解释为int值\r\n            \r\n","Ends an optional section.":"结束可选部分。\r\n"," containing the given key and value.":" 包含给定的键和价值。\r\n","java.security.spec.ECPoint.getAffineY()":"java.security.spec.ecpoint.getaffiney（）\r\n","java.util.Map.remove(java.lang.Object)":"java.util.map.remove（java.lang.Object）\r\n","java.util.PriorityQueue.spliterator()":"java.util.priorityqueue.spliterator（）\r\n","if the specified parameters cannot be used to initialize this\n             certificate store instance.":"如果指定参数不能用于初始化此\r\n             证书存储实例。\r\n","Updates the value of the hidden attribute.":"更新隐藏属性的值。\r\n"," over the elements in this deque.":" 在这个Deque中的元素上。\r\n","java.util.Date.getDate()":"java.util.date.getdate（）\r\n","java.text.DateFormatSymbols.setAmPmStrings(java.lang.String[])":"java.text.dateformatsymbols.setAmpMsrings（java.lang.string []）\r\n","java.util.concurrent.ForkJoinTask.invokeAll(java.util.Collection)":"java.util.concurrent.forkjointask.invokeall（java.util.collection）\r\n","java.util.Calendar.MINUTE":"java.util.calendar.minute\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.Throwable)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.throwable）\r\n","Copies the specified array, truncating or padding with ":"复制指定阵列，截断或填充\r\n","java.security.cert.PKIXCertPathChecker.init(boolean)":"java.security.cert.pkixcertpathchecker.init（布尔值）\r\n","java.security.spec.PSSParameterSpec.getMGFAlgorithm()":"java.security.spec.pssparameterspec.getmgfalgorithm（）\r\n","java.util.Properties.load(java.io.InputStream)":"java.util.properties.load（java.io.inputstream）\r\n","Parses text from a string to produce a <code>Number</code>.":"从字符串中解析文本以产生<code>号码</code>。\r\n",",\n            returns that ":"，，，，\r\n            返回\r\n","java.sql.SQLOutput.writeRef(java.sql.Ref)":"java.sql.sqloutput.writeref（java.sql.ref）\r\n"," with the same name is already present\n             in the specified scope.\n":" 同名已经存在\r\n             在指定的范围中。\r\n\r\n","java.sql.DatabaseMetaData.supportsLikeEscapeClause()":"java.sql.databasemetadata.supportslikeescapeclause（）\r\n","if (start > end)\n":"如果（开始>结束）\r\n\r\n","java.security.KeyStoreSpi.engineGetKey(java.lang.String, char[])":"java.security.keystorespi.enginegetkey（java.lang.string，char []）\r\n","java.text.Bidi.isMixed()":"java.text.bidi.ismixed（）\r\n","Performs a logical <b>XOR</b> of this bit set with the bit set\n            argument.":"执行此位设置的逻辑<b> xor </b>与位设置\r\n            争论。\r\n","java.sql.DriverManager.getDrivers()":"java.sql.drivermanager.getDrivers（）\r\n","java.nio.file.WatchKey.reset()":"java.nio.file.watchkey.reset（）\r\n","Retrieves and removes the next watch key, waiting if necessary up to the\n            specified wait time if none are yet present.":"检索并删除下一个手表键，如有必要\r\n            指定的等待时间，如果不存在。\r\n","if access is not granted to the guarded object.\n":"如果未授予访问权限。\r\n\r\n","java.time.format.TextStyle":"java.time.format.textstyle\r\n","java.util.concurrent.ForkJoinPool.getAsyncMode()":"java.util.concurrent.forkjoinpool.getAsyncMode（）\r\n","java.sql.PreparedStatement.setByte(int, byte)":"java.sql.preparedstatement.setbyte（int，byte）\r\n","java.security.KeyPairGenerator.genKeyPair()":"java.security.keypairgenerator.genkeypair（）\r\n","28":"28\r\n","Updates the file group-owner.":"更新文件组所有者。\r\n","\n based on the provided arguments.":"\r\n 基于提供的论点。\r\n","Returns the \"logical size\" of this ":"返回此的“逻辑大小”\r\n","Returns the system's identity scope. -or- Sets the system's identity scope.":"返回系统的身份范围。 - 或设置系统的身份范围。\r\n","Retrieves the value of the designated JDBC <code>NUMERIC</code> parameter as a\n            <code>java.":"检索指定的JDBC <code>数字</code>参数为一个\r\n            <code> Java。\r\n","java.sql.DatabaseMetaData.attributeNullable":"java.sql.databasemetadata.attributenullable\r\n","java.util.EnumMap.EnumMap(java.lang.Class)":"java.util.enummap.enummap（java.lang.class）\r\n","java.security.KeyStoreSpi.engineDeleteEntry(java.lang.String)":"java.security.keystorespi.enginedeleteentry（java.lang.string）\r\n","FileSystem#isReadOnly() read-only":"文件系统＃isreadonly（）只读\r\n","java.util.Date.before(java.util.Date)":"java.util.date.be（java.util.date）\r\n","Creates a signer with the specified identity name and scope.":"使用指定的身份名称和范围创建签名者。\r\n","java.nio.file.FileVisitor.visitFileFailed(java.lang.Object, java.io.IOException)":"java.nio.file.filevisitor.visitfilefilefailed（java.lang.object，java.io.ioexception）\r\n","java.nio.file.attribute.FileOwnerAttributeView.name()":"java.nio.file.attribute.fileownerattributeview.name（）\r\n","java.nio.file.WatchKey.watchable()":"java.nio.file.watchkey.watchable（）\r\n","Gets a resource bundle using the specified base name, the default locale,\n            and the caller's class loader.":"使用指定的基本名称，默认场所获取资源捆绑包，\r\n            和呼叫者的类加载程序。\r\n","java.security.cert.PKIXCertPathValidatorResult.getTrustAnchor()":"java.security.cert.pkixcertpathvalidatoresult.gettrustanchor（）\r\n","java.util.Arrays.parallelSort(byte[])":"java.util.arrays.parallelsort（byte []）\r\n","Retrieves whether inserts made by others are visible.":"检索他人制作的插入物是否可见。\r\n","java.security.spec.MGF1ParameterSpec.SHA384":"java.security.spec.mgf1parameterspec.sha384\r\n"," for checking the revocation status of\n            certificates with the PKIX algorithm.":" 用于检查吊销状态\r\n            具有PKIX算法的证书。\r\n"," representation of a set of permissions.":" 一组权限的表示。\r\n","java.util.LinkedList.removeFirstOccurrence(java.lang.Object)":"java.util.linkedlist.removefirstoccurrence（java.lang.object）\r\n","java.util.Hashtable.Hashtable(int, float)":"java.util.hashtable.hashtable（int，float）\r\n","java.security.Signature.initSign(java.security.PrivateKey, java.security.SecureRandom)":"java.security.signature.initsign（java.security.privatekey，java.security.securerandom）\r\n","java.util.concurrent.ForkJoinPool.isQuiescent()":"java.util.concurrent.forkjoinpool.isquiescent（）\r\n","A set of date fields that provide access to Julian Days.":"一套可访问朱利安日的日期字段。\r\n","If the specified key is not already associated with a value,\n            associates it with the given value.":"如果指定的密钥尚未与值关联，\r\n            将其与给定值相关联。\r\n","Returns the message digest algorithm name.":"返回消息Digest算法名称。\r\n","java.security.AlgorithmParameterGenerator.getInstance(java.lang.String, java.lang.String)":"java.security.algorithmparametergenerator.getInstance（java.lang.string，java.lang.string）\r\n","Returns the unmatched format specifier.":"返回无与伦比的格式指定符。\r\n","Returns the maximum recorded value, ":"返回最大记录值，\r\n","Causes the next added printer/parser to pad to a fixed width using a space.":"使下一个添加的打印机/解析器使用空间将固定宽度放在固定宽度上。\r\n","Constructs an InvalidAlgorithmParameterException with the specified\n            detail message.":"用指定的\r\n            详细信息。\r\n",") - 1)":"） -  1）\r\n","java.util.concurrent.ArrayBlockingQueue.iterator()":"java.util.concurrent.ArrayBlockingQueue.iterator（）\r\n","java.util.Vector.Vector()":"Java.util.Vector.Vector（）\r\n","java.security.cert.X509CRLSelector":"java.security.cert.x509crlselector\r\n","java.util.Formatter.Formatter(java.util.Locale)":"java.util.formatter.formatter（java.util.locale）\r\n","Gets the driver's minor version number.":"获取驾驶员的次要版本号。\r\n","java.util.Calendar.set(int, int, int, int, int, int)":"java.util.calendar.set（int，int，int，int，int，int，int）\r\n","java.text.DecimalFormatSymbols.getPatternSeparator()":"java.text.decimalformatsymbols.getPatternseparator（）\r\n","Set all elements of the specified array, in parallel, using the\n            provided generator function to compute each element.":"并行设置指定数组的所有元素\r\n            提供了发电机功能来计算每个元素。\r\n"," methods to the given executor, but not any\n            other methods that might otherwise be accessible using\n            casts.":" 给定执行人的方法，但没有\r\n            其他可能可以使用的方法\r\n            演员。\r\n","java.util.UUID.clockSequence()":"java.util.uuid.clocksequence（）\r\n","Returns a reference to the private key component of this key pair.":"返回对此密钥对的私钥组件的引用。\r\n","java.security.spec.ECParameterSpec.getCurve()":"java.security.spec.ecparameterspec.getCurve（）\r\n","Increases the capacity of this vector, if necessary, to ensure\n            that it can hold at least the number of components specified by\n            the minimum capacity argument.":"如有必要，增加该向量的能力以确保\r\n            它至少可以容纳由\r\n            最低容量论点。\r\n","if the next token can not be translated into a valid\n             ":"如果下一个令牌无法翻译成有效的\r\n             \r\n","java.util.Timer.schedule(java.util.TimerTask, java.util.Date, long)":"java.util.timer.schedule（java.util.timertask，java.util.date，long）\r\n","java.nio.file.InvalidPathException.InvalidPathException(java.lang.String, java.lang.String)":"java.nio.file.invalidpathexception.invalidpathexception（java.lang.string，java.lang.string）\r\n","java.util.Date.Date(int, int, int)":"java.util.date.date（int，int，int）\r\n","Returns the time of last access.":"返回上次访问的时间。\r\n","Inserts the specified element at the tail of this queue if it is\n            possible to do so immediately without exceeding the queue's capacity,\n            returning ":"如果是\r\n            可以立即这样做，而不会超过队列的能力，\r\n            返回\r\n","Returns the private key.":"返回私钥。\r\n","The ISO time formatter that formats or parses a time without an\n            offset, such as '10:15' or '10:15:30'.":"ISO时间格式化格式或解析时间没有的时间\r\n            偏移，例如'10：15'或'10：15：30'。\r\n","java.util.TreeSet.lower(java.lang.Object)":"java.util.treeset.lower（java.lang.Object）\r\n","java.time.format.DateTimeFormatter.ISO_INSTANT":"java.time.format.datetimeformatter.iso_instant\r\n","<strong>Denigrated</strong>, use #setIssuer(X500Principal)\n            or #setIssuer(byte[]) instead.":"<strong>贬低</strong>，使用#setissuer（x500principal）\r\n            或#setissuer（byte []）。\r\n","java.sql.DatabaseMetaData.supportsSelectForUpdate()":"java.sql.databasemetadata.supportsselectforupdate（）\r\n","Gets the PolicyQualifiersRejected flag. -or- Sets the PolicyQualifiersRejected flag.":"获取策略标志的标志。 - 或设置策略标志的标志。\r\n","Retrieves, but does not remove, the head of the queue represented by\n this deque (in other words, the first element of this deque).":"检索但不删除，队列的头由\r\n 这个Deque（换句话说，这是该deque的第一个要素）。\r\n","java.text.DecimalFormat":"java.text.decimalformat\r\n","if the next token does not match the pattern given.\n":"如果下一个令牌与给出的模式不匹配。\r\n\r\n","java.sql.DatabaseMetaData.updatesAreDetected(int)":"java.sql.databasemetadata.updateseredetected（int）\r\n","java.util.EnumSet":"java.util.enumset\r\n","java.util.Properties.list(java.io.PrintWriter)":"java.util.properties.list（java.io.printwriter）\r\n","java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage, java.lang.Runnable)":"java.util.concurrent.completionstage.runafterbothasync（java.util.concurrent.completionstage，java.lang.runnable）\r\n","java.util.AbstractCollection.contains(java.lang.Object)":"java.util.abstractcollection.contains（java.lang.Object）\r\n","if the build fails.":"如果构建失败。\r\n","java.nio.file.FileSystemException.FileSystemException(java.lang.String)":"java.nio.file.filesystemexception.filesystemexception（java.lang.string）\r\n","if the class of the specified element\n         is incompatible with this deque\n         (":"如果指定元素的类\r\n         与这个Deque不相容\r\n         （（\r\n","java.util.Objects.requireNonNull(java.lang.Object, java.util.function.Supplier)":"java.util.objects.requirenonnull（java.lang.object，java.util.function.supplier）\r\n","java.util.concurrent.ConcurrentLinkedDeque.getLast()":"java.util.concurrent.concurrentlinkeddeque.getlast（）\r\n","java.util.List.of(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.list.of（java.lang.object，java.lang.object，java.lang.object）\r\n","java.util.List.remove(int)":"java.util.list.remove（int）\r\n","java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset(java.time.format.TextStyle)":"java.time.format.datetimeformatterbuilder.appendlocalizedOffset（java.time.format.textstyle）\r\n","java.util.Collections.emptyNavigableMap()":"java.util.collections.emptynavigablemap（）\r\n","java.util.StringTokenizer.hasMoreTokens()":"java.util.stringtokenizer.hasmoretokens（）\r\n"," has already been\n             initialized or the given ":" 已经过去了\r\n             初始化或给定的\r\n","java.security.spec.ECFieldFp.getFieldSize()":"java.security.spec.ecfieldfp.getfieldsize（）\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given <code>reason</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.security.UnrecoverableKeyException":"java.security.unrecoverableykeyexception\r\n","java.security.acl.Acl.toString()":"java.security.acl.acl.tostring（）\r\n","Return the length of text in the line.":"返回行中的文本长度。\r\n"," view of the keys contained in this map.":" 此地图中包含的键的视图。\r\n","Updates the designated column with a <code>float</code> value.":"用<code> float </code>值更新指定的列。\r\n","#forEachRemaining":"#ForeachRemaining\r\n","java.security.cert.CertificateEncodingException.CertificateEncodingException(java.lang.String)":"java.security.cert.certificateEncodingException.certificateEncodingException（java.lang.string）\r\n","java.security.KeyPairGenerator.getInstance(java.lang.String)":"java.security.keypairgenerator.getinstance（java.lang.string）\r\n"," copies of the\n            specified object.":" 副本\r\n            指定对象。\r\n","Retrieves whether <code>NULL</code> values are sorted at the start regardless\n            of sort order.":"检索<code> null </code>值是否在开始时进行排序\r\n            排序顺序。\r\n","Constructs an <code>SQLIntegrityConstraintViolationException</code> object with\n             a given  <code>cause</code>.":"用\r\n             给定的<code>原因</code>。\r\n"," if there is\n            no such key.":" 如果有\r\n            没有这样的钥匙。\r\n","java.sql.PreparedStatement.setNClob(int, java.io.Reader, long)":"java.sql.preparedstatement.setnclob（int，java.io.reader，long）\r\n","Gets the name of the SQL cursor of this ":"获取SQL光标的名称\r\n","java.sql.DatabaseMetaData.nullsAreSortedHigh()":"java.sql.databasemetadata.nullsaresortedhigh（）\r\n","Returns the maximum number of digits allowed in the fraction portion of a\n            number. -or- Sets the maximum number of digits allowed in the fraction portion of a\n            number.":"返回A的分数中允许的最大数字数量\r\n            数字。 - 或设置在A的分数中允许的最大数字数量\r\n            数字。\r\n","Returns the subjectPublicKey criterion. -or- Sets the subjectPublicKey criterion.":"返回主题公共标准。 - 或设置主题广告标准。\r\n","java.sql.Connection.createBlob()":"java.sql.connection.createblob（）\r\n","java.sql.Date.Date(int, int, int)":"java.sql.date.date（int，int，int）\r\n","\n            suitable for presentation to the user in the default locale.":"\r\n            适用于默认场所中向用户介绍。\r\n","java.util.Set.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object），java.object）\r\n","java.util.GregorianCalendar.GregorianCalendar(int, int, int, int, int, int)":"java.util.gregoriancalendar.gregoriancalendar（int，int，int，int，int，int，int）\r\n","Performs the given action for each (key, value).":"执行每个（键，值）的给定动作。\r\n","java.sql.DatabaseMetaData.getSuperTables(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getsupertables（java.lang.string，java.lang.string，java.lang.string）\r\n","java.sql.DatabaseMetaData.getSchemas(java.lang.String, java.lang.String)":"java.sql.databasemetadata.getschemas（java.lang.string，java.lang.string）\r\n","java.util.Deque.add(java.lang.Object)":"java.util.deque.add（java.lang.Object）\r\n","Construct a DateFormatSymbols object by loading format data from\n            resources for the given locale.":"通过从加载格式数据来构建DateFormatSymbols对象\r\n            给定地方的资源。\r\n","java.util.EnumSet.of(java.lang.Enum, java.lang.Enum)":"java.util.enumset.of（java.lang.enum，java.lang.enum）\r\n","java.util.TreeMap.clone()":"java.util.treemap.clone（）\r\n","Constructs a new <code>Scanner</code> that produces values scanned\n            from the specified string.":"构建一个新的<code>扫描仪</code>，该</code>产生扫描的值\r\n            从指定的字符串。\r\n","Constructs a DigestException with no detail message.":"构建一个没有详细信息的DigestException。\r\n","indicating the\n hour of the day.":"指示\r\n 一天中的一个小时。\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.read(java.lang.String, java.nio.ByteBuffer)":"java.nio.file.attribute.userdefinedfileattributeview.read（java.lang.string，java.nio.bytebuffer）\r\n","java.sql.CallableStatement.setNull(java.lang.String, int, java.lang.String)":"java.sql.callablestatement.setnull（java.lang.string，int，java.lang.string）\r\n","java.util.Arrays.binarySearch(double[], double)":"java.util.arrays.binarysearch（double []，double）\r\n","java.security.spec.EncodedKeySpec.EncodedKeySpec(byte[])":"java.security.spec.encodedkeyspec.encodedkeyspec（byte []）\r\n","java.security.cert.CertStore":"java.security.cert.certstore\r\n","java.time.format.DecimalStyle":"java.time.format.decimalstyle\r\n","java.util.Locale.getDisplayLanguage(java.util.Locale)":"java.util.locale.getdisplaylanguage（java.util.locale）\r\n","java.util.concurrent.ForkJoinTask.quietlyJoin()":"java.util.concurrent.forkjointask.quietlyjoin（）\r\n","Get the issuer of the X509Certificate described by this entry.":"获取本条目描述的X509Certificate的发行人。\r\n","java.util.Date.parse(java.lang.String)":"java.util.date.parse（java.lang.string）\r\n","java.util.concurrent.CyclicBarrier.await(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.cyclarer.await（long，java.util.concurrent.timeunit）\r\n"," is less than the begin index or greater than\n         the end index.\n":" 小于开始索引或大于\r\n         最终索引。\r\n\r\n","java.time.zone.ZoneOffsetTransition.toEpochSecond()":"java.time.zone.zoneoffsetTransition.toepochsecond（）\r\n","java.security.cert.X509Certificate.getIssuerUniqueID()":"java.security.cert.x509certificate.getissueruniqueId（）\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n"," is not an array of ":" 不是一个数组\r\n","if this method is invoked.\n":"如果调用此方法。\r\n\r\n"," implementation uses to check the revocation\n            status of certificates.":" 实施用于检查吊销\r\n            证书的状态。\r\n","Optional":"可选的\r\n","java.util.concurrent.ConcurrentHashMap.reduceValuesToInt(long, java.util.function.ToIntFunction, int, java.util.function.IntBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducevaluestoint（long，java.util.function.tointfunction，int，int，java.util.function.intbinaryoperator）\r\n","java.text.BreakIterator.getSentenceInstance(java.util.Locale)":"java.text.breakiterator.getSentenceInstance（java.util.locale）\r\n","java.security.Provider.computeIfPresent(java.lang.Object, java.util.function.BiFunction)":"java.security.provider.computeifpresent（java.lang.object，java.util.function.bifunction）\r\n","Returns true if the next token matches the pattern constructed from the\n            specified string.":"如果下一个令牌与从\r\n            指定的字符串。\r\n","java.time.format.TextStyle.isStandalone()":"java.time.format.textstyle.isstandalone（）\r\n"," into this\n            one.":" 进入这个\r\n            一。\r\n","Standard override.":"标准覆盖。\r\n","java.sql.Statement.execute(java.lang.String, java.lang.String[])":"java.sql.statement.execute（java.lang.string，java.lang.string []）\r\n","java.text.DateFormat.TIMEZONE_FIELD":"java.text.dateformat.timezone_field\r\n","java.util.BitSet.toByteArray()":"java.util.bitset.tobytearray（）\r\n","Constructs an AttributedString instance with the subrange of\n            the given attributed text represented by\n            AttributedCharacterIterator.":"构建一个属于属性的实例\r\n            给定的属性文本由\r\n            属性characteriter。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a stream of ASCII characters.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            ASCII字符流。\r\n","Constructs an iterator with an initial index of 0.":"构造具有0初始索引的迭代器。\r\n","java.text.DecimalFormat.parse(java.lang.String, java.text.ParsePosition)":"java.text.decimalformat.parse（java.lang.string，java.text.parseposition）\r\n","The result type of a ":"结果类型\r\n","java.sql.CallableStatement.getBlob(java.lang.String)":"java.sql.callablestatement.getBlob（java.lang.string）\r\n","java.util.Stack":"java.util.stack\r\n","java.nio.file.SecureDirectoryStream.deleteFile(java.lang.Object)":"java.nio.file.securedirectorystream.deletefile（java.lang.object）\r\n","java.util.TreeMap.higherKey(java.lang.Object)":"java.util.treemap.higherkey（java.lang.Object）\r\n","if the specified provider cannot provide the algorithm.":"如果指定的提供商无法提供算法。\r\n","java.util.concurrent.ConcurrentHashMap.getOrDefault(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrenthashmap.getordefault（java.lang.object，java.lang.object）\r\n","java.util.Collections.frequency(java.util.Collection, java.lang.Object)":"java.util.collections.frequency（java.util.collection，java.lang.Object）\r\n","java.sql.RowIdLifetime":"java.sql.RowidLifEtime\r\n","Creates a property resource bundle from a ":"从一个\r\n","Attempts to find the next occurrence of the specified pattern ignoring\n            delimiters.":"试图找到下一个指定模式的下一次发生的尝试忽略\r\n            定界符。\r\n","Returns the name of the certificate type associated with this\n            certificate factory.":"返回与此关联的证书类型的名称\r\n            证书工厂。\r\n","Returns the default Executor used for async methods that do not\n            specify an Executor.":"返回用于异步方法的默认执行程序\r\n            指定执行人。\r\n"," with the same mappings as the\n            specified ":" 与与\r\n            指定的\r\n","java.util.GregorianCalendar.GregorianCalendar(java.util.TimeZone)":"java.util.gregoriancalendar.gregoriancalendar（java.util.timezone）\r\n","the policy qualifier cannot be decoded.\n":"策略预选赛不能被解码。\r\n\r\n","Prints a message to the current JDBC log stream.":"将消息打印到当前的JDBC日志流。\r\n","java.security.PrivateKey":"java.security.privatekey\r\n","java.util.Locale.PRIVATE_USE_EXTENSION":"java.util.locale.private_use_extension\r\n","java.sql.DatabaseMetaData.supportsANSI92FullSQL()":"java.sql.databasemetadata.supportsi92fullsql（）\r\n","java.security.spec.MGF1ParameterSpec.SHA512":"java.security.spec.mgf1parameterspec.sha512\r\n","java.util.NavigableSet.floor(java.lang.Object)":"java.util.navigableset.floor（java.lang.Object）\r\n","if the parameter is invalid, already set or is not allowed to\n             be changed.\n":"如果参数无效，已经设置或不允许\r\n             改变。\r\n\r\n","java.util.LongSummaryStatistics.getSum()":"java.util.longsummarystatistics.getsum（）\r\n","java.util.WeakHashMap.WeakHashMap()":"java.util.weakhashmap.weakhashmap（）\r\n","java.sql.ResultSet.getBytes(int)":"java.sql.Resultset.getBytes（int）\r\n","java.util.StringTokenizer.hasMoreElements()":"java.util.stringtokenizer.hasmoreelements（）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>SMALLINT</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> SmallInt </code>。\r\n",", encapsulating a copy of the given file\n            permissions, suitable for passing to the ":"，封装给定文件的副本\r\n            权限，适合传递到\r\n","java.util.Deque.offerLast(java.lang.Object)":"java.util.deque.offerlast（java.lang.Object）\r\n","java.sql.CallableStatement.setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar)":"java.sql.callablestatement.settimestamp（java.lang.string，java.sql.timestamp，java.util.calendar）\r\n","Gets the data of this ":"获取此数据\r\n"," that are also set to ":" 也设置为\r\n","java.sql.DatabaseMetaData.typeNullable":"java.sql.databasemetadata.typenullable\r\n"," containing the elements in the\n            specified collection.":" 包含元素\r\n            指定的集合。\r\n","secretKey":"密钥\r\n","java.nio.file.attribute.UserDefinedFileAttributeView.delete(java.lang.String)":"java.nio.file.attribute.userdefinedfileattributeview.delete（java.lang.string）\r\n","CertPathRep":"certpathrep\r\n","java.security.MessageDigest.getDigestLength()":"java.security.messagedigest.getDigestLength（）\r\n","java.security.spec.ECFieldF2m":"java.security.spec.ecfieldf2m\r\n","Attempts to build a certification path using the specified\n            algorithm parameter set.":"尝试使用指定的\r\n            算法参数集。\r\n","java.security.cert.CertPathValidator.validate(java.security.cert.CertPath, java.security.cert.CertPathParameters)":"java.security.cert.certpathvalidator.validate（java.security.cert.cert.certpath，java.security.cert.cert.certpathparameters）\r\n","java.sql.CallableStatement.getBigDecimal(int)":"java.sql.callablestatement.getbigdecimal（int）\r\n","Locale.Builder":"locale.builder\r\n","Returns an iterator over the elements contained in this set\n            in the order in which these elements were added.":"返回本集中包含的元素的迭代器\r\n            按照添加这些元素的顺序。\r\n","java.security.KeyStore.getInstance(java.lang.String)":"java.security.keystore.getinstance（java.lang.string）\r\n","java.security.AlgorithmParameters.getInstance(java.lang.String, java.security.Provider)":"java.security.algorithmparameters.getinstance（java.lang.string，java.security.provider）\r\n","Constructs a new <code>IllformedLocaleException</code> with no\n            detail message and -1 as the error index.":"构建一个新的<code> noon\r\n            详细消息，-1作为错误索引。\r\n","java.util.TreeMap.subMap(java.lang.Object, java.lang.Object)":"java.util.treemap.submap（java.lang.object，java.lang.object）\r\n","Initializes this parameter generator for a certain size\n            and source of randomness.":"初始化此参数生成器的一定尺寸\r\n            和随机性的来源。\r\n","java.util.Formatter.Formatter(java.io.OutputStream, java.lang.String)":"java.util.formatter.formatter（java.io.outputstream，java.lang.string）\r\n"," to the end of the list of\n            ":" 到列表的结尾\r\n            \r\n","java.util.NavigableSet.descendingIterator()":"java.util.navigableset.descgenditerator（）\r\n","Constructs an AclNotFoundException.":"构建AclnotFoundException。\r\n","Returns the string representation of this path.":"返回此路径的字符串表示。\r\n","java.sql.ResultSet.getBinaryStream(int)":"java.sql.Resultset.getBinarystream（int）\r\n","java.sql.ResultSet.getInt(int)":"java.sql.Resultset.getInt（int）\r\n","(optional\n            operation)":"（可选的\r\n            手术）\r\n","if the current thread is interrupted\n         while waiting\n":"如果当前线程中断\r\n         等待\r\n\r\n","Returns the ACL entry type.":"返回ACL输入类型。\r\n","java.sql.ResultSet.updateBinaryStream(int, java.io.InputStream, long)":"java.sql.Resultset.updatebinarystream（int，java.io.inputstream，long）\r\n","An object that configures how to copy or move a file.":"配置如何复制或移动文件的对象。\r\n","java.security.cert.TrustAnchor.TrustAnchor(java.lang.String, java.security.PublicKey, byte[])":"java.security.cert.trustanchor.trustanchor（java.lang.string，java.security.publickey，byte []）\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>STRUCT</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code> struct </code>。\r\n","Returns a synchronized (thread-safe) sorted set backed by the specified\n            sorted set.":"返回由指定的同步（线程安全）排序的设置\r\n            排序集。\r\n",": the index of\n            the highest set bit in the ":"：索引\r\n            最高套件\r\n","java.util.Arrays.asList(java.lang.Object[])":"java.util.arrays.aslist（java.lang.object []）\r\n","java.text.BreakIterator.getLineInstance()":"java.text.breakiterator.getlinestance（）\r\n"," entry that\n holds a trusted certificate.":" 进入\r\n 持有值得信赖的证书。\r\n","Gets parameter passed by constructor.":"获取参数由构造函数传递。\r\n","java.security.SignatureSpi.engineGetParameters()":"java.security.signaturespi.enginegetparameters（）\r\n","java.nio.charset.StandardCharsets.US_ASCII":"java.nio.charset.standardcharsets.us_ascii\r\n","java.util.BitSet.intersects(java.util.BitSet)":"java.util.bitset.intersects（java.util.bitset）\r\n","Constructs a new formatter with the specified file name and charset.":"用指定的文件名和charset构建新的格式化器。\r\n","\n            method returns <code>BigDecimal</code>. -or- Sets whether the ":"\r\n            方法返回<code> bigdecimal </code>。 - 或设置是否\r\n","Returns the string representation of the calendar\n            <code>field</code> value in the given <code>style</code> and\n            <code>locale</code>.":"返回日历的字符串表示形式\r\n            <code>字段</code>在给定<code>样式</code>和\r\n            <code>语言环境</code>。\r\n"," thrown when the SQLState class value\n            is '":" 当SQLSTATE类值时扔\r\n            是 '\r\n","java.util.Locale.filter(java.util.List, java.util.Collection)":"java.util.locale.filter（java.util.list，java.util.collection）\r\n","Retrieves whether this database treats mixed case unquoted SQL identifiers as\n            case insensitive and stores them in upper case.":"检索该数据库是否将混合情况视为未引用的SQL标识符为\r\n            案例不敏感，并将其存储在上案例中。\r\n","java.sql.Types.DISTINCT":"java.sql.types.distinct\r\n","java.nio.file.Files.isRegularFile(java.nio.file.Path, java.nio.file.LinkOption)":"java.nio.file.files.isregularfile（java.nio.file.path，java.nio.file.linkoption）\r\n","Returns the value to which the specified key is mapped, or the\n            given default value if this map contains no mapping for the\n            key.":"返回映射指定密钥的值，或\r\n            给定默认值，如果此地图不包含映射\r\n            钥匙。\r\n","java.text.Bidi.getLevelAt(int)":"java.text.bidi.getlevelat（int）\r\n","Retains only the elements in this list that are contained in the\n            specified collection (optional operation).":"仅保留此列表中包含的元素\r\n            指定收集（可选操作）。\r\n","The standard interface to a DSA private key.":"DSA私钥的标准接口。\r\n","java.util.Vector.get(int)":"java.util.vector.get（int）\r\n","java.security.spec.InvalidParameterSpecException.InvalidParameterSpecException()":"java.security.spec.invalidparameterspecexception.invalidparameterspecexception（）\r\n","java.sql.ResultSet.getNCharacterStream(java.lang.String)":"java.sql.Resultset.getNCharacterStream（java.lang.string）\r\n","if the object cannot be formatted by this format.\n":"如果对象无法通过此格式格式化。\r\n\r\n","java.util.AbstractList.AbstractList()":"java.util.abstrastlist.abstrastlist（）\r\n","A thin wrapper around <code>java.":"<code> Java周围的薄包装器。\r\n","java.security.PermissionCollection":"Java.security.PermisionCollection\r\n","java.security.KeyFactory.generatePrivate(java.security.spec.KeySpec)":"java.security.keyfactory.generate private（java.security.spec.keyspec）\r\n","java.util.Base64.getMimeDecoder()":"java.util.base64.getmimedecoder（）\r\n","Returns a dynamically typesafe view of the specified navigable map.":"返回指定可导航映射的动态类型AFTE视图。\r\n","java.nio.file.WatchEvent.kind()":"java.nio.file.watchevent.kind（）\r\n","Retrieves the value of the designated column in the current row of this\n            <code>ResultSet</code> object as a <code>java.":"检索当前行中指定列的值\r\n            <code> Resultset </code>对象为<code> Java。\r\n","Returns the finite field ":"返回有限字段\r\n","Executes the given command at some time in the future.":"将来在某个时候执行给定命令。\r\n"," and resolves it against\n            this ":" 并解决它反对\r\n            这个\r\n","indicating the\n millisecond within the second. ":"指示\r\n 在第二毫秒内。\r\n","Opens a file for reading, returning a ":"打开一个用于阅读的文件，返回\r\n","java.text.CharacterIterator.next()":"java.text.characteriter.next（）\r\n","Checked exception thrown when a file system operation fails because a file\n            is not a symbolic link.":"当文件系统操作失败时，检查的异常是由于文件而失败的\r\n            不是符号链接。\r\n","Thrown when a file system operation fails on one or two files.":"当文件系统操作在一个或两个文件上失败时，抛出。\r\n","java.util.TimeZone.getTimeZone(java.lang.String)":"java.util.timezone.gettimezone（java.lang.string）\r\n","java.util.NoSuchElementException.NoSuchElementException(java.lang.String)":"java.util.nosuchelementException.nosuchelementException（java.lang.string）\r\n","java.util.Arrays.copyOf(short[], int)":"java.util.arrays.copyof（short []，int）\r\n","Sets the designated parameter to the given Java <code>float</code> value.":"将指定的参数设置为给定的Java <code> float </code>值。\r\n","if the specified initialization parameters cannot be used to\n             initialize this instance.\n":"如果指定的初始化参数不能用于\r\n             初始化此实例。\r\n\r\n","Configuration data that specifies the keystores in a keystore domain.":"配置数据指定密钥库域中的密钥库。\r\n","java.nio.file.FileSystemException.getReason()":"java.nio.file.filesystemexception.getReason（）\r\n","Retrieves and removes the first element of this list,\n            or returns ":"检索并删除此列表的第一个元素，\r\n            或返回\r\n","java.util.SortedSet.subSet(java.lang.Object, java.lang.Object)":"java.util.sortedset.subset（java.lang.object，java.lang.object）\r\n","java.util.Scanner.nextByte()":"java.util.scanner.nextbyte（）\r\n","if the currency code is not a supported ISO 4217 currency code.\n":"如果货币代码不是受支持的ISO 4217货币代码。\r\n\r\n","Get a default date/time formatter that uses the SHORT style for both the\n            date and the time.":"获取一个默认日期/时间格式化，该格式使用两者使用简短样式\r\n            日期和时间。\r\n","java.time.format.DateTimeFormatterBuilder.appendZoneText(java.time.format.TextStyle)":"java.time.format.datetimeformatterbuilder.appendzonetext（java.time.format.textstyle）\r\n","java.security.cert.X509CertSelector.getPathToNames()":"java.security.cert.x509certselector.getPathtonames（）\r\n","The constant indicating that a\n            column does not allow <code>NULL</code> values.":"常数表明\r\n            列不允许<code> null </code>值。\r\n"," from which ":" 从中\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String, java.lang.String, int)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalidauthorizationspecexception（java.lang.string，java.lang.string，int）\r\n"," as its action, and returns\n            its result upon ":" 作为行动，并返回\r\n            它的结果\r\n","java.nio.file.FileAlreadyExistsException":"java.nio.file.filealreadyexistSexception\r\n","java.time.format.DateTimeFormatterBuilder.appendLiteral(java.lang.String)":"java.time.format.datetimeformatterbuilder.appendliteral（java.lang.string）\r\n","Returns a copy of this set.":"返回此集合的副本。\r\n"," has already been\n             initialized, or if this parameters could not be encoded.\n":" 已经过去了\r\n             初始化，或者如果无法编码此参数。\r\n\r\n","java.text.CollationElementIterator.NULLORDER":"java.text.collat​​ionElementiter.nullorder\r\n","Creates a thread pool that creates new threads as needed, but\n            will reuse previously constructed threads when they are\n            available, and uses the provided\n            ThreadFactory to create new threads when needed.":"创建一个线程池，可根据需要创建新线程，但是\r\n            将重复使用以前构造的线程\r\n            可用并使用提供的\r\n            线程捕获在需要时创建新线程。\r\n","#getDisplayName(int, int, Locale)\n            getDisplayName":"#getDisPlayName（INT，INT，LOCALE）\r\n            getDisPlayName\r\n"," does not contained any trusted\n             certificate entry.\n":" 不包含任何可信赖的\r\n             证书条目。\r\n\r\n","java.sql.DatabaseMetaData.supportsAlterTableWithDropColumn()":"java.sql.databasemetadata.supportsaltablewithdropcolumn（）\r\n","java.util.TreeMap.pollLastEntry()":"java.util.treemap.pollastentry（）\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.Throwable)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.throwable）\r\n","java.util.TreeMap.firstKey()":"java.util.treemap.firstkey（）\r\n","CertificateRep":"证书\r\n","java.sql.CallableStatement.registerOutParameter(int, int, java.lang.String)":"java.sql.callablestatement.registeroutparameter（int，int，java.lang.string）\r\n","java.sql.Connection.createClob()":"java.sql.connection.createclob（）\r\n","Returns an object that delegates all defined ":"返回一个委派所有定义的对象\r\n","java.util.Optional.empty()":"java.util.optional.empty（）\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String, java.lang.String, int)":"java.sql.sqldataexception.sqldataexception（java.lang.string，java.lang.string，int）\r\n"," covering the elements of a given array,\n            using a customized set of spliterator characteristics.":" 覆盖给定数组的元素，\r\n            使用定制的一组拆分器特征。\r\n","java.util.concurrent.ForkJoinTask.completeExceptionally(java.lang.Throwable)":"java.util.concurrent.forkjointask.completeexceptionally（java.lang.throwable）\r\n","java.security.cert.X509Certificate.getSignature()":"java.security.cert.x509certificate.getSignature（）\r\n","FileAttributeView#name names":"FileatTributeView＃名称名称\r\n","java.util.Scanner.useDelimiter(java.lang.String)":"java.util.scanner.usedelimiter（java.lang.string）\r\n","Marks the era part of a date.":"标志着日期的时代部分。\r\n","java.security.KeyStoreSpi.engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])":"java.security.keystorespi.enginesetkeyentry（java.lang.string，java.security.key，char []，java.security.cert.cert.certificate []）\r\n","java.util.Arrays.sort(long[], int, int)":"java.util.arrays.sort（long []，int，int）\r\n","Constructs a CertificateEncodingException with no detail message.":"构建一个没有详细信息的证书登录exception。\r\n","java.security.Identity.setInfo(java.lang.String)":"java.security.Identity.setinfo（java.lang.string）\r\n",",\n            supporting dependent functions and actions that trigger upon its\n            completion.":"，，，，\r\n            支持依赖功能和触发其动作\r\n            完成。\r\n","Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)\n            and returns the character at that position.":"设置getEndIndex（）-1（如果文本为空的getEndIndex（）的位置\r\n            并在该位置返回角色。\r\n","java.nio.file.FileVisitResult":"java.nio.file.filevisitresult\r\n","paragraph == null":"段== null\r\n","Key.getEncoded()":"key.getEncoded（）\r\n","Returns an immutable set containing three elements.":"返回一个不变的集合，其中包含三个元素。\r\n","java.security.spec.ECParameterSpec.ECParameterSpec(java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, int)":"java.security.spec.ecparameterspec.ecparameterspec（java.security.spec.spec.ellipticcurve，java.security.security.spec.ecpoint，java.math.math.biginteger，int）\r\n","Retrieves whether this database supports the given result set type.":"检索此数据库是否支持给定的结果集类型。\r\n","Checks that the specified value is valid for this field.":"检查指定值是否对此字段有效。\r\n","java.sql.PreparedStatement.setNull(int, int)":"java.sql.preparedstatement.setnull（int，int）\r\n","java.util.concurrent.BlockingQueue":"java.util.concurrent.blockingqueue\r\n","java.security.cert.PKIXRevocationChecker.setOcspResponderCert(java.security.cert.X509Certificate)":"java.security.cert.pkixrevocationchecker.setocsprespondercert（java.security.cert.cert.x509certificate）\r\n","Tests if this path starts with a ":"测试此路径是否以A开头\r\n","java.sql.PreparedStatement.setAsciiStream(int, java.io.InputStream)":"java.sql.preparedstatement.setasciistream（int，java.io.inputstream）\r\n","A constant indicating that\n            dirty reads, non-repeatable reads and phantom reads are prevented.":"一个常数，表明\r\n            肮脏的读数，不可重复的读取和幻影读数。\r\n","java.sql.DriverPropertyInfo.description":"java.sql.driverpropertyinfo.Description\r\n","java.util.Arrays.hashCode(java.lang.Object[])":"java.util.arrays.hashcode（java.lang.object []）\r\n","java.sql.ResultSet.getTime(int, java.util.Calendar)":"java.sql.Resultset.getTime（int，java.util.calendar）\r\n","Returns an object that implements the given interface to allow access to\n            non-standard methods, or standard methods not exposed by the proxy.":"返回一个实现给定接口以允许访问的对象\r\n            非标准方法或代理未暴露的标准方法。\r\n","#SUBSIZED":"#subsized\r\n","Retrieves the value of a JDBC <code>NUMERIC</code> parameter as a\n            <code>java.":"检索JDBC <code>数字</code>参数为一个\r\n            <code> Java。\r\n","java.time.zone.ZoneOffsetTransition":"Java.Time.Zone.ZoneOffsetTransition\r\n","java.security.AccessControlContext":"java.security.accesscontrolcontext\r\n"," value\n            between 0 (inclusive) and the specified value (exclusive), drawn from\n            this random number generator's sequence.":" 价值\r\n            在0（包含）和指定值（独家）之间\r\n            此随机数发生器的序列。\r\n","java.security.spec.DSAPrivateKeySpec":"java.security.spec.dsaprivatekeyspec\r\n","constructorParameter":"构造参数计\r\n","Returns the result of accumulating the given transformation\n            of all values using the given reducer to combine values,\n            and the given basis as an identity value.":"返回累积给定转换的结果\r\n            使用给定还原器组合值的所有值中的所有值\r\n            给定的基础作为身份值。\r\n","java.security.IdentityScope.addIdentity(java.security.Identity)":"Java.Security.IdentityScope.Addidentity（Java.Security.Identity）\r\n"," fails because\n            the principal does not exist.":" 失败是因为\r\n            校长不存在。\r\n"," traversal, or returns ":" 遍历或返回\r\n","java.sql.ResultSet.first()":"java.sql.resultset.first（）\r\n","java.nio.file.Files.readAllLines(java.nio.file.Path, java.nio.charset.Charset)":"java.nio.file.files.ReadAlllines（java.nio.file.path，java.nio.charset.Charset）\r\n","java.text.Collator.IDENTICAL":"java.text.collat​​or.Sideal\r\n","java.util.Scanner.Scanner(java.nio.file.Path)":"Java.util.Scanner.Scanner（Java.nio.file.path）\r\n","Initializes this parameter generator for a certain size and source\n            of randomness.":"初始化此参数生成器的特定大小和源\r\n            随机性。\r\n","java.nio.file.attribute.AclEntry.principal()":"java.nio.file.attribute.aclentry.principal（）\r\n","java.util.ResourceBundle.getString(java.lang.String)":"java.util.resourcebundle.getstring（java.lang.string）\r\n","java.security.KeyFactory.getInstance(java.lang.String, java.security.Provider)":"java.security.keyfactory.getinstance（java.lang.string，java.security.provider）\r\n"," used in this NumberFormat. -or- Sets the ":" 在此numberFormat中使用。 - 或设置\r\n","Gets the resolver style to use during parsing.":"获取解析过程中使用的溶要样式。\r\n","java.text.BreakIterator.getWordInstance()":"java.text.breakiterator.getWordInstance（）\r\n","java.sql.DatabaseMetaData.versionColumnPseudo":"java.sql.databasemetadata.versioncolumnpseudo\r\n","java.text.DateFormat.MEDIUM":"java.text.dateformat.medium\r\n","Creates a new SplittableRandom instance that is likely to\n            generate sequences of values that are statistically independent\n            of those of any other instances in the current program; and\n            may, and typically does, vary across program invocations.":"创建一个新的splittablerAndom实例\r\n            生成在统计上独立的值序列\r\n            当前计划中的任何其他实例中的和\r\n            可能并且通常在程序调用中会有所不同。\r\n","if the specified modulus length is not valid, or if there are\n             no pre-calculated values and ":"如果指定的模量长度无效，或者有\r\n             没有预计的值，\r\n","java.time.zone.ZoneOffsetTransition.compareTo(java.time.zone.ZoneOffsetTransition)":"java.time.zone.zoneoffsettransition.compareto（java.time.zone.zone.zoneoffsettransition）\r\n","java.nio.file.FileSystem.newWatchService()":"java.nio.file.filesystem.newwatchservice（）\r\n","Checks of the zone rules are fixed, such that the offset never varies.":"检查区域规则的检查是固定的，因此偏移永远不会变化。\r\n","java.security.spec.ECParameterSpec.getGenerator()":"java.security.spec.ecparameterspec.getGenerator（）\r\n","java.time.format.DateTimeFormatterBuilder.appendOffset(java.lang.String, java.lang.String)":"java.time.format.datetimeformatterbuilder.appendoffset（java.lang.string，java.lang.string）\r\n"," initialized with the given count.":" 用给定计数初始化。\r\n","Returns the result of accumulating the given transformation\n            of all entries using the given reducer to combine values,\n            or null if none.":"返回累积给定转换的结果\r\n            在使用给定还原器组合值的所有条目中\r\n            或null如果没有。\r\n","#join":"＃加入\r\n"," is negative or greater than the length\n            of the source string.\n":" 负数或大于长度\r\n            源字符串。\r\n\r\n","Eight-bit UCS Transformation Format":"八位UCS转换格式\r\n","Constructs a new formatter with the specified print stream.":"使用指定的打印流构造新的格式化器。\r\n","The interface that every driver class must implement.":"每个驱动程序类都必须实现的接口。\r\n","setCertificateEntry":"setCertificateEntry\r\n","java.util.Collections.emptyList()":"java.util.collections.emptylist（）\r\n","Reads all bytes from an input stream and writes them to an output stream.":"从输入流读取所有字节，并将它们写入输出流。\r\n","if the specified point ":"如果指定点\r\n","Creates a savepoint with the given name in the current transaction\n            and returns the new <code>Savepoint</code> object that represents it.":"在当前事务中使用给定名称创建一个保存点\r\n            并返回代表它的新<code> Savepoint </code>对象。\r\n","java.text.NumberFormat.getInstance(java.util.Locale)":"java.text.numberformat.getinstance（java.util.locale）\r\n","Initializes this parameter generator with a set of\n            algorithm-specific parameter generation values.":"用一组来初始化此参数生成器\r\n            算法特异性参数生成值。\r\n","java.text.SimpleDateFormat.toPattern()":"java.text.simpledateformat.topattern（）\r\n","java.sql.DatabaseMetaData.supportsStoredProcedures()":"java.sql.databasemetadata.supportstordorcedures（）\r\n","IntSupplier":"intsupplier\r\n","Sets the designated parameter to the given Java <code>long</code> value.":"将指定的参数设置为给定的Java <code>长</code>值。\r\n","java.util.concurrent.Executors.callable(java.lang.Runnable)":"java.util.concurrent.executors.callable（java.lang.runnable）\r\n","java.sql.ParameterMetaData.getParameterType(int)":"java.sql.parametermetadata.getParameType（int）\r\n"," with the specified initial capacity\n            that orders its elements according to the specified comparator.":" 具有指定的初始容量\r\n            根据指定的比较器订购其元素。\r\n","if there is a problem accessing the a database.\n":"如果访问A数据库存在问题。\r\n\r\n","Removes the specified <code>Savepoint</code>  and subsequent <code>Savepoint</code> objects from the current\n            transaction.":"删除指定的<code> savepoint </code>和后续<code> savepoint </code>对象从当前\r\n            交易。\r\n","WeekFields":"Weekfields\r\n","java.util.Date.toGMTString()":"java.util.date.togmtstring（）\r\n","Returns the comparator used to order the elements in this\n            queue, or ":"返回用于订购元素的比较器\r\n            队列，或\r\n","java.sql.SQLInput.readBytes()":"java.sql.sqlinput.readbytes（）\r\n","java.security.KeyFactory.getAlgorithm()":"java.security.keyfactory.getalgorithm（）\r\n","java.util.Arrays.hashCode(char[])":"java.util.arrays.hashcode（char []）\r\n","Constructs a ProviderException with no detail message.":"构建一个没有详细信息的ProvidErexception。\r\n","java.util.IntSummaryStatistics.getMax()":"java.util.intsummarystatistics.getmax（）\r\n"," is smaller than the begin index or greater\n            than the end index.\n":" 小于开始索引或更大的索引\r\n            比最终索引。\r\n\r\n","java.util.AbstractQueue":"Java.util.Abstractqueue\r\n","java.sql.DatabaseMetaData.ownInsertsAreVisible(int)":"java.sql.databasemetadata.owninsertsarevisible（int）\r\n","fromKey":"来自钥匙\r\n","java.sql.PreparedStatement.setRef(int, java.sql.Ref)":"java.sql.preparedstatement.setref（int，java.sql.ref）\r\n","java.sql.Statement.executeQuery(java.lang.String)":"java.sql.statement.executequery（java.lang.string）\r\n","java.sql.ResultSet.updateNull(java.lang.String)":"java.sql.Resultset.updatenull（java.lang.string）\r\n","Returns a view of the portion of this map whose keys are\n            greater than or equal to ":"返回该键的图部分的视图\r\n            大于或等于\r\n","Represents a currency.":"代表一种货币。\r\n","This class represents identities: real-world objects such as people,\n            companies or organizations whose identities can be authenticated using\n            their public keys.":"此类代表身份：像人之类的现实世界对象，\r\n            可以使用身份验证身份的公司或组织\r\n            他们的公共钥匙。\r\n","Returns the result of the computation.":"返回计算结果。\r\n","java.util.Optional.flatMap(java.util.function.Function)":"java.util.optional.flatmap（java.util.function.function）\r\n","java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeP()":"java.security.spec.rsamultimeprimeprivatecrtkeyspec.getPrimep（）\r\n","other.getAsInt()":"other.getasint（）\r\n","Returns an immutable map containing three mappings.":"返回一张包含三个映射的不变地图。\r\n","java.util.concurrent.CountedCompleter.CountedCompleter(java.util.concurrent.CountedCompleter, int)":"java.util.concurrent.CountedCompleter.CountedCompleter（Java.util.concurrent.CountedCompleter，int）\r\n","Sets the value of a file attribute.":"设置文件属性的值。\r\n"," with\n            the specified ":" 和\r\n            指定的\r\n","java.util.concurrent.Executors":"java.util.concurrent.executors\r\n","java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.executorservice.awaittermination（long，java.util.concurrent.timeunit）\r\n","Abstract class for managing a variety of identity certificates.":"用于管理各种身份证书的抽象类。\r\n","java.util.Calendar.MONDAY":"java.util.calendar.monday\r\n","java.security.cert.CollectionCertStoreParameters.getCollection()":"java.security.cert.collectioncertstoreparameters.getCollection（）\r\n","java.util.OptionalLong.orElse(long)":"java.util.optionallong.orelse（long）\r\n","java.util.IntSummaryStatistics.combine(java.util.IntSummaryStatistics)":"java.util.intsummarystatistics.combine（java.util.intsummarystatistics）\r\n","java.util.Map.size()":"java.util.map.size（）\r\n","java.sql.ResultSetMetaData.isAutoIncrement(int)":"java.sql.ResultsetMetadata.isautoincrement（int）\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqldataexception.sqldataexception（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","java.util.Deque.remove()":"java.util.deque.remove（）\r\n","java.nio.file.attribute.FileStoreAttributeView":"java.nio.file.attribute.filestoreattributeview\r\n","Initializes this parameters object using the parameters\n            specified in ":"使用参数初始化此参数对象\r\n            指定在\r\n"," path in exactly the manner\n            specified by the ":" 准确的方式\r\n            由\r\n","Returns the minimum recorded value, ":"返回最低记录的值，\r\n"," that is initially empty.":" 最初是空的。\r\n","Constructs a <code>DriverPropertyInfo</code> object with a  given\n            name and value.":"用给定的\r\n            名称和价值。\r\n","java.security.interfaces.DSAPrivateKey.getX()":"java.security.interfaces.dsaprivatekey.getx（）\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.util.InputMismatchException.InputMismatchException()":"java.util.inputMismatchException.inputMismatchException（）\r\n","0 <= numBits <= 32":"0 <= numbits <= 32\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.Throwable)":"java.sql.sqlrecoverableException.sqlrecoverableException（java.lang.throwable）\r\n","Constructs an empty array deque with an initial capacity\n            sufficient to hold 16 elements.":"构建一个具有初始容量的空阵列Deque\r\n            足以容纳16个要素。\r\n","Retrieves the value of the designated JDBC <code>BIGINT</code> parameter\n            as a <code>long</code> in the Java programming language.":"检索指定的JDBC <code> bigint </code>参数的值\r\n            作为Java编程语言中的<code>长</code>。\r\n","java.nio.file.FileSystemLoopException":"java.nio.file.filesystemsloopexception\r\n","java.util.TreeMap.floorEntry(java.lang.Object)":"java.util.treemap.floortry（java.lang.Object）\r\n","java.security.SecureRandomSpi.engineSetSeed(byte[])":"java.security.securerandomspi.enginesetseed（byte []）\r\n","s that\n            are used to find certificates and CRLs. -or- Sets the list of ":"那\r\n            用于查找证书和CRL。 - 或设置列表\r\n","java.sql.DatabaseMetaData.importedKeyInitiallyImmediate":"java.sql.databasemetadata.importedKeyinalitalimmediate\r\n","java.util.Formatter.Formatter(java.io.File)":"java.util.formatter.formatter（java.io.file）\r\n","java.util.SortedMap.keySet()":"java.util.sortedmap.keyset（）\r\n","Flushes this formatter.":"冲洗这个格式。\r\n","This class extends ClassLoader with additional support for defining\n            classes with an associated code source and permissions which are\n            retrieved by the system policy by default.":"此类扩展了ClassLoader，并提供其他支持以定义\r\n            具有关联的代码源和权限的类\r\n            默认情况下由系统策略检索。\r\n","Returns the least element in this set greater than or equal to\n            the given element, or ":"返回此组中最小的元素大于或等于\r\n            给定的元素，或\r\n","Sets the component at the specified ":"将组件设置为指定的\r\n","if this sorted map is empty.\n":"如果此排序地图为空。\r\n\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.util.TimeZone.getOffset(int, int, int, int, int, int)":"java.util.timezone.getOffset（int，int，int，int，int，int，int）\r\n","Increments the iterator's index by one and returns the character\n            at the new index.":"将迭代器的索引递增并返回字符\r\n            在新索引。\r\n","java.nio.file.spi.FileTypeDetector.FileTypeDetector()":"java.nio.file.spi.filetypedetector.filetypedetector（）\r\n","java.util.FormattableFlags.ALTERNATE":"java.util.formattableflags.anterate\r\n","Double.POSITIVE_INFINITY":"double.positive_infinity\r\n","Creates a new service loader for the given service type, using the\n            current thread's java.":"使用\r\n            当前线程的Java。\r\n","java.text.DateFormat.WEEK_OF_MONTH_FIELD":"java.text.dateformat.week_of_month_field\r\n","java.nio.file.InvalidPathException.getInput()":"java.nio.file.invalidpathexception.getInput（）\r\n","java.text.BreakIterator.getAvailableLocales()":"java.text.breakiterator.getAvailableLocales（）\r\n"," is in Daylight Saving Time in\n            this time zone.":" 在夏令时节省时间\r\n            这个时区。\r\n","java.nio.file.attribute.PosixFileAttributeView.readAttributes()":"java.nio.file.attribute.posixfileattributeview.readattributes（）\r\n","Returns a specification (key material) of the given key\n            object.":"返回给定密钥的规范（密钥材料）\r\n            目的。\r\n","Sets escape processing on or off.":"设置逃脱处理或关闭。\r\n","Returns the URL for this database.":"返回此数据库的URL。\r\n","Returns a combination of the two provided ":"返回两者提供的组合\r\n","java.sql.SQLOutput.writeDouble(double)":"java.sql.sqloutput.writedouble（double）\r\n","java.security.KeyStoreException":"Java.security.KeystoreException\r\n","java.security.cert.CertificateException.CertificateException()":"java.security.cert.certificateException.certificateException（）\r\n","java.security.spec.MGF1ParameterSpec.SHA1":"java.security.spec.mgf1parameterspec.sha1\r\n","java.util.Scanner.hasNextByte()":"java.util.scanner.hasnextbyte（）\r\n","Returns the second coefficient ":"返回第二个系数\r\n","Retrieves whether a schema name can be used in an index definition statement.":"检索是否可以在索引定义语句中使用模式名称。\r\n","java.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String)":"java.nio.file.files.newdirectorystream（java.nio.file.path，java.lang.string）\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n             with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n             给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","java.security.SecureRandom.getProvider()":"java.security.securerandom.getProvider（）\r\n","java.util.concurrent.ConcurrentHashMap.reduceEntriesToLong(long, java.util.function.ToLongFunction, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.concurrenthashmap.reduceentriestolong（long，java.util.function.tolongfunction.tolongfunction，long，java.util.function.longbinaryoperator）\r\n","Clears all of the bits in this ":"清除其中的所有位\r\n","Initializes the key pair generator for a certain keysize, using\n            the default parameter set.":"初始化某个按键的密钥对生成器，使用\r\n            默认参数集。\r\n","java.nio.file.Files.copy(java.io.InputStream, java.io.OutputStream)":"java.nio.file.files.copy（java.io.inputstream，java.io.outputstream）\r\n","Returns the maximum number of columns in a table for this database.":"返回该数据库表中的最大列数。\r\n","java.util.TimerTask.cancel()":"java.util.timertask.cancel（）\r\n","Creates a new directory.":"创建一个新目录。\r\n","Retrieves a description of the table hierarchies defined in a particular\n            schema in this database.":"检索在特定的表层次结构的描述\r\n            该数据库中的模式。\r\n","java.util.Calendar.setTime(java.util.Date)":"java.util.calendar.settime（java.util.date）\r\n","Indicates that <code>NULL</code> values are definitely allowed.":"指示<code> null </code>值绝对允许。\r\n"," with the\n            specified parameter values.":" 与\r\n            指定的参数值。\r\n","java.security.Security.getProvider(java.lang.String)":"java.security.security.getProvider（java.lang.string）\r\n","Charset service-provider class.":"Charset服务提供者类。\r\n"," object by converting the given ":" 通过转换给定的对象\r\n","Returns the version number of this JDBC driver.":"返回此JDBC驱动程序的版本号。\r\n","java.util.concurrent.CountedCompleter.nextComplete()":"java.util.concurrent.countedcompleter.nextcomplete（）\r\n","java.util.LinkedList.spliterator()":"java.util.linkedlist.spliterator（）\r\n","java.sql.DatabaseMetaData.storesLowerCaseQuotedIdentifiers()":"java.sql.databasemetadata.storeslowercasequotedIdentifiers（）\r\n","Indicates that <code>NULL</code> values are allowed.":"表示允许<code> null </code>值。\r\n","Returns the type of this ":"返回此类型\r\n","java.util.Arrays.equals(double[], double[])":"java.util.arrays.equals（double []，double []）\r\n","java.sql.ResultSet.getNClob(int)":"java.sql.Resultset.getNClob（int）\r\n","Returns a view of the portion of this map whose keys are less than (or\n            equal to, if ":"返回该地图部分的视图，其键小于（或\r\n            等于，如果\r\n","java.security.cert.CertificateRevokedException.getExtensions()":"java.security.cert.certificaterevokedexception.getExtensions（）\r\n","java.sql.DatabaseMetaData.supportsCatalogsInDataManipulation()":"java.sql.databasemetadata.supportscatalogsindatamanipulation（）\r\n","Constructs a <code>Date</code> object initialized with the given\n            year, month, and day.":"构建<code>日期</code>用给定的对象\r\n            年，月和日。\r\n","java.util.concurrent.CompletableFuture.anyOf(java.util.concurrent.CompletableFuture)":"java.util.concurrent.completablefuture.anyof（java.util.concurrent.completablefuture）\r\n","java.sql.ResultSet.getTime(int)":"java.sql.Resultset.getTime（int）\r\n","Get the designated column's name.":"获取指定的列的名称。\r\n","A (transparent) specification of cryptographic parameters.":"加密参数的（透明）规范。\r\n"," with\n            the specified revocation date, reason code, authority name, and map\n            of extensions.":" 和\r\n            指定的撤销日期，原因代码，权限名称和地图\r\n            扩展。\r\n","if a database access error occurs.\n":"如果发生数据库访问错误。\r\n\r\n","java.security.spec.RSAKeyGenParameterSpec.getKeysize()":"java.security.spec.rsakeygenparameterspec.getKeysize（）\r\n","Returns the provider installed with the specified name, if\n            any.":"返回带有指定名称的提供商，如果\r\n            任何。\r\n","Retrieves the fully-qualified name of the Java class whose instances\n            should be passed to the method <code>PreparedStatement.":"检索其实例的Java类完全合格的名称\r\n            应传递到方法<code>准备序列。\r\n","A comparison function, which imposes a ":"比较功能，该功能强加了\r\n","java.util.Scanner.nextByte(int)":"java.util.scanner.nextbyte（int）\r\n","java.util.Hashtable.putAll(java.util.Map)":"java.util.hashtable.putall（java.util.map）\r\n","java.text.Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT":"java.text.bidi.direction_default_left_to_right\r\n","Retrieves the exception chained to this\n            <code>SQLException</code> object by setNextException(SQLException ex). -or- Adds an <code>SQLException</code> object to the end of the chain.":"检索链接的例外\r\n            <code> sqlexception </code> by setnextexception（sqlexception ex）对象。 - 或 - 将<code> sqlexception </code>对象添加到链的末端。\r\n","java.security.cert.X509CertSelector.getKeyUsage()":"java.security.cert.x509certselector.getKeyusage（）\r\n","java.util.concurrent.Executors.newCachedThreadPool(java.util.concurrent.ThreadFactory)":"java.util.concurrent.executors.newcachedthreadpool（java.util.concurrent.threadFactory）\r\n","java.security.KeyStoreException.KeyStoreException(java.lang.String)":"java.security.keystoreexception.keystoreexception（java.lang.string）\r\n"," objects that may have\n been created in the use of this connection.":" 可能具有的对象\r\n 是在使用此连接时创建的。\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","if parallelism less than or\n         equal to zero, or greater than implementation limit\n":"如果平行性小于或\r\n         等于零，或大于实施极限\r\n\r\n","Returns a string representation of the contents of the specified array.":"返回指定数组内容的字符串表示。\r\n","Tests this path for equality with the given object.":"用给定的对象测试此路径以保持平等。\r\n","java.text.BreakIterator.DONE":"java.text.breakiterator.done\r\n","java.util.concurrent.CompletableFuture.orTimeout(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.completablefuture.ortimeout（long，java.util.concurrent.timeunit）\r\n","java.util.concurrent.Flow.defaultBufferSize()":"java.util.concurrent.flow.defaultbuffersize（）\r\n","java.sql.DriverManager.getConnection(java.lang.String)":"java.sql.drivermanager.getConnection（java.lang.string）\r\n"," object that implements the\n            specified algorithm.":" 实现的对象\r\n            指定算法。\r\n","java.util.Collections.unmodifiableMap(java.util.Map)":"java.util.collections.unmodifiablemap（java.util.map）\r\n","Sets the designated parameter to the given <code>Reader</code>\n            object.":"将指定的参数设置为给定的<code>读取器</code>\r\n            目的。\r\n","#nextInt":"#nextint\r\n","Checked exception thrown when an attempt is made to create a file or\n            directory and a file of that name already exists.":"试图创建文件或\r\n            目录和该名称的文件已经存在。\r\n","java.util.Vector.removeAllElements()":"java.util.vector.removeallelements（）\r\n","Gets the string used to represent infinity. -or- Sets the string used to represent infinity.":"获取用来表示无穷大的字符串。 - 或设置用于表示无穷大的字符串。\r\n","if a database error occurs\n":"如果发生数据库错误\r\n\r\n","Returns the set of flags which contains an unknown flag.":"返回包含未知标志的标志集。\r\n","Gets the designated column's suggested title for use in printouts and\n            displays.":"获取指定列的建议标题，用于打印输出和\r\n            显示。\r\n","java.sql.ResultSet.updateNCharacterStream(java.lang.String, java.io.Reader, long)":"java.sql.Resultset.updatencharacterstream（java.lang.string，java.io.Reader，long）\r\n"," or is otherwise unsupported.":" 或否则不支持。\r\n","Service-provider class for file systems.":"文件系统的服务提供程序类。\r\n","if encoding errors are detected.":"如果检测到编码错误。\r\n","java.sql.SQLException.setNextException(java.sql.SQLException)":"java.sql.sqlexception.setNextexception（java.sql.sqlexception）\r\n"," under the specified alias.":" 根据指定的别名。\r\n","Directory entry deleted.":"目录条目已删除。\r\n"," class, which is used to generate\n            pairs of public and private keys.":" 类，用于生成\r\n            成对的公共和私钥。\r\n","java.security.spec.PSSParameterSpec":"java.security.spec.pssparameterspec\r\n","HOUR":"小时\r\n","Removes all available unexecuted submitted and forked tasks\n            from scheduling queues and adds them to the given collection,\n            without altering their execution status.":"删除所有可用的未执行的提交和分叉任务\r\n            从调度队列并将其添加到给定的集合中，\r\n            没有更改其执行状态。\r\n","java.security.cert.CertificateEncodingException.CertificateEncodingException(java.lang.String, java.lang.Throwable)":"java.security.cert.certificateEncodingException.certificateAceCodingException（java.lang.string，java.lang.throwable）\r\n","The interface to an RSA multi-prime private key, as defined in the\n            PKCS#1 v2.":"RSA多功能私钥的接口，如在\r\n            PKCS＃1 V2。\r\n","Checked exception thrown when a file system operation fails because a\n            directory is not empty.":"当文件系统操作失败时，检查的异常是因为\r\n            目录不是空的。\r\n","java.security.cert.PKIXBuilderParameters.setMaxPathLength(int)":"java.security.cert.pkixbuilderparameters.setmaxpathlength（int）\r\n","java.util.Deque.pollLast()":"java.util.deque.polllast（）\r\n","if an error occurs":"如果发生错误\r\n","java.util.concurrent.ConcurrentSkipListMap.floorKey(java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.floorkey（java.lang.object）\r\n","Constructs a new builder.":"构建一个新的建筑商。\r\n","java.nio.file.Files.setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption)":"java.nio.file.files.setAttribute（java.nio.file.path，java.lang.string，java.lang.object，java.nio.file.linkoption）\r\n","java.sql.CallableStatement.setURL(java.lang.String, java.net.URL)":"java.sql.callablestatement.seturl（java.lang.string，java.net.url）\r\n","Returns a new file attribute view to access the file attributes of this\n            directory.":"返回一个新文件属性视图以访问此文件的属性\r\n            目录。\r\n","java.security.KeyStoreSpi.engineEntryInstanceOf(java.lang.String, java.lang.Class)":"Java.security.Keystorespi.Engineentryinstanceof（Java.lang.String，Java.lang.class）\r\n","java.text.CollationElementIterator.tertiaryOrder(int)":"java.text.Collat​​ionElementiter.tertiaryOrder（INT）\r\n","java.sql.ResultSet.getTimestamp(java.lang.String)":"java.sql.Resultset.getTimestamp（java.lang.string）\r\n","java.nio.file.spi.FileSystemProvider.getFileAttributeView(java.nio.file.Path, java.lang.Class, java.nio.file.LinkOption)":"java.nio.file.spi.filesystemprovider.getfileattributeview（java.nio.file.path，java.lang.class，java.nio.file.linkoption）\r\n","Sets this scanner's default radix to the specified radix.":"将此扫描仪的默认radix设置为指定的radix。\r\n","java.util.Base64.getUrlDecoder()":"java.util.base64.geturldecoder（）\r\n","java.util.concurrent.ConcurrentSkipListMap.replace(java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.replace（java.lang.object，java.lang.object，java.lang.object）\r\n","java.security.cert.X509CRLSelector.setIssuers(java.util.Collection)":"java.security.cert.x509crlselector.setissuers（java.util.collection）\r\n","java.security.acl.Group":"java.security.acl.group\r\n","Opens the directory identified by the given path, returning a ":"打开给定路径确定的目录，返回\r\n","java.security.cert.X509CRL.getRevokedCertificate(java.math.BigInteger)":"java.security.cert.x509crl.getRevokedCertificate（java.math.biginteger）\r\n","Constructs a secure random number generator (RNG) implementing the\n            default random number algorithm.":"构建实现的安全随机数生成器（RNG）\r\n            默认随机数算法。\r\n","Gets the statement that produced this ":"得到产生的陈述\r\n","Overrides Format.":"覆盖格式。\r\n","Returns a pseudorandom ":"返回伪随机\r\n","java.security.cert.PKIXParameters":"java.security.cert.pkixparameters\r\n"," or\n             invalid.\n":" 或者\r\n             无效的。\r\n\r\n","CertPathParameters":"CERTPATHPARAMETERS\r\n","Constructs a new formatter.":"构建一个新的格式化器。\r\n"," view of the values contained in this map.":" 此地图中包含的值的视图。\r\n","Interface used for executing static SQL statements to retrieve query results.":"用于执行静态SQL语句以检索查询结果的接口。\r\n"," is not a normal and writable ":" 不是正常且可写的\r\n","LongSupplier":"隆起\r\n","java.util.TreeSet.higher(java.lang.Object)":"java.util.treeset.higher（java.lang.Object）\r\n","if decoding of the extension fails.\n":"如果扩展的解码失败。\r\n\r\n","Marks the hour part of a date (0-11).":"标记日期（0-11）的小时部分。\r\n","java.util.DoubleSummaryStatistics.getMin()":"java.util.doublesummarystatistics.getmin（）\r\n","insertion point":"插入点\r\n","java.text.DecimalFormat.toLocalizedPattern()":"java.text.decimalformat.tolocalizedpattern（）\r\n","java.util.List.set(int, java.lang.Object)":"java.util.list.set（int，java.lang.Object）\r\n","if removing is not supported by the list being iterated.":"如果不迭代列表不支持删除。\r\n","java.sql.ResultSet.updateArray(java.lang.String, java.sql.Array)":"java.sql.Resultset.updatearray（java.lang.string，java.sql.Array）\r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given <code>reason</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n","if parsing problems are detected.":"如果检测到解析问题。\r\n","Sets the parent bundle of this bundle.":"设置此捆绑包的父束。\r\n","Returns a value that is the result of subtracting 1900 from the\n            year that contains or begins with the instant in time represented\n            by this <code>Date</code> object, as interpreted in the local\n            time zone. -or- Sets the year of this ":"返回值是从中减去1900的结果\r\n            包含或从及时代表的瞬间开始的一年\r\n            通过此<code>日期</code>对象，如本地解释\r\n            时区。 - 或 - 设置这一年\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given  <code>reason</code>, <code>SQLState</code>  and\n            <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>，<code> sqlstate </code>和\r\n            <code> FailedProperties </code>。\r\n","java.text.NumberFormat.setMinimumFractionDigits(int)":"java.text.numberformat.setminimumfractionDigits（int）\r\n","Creates a transition instance for the specified year.":"为指定年份创建过渡实例。\r\n","Returns a new collator with the same decomposition mode and\n            strength value as this collator.":"返回具有相同分解模式的新碰撞器，并且\r\n            强度价值作为碰撞器。\r\n","java.sql.SQLInput.readBoolean()":"java.sql.sqlinput.readboolean（）\r\n","java.util.concurrent.CyclicBarrier.getParties()":"java.util.concurrent.cyclarer.getParties（）\r\n"," value returned by ":" 返回的值\r\n","java.util.SortedMap.tailMap(java.lang.Object)":"java.util.sortedmap.tailmap（java.lang.Object）\r\n","A transparent stream that updates the associated message digest using\n            the bits going through the stream.":"透明的流，可使用关联的消息摘要使用\r\n            钻头穿过流。\r\n","This constant stands for the decimal separator.":"该常数代表小数分离器。\r\n","The KeyPairGenerator class is used to generate pairs of\n            public and private keys.":"Keypairgenerator类用于生成对\r\n            公共和私钥。\r\n","java.time.format.DateTimeFormatter.ISO_OFFSET_TIME":"java.time.format.datetimeformatter.iso_offset_time\r\n","<code>SimpleDateFormat</code> is a concrete class for formatting and\n            parsing dates in a locale-sensitive manner.":"<code> SimpleDateFormat </code>是用于格式化和的具体类\r\n            以环境敏感的方式解析日期。\r\n","Adds the specified (signed) amount of time to the given calendar field,\n            based on the calendar's rules.":"将指定的（签名）的时间添加到给定的日历字段，\r\n            基于日历的规则。\r\n","Returns a formatted string describing the parameters.":"返回描述参数的格式字符串。\r\n","Returns a new bit set containing all the bits in the given byte array.":"返回一个新的位集，其中包含给定字节数组中的所有位。\r\n","java.sql.DatabaseMetaData.othersInsertsAreVisible(int)":"java.sql.databasemetadata.othersinsertsarevisible（int）\r\n","Thrown by a <code>Scanner</code> to indicate that the token\n            retrieved does not match the pattern for the expected type, or\n            that the token is out of range for the expected type.":"由<code>扫描仪 ^抛出</code>表示令牌\r\n            检索的不匹配预期类型的​​模式，或\r\n            对于预期类型，令牌超出了范围。\r\n","Compares the specified object with this list for equality.":"将指定的对象与此列表进行比较。\r\n","Returns the last boundary.":"返回最后一个边界。\r\n","Reads a property list (key and element pairs) from the input\n            character stream in a simple line-oriented format.":"从输入中读取属性列表（键和元素对）\r\n            字符流以简单的方向格式。\r\n","java.security.Timestamp":"java.security.timestamp\r\n","java.sql.DatabaseMetaData.supportsConvert()":"java.sql.databasemetadata.supportsconvert（）\r\n","java.time.format.DateTimeFormatterBuilder.parseLenient()":"java.time.format.datetimeformatterbuilder.parselenient（）\r\n","Returns a well formed BCP-47 language tag that identifies this locale.":"返回形成良好的BCP-47语言标签，该标签标识了此语言环境。\r\n","This attribute marks segments from an input method.":"此属性从输入方法标记段。\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a byte value in the default radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用默认radix解释为字节值\r\n            \r\n","java.util.Hashtable.Hashtable(int)":"java.util.hashtable.hashtable（int）\r\n","java.sql.SQLTimeoutException":"java.sql.sqltimeoutexception\r\n","Retrieves the referenced object and maps it to a Java type\n            using the given type map.":"检索引用的对象并将其映射到Java类型\r\n            使用给定类型地图。\r\n","java.util.Calendar.getWeeksInWeekYear()":"java.util.calendar.getweeksinweekyear（）\r\n"," (if ":" （如果\r\n","java.text.NumberFormat.getInstance()":"java.text.numberformat.getInstance（）\r\n","An attribute view that is a read-only or updatable view of non-opaque\n            values associated with a file in a filesystem.":"属性视图是非读取的非读取视图\r\n            与文件系统中的文件关联的值。\r\n","java.util.Timer":"java.util.timer\r\n","Constructs a <code>SQLTransientException</code> object\n             with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqltransientException </code>对象\r\n             使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","if a database error occurs.\n":"如果发生数据库错误。\r\n\r\n","java.security.cert.CertPathBuilderException.CertPathBuilderException(java.lang.String, java.lang.Throwable)":"java.security.cert.certpathbuilderexception.certpathbuilderexception（java.lang.string，java.lang.lang.throwable）\r\n","Gets the available IDs according to the given time zone offset in milliseconds.":"根据给定的时区偏移以毫秒为单位获取可用ID。\r\n","java.nio.file.DirectoryStream.iterator()":"java.nio.file.directorystream.iterator（）\r\n","Imports the specified parameters and decodes them\n            according to the primary decoding format for parameters.":"导入指定的参数并解码它们\r\n            根据参数的主要解码格式。\r\n","Retrieves a slice of the SQL <code>ARRAY</code>\n            value designated by this <code>Array</code> object, beginning with the\n            specified <code>index</code> and containing up to <code>count</code>\n            successive elements of the SQL array.":"检索SQL <code>数组</code>的切片\r\n            该<code> array指定的值</code>对象，以\r\n            指定<code>索引</code>，最多包含<code> count </code>\r\n            SQL数组的连续元素。\r\n"," along the completion path:\n            If the pending count is nonzero, decrements the count;\n            otherwise, similarly tries to complete this task's completer, if\n            one exists, else marks this task as complete.":" 沿着完成路径：\r\n            如果待处理计数为非零，则减少计数；\r\n            否则，类似地尝试完成此任务的完成者\r\n            一个存在，否则将此任务标记为完成。\r\n","; else returns ":";否则返回\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n            with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n            使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.util.Observable.Observable()":"java.util.Observable.Observable（）\r\n","Returns an iterator over the elements in this queue in proper sequence.":"以适当的顺序在该队列中的元素上返回迭代器。\r\n","Contains broken-down field values for the current value of ":"包含破碎的字段值的当前值\r\n","Returns an unmodifiable ":"返回一个无法解码的\r\n","java.sql.SQLInput.readURL()":"java.sql.sqlinput.readurl（）\r\n","23":"23\r\n","Gets a boolean array representing bits of\n            the ":"得到一个布尔阵列，代表\r\n            这\r\n","java.security.spec.InvalidParameterSpecException.InvalidParameterSpecException(java.lang.String)":"java.security.spec.invalidparameterspecexception.invalidparameterspecexception（java.lang.string）\r\n","java.security.KeyStore.isKeyEntry(java.lang.String)":"java.security.keystore.iskeyentry（java.lang.string）\r\n","java.sql.PreparedStatement.setUnicodeStream(int, java.io.InputStream, int)":"java.sql.preparedstatement.setunicodestream（int，java.io.inputstream，int）\r\n"," if no space is currently\n            available.":" 如果目前没有空间\r\n            可用的。\r\n","Creates a message digest with the specified algorithm name.":"使用指定的算法名称创建消息摘要。\r\n","The ISO time formatter that formats or parses a time with an\n            offset, such as '10:15+01:00' or '10:15:30+01:00'.":"ISO时间格式化格式或分析时间的时间\r\n            偏移，例如'10：15+01：00'或'10：15：30+01：00'。\r\n","java.security.Provider.getServices()":"java.security.provider.getServices（）\r\n"," and resolves it against\n            this path's ":" 并解决它反对\r\n            这条路是\r\n","java.security.Signer.getPrivateKey()":"java.security.signer.getPrivateKey（）\r\n","java.sql.CallableStatement.getRowId(int)":"java.sql.callablestatement.getrowid（int）\r\n","Retrieve the current parse position. -or- Set the current parse position.":"检索当前的解析位置。 - 或设置当前的解析位置。\r\n","Retrieves and removes the first element of this deque,\n or returns ":"检索并删除此Deque的第一个元素，\r\n 或返回\r\n","Retrieves whether this database treats mixed case unquoted SQL identifiers as\n            case sensitive and as a result stores them in mixed case.":"检索该数据库是否将混合情况视为未引用的SQL标识符为\r\n            病例敏感，结果将它们存储在混合情况下。\r\n","Characteristic value signifying that all Spliterators resulting from\n            ":"特征价值表示所有汇编器由\r\n            \r\n","Tests for equality between the specified identity and this identity.":"测试指定的身份和该身份之间的平等。\r\n","DirectoryStream":"DirectoryStream\r\n","if the certificate is not valid.\n":"如果证书无效。\r\n\r\n","java.util.concurrent.ConcurrentSkipListMap.replace(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.replace（java.lang.object，java.lang.object）\r\n","Returns a copy of this formatter with a new resolver style.":"返回具有新的解析器样式的该格式化器的副本。\r\n","\n            and then similarly tries to complete this task's completer,\n            if one exists, else marks this task as complete.":"\r\n            然后类似地尝试完成此任务的完成者，\r\n            如果存在，则将此任务标记为完成。\r\n","java.sql.PreparedStatement.setCharacterStream(int, java.io.Reader)":"java.sql.preparedstatement.setcharacterstream（int，java.io.reader）\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n             with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n             使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Returns a non-null result from applying the given search\n            function on each entry, or null if none.":"返回通过应用给定搜索的非零结果\r\n            在每个条目上起作用，或无效。\r\n","Spliterator.OfInt":"分解器\r\n","java.security.spec.ECPoint.POINT_INFINITY":"java.security.spec.ecpoint.point_infinity\r\n","java.sql.CallableStatement.getLong(java.lang.String)":"java.sql.callablestatement.getlong（java.lang.string）\r\n","java.sql.DriverPropertyInfo.choices":"java.sql.driverpropertyinfo.Choices\r\n","java.nio.file.WatchKey.cancel()":"java.nio.file.watchkey.cancel（）\r\n","java.security.AlgorithmParameterGeneratorSpi.engineGenerateParameters()":"java.security.algorithmparametergeneratorspi.EngineGenerateParameters（）\r\n","Certificate Parsing Exception.":"证书解析例外。\r\n","Constructs and returns a new SplittableRandom instance that\n            shares no mutable state with this instance.":"构建并返回一个新的splittablerandom实例\r\n            与此实例没有任何可变状态。\r\n","java.security.cert.CertificateFactorySpi.engineGenerateCertPath(java.util.List)":"java.security.cert.certificatefactoryspi.enginegeneratecertpath（java.util.list）\r\n","java.nio.file.attribute.AclEntryPermission.ADD_SUBDIRECTORY":"java.nio.file.attribute.aclentrypermission.add_subdirectory\r\n","java.security.DigestInputStream.DigestInputStream(java.io.InputStream, java.security.MessageDigest)":"java.security.digestinputstream.digestinputstream（java.io.inputStream，java.security.messagedigest）\r\n","java.util.Scanner.Scanner(java.nio.channels.ReadableByteChannel, java.lang.String)":"Java.util.Scanner.Scanner（Java.nio.Channels.drablebytechannel，Java.lang.String）\r\n","java.security.cert.X509CertSelector.getCertificateValid()":"java.security.cert.x509certselector.getCertificateValid（）\r\n","java.sql.Types.NUMERIC":"java.sql.types.numeric\r\n","Checks that the specified value is valid and fits in an ":"检查指定值是否有效，并适合\r\n","Returns an iterator over the elements in this deque in reverse\n sequential order.":"返回迭代器，以反向以相反\r\n 顺序顺序。\r\n","Creates a new Exchanger.":"创建一个新的交换器。\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string，java.lang.string，java.lang.thrang.throwable）\r\n","java.util.Observable.hasChanged()":"java.util.Observable.haschanged（）\r\n","java.sql.CallableStatement.setAsciiStream(java.lang.String, java.io.InputStream, int)":"java.sql.callablestatement.setasciistream（java.lang.string，java.io.inputstream，int）\r\n","java.sql.CallableStatement.getTime(java.lang.String)":"java.sql.callablestatement.getTime（java.lang.string）\r\n","java.security.Provider.putService(java.security.Service)":"java.security.provider.putservice（java.security.service）\r\n","java.util.Hashtable.remove(java.lang.Object)":"java.util.hashtable.remove（java.lang.Object）\r\n","Forks the given tasks, returning when ":"分叉给定的任务，返回\r\n","java.security.interfaces.RSAMultiPrimePrivateCrtKey.getOtherPrimeInfo()":"java.security.interfaces.rsamultimeprimeprivatecrtkey.getotherprimeinfo（）\r\n","Possibly executes tasks until the pool hosting the current task\n            ForkJoinPool#isQuiescent is quiescent.":"可能执行任务，直到池托管当前任务\r\n            forkjoinpool＃iSquiescent是静止的。\r\n","java.sql.DatabaseMetaData.getUDTs(java.lang.String, java.lang.String, java.lang.String, int[])":"java.sql.databasemetadata.getudts（java.lang.string，java.lang.string，java.lang.string，int []）\r\n","Returns the Calendar field that this field represents.":"返回该字段代表的日历字段。\r\n","Constructs a new <code>Scanner</code> that produces values scanned\n            from the specified input stream.":"构建一个新的<code>扫描仪</code>，该</code>产生扫描的值\r\n            从指定的输入流。\r\n","java.util.Calendar.HOUR_OF_DAY":"java.util.calendar.hour_of_day\r\n","java.security.cert.PKIXCertPathChecker":"java.security.cert.pkixcertpathchecker\r\n","java.sql.DatabaseMetaData.doesMaxRowSizeIncludeBlobs()":"java.sql.databasemetadata.doesmaxrowsizeincludeblobs（）\r\n","java.nio.file.spi.FileTypeDetector":"java.nio.file.spi.filetypedetector\r\n","Gets the date formatter with the default formatting style\n            for the default ":"使用默认格式样式获取日期格式\r\n            对于默认值\r\n","indicating the\n year. ":"指示\r\n 年。\r\n"," and its primitive specializations\n            ":" 及其原始专业\r\n            \r\n","java.security.DigestOutputStream.on(boolean)":"java.security.digestoutputstream.on（布尔值）\r\n","Returns a new CompletableFuture that is completed when all of\n            the given CompletableFutures complete.":"返回一个新的可完整未图\r\n            给定的完整形式完成。\r\n","Returns a copy of the info with a new character that represents the negative sign.":"返回具有代表负标志的新字符的信息副本。\r\n","java.util.LinkedList.getFirst()":"java.util.linkedlist.getFirst（）\r\n","java.util.concurrent.DelayQueue.drainTo(java.util.Collection, int)":"java.util.concurrent.delayqueue.drainto（java.util.collection，int）\r\n","java.sql.ResultSet.getBoolean(int)":"java.sql.Resultset.getBoolean（int）\r\n","java.util.Collections.max(java.util.Collection)":"java.util.collections.max（java.util.collection）\r\n","java.security.spec.DSAPrivateKeySpec.getG()":"java.security.spec.dsaprivatekeyspec.getg（）\r\n","if the parameter is invalid, already set or is not allowed to\n             be changed.":"如果参数无效，已经设置或不允许\r\n             改变。\r\n","Constructs a KeyManagementException with no detail message.":"构建一个没有详细信息的键ManagementException。\r\n","Sets the position to the specified position in the text and returns that\n            character.":"将位置设置为文本中的指定位置，并返回\r\n            特点。\r\n","java.text.DateFormatSymbols.setLocalPatternChars(java.lang.String)":"java.text.dateformatsymbols.setlocalpatternchars（java.lang.string）\r\n","java.text.NumberFormat.getMinimumIntegerDigits()":"java.text.numberformat.getminimumintegerdigits（）\r\n","Searches the specified array of shorts for the specified value using\n            the binary search algorithm.":"使用\r\n            二进制搜索算法。\r\n","This constant stands for the permille symbol.":"这个常数代表了Permille符号。\r\n","add":"添加\r\n","java.time.format.DateTimeFormatterBuilder.optionalEnd()":"java.time.format.datetimeformatterbuilder.optionalend（）\r\n","CertStore CertStore":"CERTSTORE CERTSTORE\r\n","Retrieves whether this database supports keeping cursors open\n            across rollbacks.":"检索该数据库是否支持保持光标打开\r\n            跨回滚。\r\n","java.security.UnrecoverableEntryException.UnrecoverableEntryException()":"java.security.unrecoverableEntryException.unrecoverableEntryException（）\r\n","Returns the private value S.":"返回私人价值S。\r\n","PKIXCertPathValidatorResult":"PKIXCERTPATHVALIDATORESULT\r\n","Returns the format specifier which does not have a width.":"返回没有宽度的格式说明符。\r\n","Returns whether this map is empty.":"返回该地图是否为空。\r\n","Loads this KeyStore from the given input stream.":"从给定的输入流加载此密钥库。\r\n","java.util.BitSet.or(java.util.BitSet)":"java.util.bitset.or（java.util.bitset）\r\n","java.security.interfaces.ECPublicKey.getW()":"java.security.interfaces.ecpublickey.getw（）\r\n","if a key or value is not a string\n":"如果键或值不是字符串\r\n\r\n","java.util.concurrent.ForkJoinTask.tryUnfork()":"java.util.concurrent.forkjointask.tryunfork（）\r\n","indicating the\n day of the week. ":"指示\r\n 一周中的天。\r\n","Returns the database vendor's preferred term for \"schema\".":"返回数据库供应商的首选术语“ schema”。\r\n","Normalization Form C - Canonical Decomposition, followed by Canonical Composition.":"标准化形式C-规范分解，然后是规范组成。\r\n","java.sql.ResultSet.FETCH_REVERSE":"java.sql.Resultset.fetch_reverse\r\n","Gets the cursor hold setting for ":"获取光标保留设置\r\n","if the resource found is not an array of strings.":"如果找到的资源不是字符串。\r\n","java.util.Objects":"Java.util.Objects\r\n","java.nio.file.WatchService.take()":"java.nio.file.watchservice.take（）\r\n","java.security.cert.PKIXBuilderParameters.getMaxPathLength()":"java.security.cert.pkixbuilderparameters.getmaxpathlength（）\r\n","java.nio.file.attribute.PosixFileAttributes.permissions()":"java.nio.file.attribute.posixfileattributes.permissions（）\r\n","Returns the field identifier as an attribute constant\n            from one of the <code>Field</code> subclasses.":"返回字段标识符作为属性常数\r\n            从<code>字段之一</code>子类中。\r\n","Moves the cursor a relative number of rows, either positive or negative.":"将光标移动相对数的行数，即正或负数。\r\n","java.util.concurrent.ForkJoinWorkerThread.getPoolIndex()":"java.util.concurrent.forkjoinworkerthread.getPoolIndex（）\r\n","java.sql.CallableStatement.getByte(int)":"java.sql.callablestatement.getbyte（int）\r\n","java.util.Locale.getUnicodeLocaleKeys()":"java.util.locale.getunicodelocalekeys（）\r\n"," field indicating\n            Tuesday.":" 指示字段\r\n            周二。\r\n","java.util.LinkedList.listIterator(int)":"java.util.linkedlist.listiterator（int）\r\n","Creates a parameter specification for EC parameter\n            generation using a standard (or predefined) name\n            ":"为EC参数创建参数规范\r\n            使用标准（或预定义）名称生成\r\n            \r\n","java.util.Optional.isPresent()":"java.util.optional.ispresent（）\r\n","An ordered collection (also known as a ":"有序的收藏（也称为\r\n","Parses text from a string to produce an object array.":"从字符串中解析文本以产生对象数组。\r\n","java.sql.ResultSetMetaData.getTableName(int)":"java.sql.ResultsetMetadata.getTablEname（int）\r\n","Retrieves the value of a parameter as an <code>Object</code> in the Java\n            programming language.":"将参数的值检索为<code>对象</code>在Java中\r\n            编程语言。\r\n"," object that, when\n            called, runs the given task and returns the given result.":" 对象，当\r\n            调用，运行给定的任务并返回给定的结果。\r\n","Returns a view of the portion of this map whose keys are\n            strictly less than ":"返回该键的图部分的视图\r\n            严格少于\r\n"," value as the next\n            element of the ":" 值为下一个\r\n            元素\r\n","java.util.Arrays.binarySearch(java.lang.Object[], int, int, java.lang.Object, java.util.Comparator)":"java.util.arrays.binarysearch（java.lang.object []，int，int，java.lang.object，java.util.comparator）\r\n","Returns a percentage format for the specified locale.":"返回指定语言环境的百分比格式。\r\n","java.util.Calendar.WEEK_OF_YEAR":"java.util.calendar.week_of_year\r\n"," must contain all\n            or at least one of the subjectAlternativeNames\n            specified in the ":" 必须包含全部\r\n            或至少一个主题alternativinames\r\n            在\r\n","Get the next collation element in the string.":"获取字符串中的下一个整理元素。\r\n","Returns the order of the generator.":"返回发电机的顺序。\r\n","AlgorithmParameterGeneratorSpi":"算法Parametergeneratorspi\r\n","The interface used for the custom mapping of an SQL user-defined type (UDT) to\n            a class in the Java programming language.":"用于自定义映射的界面SQL用户定义类型（UDT）\r\n            Java编程语言的课程。\r\n","setEntry":"setentry\r\n","java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()":"java.util.concurrent.concurrenthashmap.concurrenthashmap（）\r\n","Constructs a CertificateParsingException with the specified detail\n            message.":"用指定的详细信息构建证书parsingexception\r\n            信息。\r\n","java.text.Bidi.requiresBidi(char[], int, int)":"java.text.bidi.requiresbidi（char []，int，int）\r\n","Reverses the order of the elements in the specified list.":"逆转指定列表中元素的顺序。\r\n","Indicates whether values in the designated column are signed numbers.":"指示指定列中的值是否为签名数字。\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>cause</code>.":"用给定的\r\n            <code>原因</code>。\r\n","Returns the other file used to create this exception.":"返回其他用于创建此异常的文件。\r\n","java.util.Objects.equals(java.lang.Object, java.lang.Object)":"java.util.objects.equals（java.lang.object，java.lang.object）\r\n","when":"什么时候\r\n","Return the index of the character past the end of the nth logical run in this line, as\n            an offset from the start of the line.":"将字符的索引返回该行中的第n逻辑运行的末尾，如\r\n            从线开始的偏移。\r\n","java.util.concurrent.BlockingDeque.offer(java.lang.Object)":"java.util.concurrent.blockingdeque.offer（java.lang.object）\r\n","Returns the default keystore type as specified by the\n            ":"返回默认密钥库类型，如\r\n            \r\n","java.text.DecimalFormat.getNegativeSuffix()":"java.text.decimalformat.getNegativesuffix（）\r\n","Completes this task, and if not already aborted or cancelled,\n            returning the given value as the result of subsequent\n            invocations of ":"完成此任务，如果尚未中止或取消，\r\n            随后的结果返回给定值\r\n            调用\r\n","Gets the current value of the default locale for this instance\n            of the Java Virtual Machine.":"获取此实例的默认场所的当前值\r\n            Java虚拟机。\r\n","java.security.cert.X509CertSelector.getCertificate()":"java.security.cert.x509certselector.getCertificate（）\r\n","#nextDouble":"#NextDouble\r\n","java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int)":"java.util.concurrent.concurrenthashmap.concurrenthashmap（int）\r\n","java.util.Arrays.spliterator(java.lang.Object[])":"java.util.arrays.spliterator（java.lang.object []）\r\n"," will be both ":"将是两者\r\n","java.util.concurrent.CompletableFuture.isCompletedExceptionally()":"java.util.concurrent.completablefuture.iscompletedexceptionally（）\r\n","java.security.SecureRandom.getAlgorithm()":"java.security.securerandom.getalgorithm（）\r\n","java.sql.DatabaseMetaData.getPrimaryKeys(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getPrimarykeys（java.lang.string，java.lang.string，java.lang.string）\r\n","java.time.zone.ZoneOffsetTransitionRule":"Java.Time.Zone.ZoneOffSetTransitionRule\r\n","if decoding the name constraints fail.\n":"如果解码名称约束失败。\r\n\r\n","Returns the current capacity of this vector.":"返回该向量的当前容量。\r\n","java.security.MessageDigest.getAlgorithm()":"java.security.messagedigest.getalgorithm（）\r\n","Sorts the specified range of the specified array of objects into\n            ascending order, according to the\n            Comparable natural ordering of its\n            elements.":"将指定对象数组的指定范围分为\r\n            根据\r\n            可比的自然顺序\r\n            元素。\r\n","java.nio.file.SecureDirectoryStream.getFileAttributeView(java.lang.Class)":"java.nio.file.securedirectorystream.getFileatTributeView（java.lang.class）\r\n","Returns the first boundary.":"返回第一个边界。\r\n","java.time.format.DateTimeFormatterBuilder.padNext(int)":"java.time.format.datetimeformatterbuilder.padnext（int）\r\n","when the capacity is less than zero or the load factor is\n                less or equal to zero or NaN.\n":"当容量小于零或负载系数时\r\n                较小或等于零或nan。\r\n\r\n","java.sql.ResultSet.getClob(java.lang.String)":"java.sql.Resultset.getClob（java.lang.string）\r\n","This exception is thrown if an entry in the keystore cannot be recovered.":"如果无法恢复密钥库中的条目，则将抛出此异常。\r\n","java.security.Principal.toString()":"java.security.principal.tostring（）\r\n","Gets an object for the given key from this resource bundle.":"从此资源包中获取给定键的对象。\r\n","if the specified provider cannot provide the requested\n             algorithm.":"如果指定的提供商无法提供请求的\r\n             算法。\r\n","java.security.MessageDigest.MessageDigest(java.lang.String)":"java.security.messagedigest.messagedigest（java.lang.string）\r\n","AclEntry\n            entry":"Aclentry\r\n            入口\r\n","Writes the next attribute to the stream as a stream of ASCII characters.":"将下一个属性作为ASCII字符流写入流。\r\n","java.util.NavigableMap.pollLastEntry()":"java.util.navigablemap.polllastentry（）\r\n","Returns the first component (the item at index ":"返回第一个组件（索引的项目\r\n","Registers the given driver with the <code>DriverManager</code>.":"用<code> drivermanager </code>注册给定的驱动程序。\r\n","java.util.TreeMap.descendingMap()":"java.util.treemap.descendingmap（）\r\n","if an exception occurred while loading the certificates of\n             this ":"如果加载证书时发生异常\r\n             这个\r\n","java.security.KeyStoreException.KeyStoreException(java.lang.String, java.lang.Throwable)":"java.security.keystoreexception.keystoreexception（java.lang.string，java.lang.throwable）\r\n","Indicates whether the password is invalidated.":"指示密码是否无效。\r\n","java.sql.ParameterMetaData.getScale(int)":"java.sql.parametermetadata.getscale（int）\r\n","Gets what the first day of the week is; e. -or- Sets what the first day of the week is; e.":"得到一周的第一天是什么； e。 - 或设置一周的第一天是什么； e。\r\n","java.util.InvalidPropertiesFormatException":"java.util.invalidpropertiesformatexception\r\n","Returns the name of this attribute.":"返回此属性的名称。\r\n","java.util.LinkedList.LinkedList()":"java.util.linkedlist.linkedlist（）\r\n","An exception that provides information on a database access\n            error or other errors.":"提供数据库访问信息的例外\r\n            错误或其他错误。\r\n"," is currently in\n            Daylight Saving Time, or if a transition from Standard Time to\n            Daylight Saving Time occurs at any future time.":" 目前正在\r\n            节省日光的时间，或者是否从标准时间过渡到\r\n            夏令时会在未来的任何时间发生。\r\n","java.sql.DatabaseMetaData.getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])":"java.sql.databasemetadata.gettables（java.lang.string，java.lang.string，java.lang.string，java.lang.string []）\r\n","if the resource found is not a string.":"如果找到的资源不是字符串。\r\n","java.util.Hashtable.entrySet()":"java.util.hashtable.entryset（）\r\n","java.util.AbstractCollection.addAll(java.util.Collection)":"java.util.abstractcollection.addall（java.util.collection）\r\n","if the specified security provider cannot provide the\n             requested algorithm.":"如果指定的安全提供者无法提供\r\n             请求算法。\r\n","java.util.TreeMap.TreeMap(java.util.Comparator)":"java.util.treemap.treemap（java.util.comparator）\r\n","Initializes this signature object with the specified\n            private key for signing operations.":"用指定的对象初始化此签名对象\r\n            签署操作的私钥。\r\n"," is not initialized.\n":" 不是初始化的。\r\n\r\n","java.sql.PreparedStatement.addBatch()":"java.sql.preparedstatement.addbatch（）\r\n","java.security.cert.PKIXParameters.getCertStores()":"java.security.cert.pkixparameters.getcertstores（）\r\n","java.text.DateFormat.getAvailableLocales()":"java.text.dateformat.getavailablelocales（）\r\n","\n should implement the ":"\r\n 应该实施\r\n","java.sql.CallableStatement.getArray(java.lang.String)":"java.sql.callablestatement.getarray（java.lang.string）\r\n","java.util.TooManyListenersException.TooManyListenersException()":"java.util.toomanylistenersexception.toomanylistenersexception（）\r\n","java.text.DateFormat.HOUR1_FIELD":"java.text.dateformat.hour1_field\r\n","java.util.HashMap.HashMap(int)":"java.util.hashmap.hashmap（int）\r\n","java.security.Timestamp.Timestamp(java.util.Date, java.security.cert.CertPath)":"java.security.timestamp.timestamp（java.util.date，java.security.cert.certpath）\r\n","Gets the ID of this time zone. -or- Sets the time zone ID.":"获取这个时区的ID。 - 或设置时区ID。\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a <code>java.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为<code> Java。\r\n","if algorithm is ":"如果算法是\r\n","Returns the value of the client info property specified by name.":"返回按名称指定的客户端信息属性的值。\r\n","java.security.spec.ECPoint.getAffineX()":"java.security.spec.ecpoint.getaffinex（）\r\n","Removes and returns the next unexecuted submission if one is\n            available.":"如果一个人是\r\n            可用的。\r\n","java.nio.file.DirectoryStream":"java.nio.file.directorystream\r\n","Sets a file's POSIX permissions.":"设置文件的POSIX权限。\r\n","Returns the set of unicode locale attributes associated with\n            this locale, or the empty set if it has no attributes.":"返回与\r\n            该语言环境或空集（如果没有属性）。\r\n","Returns the hash code value for this list.":"返回此列表的哈希代码值。\r\n","java.util.concurrent.ForkJoinTask.complete(java.lang.Object)":"java.util.concurrent.forkjointask.complete（java.lang.object）\r\n","An event or a repeated event for an object that is registered with a ":"一个事件或重复事件，用于注册的对象\r\n","java.security.SecureRandom.getInstanceStrong()":"java.security.securerandom.getinstancestrong（）\r\n"," which represents the text being\n analyzed.":" 代表文本是\r\n 分析。\r\n","if the filename does not denote a normal and writable file,\n             or if a new file cannot be created, or if any error arises when\n             opening or creating the file.":"如果文件名不表示正常且可写的文件，\r\n             或者如果无法创建新文件，或者是否出现任何错误\r\n             打开或创建文件。\r\n","java.util.Calendar.SATURDAY":"java.util.calendar.saturday\r\n"," and returns if they\n are equal.":" 如果他们返回\r\n 相等。\r\n"," used\n            during curve generation.":" 用过的\r\n            在曲线生成期间。\r\n","Constructs a new, empty hashtable with the specified initial capacity\n            and default load factor (0.":"构建一个新的空台面，并具有指定的初始容量\r\n            和默认负载因子（0。\r\n","java.util.concurrent.ExecutorCompletionService":"java.util.concurrent.executorcompletionservice\r\n","Retrieves a description of the given attribute of the given type\n            for a user-defined type (UDT) that is available in the given schema\n            and catalog.":"检索给定类型的给定属性的描述\r\n            对于给定模式中可用的用户定义类型（UDT）\r\n            和目录。\r\n","Retrieves a description of a table's optimal set of columns that\n            uniquely identifies a row.":"检索表格的最佳列集说明\r\n            独特地识别一行。\r\n","java.util.ArrayList":"java.util.arraylist\r\n","Removes the first (lowest-indexed) occurrence of the argument\n            from this vector.":"删除参数的第一个（最低指数）出现\r\n            从这个向量。\r\n","Inserts the specified element at the specified position in this list\n            (optional operation).":"在此列表中的指定位置插入指定元素\r\n            （可选操作）。\r\n","Gets the character used for percent sign. -or- Sets the character used for percent sign.":"获取字符以百分比为标志。 - 或设置用于百分比的字符。\r\n","java.sql.Types.OTHER":"java.sql.types.other\r\n","java.security.spec.RSAOtherPrimeInfo.getCrtCoefficient()":"java.security.spec.rsaotherprimeinfo.getcrtceeffility（）\r\n"," is not considered to be usable by this\n            formatter.\n":" 不认为这是可用的\r\n            格式化。\r\n\r\n"," is not a file or\n             does not exist at all.\n":" 不是文件或\r\n             根本不存在。\r\n\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.lang.String, java.util.Map)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.lang.string，java.util.map）\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.string）\r\n","loadFactor":"负载因子\r\n","Returns a new byte array containing all the bits in this bit set.":"返回一个新的字节数组，其中包含此位集中的所有位。\r\n","java.sql.ResultSet.getBinaryStream(java.lang.String)":"java.sql.Resultset.getBinarystream（java.lang.string）\r\n","java.security.ProviderException":"java.security.providerexception\r\n","java.text.SimpleDateFormat.set2DigitYearStart(java.util.Date)":"java.text.simpledateformat.set2digityearstart（java.util.date）\r\n","java.util.List.toArray(java.lang.Object[])":"java.util.list.toarray（java.lang.object []）\r\n","java.sql.Types.LONGNVARCHAR":"java.sql.types.longnvarchar\r\n","Constructs a SimpleTimeZone with the given base time zone offset from GMT\n            and time zone ID with no daylight saving time schedule.":"用给定的基本时区偏移GMT构造SimpletimeZone\r\n            和时区ID，没有日光保存时间表。\r\n","An attribute view that is a read-only or updatable view of the attributes of\n            a ":"属性视图是对属性的仅读取或可更新视图\r\n            一个\r\n"," field indicating\n            Friday.":" 指示字段\r\n            星期五。\r\n","Returns an empty sorted map (immutable).":"返回一个空排序地图（不变）。\r\n","java.sql.CallableStatement.registerOutParameter(java.lang.String, int, int)":"java.sql.callablestatement.registeroutparameter（java.lang.string，int，int）\r\n","Returns whether this CRL entry has extensions.":"返回此CRL条目是否具有扩展名。\r\n","Returns a new <code>BreakIterator</code> instance\n            for <a href=\"BreakIterator.":"返回新的<code> breakiterator </code>实例\r\n            对于<a href =“ breakiterator。\r\n","java.security.interfaces.DSAParams.getG()":"java.security.interfaces.dsaparams.getg（）\r\n"," is not initialized or if ":" 不是初始化的或\r\n","java.security.ProviderException.ProviderException()":"java.security.providerexception.providerexception（）\r\n","Indicates that the best row identifier is a pseudo column.":"指示最好的行标识符是伪列。\r\n","java.security.cert.X509CRLSelector.clone()":"java.security.cert.x509crlselector.clone（）\r\n","java.text.StringCharacterIterator.getIndex()":"Java.text.StringCharacterator.getIndex（）（）\r\n","Constructs a default <code>GregorianCalendar</code> using the current time\n            in the default time zone with the default\n            ":"使用当前时间构建默认<code> GregorianCalendar </code>\r\n            在带有默认的默认时区\r\n            \r\n","java.sql.PreparedStatement.setTime(int, java.sql.Time)":"java.sql.preparedstatement.settime（int，java.sql.time）\r\n","java.util.AbstractList.removeRange(int, int)":"java.util.abstractlist.removerange（int，int）\r\n","Removes from the underlying collection the last element returned\n            by this iterator (optional operation).":"从基础集合中删除最后一个元素返回\r\n            通过此迭代器（可选操作）。\r\n","Gets the character used for zero. -or- Sets the character used for zero.":"获取为零的字符。 - 或设置为零的字符。\r\n","Forcibly sets or resets the value subsequently returned by\n            method ":"强行设置或重置值随后返回的值\r\n            方法\r\n","java.util.BitSet.set(int, int, boolean)":"java.util.bitset.set（int，int，boolean）\r\n","java.security.Identity.toString(boolean)":"java.security.Identity.ToString（布尔值）\r\n","Resets the barrier to its initial state.":"将障碍重置为初始状态。\r\n","java.util.Comparator.thenComparingInt(java.util.function.ToIntFunction)":"java.util.comparator.thencomparingint（java.util.function.tointfunction）\r\n","Returns the index of the first character following the run\n            with respect to the given ":"运行后返回第一个角色的索引\r\n            关于给定的\r\n","Returns the result of accumulating all keys using the given\n            reducer to combine values, or null if none.":"返回使用给定的所有密钥累积的结果\r\n            还原器以组合值，或者如果没有值，则null。\r\n","java.util.Collections.addAll(java.util.Collection, java.lang.Object[])":"java.util.collections.addall（java.util.collection，java.lang.object []）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a float value using the ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n","Removes from this list all of the elements whose index is between\n            ":"从此列表中删除所有索引之间的元素\r\n            \r\n","java.util.AbstractSet":"Java.util.Abstractset\r\n","Inserts the specified element at the front of this deque,\n            waiting up to the specified wait time if necessary for space to\n            become available.":"将指定元素插入此Deque的前部，\r\n            等待指定的等待时间，如有必要\r\n            可用。\r\n","Retrieves a description of table columns available in\n            the specified catalog.":"检索可用表列的描述\r\n            指定的目录。\r\n","java.security.cert.X509CRLSelector.match(java.security.cert.CRL)":"java.security.cert.x509crlselector.match（java.security.cert.crl）\r\n","#nextBigInteger":"#nextbiginteger\r\n","java.util.Spliterator.DISTINCT":"java.util.spliterator.distinct\r\n","java.util.concurrent.CountDownLatch.getCount()":"java.util.concurrent.countdownlatch.getCount（）\r\n","AlgorithmParameters":"算法参数\r\n","java.security.cert.X509CRL.verify(java.security.PublicKey, java.security.Provider)":"java.security.cert.x509crl.verify（java.security.publickey，java.security.provider）\r\n","Creates a new CountedCompleter with the given completer\n            and an initial pending count of zero.":"使用给定的完成者创建一个新的计数收费器\r\n            和最初的待处理计数为零。\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n            with a given <code>reason</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.sql.DatabaseMetaData.supportsDataManipulationTransactionsOnly()":"java.sql.databasemetadata.supportsdatamanipulationtransactionsonly（）\r\n","java.nio.file.OpenOption":"java.nio.file.openoption\r\n","java.util.NavigableMap.higherEntry(java.lang.Object)":"java.util.navigablemap.higherentry（java.lang.Object）\r\n","Constructs a GregorianCalendar with the given date\n            and time set for the default time zone with the default locale.":"用给定的日期构建Gregoriancalendar\r\n            并设置默认场所的默认时区域。\r\n","if another ":"如果另一个\r\n","java.util.Set.of()":"java.util.set.of（）\r\n","Returns the offset in milliseconds from UTC of this time zone's standard\n time.":"返回该时区标准的UTC的毫秒偏移\r\n 时间。\r\n","java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentQ()":"java.security.spec.rsaprivatecrtkeyspec.getPrimeExponentq（）\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.String, java.lang.String)":"java.sql.sqlrecoverableException.sqlrecoverableException（java.lang.string，java.lang.string）\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","A bounded BlockingQueue blocking queue backed by an\n            array.":"一个有界的阻塞封锁队列，由\r\n            大批。\r\n","java.util.SplittableRandom.nextInt(int)":"java.util.splittablerandom.nextint（int）\r\n","\n            as the source of elements, with no initial size estimate.":"\r\n            作为元素的来源，没有初始尺寸估计。\r\n","Returns the signature timestamp.":"返回签名时间戳。\r\n","if the current thread is not a\n member of a ForkJoinPool and was interrupted while waiting\n":"如果当前线程不是\r\n forkjoinpool的成员，在等待时被打断\r\n\r\n","Returns the required constraints on the target certificate. -or- Sets the required constraints on the target certificate.":"返回目标证书上所需的约束。 - 或 - 在目标证书上设置所需的约束。\r\n","Constructs a SignatureException with the specified detail\n            message.":"用指定的细节构造签名\r\n            信息。\r\n","TimeUnit":"TimeUnit\r\n","java.util.Stack.push(java.lang.Object)":"java.util.stack.push（java.lang.Object）\r\n","java.security.KeyException.KeyException(java.lang.String, java.lang.Throwable)":"java.security.keyexception.keyexception（java.lang.string，java.lang.throwable）\r\n","Updates the underlying database with the new contents of the\n            current row of this <code>ResultSet</code> object.":"更新基础数据库，并使用\r\n            此<code> Resultset的当前行</code>对象。\r\n"," for which\n this ":" 为此\r\n 这个\r\n","java.util.Vector.setSize(int)":"java.util.vector.setsize（int）\r\n","java.util.Calendar.clone()":"java.util.calendar.clone（）\r\n"," and optional name constraints, which\n            are intended to be used as additional constraints when validating\n            an X.":" 和可选名称约束，\r\n            验证时旨在用作其他约束\r\n            一个X。\r\n"," corresponds to the values in ":" 对应于中的值\r\n","The <code>Dictionary</code> class is the abstract parent of any\n            class, such as <code>Hashtable</code>, which maps keys to values.":"<code>字典</code>类是任何任何的抽象父母\r\n            类，例如<code> hashtable </code>，将键映射到值。\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>REF</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code> ref </code>。\r\n","#compute":"＃计算\r\n","java.util.TimeZone.getDefault()":"java.util.timezone.getDefault（）\r\n","java.util.SimpleTimeZone.setDSTSavings(int)":"java.util.simpletimezone.setdstsavings（int）\r\n","Indicates whether the designated column is a cash value.":"指示指定的列是现金价值。\r\n","java.text.RuleBasedCollator.compare(java.lang.String, java.lang.String)":"java.text.rulebasedcollat​​or.compare（java.lang.string，java.lang.string）\r\n","java.nio.file.Files.getFileStore(java.nio.file.Path)":"java.nio.file.files.getfilestore（java.nio.file.path）\r\n","Returns an iterator over the elements in this set in ascending order.":"以升序顺序返回该集合中的元素。\r\n"," derived from this\n statement.":" 源自这个\r\n 陈述。\r\n","java.util.concurrent.CompletionService":"java.util.concurrent.completionservice\r\n","java.util.Calendar.getInstance(java.util.Locale)":"java.util.calendar.getinstance（java.util.locale）\r\n","java.sql.DatabaseMetaData.functionNullableUnknown":"java.sql.databasemetadata.functionnullableunknown\r\n","java.util.StringTokenizer.nextToken()":"java.util.stringtokenizer.nexttoken（）\r\n","java.util.Comparator.nullsLast(java.util.Comparator)":"java.util.comparator.nullslast（java.util.comparator）\r\n","java.security.cert.Certificate.verify(java.security.PublicKey, java.security.Provider)":"java.security.cert.certificate.verify（java.security.publickey，java.security.provider）\r\n","java.security.spec.RSAPrivateCrtKeySpec":"java.security.spec.rsaprivatecrtkeyspec\r\n","Checks if explicit policy is required. -or- Sets the ExplicitPolicyRequired flag.":"检查是否需要明确的策略。 - 或 - 设置显式质量标志。\r\n","Retrieves the value of a JDBC <code>DATE</code> parameter as a\n            <code>java.":"检索JDBC <code> date </code>参数的值\r\n            <code> Java。\r\n","isDone":"已经完成了\r\n","java.sql.Wrapper":"java.sql.wrapper\r\n"," prior to traversal or splitting represents a\n            finite size that, in the absence of structural source modification,\n            represents an exact count of the number of elements that would be\n            encountered by a complete traversal.":" 在遍历或分裂之前代表\r\n            有限尺寸，在没有结构源修改的情况下\r\n            代表了将要的元素数量的确切计数\r\n            由完整的遍历遇到。\r\n","java.security.spec.MGF1ParameterSpec.SHA224":"java.security.spec.mgf1parameterspec.sha224\r\n","This class encapsulates information about a signed timestamp.":"该类封装有关签名时间戳的信息。\r\n","java.security.cert.CertificateRevokedException":"java.security.cert.certificaterevokedexception\r\n","Constructs a GuardedObject using the specified object and guard.":"使用指定的对象和保护构建守卫物体。\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a long value in the default radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用默认radix解释为长度值\r\n            \r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， Java.lang.Object，Java.lang.Object，Java.lang.Object）\r\n","java.util.Calendar.HOUR":"java.util.calendar.hour\r\n","java.time.temporal.WeekFields.SUNDAY_START":"java.time.temporal.weekfields.sunday_start\r\n","java.util.List.add(int, java.lang.Object)":"java.util.list.add（int，java.lang.Object）\r\n","Checked exception thrown when a file system operation is denied, typically\n            due to a file permission or other access check.":"当文件系统操作被拒绝时，已检查异常\r\n            由于文件权限或其他访问检查。\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given  <code>reason</code>, <code>SQLState</code>,\n            <code>cause</code>, <code>vendorCode</code> and\n            <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>，<code> sqlstate </code>，\r\n            <code>原因</code>，<code> vendorCode </code>和\r\n            <code> FailedProperties </code>。\r\n","text.length ":"text.length\r\n"," instance for the best-matching language\n            tag using the lookup mechanism defined in RFC 4647.":" 最佳匹配语言的实例\r\n            使用RFC 4647中定义的查找机制标记。\r\n","java.sql.ResultSet.getArray(int)":"java.sql.Resultset.getArray（int）\r\n","java.util.OptionalLong.ifPresent(java.util.function.LongConsumer)":"java.util.optionallong.ifpresent（java.util.function.longconsumer）\r\n","java.util.Vector.trimToSize()":"java.util.vector.trimtosize（）\r\n","Removes all resource bundles from the cache that have been loaded\n            using the given class loader.":"从已加载的缓存中删除所有资源捆绑包\r\n            使用给定的类加载程序。\r\n","java.util.concurrent.Callable.call()":"java.util.concurrent.callable.call（）\r\n","java.security.acl.LastOwnerException.LastOwnerException()":"java.security.acl.lastownerexception.lastownerexception（）\r\n","java.nio.file.attribute.UserPrincipal":"java.nio.file.attribute.userprincipal\r\n","fromType":"tytype\r\n"," clause for this\n database.":" 为此条款\r\n 数据库。\r\n","The interface to an RSA private key, as defined in the PKCS#1 standard,\n            using the ":"PKCS＃1标准中定义的RSA私钥的接口，\r\n            使用\r\n","java.util.ArrayList.ArrayList(int)":"java.util.arraylist.arraylist（int）\r\n","Indicates whether the value truncated was a parameter value or\n            a column value.":"指示截断的值是参数值还是\r\n            列值。\r\n","java.security.KeyStoreSpi.engineGetEntry(java.lang.String, java.security.ProtectionParameter)":"java.security.keystorespi.enginegetentry（java.lang.string，java.security.protectionparameter）\r\n","Return the index of the character at the start of the nth logical run in this line, as\n            an offset from the start of the line.":"在此行中nth逻辑运行开始时返回字符的索引，如\r\n            从线开始的偏移。\r\n","if encoding fails.\n":"如果编码失败。\r\n\r\n","thisUpdate":"thisupdate\r\n","Returns the parameters in their primary encoding format.":"返回其主要编码格式中的参数。\r\n","java.security.acl.Group.members()":"java.security.acl.group.members（）\r\n","java.sql.DatabaseMetaData.getTablePrivileges(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.gettableprivileges（java.lang.string，java.lang.string，java.lang.string）\r\n","java.nio.file.attribute.UserPrincipalNotFoundException.UserPrincipalNotFoundException(java.lang.String)":"java.nio.file.attribute.userprincipalnotfoundexception.userprincipalnotfoundexception（java.lang.string）\r\n","inclusive":"包括的\r\n","Appends the localized zone offset, such as 'GMT+01:00', to the formatter.":"将局部区域偏移附加到格式化器中，例如“ GMT+01：00”。\r\n","Inserts the specified element into this queue, waiting up to the\n            specified wait time if necessary for space to become available.":"将指定元素插入此队列，等待\r\n            指定的等待时间（如有必要）使空间可用。\r\n","Gets a calendar using the default time zone and specified locale.":"使用默认时区和指定的语言环境获取日历。\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.object），java.object）\r\n","java.security.cert.CertStoreSpi.engineGetCertificates(java.security.cert.CertSelector)":"java.security.cert.certstorespi.enginegetcertificates（java.security.cert.certselector）\r\n","Retrieves the value of the designated JDBC <code>ROWID</code> parameter as a\n            <code>java.":"检索指定的JDBC <code> rowID </code>参数为一个\r\n            <code> Java。\r\n","timeout ":"暂停\r\n","FormattableFlags#UPPERCASE":"格式化Flags＃uppercase\r\n","java.nio.file.spi.FileSystemProvider.isSameFile(java.nio.file.Path, java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.issamefile（java.nio.file.path，java.nio.file.path）\r\n","java.util.concurrent.Executors.callable(java.security.PrivilegedExceptionAction)":"java.util.concurrent.Executors.callable(java.security.PrivilegedExceptionAction)\r\n","The constant for representing a start or end time in standard local time mode,\n based on timezone's raw offset from GMT; does not include Daylight\n savings.":"在标准本地时间模式下代表开始或结束时间的常数，\r\n 基于时区的原始偏移GMT；不包括日光\r\n 储蓄。\r\n","Returns a new CompletableFuture that is asynchronously completed\n            by a task running in the given executor after it runs the given\n            action.":"返回一个新的完整图，该备件已异步完成\r\n            通过在给定执行人运行给定的任务后运行给定的任务\r\n            行动。\r\n","Retrieves whether a schema name can be used in a data manipulation statement.":"检索是否可以在数据操作语句中使用模式名称。\r\n","java.nio.charset.UnmappableCharacterException.UnmappableCharacterException(int)":"java.nio.charset.unmappablecharacterexception.unmappablecharacterexception（int）\r\n","Retrieves the SQLState for this <code>SQLException</code> object.":"检索此<code> sqlexception </code>对象的SQLSTATE。\r\n","ListIterator#next next":"Listiterator＃下一个\r\n","java.security.spec.RSAPrivateKeySpec.getPrivateExponent()":"java.security.spec.rsaprivatekeyspec.getPrivateExponent（）\r\n"," class for link creation operations.":" 链接创建操作的类。\r\n","Creates a list holding a copy of the given array.":"创建一个保留给定数组的副本的列表。\r\n","java.security.KeyStoreSpi.engineSetEntry(java.lang.String, java.security.Entry, java.security.ProtectionParameter)":"Java.security.Keystorespi.EngineseTentry（java.lang.string，java.security.entry，java.security.protectionparecterparameter）\r\n","This class consists exclusively of static methods that operate on or return\n            collections.":"此类仅由操作或返回的静态方法组成\r\n            收藏。\r\n","java.util.concurrent.ForkJoinTask.helpQuiesce()":"java.util.concurrent.forkjointask.helpquiesce（）\r\n","java.sql.DriverPropertyInfo":"java.sql.driverpropertyinfo\r\n","java.nio.file.FileSystems.newFileSystem(java.net.URI, java.util.Map)":"java.nio.file.filesystems.newfilesystem（java.net.uri，java.util.map）\r\n","java.util.TimeZone.clone()":"java.util.timezone.clone（）\r\n","if the specified provider is not available.":"如果没有指定的提供商。\r\n","Retrieves the designated parameter's specified column size.":"检索指定参数的指定列大小。\r\n","java.text.DecimalFormatSymbols.setMinusSign(char)":"java.text.decimalformatsymbols.setminussign（char）\r\n","java.time.format.DecimalStyle.getAvailableLocales()":"java.time.format.decimalstyle.getAvailableLocales（）\r\n","java.util.ServiceConfigurationError.ServiceConfigurationError(java.lang.String)":"java.util.serviceconfigurationerror.serviceconfigurationerror（java.lang.string）\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>DOUBLE</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> double </code>。\r\n"," with the\n given field name.":" 与\r\n 给定的字段名称。\r\n","ForkJoinTask#helpQuiesce":"forkjointask＃helpquiesce\r\n","java.util.MissingResourceException":"java.util.missingresourceexception\r\n","Writes the given array of bytes to the <code>BLOB</code> value that\n            this <code>Blob</code> object represents, starting at position\n            <code>pos</code>, and returns the number of bytes written.":"将给定的字节的数组写入<code> blob </code>值\r\n            此<code> blob </code>对象表示，从位置开始\r\n            <code> pos </code>，并返回编写的字节数。\r\n","java.util.OptionalInt.getAsInt()":"java.util.optionalint.getasint（）\r\n"," by a ":" 由\r\n","java.sql.CallableStatement.setString(java.lang.String, java.lang.String)":"java.sql.callablestatement.setstring（java.lang.string，java.lang.string）\r\n","#parallelPrefix(double[], DoubleBinaryOperator)":"#ParalleAllePrefix（double []，DoubleBinaryOperator）\r\n","This constant stands for the fraction part of the number.":"这个常数代表数字的分数。\r\n","Tests whether a file is writable.":"测试文件是否可写。\r\n","java.security.cert.X509CRLSelector.getMinCRL()":"java.security.cert.x509crlselector.getmincrl（）\r\n","Constructs an UnrecoverableKeyException with the specified detail\n            message, which provides more information about why this exception\n            has been thrown.":"用指定的详细信息构建一个未恢复的Keyewexception\r\n            消息，提供有关为什么此异常的更多信息\r\n            被扔了。\r\n","java.sql.DatabaseMetaData.supportsPositionedDelete()":"java.sql.databasemetadata.supportspositiondelete（）\r\n","java.util.HashSet.HashSet(int, float)":"java.util.hashset.hashset（int，float）\r\n","java.nio.file.Path.resolveSibling(java.nio.file.Path)":"java.nio.file.path.resolvesibling（java.nio.file.path）\r\n","java.security.spec.RSAKeyGenParameterSpec.F0":"java.security.spec.rsakeygenparameterspec.f0\r\n","if an error occurred during the lookup for the protection\n             parameter.":"如果在查找保护期间发生错误\r\n             范围。\r\n","java.security.SecureRandom.SecureRandom(java.security.SecureRandomSpi, java.security.Provider)":"java.security.securerandom.securerandom（java.security.securerandomspi，java.security.provider）\r\n"," elements with\n            polynomial basis.":" 元素与\r\n            多项式基础。\r\n","PriorityQueue":"优先地\r\n","java.util.PriorityQueue.PriorityQueue(int)":"java.util.priorityqueue.priorityqueue（int）\r\n","java.util.concurrent.CompletionException.CompletionException()":"java.util.concurrent.completionexception.completionexception（）\r\n","java.nio.file.Paths":"java.nio.file.Paths\r\n","java.sql.Timestamp.before(java.sql.Timestamp)":"java.sql.timestamp.be.\r\n","Returns the result of accumulating the given transformation\n            of all (key, value) pairs using the given reducer to\n            combine values, or null if none.":"返回累积给定转换的结果\r\n            所有（密钥，值）对使用给定还原器\r\n            组合值，如果没有，则为空。\r\n","Interface representing an Access Control List (ACL).":"表示访问控制列表（ACL）的接口。\r\n","java.text.AttributedCharacterIterator":"java.text.AttributedCharacterator\r\n","java.util.concurrent.ForkJoinPool.invoke(java.util.concurrent.ForkJoinTask)":"java.util.concurrent.forkjoinpool.invoke（java.util.concurrent.forkjointask）\r\n","Gets the character that represents the negative sign.":"获取代表负标志的字符。\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String)":"java.sql.sqltransactionRollbackexception.sqltransactionRollbackexception（java.lang.string）\r\n"," is the common interface for public keys.":" 是公共钥匙的常见接口。\r\n","Retrieves whether a schema name can be used in a procedure call statement.":"检索是否可以在过程调用语句中使用模式名称。\r\n","java.nio.file.attribute.PosixFileAttributeView.setPermissions(java.util.Set)":"java.nio.file.attribute.posixfileattributeview.setpermissions（java.util.set）\r\n","Returns a list iterator that has no elements.":"返回没有元素的列表迭代器。\r\n","java.util.Spliterator.CONCURRENT":"java.util.spliterator.concurrent\r\n","if removing is not supported by the collection being\n             iterated.":"如果收藏不支持删除\r\n             迭代。\r\n","java.text.Bidi.baseIsLeftToRight()":"java.text.bidi.baseislefttoright（）\r\n","java.util.IllegalFormatConversionException.getArgumentClass()":"java.util.illegalformatConversionException.getArgumentClass（）\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String, java.lang.Throwable)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.String，java.lang.lang.throwable）\r\n","Constructs an object that implements the <code>Clob</code> interface.":"构造一个实现<code> clob </code>接口的对象。\r\n","Retrieves the value of a JDBC <code>DOUBLE</code> parameter as a <code>double</code>\n            in the Java programming language.":"检索JDBC <code> double </code>参数为<code> double </code>的值\r\n            在Java编程语言中。\r\n","Constructs a CertificateNotYetValidException with the specified detail\n            message.":"用指定的详细信息构建证书肾上腺素\r\n            信息。\r\n","java.util.StringTokenizer":"Java.util.StringTokenizer\r\n","java.sql.DatabaseMetaData.columnNullable":"java.sql.databasemetadata.columnnullable\r\n","java.sql.CallableStatement.setSQLXML(java.lang.String, java.sql.SQLXML)":"java.sql.callablestatement.setsqlxml（java.lang.string，java.sql.sqlxml）\r\n","java.util.BitSet.set(int, int)":"java.util.bitset.set（int，int）\r\n","Retrieves whether this database treats mixed case quoted SQL identifiers as\n            case insensitive and stores them in lower case.":"检索该数据库是否将混合案例视为SQL标识符为\r\n            病例不敏感并将其存储在较低的情况下。\r\n","\n            as the source of elements, and with a given initially reported size.":"\r\n            作为元素的来源，并具有给定的最初报告的大小。\r\n","Retrieves and removes the head of this queue,\n            or returns ":"检索并卸下该队列的头部，\r\n            或返回\r\n","java.util.concurrent.ExecutorService.shutdownNow()":"java.util.concurrent.executorservice.shutdownnow（）\r\n","java.sql.ResultSet.updateDouble(int, double)":"java.sql.Resultset.updatedouble（int，double）\r\n","Returns the valid policy of this node.":"返回该节点的有效策略。\r\n","Performs the given action for each non-null transformation\n            of each entry.":"为每个非无效转换执行给定的动作\r\n            每个条目。\r\n"," that is returned by the ":" 这是由\r\n","java.util.Scanner.hasNextInt(int)":"java.util.scanner.hasnextint（int）\r\n","java.security.Identity.getName()":"java.security.Identity.getName（）\r\n","Validates the specified certification path using the specified\n            algorithm parameter set.":"使用指定的验证指定的认证路径\r\n            算法参数集。\r\n","Ensures that this collection contains the specified element (optional\n            operation).":"确保此集合包含指定元素（可选\r\n            手术）。\r\n"," has\n             already been called after the last call to ":" 有\r\n             在最后一次呼叫之后，已经被打电话给\r\n","java.sql.SQLOutput.writeShort(short)":"java.sql.sqloutput.writeshort（short）\r\n","Directory entry created.":"创建目录条目。\r\n","java.util.concurrent.BrokenBarrierException.BrokenBarrierException(java.lang.String)":"java.util.concurrent.brokenbarrierexception.brokenbarrierexception（java.lang.string）\r\n","java.security.cert.X509Certificate.getIssuerAlternativeNames()":"java.security.cert.x509certificate.getissuerternativivianames（）\r\n","java.security.acl.Group.addMember(java.security.Principal)":"java.security.acl.group.addmember（java.security.principal）\r\n","java.security.AlgorithmParameters.init(byte[])":"java.security.algorithmparameters.init（byte []）\r\n","A simple service-provider loading facility.":"一个简单的服务提供者加载设施。\r\n"," utility methods for operating\n            on objects, or checking certain conditions before operation.":" 实用方法\r\n            在对象上，或在操作前检查某些条件。\r\n","Constructs a new formatter with the specified destination.":"使用指定的目的地构建新的格式化器。\r\n","Returns the prime, ":"返回素数，\r\n","java.util.concurrent.BlockingDeque.offerFirst(java.lang.Object)":"java.util.concurrent.blockingdeque.offerfirst（java.lang.object）\r\n","Formatter#locale() formatter.locale()":"格式＃loCale（）formatter.locale（）\r\n","java.text.Normalizer.Form#NFKD":"java.text.normalizer.form＃nfkd\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.Throwable)":"java.sql.sqltransactionrollbackexception.sqltransactionrollbackexception（java.lang.throwableable）\r\n","java.util.Random.nextInt()":"java.util.random.nextint（）\r\n","A possible return value for the method\n            <code>DatabaseMetaData.":"该方法的可能返回值\r\n            <code> databasemetadata。\r\n"," represents a language/country/variant combination.":" 代表语言/国家/变体组合。\r\n","java.util.Timer.cancel()":"java.util.timer.cancel（）\r\n"," on this barrier, or the specified waiting time elapses.":" 在此障碍或指定的等待时间中。\r\n","Exception thrown when an error or other exception is encountered\n            in the course of completing a result or task.":"当遇到错误或其他异常时，异常抛出\r\n            在完成结果或任务的过程中。\r\n","08":"08\r\n","java.text.BreakIterator.setText(java.lang.String)":"java.text.breakiterator.setText（java.lang.string）\r\n","java.util.SortedMap.firstKey()":"java.util.sortedmap.firstkey（）\r\n","if the decoding of the name fails.\n":"如果该名称的解码失败。\r\n\r\n","Returns an immutable map containing keys and values extracted from the given entries.":"返回一个不可变的地图，其中包含从给定条目提取的密钥和值。\r\n","java.text.Bidi.getRunLimit(int)":"java.text.bidi.getrunlimit（int）\r\n","java.nio.file.Path.normalize()":"java.nio.file.path.normalize（）\r\n"," can be loaded and stored.":" 可以加载和存储。\r\n","java.security.Timestamp.getTimestamp()":"java.security.timestamp.getTimestamp（）\r\n","java.sql.DatabaseMetaData.procedureNoResult":"java.sql.databasemetadata.procedurenoresult\r\n"," if infinite, unknown, or too expensive to compute.":" 如果无限，未知或太昂贵，无法计算。\r\n","java.sql.SQLInput.readObject()":"java.sql.sqlinput.readobject（）\r\n","java.security.cert.CertPathValidatorResult.clone()":"java.security.cert.certpathvalidatoresult.clone（）\r\n","java.security.cert.PKIXParameters.setTargetCertConstraints(java.security.cert.CertSelector)":"java.security.cert.pkixparameters.settargetCertConstraints（java.security.cert.certselector）\r\n","java.security.cert.X509CertSelector.getMatchAllSubjectAltNames()":"java.security.cert.x509certselector.getMatchallSubjectaltNames（）\r\n","java.text.CollationKey.getSourceString()":"java.text.collat​​ionkey.getSourcestring（）\r\n","Returns a string representation of this principal.":"返回此主体的字符串表示。\r\n","java.sql.Clob.getCharacterStream(long, long)":"java.sql.clob.getCharacterstream（长，长）\r\n","Returns the minimum number of digits allowed in the integer portion of a\n            number. -or- Sets the minimum number of digits allowed in the integer portion of a\n            number.":"返回在A的整数部分中允许的最小数字数量\r\n            数字。 - 或设置在A的整数部分中允许的最小数字数量\r\n            数字。\r\n","java.time.format.DecimalStyle.of(java.util.Locale)":"java.time.format.decimalstyle.of（java.util.locale）\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code> and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>和<code>原因</code>。\r\n","java.util.Hashtable.clone()":"java.util.hashtable.clone（）\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqldataexception.sqldataexception（java.lang.string，java.lang.string，int，int，java.lang.thrang.throwable）\r\n","Constructs a new formatter with the specified output stream.":"使用指定的输出流构建新的格式化器。\r\n","java.time.temporal.WeekFields":"java.time.temporal.weekfields\r\n","java.security.AlgorithmParametersSpi.engineInit(byte[])":"java.security.algorithmparametersspi.engineinit（byte []）\r\n","java.util.UUID.getMostSignificantBits()":"java.util.uuid.getmostsimpinicantbits（）\r\n","if this vector is empty.":"如果此矢量为空。\r\n","Returns the boundary following the current boundary.":"在当前边界返回边界。\r\n","java.util.Queue":"java.util.queue\r\n","java.text.FieldPosition.setEndIndex(int)":"java.text.fieldposition.setendindex（int）\r\n","FomattableFlags are passed to the ":"Fomattableflags传递给\r\n","Returns the password.":"返回密码。\r\n","#addSubjectAlternativeName\n            addSubjectAlternativeName":"#AddSubjectalternativiNAME\r\n            添加subspoctalternativiviviviveNAME\r\n","java.security.cert.X509Certificate.X509Certificate()":"java.security.cert.x509certificate.x509certificate（）\r\n","java.nio.file.WatchKey":"java.nio.file.watchkey\r\n","Returns a reverse order view of the elements contained in this set.":"返回此集合中包含的元素的反向顺序视图。\r\n","java.sql.ResultSet.getArray(java.lang.String)":"java.sql.Resultset.getArray（java.lang.string）\r\n","java.security.cert.CRLReason":"java.security.cert.crlreason\r\n"," allows iteration through both text and\n            related attribute information.":" 允许通过文本和\r\n            相关属性信息。\r\n","java.util.SimpleTimeZone.setStartRule(int, int, int, int, boolean)":"java.util.simpletimezone.setstartrule（int，int，int，int，boolean）\r\n","java.util.concurrent.CompletionException.CompletionException(java.lang.String, java.lang.Throwable)":"java.util.concurrent.completionexception.completionexception（java.lang.string，java.lang.throwable）\r\n","notAfter":"notafter\r\n","java.sql.ResultSet.getLong(int)":"java.sql.Resultset.getlong（int）\r\n","Inserts all of the elements in the specified collection into this\n            list at the specified position (optional operation).":"将指定集合中的所有元素插入此处\r\n            在指定位置（可选操作）列出。\r\n","java.security.cert.X509CRLSelector.addIssuerName(java.lang.String)":"java.security.cert.x509crlselector.addissuername（java.lang.string）\r\n","Returns true if this result set has been closed, false otherwise.":"如果此结果集已关闭，则返回true，否则为false。\r\n","This class centralizes all security properties and common security\n            methods.":"此类集中所有安全属性和共同安全性\r\n            方法。\r\n","Retrieves whether this database allows having multiple\n            transactions open at once (on different connections).":"检索此数据库是否允许多个\r\n            交易立即打开（在不同的连接上）。\r\n","java.util.AbstractCollection.retainAll(java.util.Collection)":"Java.util.AbstractCollection.RetainAll（Java.util.Collection）\r\n","java.util.SimpleTimeZone.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int, int, int, int)":"java.util.simpletimezone.simpletimezone（int，java.lang.string，int，int，int，int，int，int，int，int，int，int，int，int，int，int，int，int，int）\r\n","Defines the permissions for use with the permissions component of an ACL\n            ":"定义与ACL的权限组件一起使用的权限\r\n            \r\n","Returns a key-value mapping associated with the greatest\n            key in this map, or ":"返回与最大相关的键值映射\r\n            此地图中的键或\r\n","Creates a SecureRandom object.":"创建一个SecureRandom对象。\r\n"," with the given (fixed)\n            capacity, the specified access policy and initially containing the\n            elements of the given collection,\n            added in traversal order of the collection's iterator.":" 给定（固定）\r\n            容量，指定的访问策略，最初包含\r\n            给定集合的元素，\r\n            按照收集迭代器的遍历顺序添加。\r\n","java.util.concurrent.ConcurrentLinkedQueue.size()":"java.util.concurrent.concurrentlinkedqueue.size（）\r\n","Performs the given action for each non-null transformation\n            of each key.":"为每个非无效转换执行给定的动作\r\n            每个钥匙。\r\n","saltLen":"盐\r\n","Gets all the available IDs supported.":"获取支持所有可用ID。\r\n","java.text.DateFormat.parse(java.lang.String)":"java.text.dateformat.parse（java.lang.string）\r\n","Indicates that it is not known whether the procedure returns\n            a result.":"表明该过程是否返回，尚不清楚\r\n            结果。\r\n","java.util.TimerTask":"java.util.timertask\r\n","java.sql.DriverManager.getLogWriter()":"java.sql.drivermanager.getLogWriter（）\r\n","Returns the maximum number of characters for a procedure name in this\n database.":"返回此过程名称的最大字符数\r\n 数据库。\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String, java.lang.String)":"java.sql.sqltransientexception.sqltransientException（java.lang.string，java.lang.string）\r\n","java.util.List.containsAll(java.util.Collection)":"java.util.list.containsall（java.util.Collection）\r\n","java.text.DateFormat.getDateInstance(int, java.util.Locale)":"java.text.dateformat.getDateInstance（int，java.util.locale）\r\n","Inserts the specified element at the end of this deque if it is\n            possible to do so immediately without violating capacity restrictions,\n            throwing an ":"如果是\r\n            可以立即这样做而不会违反能力限制，\r\n            扔一个\r\n","java.util.concurrent.Executors.unconfigurableExecutorService(java.util.concurrent.ExecutorService)":"java.util.concurrent.executors.unconfigurableexecutorservice（java.util.concurrent.executorservice）\r\n","java.sql.Ref.getObject(java.util.Map)":"java.sql.ref.getObject（java.util.map）\r\n"," is not an owner of this\n             ":" 不是这个所有者\r\n             \r\n"," with the given initial\n            capacity and the given load factor.":" 给定的初始\r\n            容量和给定的负载因子。\r\n","The range of valid values for a date-time field.":"日期时间字段的有效值的范围。\r\n","Removes the provider with the specified name.":"用指定名称删除提供商。\r\n","Constant for a mode of start or end time specified as standard time.":"对于指定为标准时间的开始或结束时间的模式。\r\n","java.nio.file.NotDirectoryException.NotDirectoryException(java.lang.String)":"java.nio.file.notdirectoryException.NotDirectoryException（java.lang.string）\r\n","java.util.ResourceBundle":"java.util.resourcebundle\r\n","java.security.cert.X509CRLSelector.X509CRLSelector()":"java.security.cert.x509crlselector.x509crlselector（）\r\n","java.sql.DatabaseMetaData.supportsMixedCaseQuotedIdentifiers()":"java.sql.databasemetadata.supportsmixedcasequotedIdentifiers（）\r\n","java.nio.file.FileSystems.newFileSystem(java.nio.file.Path, java.lang.ClassLoader)":"java.nio.file.filesystems.newfilesystem（java.nio.file.path，java.lang.classloader）\r\n","Creates an enum set initially containing all of the elements in the\n            range defined by the two specified endpoints.":"创建一个最初包含所有元素的枚举集\r\n            由两个指定端点定义的范围。\r\n","Constructs a NoSuchAlgorithmException with no detail\n            message.":"构建鼻algorithmexception，没有细节\r\n            信息。\r\n","java.util.concurrent.ForkJoinTask.fork()":"java.util.concurrent.forkjointask.fork（）\r\n","An unbounded BlockingQueue blocking queue of\n            ":"一个无限的阻塞阻塞队列\r\n            \r\n","java.nio.file.FileStore.type()":"java.nio.file.file.filestore.type（）\r\n","java.util.Arrays.fill(int[], int, int, int)":"java.util.arrays.fill（int []，int，int，int）\r\n","IllegalStateException":"非法施加感受\r\n","Returns the OID of the signature algorithm from the certificate.":"从证书中返回签名算法的OID。\r\n","Sets the amount of time in milliseconds that the clock is advanced\n            during daylight saving time.":"设置以毫秒为准的时间的时间\r\n            在日光节省时间。\r\n","java.security.PKCS12Attribute.PKCS12Attribute(byte[])":"java.security.pkcs12attribute.pkcs12attribute（byte []）\r\n","java.sql.ResultSet.getInt(java.lang.String)":"java.sql.Resultset.getInt（java.lang.string）\r\n","Creates an elliptic curve prime finite field\n            with the specified prime ":"创建一个椭圆曲线素数有限场\r\n            用指定的素数\r\n","java.security.CryptoPrimitive":"java.security.crypprimitive\r\n","Returns the context for the event.":"返回事件的上下文。\r\n","java.sql.DriverManager.getConnection(java.lang.String, java.lang.String, java.lang.String)":"java.sql.drivermanager.getConnection（java.lang.string，java.lang.string，java.lang.string）\r\n","<code>NumberFormat</code> is the abstract base class for all number\n            formats.":"<code> numberFormat </code>是所有数字的抽象基类\r\n            格式。\r\n","java.text.ParsePosition.setIndex(int)":"java.text.parseposition.setIndex（int）\r\n","java.util.Queue.add(java.lang.Object)":"java.util.queue.add（java.lang.Object）\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","java.util.IllformedLocaleException.IllformedLocaleException()":"java.util.illformedlocaleexception.illformedlocaleexception（）\r\n","java.security.spec.DSAParameterSpec.getG()":"java.security.spec.dsaparameterspec.getg（）\r\n","java.util.Arrays.fill(double[], int, int, double)":"java.util.arrays.fill（double []，int，int，double）\r\n","Gets the symbol of this currency for the specified locale.":"获取指定语言环境的这种货币的象征。\r\n","java.sql.Connection.isValid(int)":"java.sql.connection.isvalid（int）\r\n","java.nio.file.spi.FileSystemProvider.deleteIfExists(java.nio.file.Path)":"java.nio.file.spi.filesystemprovider.deleteifexists（java.nio.file.path）\r\n","java.util.concurrent.ConcurrentLinkedDeque.offerLast(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.offerlast（java.lang.object）\r\n","\n            as its detail message.":"\r\n            作为其详细信息。\r\n","java.sql.Array.getResultSet(long, int)":"java.sql.array.getResultset（long，int）\r\n","java.sql.DatabaseMetaData.supportsUnion()":"java.sql.databasemetadata.supportsunion（）\r\n","java.sql.ResultSet.updateAsciiStream(java.lang.String, java.io.InputStream, int)":"java.sql.Resultset.updateasciistream（java.lang.string，java.io.inputstream，int）\r\n","Tells whether date/time interpretation is to be lenient. -or- Specifies whether or not date/time interpretation is to be lenient.":"告诉日期/时间解释是否宽大。 - 或 - 指定日期/时间解释是否宽大。\r\n","java.util.concurrent.CompletableFuture.obtrudeValue(java.lang.Object)":"java.util.concurrent.completablefuture.obtrudevalue（java.lang.object）\r\n","java.util.NavigableMap.floorEntry(java.lang.Object)":"java.util.navigablemap.floortry（java.lang.Object）\r\n","java.util.GregorianCalendar.getMinimum(int)":"java.util.gregoriancalendar.getminimim（int）\r\n","The mapping in the Java programming language for the SQL type\n            <code>ARRAY</code>.":"SQL类型的Java编程语言映射\r\n            <code>数组</code>。\r\n","java.security.cert.CertPathBuilder.getRevocationChecker()":"java.security.cert.certpathbuilder.getRevocationChecker（）\r\n","if this operation fails\n":"如果此操作失败\r\n\r\n","java.security.Key.getEncoded()":"java.security.key.getencoded（）\r\n","java.util.TimerTask.TimerTask()":"java.util.timertask.timertask（）\r\n","Factory method for creating Struct objects.":"创建结构对象的工厂方法。\r\n","java.util.concurrent.ArrayBlockingQueue.size()":"java.util.concurrent.ArrayBlockingQueue.size（）\r\n","Appends the specified element to the end of this list.":"将指定元素附加到此列表的末尾。\r\n","if the provider does not provide the requested algorithm.":"如果提供商不提供所请求的算法。\r\n","\n            initially containing the elements of the given collection,\n            added in traversal order of the collection's iterator.":"\r\n            最初包含给定集合的元素，\r\n            按照收集迭代器的遍历顺序添加。\r\n","Constructs an instance of this class with the unknown conversion.":"用未知的转换构建此类的实例。\r\n","java.sql.Connection.createStruct(java.lang.String, java.lang.Object[])":"java.sql.connection.creatStruct（java.lang.string，java.lang.object []）\r\n","if the specified algorithm parameters cannot be used with\n             this algorithm.\n":"如果不能与指定的算法参数一起使用\r\n             该算法。\r\n\r\n","\n subclasses.":"\r\n 子类。\r\n","Sorts the specified list according to the order induced by the\n            specified comparator.":"根据由\r\n            指定的比较器。\r\n","Finishes the signature operation and stores the resulting signature\n            bytes in the provided buffer ":"完成签名操作并存储由此产生的签名\r\n            提供的缓冲区中的字节\r\n","Retrieves the value of a JDBC <code>ARRAY</code> parameter as an\n            ":"检索JDBC <code>数组的值</code>参数为一个\r\n            \r\n","java.sql.DatabaseMetaData.procedureNoNulls":"java.sql.databasemetadata.procedurenonulls\r\n","java.util.StringJoiner.add(java.lang.CharSequence)":"java.util.stringjoiner.add（java.lang.CharSequence）\r\n"," if completed in any fashion: normally,\n            exceptionally, or via cancellation.":" 如果以任何方式完成：通常\r\n            异常或通过取消。\r\n","if any row has fewer than 5 elements.":"如果任何行的元素少于5个元素。\r\n","NoSuchElementException":"NosuchelementException\r\n","java.text.DecimalFormatSymbols.setMonetaryDecimalSeparator(char)":"java.text.decimalformatsymbols.setmonetarydecimalseparator（char）\r\n","Add a service.":"添加服务。\r\n","Registers the file located by this path with a watch service.":"通过手表服务注册该路径位置的文件。\r\n","java.util.Calendar.NOVEMBER":"java.util.calendar.november\r\n","java.text.DateFormat.DAY_OF_WEEK_IN_MONTH_FIELD":"java.text.dateformat.day_of_week_in_month_field\r\n","java.sql.ResultSet.updateClob(java.lang.String, java.io.Reader, long)":"java.sql.Resultset.updateclob（java.lang.string，java.io.Reader，long）\r\n","java.sql.DatabaseMetaData.getFunctions(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getFunctions（java.lang.string，java.lang.string，java.lang.string）\r\n","Returns the next pseudorandom, uniformly distributed ":"返回下一个伪随机，均匀分布\r\n","java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag(short, short)":"java.util.concurrent.forkjointask.com.pareandsetforkjointasktag（短，短）\r\n","java.nio.charset.UnmappableCharacterException":"Java.nio.Charset.unmappableCharacterException\r\n"," (optional operation).":" （可选操作）。\r\n","#state":"＃状态\r\n","This method frees the <code>Blob</code> object and releases the resources that\n            it holds.":"此方法可以释放<code> blob </code>对象并释放资源\r\n            它拥有。\r\n","java.util.concurrent.ConcurrentLinkedDeque.removeLast()":"java.util.concurrent.concurrentlinkeddeque.removelast（）\r\n","java.util.IdentityHashMap.clone()":"java.util.indistityhashmap.clone（）\r\n","java.util.Scanner.findWithinHorizon(java.util.regex.Pattern, int)":"java.util.scanner.findwithinhorizo​​n（java.util.regex.pattern，int）\r\n","java.sql.DatabaseMetaData.storesUpperCaseIdentifiers()":"java.sql.databasemetadata.StoresupperCaseIdentifiers（）\r\n","java.util.UnknownFormatConversionException.UnknownFormatConversionException(java.lang.String)":"java.util.unknownformatConversionException.unknownFormatConversionException（java.lang.string）\r\n","java.sql.Connection.commit()":"java.sql.connection.commit（）\r\n","#APPEND_DATA":"#Append_Data\r\n"," that may be explicitly completed (setting its\n            value and status), and may be used as a ":" 可以明确完成（设置其\r\n            价值和状态），可以用作\r\n"," supports week dates.":" 支持周的日期。\r\n","Obtains a fully variable value range.":"获得一个完全可变的值范围。\r\n"," table to the output stream in a format suitable\n            for loading into a ":" 以适合格式到输出流到输出流\r\n            用于加载到\r\n","Decrements the count of the latch, releasing all waiting threads if\n            the count reaches zero.":"减少闩锁的计数，如果\r\n            计数达到零。\r\n","Storage for files.":"文件存储。\r\n","Defines the flags for used by the flags component of an ACL ":"定义ACL的标志组件使用的标志\r\n","java.util.ServiceLoader.load(java.lang.Class, java.lang.ClassLoader)":"java.util.serviceloader.load（java.lang.class，java.lang.classloader）\r\n","java.util.concurrent.CompletableFuture.delayedExecutor(long, java.util.concurrent.TimeUnit, java.util.concurrent.Executor)":"java.util.concurrent.completablefuture.delayedexecutor（long，java.util.concurrent.timeunit，java.util.concurrent.executor）\r\n","Comparator":"比较器\r\n","Determines whether an algorithm is granted permission for the\n            specified cryptographic primitives.":"确定是否授予算法的权限\r\n            指定的加密原语。\r\n"," method returns.":" 方法返回。\r\n","Normalization Form D - Canonical Decomposition.":"标准化表格D-规范分解。\r\n","if threadFactory is null\n":"如果线程factory为null\r\n\r\n","java.security.spec.DSAParameterSpec.getQ()":"java.security.spec.dsaparameterspec.getq（）\r\n","PKIXBuilderParameters":"PKIXBuilderParameters\r\n","Constructs a new, empty hashtable with a default initial capacity (11)\n            and load factor (0.":"构建一个具有默认初始容量（11）的新的空台面功能\r\n            和负载因子（0。\r\n","PrivilegedActionException":"privilegeDactionException\r\n","java.util.AbstractMap.isEmpty()":"java.util.abstractmap.isempty（）\r\n"," or an other error occurs.":" 或其他错误发生。\r\n","java.util.Spliterators.spliterator(java.util.Collection, int)":"java.util.spliterators.spliterator（java.util.collection，int）\r\n","java.security.DomainCombiner":"java.security.domaincombiner\r\n","if any of the parameters is out of range.\n":"如果任何参数超出范围。\r\n\r\n","java.nio.file.StandardWatchEventKinds.ENTRY_DELETE":"java.nio.file.standardwatcheventkinds.entry_delete\r\n","java.sql.Connection.setSavepoint()":"java.sql.connection.setsavepoint（）\r\n","java.util.Vector.copyInto(java.lang.Object[])":"java.util.vector.copyinto（java.lang.object []）\r\n","java.util.Locale.CHINA":"java.util.locale.china\r\n","java.text.MessageFormat.toPattern()":"java.text.messageformat.topattern（）\r\n","Returns a percentage format for the current default\n            ":"返回当前默认值的百分比格式\r\n            \r\n","java.util.concurrent.AbstractExecutorService.submit(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.abstractexecutorservice.submit（java.lang.runnable，java.lang.object）\r\n","java.util.PriorityQueue.PriorityQueue(java.util.Collection)":"java.util.priorityqueue.priorityqueue（java.util.Collection）\r\n","Scans the next token of the input as a ":"扫描输入的下一个令牌\r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException()":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（）\r\n","Gets the time formatter with the default formatting style\n            for the default ":"使用默认格式样式获取时间格式\r\n            对于默认值\r\n","java.security.PrivilegedActionException.PrivilegedActionException(java.lang.Exception)":"java.security.privilegedActionException.privilegedActionException（java.lang.exception）\r\n","java.security.AlgorithmConstraints":"java.security.algorithmconstraints\r\n","OptionalInt":"可选的\r\n","Permission to add a new file to a directory (equal to ":"权限将新文件添加到目录（等于\r\n","java.security.AlgorithmParameterGenerator.init(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)":"java.security.algorithmparametergenerator.init（java.security.spec.algorithmparameterspec，java.security.securerandom）\r\n","java.util.Set.of(java.lang.Object, java.lang.Object)":"java.util.set.of（java.lang.Object，java.lang.object）\r\n"," over the supported encodings for a\n representation of the certificate path.":" 在支持的编码上\r\n 证书路径的表示。\r\n","java.util.ListIterator.add(java.lang.Object)":"java.util.listiterator.add（java.lang.Object）\r\n","java.nio.file.FileVisitor.postVisitDirectory(java.lang.Object, java.io.IOException)":"java.nio.file.filevisitor.postvisitdirectory（java.lang.object，java.io.ioexception）\r\n","java.security.acl.AclEntry.checkPermission(java.security.acl.Permission)":"java.security.acl.aclentry.checkpermission（java.security.acl.permission）\r\n","This exception is thrown if a key in the keystore cannot be recovered.":"如果无法恢复密钥库中的密钥，则将抛出此异常。\r\n","java.util.Locale.clone()":"java.util.locale.clone（）\r\n","java.sql.SQLInput.wasNull()":"java.sql.sqlinput.wasnull（）\r\n","Tests if two paths locate the same file.":"测试两个路径是否找到同一文件。\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>ARRAY</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code>数组</code>。\r\n","Returns the name of the algorithm of this key.":"返回此键的算法名称。\r\n","java.util.NavigableMap.navigableKeySet()":"java.util.navigablemap.navigablekeyset（）\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code> FailedProperties </code>。\r\n","java.util.TreeSet.first()":"java.util.treeset.first（）\r\n","Sorts the specified range of the array into ascending order.":"将数组的指定范围分为上升顺序。\r\n"," is not one of SHORT, MEDIUM, LONG, FULL, or\n             DEFAULT.\n":" 不是短，中，长，完整或\r\n             默认。\r\n\r\n","java.util.List.size()":"java.util.list.size（）\r\n","java.security.CodeSigner.CodeSigner(java.security.cert.CertPath, java.security.Timestamp)":"java.security.codesigner.codesigner（java.security.cert.cert.certpath，java.security.timestamp）\r\n","Returns a certificate factory object that implements the\n            specified certificate type.":"返回实现的证书工厂对象\r\n            指定的证书类型。\r\n","Gets the <code>DecimalFormatSymbols</code> instance for the default\n            locale.":"获取<code> DecimalFormatSymbols </code>默认的实例\r\n            语言环境。\r\n","java.sql.Types.SMALLINT":"java.sql.types.smallint\r\n","if parsing problems are detected.\n":"如果检测到解析问题。\r\n\r\n"," covering a range of elements of a given\n            array, using a customized set of spliterator characteristics.":" 涵盖给定的一系列元素\r\n            数组，使用自定义的一组拆分器特征。\r\n","Constructs a KeyException with no detail message.":"构建一个没有详细信息的键盘感受。\r\n","java.util.Locale.getDisplayVariant(java.util.Locale)":"java.util.locale.getdisplayvariant（java.util.locale）\r\n","Assigns the specified long value to each element of the specified\n            range of the specified array of longs.":"将指定的长度分配给指定的每个元素\r\n            指定阵列的范围。\r\n","java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String, java.util.Locale)":"java.text.simpledateformat.simpledateformat（java.lang.string，java.util.locale）\r\n","The constant indicating that the rows in a result set will be\n            processed in a forward direction; first-to-last.":"常数表明结果集中的行将是\r\n            朝着前进的方向进行处理；首先。\r\n","java.util.concurrent.FutureTask.FutureTask(java.util.concurrent.Callable)":"java.util.concurrent.futuretask.futuretask（java.util.concurrent.clable）\r\n"," entry that\n holds a secret key.":" 进入\r\n 拥有一个秘密钥匙。\r\n","java.util.SortedSet":"Java.util.SortedSet\r\n","Returns the issuer criterion as an ":"返回发行人标准作为\r\n"," that further provides a ":" 这进一步提供了\r\n","java.util.Scanner.hasNext(java.lang.String)":"java.util.scanner.hasnext（java.lang.string）\r\n","Adds the specified permission to this ACL entry.":"将指定的权限添加到此ACL条目中。\r\n","Returns the maxCRLNumber criterion.":"返回maxcrlnumber标准。\r\n","Static classes and methods for operating on or creating instances of\n            ":"用于操作或创建实例的静态类和方法\r\n            \r\n","java.util.concurrent.ConcurrentSkipListMap":"java.util.concurrent.concurrentskiplistmap\r\n","#equals equal":"＃等于\r\n","java.time.format.DateTimeFormatter.ofPattern(java.lang.String, java.util.Locale)":"java.time.format.datetimeformatter.ofpattern（java.lang.string，java.util.locale）\r\n","Returns the unknown conversion.":"返回未知的转换。\r\n","Initializes the key pair generator using the specified parameter\n            set and the ":"使用指定参数初始化密钥对生成器\r\n            设置和\r\n","Creates a new SplittableRandom instance using the specified\n            initial seed.":"使用指定的\r\n            初始种子。\r\n","A base type for primitive specializations of ":"用于原始专业的基本类型\r\n","java.nio.file.LinkPermission.LinkPermission(java.lang.String, java.lang.String)":"java.nio.file.linkpermission.linkpermission（java.lang.string，java.lang.string）\r\n","Returns an array containing all of the elements in this collection.":"返回包含此集合中所有元素的数组。\r\n"," containing all names of the calendar\n            ":" 包含日历的所有名称\r\n            \r\n","java.util.concurrent.CompletableFuture.completedFuture(java.lang.Object)":"java.util.concurrent.completablefuture.completedfuture（java.lang.object）\r\n","putAll":"普特尔\r\n","java.text.CollationElementIterator.next()":"java.text.collat​​ionElementiter.next（）\r\n","java.text.DateFormat.getTimeInstance(int, java.util.Locale)":"java.text.dateformat.getTimeInstance（int，java.util.locale）\r\n","Retrieves whether a catalog name can be used in a privilege definition statement.":"检索是否可以在特权定义语句中使用目录名称。\r\n","java.util.Calendar.computeFields()":"java.util.calendar.computefields（）\r\n","Returns an enumeration of the members in the group.":"返回小组成员的枚举。\r\n","ACL":"ACL\r\n","Searches a range of\n            the specified array of floats for the specified value using\n            the binary search algorithm.":"搜索一系列\r\n            使用\r\n            二进制搜索算法。\r\n","if task null\n":"如果任务为null\r\n\r\n","java.security.cert.X509CertSelector.setMatchAllSubjectAltNames(boolean)":"java.security.cert.x509certselector.setMatchallSubjectaltnames（boolean）\r\n","java.security.Signature.getProvider()":"java.security.signature.getProvider（）\r\n","java.util.EnumSet.complementOf(java.util.EnumSet)":"java.util.enumset.complementof（java.util.enumset）\r\n","Create a Bidi object representing the bidi information on a line of text within\n            the paragraph represented by the current Bidi.":"创建代表BIDI信息的BIDI对象\r\n            当前比迪代表的段落。\r\n","java.util.GregorianCalendar.isLeapYear(int)":"java.util.gregoriancalendar.isleapyear（int）\r\n","java.util.Arrays.parallelSetAll(double[], java.util.function.IntToDoubleFunction)":"java.util.arrays.parallesetall（double []，java.util.function.inttododoupluction）\r\n","Returns a name for the locale's variant code that is appropriate for display to the\n            user.":"返回该语言环境的变体代码的名称，该代码适合显示\r\n            用户。\r\n","Schedules the specified task for execution after the specified delay.":"在指定的延迟之后安排指定的任务进行执行。\r\n","java.sql.Types":"java.sql.types\r\n","paramSpec":"paramspec\r\n","java.util.Arrays.parallelSort(char[], int, int)":"java.util.arrays.parallelsort（char []，int，int）\r\n","Return the primary component of a collation element.":"返回整理元件的主要组件。\r\n","java.sql.DriverPropertyInfo.value":"java.sql.driverpropertyinfo.value\r\n","parties":"派对\r\n","java.util.PropertyResourceBundle":"java.util.propertyresourcebundle\r\n","The MGF1ParameterSpec which uses SHA-512 message digest.":"使用SHA-512消息摘要的MGF1ParametersPec。\r\n","\n            to the millisecond time value\n            ":"\r\n            到毫秒的时间值\r\n            \r\n","Returns a copy of the info with a new character that represents zero.":"返回具有代表零的新字符的信息副本。\r\n"," for the given runnable and default\n            value.":" 对于给定的可运行和默认\r\n            价值。\r\n","Localized definitions of the day-of-week, week-of-month and week-of-year fields.":"每天，每周和周的年度领域的本地定义。\r\n","java.util.TreeSet.iterator()":"java.util.treeset.iterator（）\r\n","If this task has not completed, attempts to process at most the\n            given number of other unprocessed tasks for which this task is\n            on the completion path, if any are known to exist.":"如果此任务尚未完成，则最多尝试处理\r\n            给定数量的其他未经处理的任务，此任务是\r\n            在完成路径上，如果已知存在。\r\n"," instance has\n            default initial capacity (16) and load factor (0.":" 实例有\r\n            默认初始容量（16）和负载因子（0。\r\n","java.util.concurrent.CompletableFuture":"java.util.concurrent.completablefuture\r\n","Constructor for use by subclasses.":"用于子类使用的构造函数。\r\n","Returns a list of system functions available with the database.":"返回数据库可用的系统功能列表。\r\n","if the capacity is less than zero.\n":"如果容量小于零。\r\n\r\n","java.text.Collator.NO_DECOMPOSITION":"java.text.collat​​or.no_decomposition\r\n","Constructs an iterator over the given range of the given string, with the\n            index set at the specified position.":"在给定字符串的给定范围内构造迭代器，\r\n            索引设置为指定位置。\r\n","Initializes the key pair generator for a certain keysize with\n            the given source of randomness (and a default parameter set).":"初始化某个按键的关键对生成器\r\n            给定的随机性来源（和默认参数集）。\r\n","java.security.cert.Certificate.getType()":"java.security.cert.certificate.getType（）\r\n","java.util.concurrent.ConcurrentSkipListMap.computeIfPresent(java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrentskiplistmap.computeifpresent（java.lang.object，java.util.function.bifunction）\r\n","java.util.PropertyResourceBundle.getKeys()":"java.util.propertyresourcebundle.getkeys（）\r\n","Returns the inapplicable conversion.":"返回不适用的转换。\r\n","java.text.Bidi.DIRECTION_DEFAULT_RIGHT_TO_LEFT":"java.text.bidi.direction_default_right_to_left\r\n","auto-commit":"自动参数\r\n","Initializes this parameter object using the parameters\n            specified in ":"使用参数初始化此参数对象\r\n            指定在\r\n","defaultValue":"默认值\r\n","#characteristics":"＃特征\r\n","Marks the time indicator part of a date.":"标记日期的时间指示部分。\r\n","java.util.List.sort(java.util.Comparator)":"java.util.list.sort（java.util.comparator）\r\n","java.util.Calendar.MONTH":"java.util.calendar.month\r\n","java.util.concurrent.CopyOnWriteArrayList.addAll(java.util.Collection)":"java.util.concurrent.copyonwritearraylist.addall（java.util.collection）\r\n","Returns the result of accumulating the given transformation\n            of all (key, value) pairs using the given reducer to\n            combine values, and the given basis as an identity value.":"返回累积给定转换的结果\r\n            所有（密钥，值）对使用给定还原器\r\n            将值和给定基础作为身份值组合。\r\n","\n            that is equal to it.":"\r\n            这与它相等。\r\n","java.util.concurrent.ConcurrentHashMap.reduceToLong(long, java.util.function.ToLongBiFunction, long, java.util.function.LongBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducetolong（long，java.util.function.tolongbifunction，long，java.util.function.longbinaryoperator）\r\n","java.util.Scanner":"Java.util.Scanner\r\n","java.util.DoubleSummaryStatistics.getSum()":"java.util.doublesummarystatistics.getsum（）\r\n","java.util.Queue.element()":"java.util.queue.element（）\r\n","java.util.Locale.getISO3Country()":"java.util.locale.getiso3country（）\r\n","java.sql.SQLInput.readDate()":"java.sql.sqlinput.readdate（）\r\n","Completes this CompletableFuture with the result of\n            the given Supplier function invoked from an asynchronous\n            task using the given executor.":"通过\r\n            从异步调用给定的供应商功能\r\n            使用给定执行人使用任务。\r\n","java.util.Locale.TAIWAN":"java.util.locale.taiwan\r\n","if the provider does not implement this method.\n":"如果提供商未实现此方法。\r\n\r\n"," with the given initial\n            capacity and the default load factor (0.":" 给定的初始\r\n            容量和默认负载因子（0。\r\n","Gets the current value of the default locale for this instance\n            of the Java Virtual Machine. -or- Sets the default locale for this instance of the Java Virtual Machine.":"获取此实例的默认场所的当前值\r\n            Java虚拟机。 - 或 - 设置Java Virtual Machine的此实例的默认场所。\r\n","Returns the number of additional elements that this queue can ideally\n            (in the absence of memory or resource constraints) accept without\n            blocking.":"返回该队列理想的其他元素的数量\r\n            （在没有内存或资源约束的情况下）接受\r\n            阻止。\r\n","java.util.Calendar.isWeekDateSupported()":"java.util.calendar.isweekdatesupported（）\r\n","java.util.concurrent.Exchanger.exchange(java.lang.Object)":"java.util.concurrent.exchanger.exchange（java.lang.object）\r\n","java.time.format.ResolverStyle":"java.time.format.resolverstyle\r\n"," field indicating the\n            seventh month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的第七个月在格里高利和朱利安日历中。\r\n","weekYear":"一周\r\n","java.sql.DatabaseMetaData.getProcedureColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getProcedurecolumns（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","if we can not instantiate a resource class":"如果我们无法实例化资源类\r\n","Locale.Category#FORMAT FORMAT":"locale.sategory＃格式格式\r\n","Fills in any unset fields in the calendar fields.":"填写日历字段中的任何未设定字段。\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String, java.lang.String)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string，java.lang.string）\r\n","Tests whether a file is executable.":"测试文件是否可执行。\r\n","FormattableFlags#LEFT_JUSTIFY":"formattableflags＃left_justify\r\n","Constructs an AttributedString instance with the given text.":"用给定的文本构造一个属性的实例。\r\n","java.util.Observable.clearChanged()":"java.util.observable.clearchanged（）\r\n","java.security.SignedObject.getAlgorithm()":"java.security.signedobject.getAlgorithm（）\r\n","java.security.cert.X509CertSelector.setAuthorityKeyIdentifier(byte[])":"java.security.cert.x509certselector.setauthorityKeykeyIdentifier（byte []）\r\n","java.util.PriorityQueue.PriorityQueue(int, java.util.Comparator)":"java.util.priorityqueue.priorityqueue（int，java.util.comparator）\r\n","java.util.Arrays.copyOfRange(byte[], int, int)":"java.util.arrays.copyofrange（byte []，int，int）\r\n","Retrieves and removes the head (first element) of this list.":"检索并删除此列表的头部（第一个元素）。\r\n","java.sql.DatabaseMetaData.supportsOpenStatementsAcrossRollback()":"java.sql.databasemetadata.supportsopenstatementsacrossrollback（）\r\n","java.security.cert.PKIXRevocationChecker.setOptions(java.util.Set)":"java.security.cert.pkixrevocation checker.setoptions（java.util.set）\r\n","Defines the options as to how symbolic links are handled.":"定义有关如何处理符号链接的选项。\r\n","java.util.AbstractCollection.AbstractCollection()":"java.util.abstractcollection.abstractcollection（）\r\n","java.util.concurrent.Executors.callable(java.lang.Runnable, java.lang.Object)":"java.util.concurrent.executors.callable（java.lang.runnable，java.lang.object）\r\n","java.util.Set.of(java.lang.Object[])":"java.util.set.of（java.lang.object []）\r\n","ForkJoinWorkerThread":"forkjoinworkerThread\r\n","java.text.CharacterIterator.previous()":"java.text.CharacterIterator.previous（）\r\n","java.sql.ResultSet.updateRowId(java.lang.String, java.sql.RowId)":"java.sql.Resultset.updaterowid（java.lang.string，java.sql.rowid）\r\n","Sets the value of the designated parameter with the given object.":"用给定对象设置指定参数的值。\r\n","Pacific Daylight Time":"太平洋日光时间\r\n","java.sql.SQLInput.readBinaryStream()":"java.sql.sqlinput.readbinarystream（）\r\n","java.util.concurrent.BlockingQueue.poll(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingqueue.poll（long，java.util.concurrent.timeunit）\r\n","Retrieves whether this database treats mixed case quoted SQL identifiers as\n            case insensitive and stores them in upper case.":"检索该数据库是否将混合案例视为SQL标识符为\r\n            案例不敏感，并将其存储在上案例中。\r\n","Returns the value in milliseconds.":"以毫秒为单位返回值。\r\n","Constructs a <code>SQLSyntaxErrorException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqlsyntaxerrorexception </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Drops a driver from the <code>DriverManager</code>'s list.":"从<code> drivermanager </code>的列表中删除驱动程序。\r\n","java.nio.file.FileSystems.getDefault()":"java.nio.file.filesystems.getDefault（）\r\n","Assigns the given trusted certificate to the given alias.":"将给定的信任证书分配给给定的别名。\r\n","java.security.spec.AlgorithmParameterSpec":"java.security.spec.algorithmparameterspec\r\n","java.nio.file.SecureDirectoryStream.deleteDirectory(java.lang.Object)":"java.nio.file.securedirectorystream.deletedirectory（java.lang.object）\r\n","java.security.cert.CertPathBuilder.CertPathBuilder(java.security.cert.CertPathBuilderSpi, java.security.Provider, java.lang.String)":"java.security.cert.certpathbuilder.certpathbuilder（java.security.cert.cert.certpathbuilderspi，java.security.provider，java.lang.lang.string）\r\n","java.sql.PreparedStatement.setTimestamp(int, java.sql.Timestamp, java.util.Calendar)":"java.sql.preparedstatement.settimestamp（int，java.sql.timestamp，java.util.calendar）\r\n","Gets the extensions's DER-encoded value.":"获取扩展名的DER编码值。\r\n","Searches the specified array of chars for the specified value using the\n            binary search algorithm.":"搜索使用该指定值的指定字符数组\r\n            二进制搜索算法。\r\n","Unchecked exception thrown when an attempt is made to update an object\n            associated with a ":"尝试更新对象时，未选中的异常\r\n            与\r\n","Enumeration of ways to handle the positive/negative sign.":"列举处理正/负符号的方式。\r\n"," is not capacity constrained.":" 不是能力受限。\r\n","if the specified object identifier is invalid.\n":"如果指定的对象标识符无效。\r\n\r\n","java.util.List.subList(int, int)":"java.util.list.Sublist（int，int）\r\n","java.util.PriorityQueue.offer(java.lang.Object)":"java.util.priorityqueue.offer（java.lang.Object）\r\n","Deserializes a ":"挑剔a\r\n","java.text.DateFormatSymbols.setZoneStrings(java.lang.String[][])":"java.text.dateformatsymbols.setzonestrings（java.lang.string [] []）\r\n","Schedules the specified task for execution at the specified time.":"计划在指定时间执行指定的任务。\r\n","A file type detector for probing a file to guess its file type.":"文件类型检测器，用于探测文件以猜测其文件类型。\r\n","java.util.Arrays.fill(byte[], byte)":"java.util.arrays.fill（字节[]，字节）\r\n","\n            interface to minimize the effort required to implement this\n            interface.":"\r\n            接口以最大程度地减少实施此功能所需的努力\r\n            界面。\r\n","if an error occurred during the creation of the new ":"如果在新创建期间发生错误\r\n"," is greater than the length of this\n             object's paragraph text.\n":" 大于这个长度\r\n             对象的段落文字。\r\n\r\n","java.security.Signature.initVerify(java.security.PublicKey)":"java.security.signature.initverify（java.security.publickey）\r\n","java.sql.DatabaseMetaData.supportsCatalogsInIndexDefinitions()":"java.sql.databasemetadata.supportscatalogsinindexdefinitions（）\r\n","Retrieves and removes the last (highest) element,\n            or returns ":"检索并删除最后一个（最高）元素，\r\n            或返回\r\n","java.security.spec.DSAPublicKeySpec.getQ()":"java.security.spec.dsapublickeyspec.getq（）\r\n","java.sql.ResultSet.getUnicodeStream(int)":"java.sql.Resultset.getunicodestream（int）\r\n","The ISO date formatter that formats or parses the ordinal date\n            without an offset, such as '2012-337'.":"格式或解析序数日期的ISO日期格式\r\n            没有偏移，例如“ 2012-337”。\r\n","java.util.concurrent.CountedCompleter.CountedCompleter(java.util.concurrent.CountedCompleter)":"Java.util.concurrent.CountedCompleter.CountedCompleter（Java.util.concurrent.CountedCompleter）\r\n","java.security.Provider.replace(java.lang.Object, java.lang.Object, java.lang.Object)":"java.security.provider.replace（java.lang.object，java.lang.object，java.lang.object）\r\n","java.security.Security.addProvider(java.security.Provider)":"java.security.security.addprovider（java.security.provider）\r\n","Retrieves whether for the given type of <code>ResultSet</code> object,\n            the result set's own updates are visible.":"检索是否针对给定类型的<code> Resultset </code>对象，\r\n            结果集的自己的更新是可见的。\r\n","java.util.Arrays.fill(char[], char)":"java.util.arrays.fill（char []，char）\r\n","java.util.BitSet.valueOf(java.nio.ByteBuffer)":"java.util.bitset.valueof（java.nio.bytebuffer）\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n             with a given\n            <code>reason</code> and  <code>cause</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n             给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Construct a DateFormatSymbols object by loading format data from\n            resources for the default ":"通过从加载格式数据来构建DateFormatSymbols对象\r\n            默认资源\r\n",".tmp":".tmp\r\n","java.util.ArrayDeque.size()":"java.util.arraydeque.size（）\r\n","java.text.DateFormat.LONG":"java.text.dateformat.long\r\n","The constant indicating the type for a <code>ResultSet</code> object\n            that is scrollable but generally not sensitive to changes to the data\n            that underlies the <code>ResultSet</code>.":"常数指示<code> resultset的类型</code>对象\r\n            这是可以滚动的，但通常对数据更改不敏感\r\n            这是<code> Resultset </code>的基础。\r\n","Formats an object to produce a string.":"格式化一个对象产生字符串。\r\n","If the pending count is nonzero, decrements the count;\n            otherwise invokes ":"如果待处理计数为非零，则减少计数；\r\n            否则调用\r\n","Returns a URI to represent this path.":"返回URI代表这条路径。\r\n","java.time.format.DecimalStyle.getNegativeSign()":"java.time.format.decimalstyle.getNegativesign（）\r\n","Updates the data to be signed or verified by a byte.":"更新要由字节签名或验证的数据。\r\n","Returns a comparator that imposes the reverse ordering of the specified\n            comparator.":"返回一个比较器，该比较器强加了指定的反向排序\r\n            比较器。\r\n","java.security.cert.CertPathValidator.getRevocationChecker()":"java.security.cert.certpathvalidator.getRevocationChecker（）\r\n","Returns the number of elements in this set (its cardinality).":"返回此集合中的元素数（其基数）。\r\n","java.sql.SQLOutput.writeSQLXML(java.sql.SQLXML)":"java.sql.sqloutput.writesqlxml（java.sql.sqlxml）\r\n","Interrelated interfaces and static methods for establishing\n            flow-controlled components in which ":"相互关联的接口和静态方法\r\n            流控制组件，其中\r\n","java.security.AlgorithmParameters.getProvider()":"java.security.algorithmparameters.getProvider（）\r\n","Unchecked exception thrown when an attempt is made to invoke a method on an\n            object created by one file system provider with a parameter created by a\n            different file system provider.":"当尝试在某个方法上调用一种方法时，未选中的例外\r\n            一个文件系统提供商创建的对象，其参数由\r\n            不同的文件系统提供商。\r\n","java.security.Signer":"Java.security.Signer\r\n","Returns the minor JDBC version number for this driver.":"返回此驱动程序的次要JDBC版本号。\r\n","<code>TimeZone</code> represents a time zone offset, and also figures out daylight\n            savings.":"<code> timezone </code>表示时区偏移，还可以弄清楚日光\r\n            储蓄。\r\n","Constructs an empty deque.":"建造一个空的deque。\r\n","startIndex > endIndex":"StartIndex> EndIndex\r\n","Useful constant for MILLISECOND field alignment.":"有用的常数可用于毫秒的场对齐。\r\n","FormattableFlags#ALTERNATE":"格式化Flags＃备用\r\n","java.util.Collections.synchronizedSortedMap(java.util.SortedMap)":"Java.util.Collections.SynchronizedSortedMap（java.util.sortedmap）\r\n","RSAParameterSpec":"rsaparameterspec\r\n"," is not\n             recognized.\n":" 不是\r\n             认可。\r\n\r\n","java.util.Properties.save(java.io.OutputStream, java.lang.String)":"java.util.properties.save（java.io.outputstream，java.lang.string）\r\n","java.text.ParseException":"java.text.parseexception\r\n","java.security.cert.PKIXRevocationChecker.getOptions()":"java.security.cert.pkixrevocation checker.getOptions（）\r\n","Returns pattern with formatted double.":"返回图案，格式化双重。\r\n","java.util.ListIterator.nextIndex()":"java.util.listiterator.nextindex（）\r\n","java.util.Deque.removeLast()":"java.util.deque.removelast（）\r\n","CertStoreParameters":"certStoreParameters\r\n","if there's no 3-letter language code for this locale.\n":"如果此语言环境没有三个字母的语言代码。\r\n\r\n","This constant stands for the currency symbol.":"这个常数代表货币符号。\r\n","java.security.KeyStoreSpi.engineGetCertificateAlias(java.security.cert.Certificate)":"java.security.keystorespi.enginegenetcertificatealias（java.security.cert.certificate）\r\n","Creates a <code>DataTruncation</code> object\n            with the SQLState initialized\n            to 01004 when <code>read</code> is set to <code>true</code> and 22001\n            when <code>read</code> is set to <code>false</code>,\n            the reason set to \"Data truncation\", the\n            vendor code set to 0, and\n            the other fields set to the given values.":"创建<code> dataTruncation </code>对象\r\n            使用SQLSTATE初始化\r\n            到01004当<code>读取</code>设置为<code> true </code>和22001\r\n            当<code>读取</code>设置为<code> false </code>，\r\n            原因设置为“数据截断”，\r\n            供应商代码设置为0，并且\r\n            其他字段设置为给定值。\r\n","java.util.NavigableMap.higherKey(java.lang.Object)":"java.util.navigablemap.higherkey（java.lang.Object）\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalideuthorizationspecexception（java.lang.string，java.lang.lang.string，java.lang.thrang.throwable）\r\n","java.util.IllegalFormatFlagsException":"Java.util.IllegalFormatFlagSexception\r\n","java.util.Deque.descendingIterator()":"java.util.deque.descgenditerator（）\r\n","java.sql.Array.getResultSet(long, int, java.util.Map)":"java.sql.array.getResultset（long，int，java.util.map）\r\n","java.text.BreakIterator.clone()":"java.text.breakiterator.clone（）\r\n","java.security.PolicySpi":"java.security.policyspi\r\n","java.sql.Blob.position(java.sql.Blob, long)":"java.sql.blob.Position（java.sql.blob，long）\r\n","java.sql.ResultSet.updateCharacterStream(int, java.io.Reader, long)":"java.sql.Resultset.updatecharacterstream（int，java.io.Reader，long）\r\n","The PSS parameter set with all default values.":"具有所有默认值的PSS参数集。\r\n","java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)":"java.text.format.parseobject（java.lang.string，java.text.parseposition）\r\n","java.util.concurrent.AbstractExecutorService":"java.util.concurrent.AbstractexecutorService\r\n"," implementation for use with enum types.":" 用于枚举类型的实现。\r\n","Adds all of the elements in the specified collection to this collection\n            (optional operation).":"将指定集合中的所有元素添加到此集合中\r\n            （可选操作）。\r\n","java.security.cert.CertificateFactory.generateCertPath(java.util.List)":"java.security.cert.certificatefactory.generatecertpath（java.util.list）\r\n","Thrown by methods in ":"通过方法抛出\r\n","Reads the value of a file store attribute.":"读取文件存储属性的值。\r\n","calendarField":"calendarfield\r\n","java.security.acl.Owner.addOwner(java.security.Principal, java.security.Principal)":"java.security.acl.owner.addowner（java.security.principal，java.security.principal）\r\n","java.sql.DatabaseMetaData.supportsCatalogsInProcedureCalls()":"java.sql.databasemetadata.supportscatalogsinprocedurecalls（）\r\n","java.sql.DatabaseMetaData.versionColumnNotPseudo":"java.sql.databasemetadata.versioncolumnnotpseudo\r\n","java.sql.SQLXML.setBinaryStream()":"java.sql.sqlxml.setbinarystream（）\r\n","if any element does not implement ":"如果任何元素不实施\r\n","java.util.Arrays.copyOfRange(java.lang.Object[], int, int)":"java.util.arrays.copyofrange（java.lang.object []，int，int）\r\n","java.util.Observable.deleteObserver(java.util.Observer)":"java.util.Observable.deleteObserver（java.util.observer）\r\n","Returns an immutable set containing two elements.":"返回一个不变的集合，其中包含两个元素。\r\n","Retrieves and removes all pending events for this watch key, returning\n            a ":"检索并删除此手表键的所有待处理活动，返回\r\n            一个\r\n","java.util.concurrent.CyclicBarrier.isBroken()":"java.util.concurrent.cyclarer.isbroken（）\r\n","Writes the next attribute to the stream as a java.":"将下一个属性作为Java写入流。\r\n","Associates the specified value with the specified key in this map\n            (optional operation).":"将指定值与此地图中指定的密钥相关联\r\n            （可选操作）。\r\n","Returns an unmodifiable view of the specified navigable map.":"返回指定可导航地图的不可修复的视图。\r\n","java.security.spec.ECFieldF2m.ECFieldF2m(int)":"java.security.spec.ecfieldf2m.ecfieldf2m（int）\r\n","java.sql.SQLInput.readClob()":"java.sql.sqlinput.readclob（）\r\n","java.util.concurrent.ConcurrentHashMap.reduceValues(long, java.util.function.Function, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reducevalues（long，java.util.function.function，java.util.function.bifunction.bifunction）\r\n","Returns a synchronized (thread-safe) set backed by the specified\n            set.":"返回由指定的同步（线程安全）设置的\r\n            放。\r\n","Adds a new provider, at a specified position.":"在指定位置添加了一个新的提供商。\r\n"," used in this NumberFormat.":" 在此numberFormat中使用。\r\n","Clob":"Clob\r\n","java.util.concurrent.ConcurrentLinkedQueue":"java.util.concurrent.concurrentlinkedqueue\r\n","Constructs a new formatter with the specified file.":"使用指定文件构造新的格式化器。\r\n","java.sql.Types.ROWID":"java.sql.types.rowid\r\n","java.util.UUID.variant()":"java.util.uuid.variant（）\r\n","Returns a copy of this object.":"返回此对象的副本。\r\n","Returns the algorithm name of this ":"返回此算法名称\r\n","java.util.concurrent.ConcurrentLinkedQueue.offer(java.lang.Object)":"java.util.concurrent.concurrentlinkedqueue.offer（java.lang.object）\r\n","if the specified value is null\n":"如果指定的值为null\r\n\r\n","java.sql.SQLRecoverableException.SQLRecoverableException()":"java.sql.sqlrecoverableException.sqlrecoverableException（）\r\n","Gets the revocation options. -or- Sets the revocation options.":"获取吊销选项。 - 或设置吊销选项。\r\n","java.sql.CallableStatement.setBigDecimal(java.lang.String, java.math.BigDecimal)":"java.sql.callablestatement.setbigdecimal（java.lang.string，java.math.bigdecimal）\r\n"," represents a service in the Java Security infrastructure.":" 代表Java安全基础架构中的服务。\r\n","Returns an integer number format for the specified locale.":"返回指定语言环境的整数格式。\r\n","if the type of the specified element\n         is incompatible with this deque (optional)":"如果指定元素的类型\r\n         与此Deque（可选）不兼容\r\n","Creates an iterator that iterates over the charsets supported by this\n            provider.":"创建一个迭代器，该迭代在此支持的符号上进行迭代\r\n            提供者。\r\n","ex":"前任\r\n","Returns a view of the portion of this set whose elements range from\n            ":"返回该集合的部分的视图，其元素范围从\r\n            \r\n","java.sql.SQLSyntaxErrorException.SQLSyntaxErrorException(java.lang.String, java.lang.String)":"java.sql.sqlsyntaxerrorexception.sqlsyntaxerrorexception（java.lang.string，java.lang.string）\r\n","Interface for JDBC classes which provide the ability to retrieve the delegate instance when the instance\n            in question is in fact a proxy class.":"JDBC类的接口，该类别提供了实例时检索委托实例的能力\r\n            实际上，实际上是代理类。\r\n","Returns a new CompletionStage that is completed normally with\n            the same value as this CompletableFuture when it completes\n            normally, and cannot be independently completed or otherwise\n            used in ways not defined by the methods of interface ":"返回正常完成的新完成阶段\r\n            完成时的值与此完整未来相同\r\n            通常，不能独立完成或以其他方式完成\r\n            以未由接口方法定义的方式使用\r\n","java.util.Arrays.toString(long[])":"java.util.arrays.tostring（long []）\r\n","java.sql.SQLDataException.SQLDataException(java.lang.String)":"java.sql.sqldataexception.sqldataexception（java.lang.string）\r\n","An exception that indicates an X.":"指示X的例外。\r\n","Retrieves, but does not remove, the head of this queue,\n or returns ":"检索但不删除该队列的头部，\r\n 或返回\r\n","java.text.MessageFormat.getFormatsByArgumentIndex()":"java.text.messageformat.getformatsbyargumentIndex（）\r\n","Returns the keysize.":"返回按键。\r\n","java.sql.DatabaseMetaData.supportsOrderByUnrelated()":"java.sql.databasemetadata.supportsorderbyunryred（）\r\n","Retrieves a description of the access rights for each table available\n            in a catalog.":"检索每个可用表的访问权限的描述\r\n            在目录中。\r\n","\n            by converting a path string or ":"\r\n            通过转换路径字符串或\r\n","java.util.Arrays.parallelSort(byte[], int, int)":"java.util.arrays.parallelsort（byte []，int，int）\r\n","Returns the private exponent.":"返回私人指数。\r\n","Returns this formatter as a ":"返回此格式作为一个\r\n","java.sql.Connection.releaseSavepoint(java.sql.Savepoint)":"java.sql.connection.releasesavepoint（java.sql.savepoint）\r\n","java.sql.DatabaseMetaData.importedKeySetNull":"java.sql.databasemetadata.importedkeysetnull\r\n"," for running ":" 用于跑步\r\n","java.util.List.of(java.lang.Object)":"java.util.list.of（java.lang.Object）\r\n","java.security.spec.RSAPrivateCrtKeySpec.getPrimeP()":"java.security.spec.rsaprivatecrtkeyspec.getPrimep（）\r\n","java.security.cert.Extension.getValue()":"java.security.cert.extension.getValue（）\r\n","java.util.OptionalLong.getAsLong()":"java.util.optionallong.getaslong（）\r\n","Returns the mask generation function algorithm name.":"返回蒙版生成函数算法名称。\r\n","Retrieves and removes the first element of this deque,\n            or returns ":"检索并删除此Deque的第一个元素，\r\n            或返回\r\n","Constructs a new, empty linked hash set with the specified initial\n            capacity and load factor.":"构建一个新的，空的链接哈希集，并带有指定的初始\r\n            容量和负载因子。\r\n","Returns the given number of seed bytes, computed using the seed\n            generation algorithm that this class uses to seed itself.":"返回给定数量的种子字节，使用种子计算\r\n            该类用来播种的一代算法。\r\n","Sets the daylight saving time start rule.":"设置日光节省时间开始规则。\r\n","The ISO instant formatter that formats or parses an instant in UTC,\n            such as '2011-12-03T10:15:30Z'.":"ISO Instant Formatter格式化或解析UTC的即时形式，\r\n            例如'2011-12-03T10：15：30z'。\r\n","This constant stands for the message argument.":"这个常数代表消息参数。\r\n","java.text.DateFormat.getDateTimeInstance(int, int, java.util.Locale)":"java.text.dateformat.getDateTimeInstance（int，int，java.util.locale）\r\n","java.util.Queue.offer(java.lang.Object)":"java.util.queue.offer（java.lang.Object）\r\n","An interface which provides comprehensive information about the database\n management system and its supported features.":"提供有关数据库的全面信息的界面\r\n 管理系统及其支持的功能。\r\n","Retrieves whether this database supports specifying a\n            <code>LIKE</code> escape clause.":"检索该数据库是否支持指定\r\n            <code>喜欢</code>逃脱子句。\r\n","Returns an object representing the value of OUT parameter\n            <code>parameterIndex</code> and uses <code>map</code> for the custom\n            mapping of the parameter value.":"返回代表OUT参数值的对象\r\n            <code> parameterIndex </code>并使用<code> MAP </code>自定义\r\n            参数值的映射。\r\n","java.util.Formatter.Formatter(java.lang.String, java.lang.String, java.util.Locale)":"java.util.formatter.formatter（java.lang.string，java.lang.string，java.util.locale）\r\n","java.util.TreeSet.size()":"java.util.treeset.size（）\r\n","java.util.BitSet.cardinality()":"java.util.bitset.cardinality（）\r\n","Constructs a <code>SQLRecoverableException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlrecoverableException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","The interface for an Elliptic Curve (EC) public key.":"椭圆曲线（EC）公钥的接口。\r\n","if a problem occurs accessing the database.\n":"如果发生问题时访问数据库。\r\n\r\n","java.sql.DatabaseMetaData.importedKeyCascade":"java.sql.databasemetadata.importedkeycascade\r\n","java.security.SignatureSpi.clone()":"java.security.signaturespi.clone（）\r\n","java.util.concurrent.ConcurrentHashMap.replace(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrenthashmap.replace（java.lang.object，java.lang.object）\r\n","Returns if this ":"如果此返回\r\n","java.security.acl.AclEntry.setPrincipal(java.security.Principal)":"java.security.acl.aclentry.setprincipal（java.security.principal）\r\n","The class fingerprint that is set to indicate\n            serialization compatibility with a previous\n            version of the class.":"设定的类指纹\r\n            与以前的序列化兼容性\r\n            班级的版本。\r\n","java.sql.ResultSetMetaData.getColumnTypeName(int)":"java.sql.ResultSetMetadata.getColumnTypename（int）\r\n","java.time.zone.ZoneRules.getTransitionRules()":"java.time.zone.zonerules.getTransitionrules（）\r\n","java.sql.DriverManager":"Java.sql.Drivermanager\r\n","java.util.Calendar.isSet(int)":"java.util.calendar.isset（int）\r\n","Returns the constructed ID for this savepoint.":"返回此保存点的构造ID。\r\n","java.text.DateFormat.getTimeInstance(int)":"java.text.dateformat.getTimeInstance（int）\r\n","java.sql.PreparedStatement.setFloat(int, float)":"java.sql.preparedstatement.setfloat（int，float）\r\n","java.util.Collections.emptySet()":"java.util.collections.emptyset（）\r\n","Enumeration of the style of text formatting and parsing.":"文本格式和解析风格的列举。\r\n","java.text.DateFormat.setLenient(boolean)":"java.text.dateformat.setlenient（boolean）\r\n","java.text.DecimalFormat.setPositiveSuffix(java.lang.String)":"java.text.decimalformat.setpositivesuffix（java.lang.string）\r\n"," value between ":" 之间的值\r\n","java.security.cert.X509CertSelector.getSubjectPublicKey()":"java.security.cert.x509certselector.getSubjectPublicKey（）\r\n","Parses text from the beginning of the given string to produce a date.":"从给定字符串的开头解析文本以产生日期。\r\n","java.util.ConcurrentModificationException.ConcurrentModificationException(java.lang.String, java.lang.Throwable)":"java.util.concurrentmodificationException.concurrentModificationException（java.lang.string，java.lang.thrang.throwable）\r\n","Returns the certification path that was being validated when\n            the exception was thrown.":"返回验证的认证路径\r\n            抛出了例外。\r\n","java.nio.file.Files.isHidden(java.nio.file.Path)":"java.nio.file.files.ishidden（java.nio.file.path）\r\n","java.nio.file.WatchEvent":"java.nio.file.watchevent\r\n","java.util.SimpleTimeZone.WALL_TIME":"java.util.simpletimezone.wall_time\r\n","java.text.Collator.TERTIARY":"java.text.collat​​or.tertiary\r\n","Indicates that a <code>NULL</code> value is allowed for this\n            data type.":"指示为此允许<code> null </code>值\r\n            数据类型。\r\n","Returns the most significant 64 bits of this UUID's 128 bit value.":"返回该UUID 128位值中最重要的64位。\r\n","java.text.ParsePosition.getErrorIndex()":"java.text.parseposition.getErrorIndex（）\r\n","Constructs an InvalidKeyException with the specified detail\n            message.":"用指定的详细信息构建无效的keexecception\r\n            信息。\r\n","java.security.cert.CertPathBuilderSpi.engineGetRevocationChecker()":"java.security.cert.certpathbuilderspi.enginegetrevocation checker（）\r\n","Marks the hour part of a date (1-12).":"标记日期（1-12）的小时部分。\r\n","java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)":"java.security.cert.certificatefactory.generatecertificate（java.io.inputstream）\r\n","Returns an iterator over the elements in this set.":"返回该集合中元素的迭代器。\r\n","#MONTH":"＃月\r\n","if an identity with the same key already exists.\n":"如果已经存在具有相同密钥的身份。\r\n\r\n","Gets the designated column's table name.":"获取指定的列的表名。\r\n","This class provides skeletal implementations of some ":"该课程提供了一些的骨骼实现\r\n","This class represents a \"provider\" for the\n            Java Security API, where a provider implements some or all parts of\n            Java Security.":"该课程代表了\r\n            Java Security API，提供商在其中实施了某些或所有部分\r\n            Java安全。\r\n","java.util.Collections.singletonMap(java.lang.Object, java.lang.Object)":"java.util.collections.singletonmap（java.lang.object，java.lang.object）\r\n","if there are no previous elements.":"如果没有以前的元素。\r\n","java.sql.SQLDataException.SQLDataException(java.lang.Throwable)":"java.sql.sqldataexception.sqldataexception（java.lang.throwable）\r\n","if the specified element is null\n":"如果指定的元素为null\r\n\r\n","Returns the listener associated with the proxy.":"返回与代理关联的侦听器。\r\n","java.util.Collections.checkedSortedSet(java.util.SortedSet, java.lang.Class)":"Java.util.Collections.CheckedSortedSet（Java.util.SortedSet，Java.lang.class）\r\n","java.security.Identity.identityEquals(java.security.Identity)":"Java.Security.Identity.IdentityEquals（Java.Security.Identity）\r\n","This is an exception that is thrown whenever an attempt is made to delete\n            the last owner of an Access Control List.":"这是一个例外，只要尝试删除\r\n            访问控制列表的最后所有者。\r\n","java.security.cert.X509CertSelector.setPolicy(java.util.Set)":"java.security.cert.x509certselector.setpolicy（java.util.set）\r\n","Finds and returns the next complete token from this scanner.":"从该扫描仪中找到并返回下一个完整的令牌。\r\n","Indicates that the column stores OUT parameters.":"指示该列存储参数。\r\n","This defines the point at infinity.":"这定义了无穷大的点。\r\n","java.util.BitSet.flip(int)":"java.util.bitset.flip（int）\r\n"," is an abstract class for date/time formatting subclasses which\n            formats and parses dates or time in a language-independent manner.":" 是日期/时间格式子类的抽象类\r\n            格式和解析日期或时间独立于语言的方式。\r\n","A task that can be scheduled for one-time or repeated execution by a Timer.":"可以安排一次或重复执行计时器的任务。\r\n","java.util.concurrent.CopyOnWriteArrayList.iterator()":"java.util.concurrent.copyonwritearraylist.iterator（）\r\n","java.sql.SQLTransientException.SQLTransientException()":"java.sql.sqltransientException.sqltransientException（）\r\n","Returns a key-value mapping associated with the least\n            key in this map, or ":"返回至少关联的键值映射\r\n            此地图中的键或\r\n","java.security.UnrecoverableKeyException.UnrecoverableKeyException()":"java.security.unrecoverableykeyexception.unrecoverableykeyexception（）\r\n","An attribute associated with a PKCS12 keystore entry.":"与PKCS12密钥库条目关联的属性。\r\n"," and related methods, whether or not\n            already completed.":" 和相关方法，无论是否\r\n            已经完成。\r\n","java.util.Arrays.fill(long[], long)":"java.util.arrays.fill（long []，long）\r\n","Do not use":"不使用\r\n","Gets the time zone. -or- Sets the time zone with the given time zone value.":"获取时区。 - 或 - 设置给定时区值的时区。\r\n","Retrieves whether this database treats mixed case unquoted SQL identifiers as\n            case insensitive and stores them in mixed case.":"检索该数据库是否将混合情况视为未引用的SQL标识符为\r\n            案例不敏感并将其存储在混合情况下。\r\n","Returns the root of the current computation; i.":"返回当前计算的根；一世。\r\n","nbits-1":"NBITS-1\r\n","Marks the hour of the day part of a date (0-11).":"标记日期（0-11）一天的时间。\r\n","Synthesizes a localized pattern string that represents the current\n            state of this Format object.":"合成一个代表当前的局部模式字符串\r\n            此格式对象的状态。\r\n","Constructs a <code>SQLTransactionRollbackException</code> object.":"构造<code> sqltransactionRollbackexception </code>对象。\r\n","Returns the value of the attribute, which may be null.":"返回属性的值，可能为null。\r\n","Get the negative prefix. -or- Set the negative prefix.":"获取负前缀。 - 或设置负前缀。\r\n"," attributes in the\n ":" 属性\r\n \r\n","Inserts the specified element at the end of this deque.":"在此Deque的末尾插入指定元素。\r\n","Does this transition represent an overlap in the local time-line.":"这种过渡是否代表本地时间表的重叠。\r\n"," is not present in this scope.\n":" 在此范围中不存在。\r\n\r\n"," is not recognized.\n":" 未被认可。\r\n\r\n","java.security.spec.ECPublicKeySpec.getW()":"java.security.spec.ecpublickeyspec.getw（）\r\n","java.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption)":"java.nio.file.files.newoutputstream（java.nio.file.path，java.nio.file.openoption）\r\n","Returns an unmodifiable list containing six elements.":"返回包含六个元素的不可变化列表。\r\n","java.sql.DatabaseMetaData.sqlStateSQL99":"java.sql.databasemetadata.sqlstatesql99\r\n","The ISO-like date-time formatter that formats or parses a date-time with\n            the offset and zone if available, such as '2011-12-03T10:15:30',\n            '2011-12-03T10:15:30+01:00' or '2011-12-03T10:15:30+01:00[Europe/Paris]'.":"格式或解析日期时间的类似ISO的日期时间格式\r\n            如果有的话，偏移和区域，例如'2011-12-03T10：15：30'，，\r\n            '2011-12-03T10：15：30+01：00'或'2011-12-03T10：15：30+01：00 [欧洲/巴黎]'。\r\n","Returns a string explaining why the input string was rejected.":"返回一个字符串，说明为什么输入字符串被拒绝。\r\n","Sets the daylight saving time end rule.":"设置日光节省时间端规则。\r\n","java.text.Bidi.isLeftToRight()":"java.text.bidi.islefttoright（）\r\n","if a problem occurred while writing to the stream.":"如果在写入流时发生了问题。\r\n","java.security.acl.Group.isMember(java.security.Principal)":"java.security.acl.group.ismember（java.security.principal）\r\n",", exclusive.":"， 独家的。\r\n","Returns a (possibly empty) collection view of the CRLs read\n            from the given input stream ":"返回CRL的（可能为空的）收集视图\r\n            从给定的输入流\r\n","java.util.Formatter.flush()":"java.util.formatter.flush（）\r\n"," that encodes using the\n            <a href=\"#url\">URL and Filename safe</a> type base64\n            encoding scheme.":" 使用\r\n            <a href=\"#url\"> url和文件名安全</a>键入base64\r\n            编码方案。\r\n","java.text.DecimalFormat.getPositivePrefix()":"java.text.decimalformat.getPosivePrefix（）\r\n","Sixteen-bit UCS Transformation Format, little-endian byte order":"16位UCS转换格式，小型字节订单\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.String, java.lang.Throwable)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.string，java.lang.throwable）\r\n","Returns an unmodifiable list containing five elements.":"返回包含五个元素的不可变化列表。\r\n","if an invalid key is detected.":"如果检测到无效的键。\r\n"," from the string standard representation as\n            described in the ":" 从字符串标准表示为\r\n            描述\r\n","java.util.Calendar.getCalendarType()":"java.util.calendar.getcalendartype（）\r\n","if errors occur on signatures.\n":"如果签名发生错误。\r\n\r\n","java.security.SignedObject.SignedObject(java.io.Serializable, java.security.PrivateKey, java.security.Signature)":"java.security.signedObject.signedObject（java.io.serializable，java.security.privatekey，java.security.signature）\r\n","Retrieves the signature on the signed object, in the form of a\n            byte array.":"以a的形式检索签名对象上的签名\r\n            字节阵列。\r\n","java.time.temporal.ChronoUnit":"Java.Time.Temporal.ChronOnit\r\n","java.security.cert.CertPathBuilder.getInstance(java.lang.String)":"java.security.cert.certpathbuilder.getinstance（java.lang.string）\r\n","An object that maps keys to values.":"将键映射到值的对象。\r\n","Inserts the specified element at the front of this deque unless it would\n            violate capacity restrictions.":"插入指定的元素在该Deque的前部，除非\r\n            违反能力限制。\r\n","PosixFilePermission":"posixfilepermission\r\n","java.security.spec.DSAPrivateKeySpec.getQ()":"java.security.spec.dsaprivatekeyspec.getq（）\r\n","a list defines java class format\n":"列表定义Java类格式\r\n\r\n","Updates a file's last modified time attribute.":"更新文件的最后修改时间属性。\r\n","Unchecked exception thrown when no support is available\n            for a requested charset.":"当没有支持时，未选中的例外\r\n            对于请求的Charset。\r\n","java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)":"java.util.linkedhashmap.linkedhashmap（int，float，boolean）\r\n","Returns the match result of the last scanning operation performed\n            by this scanner.":"返回执行最后一次扫描操作的比赛结果\r\n            通过这个扫描仪。\r\n","java.sql.SQLTimeoutException.SQLTimeoutException(java.lang.String, java.lang.String)":"java.sql.sqltimeoutexception.sqltimeoutexception（java.lang.string，java.lang.string）\r\n","java.text.Bidi.getBaseLevel()":"java.text.bidi.getBaselevel（）\r\n","Returns the DNS name of the LDAP server.":"返回LDAP服务器的DNS名称。\r\n","Parses text from the beginning of the given string to produce an object\n            array.":"从给定字符串的开头解析文本以产生一个对象\r\n            大批。\r\n","The mapping in the Java programming language of an SQL <code>REF</code>\n            value, which is a reference to an SQL structured type value in the database.":"SQL <code> Ref </code>的Java编程语言中的映射\r\n            值，这是对数据库中SQL结构类型值的引用。\r\n","Converts the given URI to a ":"将给定的URI转换为\r\n","Retrieves the update count for each update statement in the batch\n            update that executed successfully before this exception occurred.":"检索批处理中每个更新语句的更新计数\r\n            在此异常发生之前成功执行的更新。\r\n","java.security.NoSuchProviderException.NoSuchProviderException(java.lang.String)":"java.security.nosuchproviderexception.nosuchproviderexception（java.lang.string）\r\n"," and its standard capacity increment is\n            zero.":" 它的标准容量增加是\r\n            零。\r\n"," second argument.":" 第二个参数。\r\n","java.util.Collections.synchronizedNavigableMap(java.util.NavigableMap)":"java.util.collections.synchronizednavigablemap（java.util.navigableMap）\r\n","java.util.BitSet.valueOf(long[])":"java.util.bitset.valueof（long []）\r\n","s in this certification\n            path.":"在此认证中\r\n            小路。\r\n","java.sql.Date.Date(long)":"java.sql.date.date（long）\r\n","Returns whether there are more elements to iterate.":"返回是否有更多迭代元素。\r\n",",\n            exclusive.":"，，，，\r\n            独家的。\r\n","java.util.concurrent.ConcurrentHashMap.mappingCount()":"java.util.concurrent.concurrenthashmap.mappingcount（）\r\n","The number of distinct fields recognized by <code>get</code> and <code>set</code>.":"<code> get </code>和<code> set </code>识别的不同字段的数量。\r\n","java.util.concurrent.ConcurrentSkipListMap.remove(java.lang.Object, java.lang.Object)":"java.util.concurrent.concurrentskiplistmap.remove（java.lang.object，java.lang.object）\r\n","Returns the name of this locale's language, localized to ":"返回该语言语言的名称，本地化为\r\n","Creates an elliptic curve characteristic 2 finite\n            field which has 2^":"创建椭圆曲线特征2有限\r\n            具有2^的字段\r\n","java.text.DecimalFormatSymbols.getInfinity()":"java.text.decimalformatsymbols.getinfinity（）\r\n","Returns an enumeration of all the keys in this property list,\n            including distinct keys in the default property list if a key\n            of the same name has not already been found from the main\n            properties list.":"返回此属性列表中所有键的枚举，\r\n            如果键\r\n            同名尚未从主机上找到\r\n            属性列表。\r\n","java.sql.ResultSet.updateTime(java.lang.String, java.sql.Time)":"java.sql.Resultset.updateTime（java.lang.string，java.sql.time）\r\n","java.util.Calendar.getDisplayNames(int, int, java.util.Locale)":"java.util.calendar.getdisplaynames（int，int，java.util.locale）\r\n","s to be used in finding\n            certificates and CRLs.":"S用于查找\r\n            证书和CRL。\r\n","Marker interface used by ":"标记接口由\r\n","The ISO date formatter that formats or parses a date without an\n            offset, such as '2011-12-03'.":"格式或解析日期的ISO日期格式\r\n            偏移，例如“ 2011-12-03”。\r\n"," with the specified initial\n            capacity and the default load factor (0.":" 指定的初始\r\n            容量和默认负载因子（0。\r\n","Constructs a <code>SQLWarning</code> object\n            with a given  <code>cause</code>.":"构造<code> sqlwarning </code>对象\r\n            使用给定的<code>原因</code>。\r\n","Return the tertiary component of a collation element.":"返回整理元件的三级组件。\r\n","java.util.concurrent.ConcurrentHashMap.searchKeys(long, java.util.function.Function)":"java.util.concurrent.concurrenthashmap.searchkeys（long，java.util.function.function.function）\r\n","java.util.Arrays.parallelSort(double[], int, int)":"java.util.arrays.parallelsort（double []，int，int）\r\n","A selector that defines a set of criteria for selecting ":"定义一组选择标准的选择器\r\n","Initiates an orderly shutdown in which previously submitted\n            tasks are executed, but no new tasks will be accepted.":"启动有序关闭，以前提交\r\n            执行任务，但不会接受新任务。\r\n","Returns 0 if the arguments are identical and ":"如果参数相同，则返回0\r\n","Returns a new CompletionStage that is already completed\n            exceptionally with the given exception and supports only those\n            methods in interface ":"返回已经完成的新的完整舞台\r\n            异常具有给定的例外，仅支持那些\r\n            接口中的方法\r\n","Allocates a <code>Date</code> object and initializes it so that\n            it represents midnight, local time, at the beginning of the day\n            specified by the <code>year</code>, <code>month</code>, and\n            <code>date</code> arguments.":"分配<code> date </code>对象并初始化它，以便\r\n            它代表午夜，当地时间，一天开始时\r\n            由<code>年度</code>，<code>月</code>和\r\n            <code>日期</code>参数。\r\n"," is not a valid parameter for this ":" 不是这样的有效参数\r\n","Retrieves whether this database uses a file for each table.":"检索该数据库是否为每个表使用文件。\r\n","Maps the given <code>ResultSet</code> column label to its\n            <code>ResultSet</code> column index.":"将给定的<code> Resultset </code>列标签映射到其\r\n            <code> Resultset </code>列索引。\r\n","Sets the given calendar field value and the time value\n            (millisecond offset from the <a href=\"#Epoch\">Epoch</a>) of\n            this <code>Calendar</code> undefined.":"设置给定的日历字段值和时间值\r\n            （毫秒偏移<a href=\"#epoch\"> epoch </a>）\r\n            此<code>日历</code>未定义。\r\n","java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path, java.util.Set)":"java.nio.file.files.setposixfilepermissions（java.nio.file.path，java.util.set）\r\n","java.security.cert.PKIXCertPathValidatorResult.PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)":"java.security.cert.pkixcertpathvalidatoresult.pkixcertpathvalidatoresult（java.security.cert.cert.trustanchor，java.security.cert.cert.cert.policynode，java.security.publickey）\r\n","java.security.spec.ECPrivateKeySpec.getParams()":"java.security.spec.ecprivatekeyspec.getParams（）\r\n","java.util.Arrays.fill(short[], int, int, short)":"java.util.arrays.fill（短[]，int，int，short）\r\n","java.security.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)":"java.security.keypairgeneratorspi.initialize（int，java.security.securerandom）\r\n","Obtains a fixed value range.":"获得固定值范围。\r\n","java.util.Arrays.setAll(int[], java.util.function.IntUnaryOperator)":"java.util.arrays.setall（int []，java.util.function.intunaryoperator）\r\n","\n            method of the given ":"\r\n            给定的方法\r\n","java.nio.charset.spi.CharsetProvider.CharsetProvider()":"Java.nio.Charset.spi.CharsetProvider.CharsetProvider（）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a\n            <code>java.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为一个\r\n            <code> Java。\r\n","location":"地点\r\n","if a database error occurs.":"如果发生数据库错误。\r\n","Sets the position to getBeginIndex() and returns the character at that\n            position.":"设置getBeginIndex（）的位置并在该角色返回该字符\r\n            位置。\r\n","Appends the time-zone region ID, such as 'Europe/Paris', to the formatter,\n            rejecting the zone ID if it is a ":"将时区域ID（例如“欧洲/巴黎”）附加到格式\r\n            如果是一个区域ID，则拒绝区域ID\r\n","java.sql.SQLClientInfoException.SQLClientInfoException(java.util.Map, java.lang.Throwable)":"java.sql.sqlclientinfoexception.sqlclientinfoexception（java.util.map，java.lang.lang.throwable）\r\n","java.util.Arrays.sort(java.lang.Object[], java.util.Comparator)":"java.util.arrays.sort（java.lang.object []，java.util.comparator）\r\n","Constructs a <code>SQLRecoverableException</code> object\n             with a given <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"构造<code> sqlrecoverableException </code>对象\r\n             使用给定的<code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Retrieves whether this database treats mixed case quoted SQL identifiers as\n            case insensitive and stores them in mixed case.":"检索该数据库是否将混合案例视为SQL标识符为\r\n            案例不敏感并将其存储在混合情况下。\r\n","java.security.acl.AclEntry.addPermission(java.security.acl.Permission)":"java.security.acl.aclentry.addpermission（java.security.acl.permission）\r\n","java.sql.SQLOutput.writeArray(java.sql.Array)":"java.sql.sqloutput.writearray（java.sql.array）\r\n","Converts a string in JDBC date escape format to\n            a <code>Date</code> value.":"将JDBC日期逃生格式的字符串转换为\r\n            <code>日期</code>值。\r\n","java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(java.lang.Object, int)":"java.util.concurrent.copyonwritearraylist.lastindexof（java.lang.object，int）\r\n","java.security.AlgorithmParameterGenerator.getInstance(java.lang.String, java.security.Provider)":"java.security.algorithmparametergenerator.getInstance（java.lang.string，java.security.provider）\r\n","Assigns the specified double value to each element of the specified\n            array of doubles.":"将指定的双重值分配给指定的每个元素\r\n            双打阵列。\r\n","java.util.EnumSet.of(java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum)":"java.util.enumset.of（java.lang.enum，java.lang.enum，java.lang.enum，java.lang.enum，java.lang.enum）\r\n","java.text.DateFormatSymbols.getAmPmStrings()":"java.text.dateformatsymbols.getAmpMsrings（）\r\n","java.util.Calendar.clear(int)":"java.util.calendar.clear（int）\r\n","java.security.cert.X509CertSelector.setSubjectAlternativeNames(java.util.Collection)":"java.security.cert.x509certselector.setsubjectalternativivianames（java.util.collection）\r\n","period <= 0":"周期<= 0\r\n","java.util.concurrent.ConcurrentHashMap.elements()":"java.util.concurrent.concurrenthashmap.elements（）\r\n","Returns a copy of this formatter with a new locale.":"返回带有新语言环境的格式化器的副本。\r\n","Null order which indicates the end of string is reached by the\n            cursor.":"指示字符串末端的空顺序由\r\n            光标。\r\n","Creates a <em><a href=\"Spliterator.":"创建a <em> <a href =“剪接器。\r\n","Retrieves whether this database supports <code>ALTER TABLE</code>\n            with add column.":"检索此数据库是否支持<code> Alter Table </code>\r\n            使用添加列。\r\n"," holds for\n            each task or an (unchecked) exception is encountered, in which\n            case the exception is rethrown.":" 坚持\r\n            遇到每个任务或（未选中的）例外，其中\r\n            案例例外是复杂的。\r\n","keystore.type":"keystore.type\r\n","A task that returns a result and may throw an exception.":"返回结果并可能引发异常的任务。\r\n","An exception that provides information on  database access\n            warnings.":"提供有关数据库访问信息的例外\r\n            警告。\r\n","Certificate Encoding Exception.":"证书编码异常。\r\n","java.nio.file.attribute.FileAttribute.value()":"java.nio.file.attribute.fileattribute.value（）\r\n","java.util.IllformedLocaleException.IllformedLocaleException(java.lang.String)":"java.util.illformedlocaleexception.illformedlocaleexception（java.lang.string）\r\n","FutureTask":"未来\r\n","java.security.KeyPairGenerator.getProvider()":"java.security.keypairgenerator.getProvider（）\r\n","java.nio.file.Path.toString()":"java.nio.file.path.tostring（）\r\n","Sets the SQL cursor name to the given <code>String</code>, which\n            will be used by subsequent <code>Statement</code> object\n            <code>execute</code> methods.":"将SQL光标名称设置为给定的<code>字符串</code>，\r\n            将通过后续<code>语句</code>对象使用\r\n            <code>执行</code>方法。\r\n","java.time.format.DateTimeFormatter.ISO_ZONED_DATE_TIME":"java.time.format.datetimeformatter.iso_zoned_date_time\r\n","java.time.format.DateTimeFormatterBuilder.appendOptional(java.time.format.DateTimeFormatter)":"java.time.format.datetimeformatterbuilder.appendoptional（java.time.format.datetimeformatter）\r\n","java.util.Scanner.hasNextBigInteger()":"java.util.scanner.hasnextbiginteger（）\r\n","formatToCharacterIterator()":"formattocharacterator（）\r\n","This is the exception for invalid or inappropriate algorithm parameters.":"这是无效或不适当算法参数的例外。\r\n","Returns the parameters encoded in the specified format.":"返回以指定格式编码的参数。\r\n","java.util.SimpleTimeZone.SimpleTimeZone(int, java.lang.String)":"java.util.simpletimezone.simpletimezone（int，java.lang.string）\r\n","Skips input that matches the specified pattern, ignoring delimiters.":"跳过与指定模式相匹配的输入，忽略了定界数。\r\n","If a value is present, apply the provided mapping function to it,\n            and if the result is non-null, return an ":"如果存在一个值，请将提供的映射函数应用于该功能，\r\n            如果结果是非无效的，请返回\r\n","java.sql.PreparedStatement.setClob(int, java.sql.Clob)":"java.sql.preparedstatement.setClob（int，java.sql.clob）\r\n","java.security.DigestException.DigestException(java.lang.String, java.lang.Throwable)":"java.security.digestexception.digestexception（java.lang.string，java.lang.throwable）\r\n","java.security.spec.EllipticCurve.getA()":"java.security.spec.ellipticcurve.geta（）\r\n","java.util.Calendar.getInstance(java.util.TimeZone)":"java.util.calendar.getinstance（java.util.timezone）\r\n","Returns the keyUsage criterion.":"返回键盘标准。\r\n","Constructs a CRLException with the specified detail\n            message.":"用指定的细节构造trlexception\r\n            信息。\r\n","java.sql.SQLTransactionRollbackException.SQLTransactionRollbackException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqltransactionrollbackexception.sqltransactionrollbackexception（java.lang.string，java.lang.string，java.lang.lang.throwable）\r\n","java.util.ResourceBundle.parent":"java.util.resourcebundle.parent\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.String, java.lang.Throwable)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.string，java.lang.thrang.throwable）\r\n","For the columns <code>UPDATE_RULE</code>\n            and <code>DELETE_RULE</code>, indicates that\n            if the primary key is updated or deleted, the foreign key (imported key)\n            is set to the default value.":"对于列<code> update_rule </code>\r\n            和<code> delete_rule </code>，指示\r\n            如果主键已更新或删除，则为外键（导入密钥）\r\n            设置为默认值。\r\n","Returns an array containing all of the elements in this list in\n            proper sequence (from first to last element); the runtime type of\n            the returned array is that of the specified array.":"返回包含此列表中所有元素的数组\r\n            正确的序列（从第一个到最后一个元素）；运行时类型的\r\n            返回的数组是指定数组的数组。\r\n","java.sql.DatabaseMetaData.bestRowPseudo":"java.sql.databasemetadata.bestrowpseudo\r\n","Returns the DSA key parameters.":"返回DSA密钥参数。\r\n","java.util.Stack.search(java.lang.Object)":"java.util.stack.search（java.lang.Object）\r\n","Creates an enum set with the same element type as the specified enum\n            set, initially containing the same elements (if any).":"创建与指定枚举相同元素类型的枚举集\r\n            设置，最初包含相同的元素（如果有）。\r\n","java.security.interfaces.ECPrivateKey.serialVersionUID":"java.security.interfaces.ecprivatekey.serialversionuid\r\n","java.util.concurrent.Executors.newScheduledThreadPool(int)":"java.util.concurrent.executors.newscheduledthreadpool（int）\r\n","java.security.cert.CertStoreException":"java.security.cert.certstoreexception\r\n","java.util.Calendar.getTimeZone()":"java.util.calendar.getTimeZone（）\r\n","java.sql.DataTruncation.getTransferSize()":"java.sql.datatruncation.getTransFersize（）\r\n","java.security.cert.PKIXCertPathChecker.clone()":"java.security.cert.pkixcertpathchecker.clone（）\r\n","Undoes all changes made after the given <code>Savepoint</code> object\n            was set.":"撤消给定<code> Savepoint </code>对象后所做的所有更改\r\n            被设置了。\r\n","Returns the monetary decimal separator. -or- Sets the monetary decimal separator.":"返回货币十进制分离器。 - 或设置货币十进制分离器。\r\n","if the specified parameters are not supported.\n":"如果不支持指定的参数。\r\n\r\n","Returns the prime.":"返回素数。\r\n","java.security.cert.X509CRLEntry.getCertificateIssuer()":"java.security.cert.x509crlentry.getCertificateIssuer（）\r\n","Iterator":"迭代器\r\n"," if no\n            values have been recorded":" 如果不\r\n            值已记录\r\n","The timestamp value associated with this UUID.":"与此UUID相关的时间戳值。\r\n","java.sql.DriverManager.setLoginTimeout(int)":"java.sql.drivermanager.setlogintimeout（int）\r\n","java.sql.DatabaseMetaData.getExportedKeys(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getexportedkeys（java.lang.string，java.lang.string，java.lang.string）\r\n","Retrieves whether this database supports the given concurrency type\n            in combination with the given result set type.":"检索此数据库是否支持给定的并发类型\r\n            结合给定的结果集类型。\r\n","if other I/O exception happens\n":"如果其他I/O例外发生\r\n\r\n","Formatter formatter":"格式格式\r\n","Queries if the given ":"查询如果给定\r\n","Gets an immutable collection of issuer alternative names from the\n            ":"从中获得不变的发行人替代名称的收集\r\n            \r\n","java.util.Scanner.hasNextShort(int)":"java.util.scanner.hasnextshort（int）\r\n","java.util.List.listIterator(int)":"java.util.list.listiterator（int）\r\n","java.security.Provider.put(java.lang.Object, java.lang.Object)":"java.security.provider.put（java.lang.Object，java.lang.object）\r\n","java.sql.CallableStatement.getObject(int)":"java.sql.callablestatement.getObject（int）\r\n"," value between zero\n            (inclusive) and one (exclusive).":" 零之间的值\r\n            （包含）和一个（独家）。\r\n","Adds an owner.":"添加一个所有者。\r\n","java.security.InvalidParameterException.InvalidParameterException()":"java.security.invalidparameterexception.invalidparameterexception（）\r\n","Creates a new SecureClassLoader using the default parent class\n            loader for delegation.":"使用默认父类创建新的SecureClassLoader\r\n            委托的加载程序。\r\n","java.sql.ResultSetMetaData.isNullable(int)":"java.sql.ResultsetMetadata.isnullable（int）\r\n","cerPath":"CerPath\r\n","This class represents a storage facility for cryptographic\n            keys and certificates.":"该课程代表了密码学的存储设施\r\n            钥匙和证书。\r\n","java.util.BitSet.length()":"java.util.bitset.length（）\r\n","Assigns the given key (that has already been protected) to the given\n            alias.":"将给定键（已经受到保护）分配给给定\r\n            别名。\r\n","Compares this <code>RowId</code> to the specified object.":"将此<code> rowID </code>与指定的对象进行比较。\r\n","Retrieves whether <code>NULL</code> values are sorted high.":"检索<code> null </code>值是否为高分。\r\n","java.util.Scanner.skip(java.util.regex.Pattern)":"java.util.scanner.skip（java.util.regex.pattern）\r\n","Imports the parameters from ":"从\r\n","java.time.temporal.ValueRange.getSmallestMaximum()":"java.time.temporal.valuerange.getSmallestMaximum（）\r\n","Attempts to make a database connection to the given URL.":"尝试将数据库连接到给定的URL。\r\n","Returns the estimated number of CompletableFutures whose\n            completions are awaiting completion of this CompletableFuture.":"返回估计的完整图数\r\n            完整正在等待完成此完整未来的完成。\r\n","java.security.SignatureException.SignatureException(java.lang.String)":"java.security.signatureexception.signatureexception（java.lang.string）\r\n","Sets the designated parameter to the given\n            <code>java.":"将指定的参数设置为给定\r\n            <code> Java。\r\n","if the entry can not be deleted.\n":"如果无法删除条目。\r\n\r\n",". -or- Sets the issuer criterion.":"。 - 或设置发行人标准。\r\n","java.nio.file.InvalidPathException.getIndex()":"java.nio.file.invalidpathexception.getIndex（）\r\n","Submits a batch of commands to the database for execution and\n            if all commands execute successfully, returns an array of update counts.":"向数据库提交一批命令，以进行执行和\r\n            如果所有命令成功执行，请返回更新数组。\r\n","Returns the encoded form of this certification path, using the default\n            encoding.":"使用默认值返回此认证路径的编码形式\r\n            编码。\r\n","java.util.GregorianCalendar.getGreatestMinimum(int)":"java.util.gregoriancalendar.getgreatestminemine（int）\r\n","java.util.concurrent.ForkJoinWorkerThread":"java.util.concurrent.forkjoinworkerthread\r\n","Parses text from the beginning of the given string to produce a number.":"从给定字符串的开头解析文本以产生一个数字。\r\n","Returns the value to which the specified key is mapped,\n            or the given defaultValue if this map contains no mapping for the key.":"返回指定密钥映射的值，\r\n            或给定的默认值如果此映射不包含密钥的映射。\r\n","Returns a list of string functions available with the database.":"返回数据库中可用的字符串功能列表。\r\n"," (exclusive) to the specified value.":" （独家）指定值。\r\n","java.nio.file.attribute.PosixFileAttributeView.setGroup(java.nio.file.attribute.GroupPrincipal)":"java.nio.file.attribute.posixfileattributeview.setGroup（java.nio.file.attribute.groupiprincipal）\r\n","A tagging interface that all event listener interfaces must extend.":"所有事件侦听器接口必须扩展的标记接口。\r\n","java.text.AttributedCharacterIterator.getRunStart(java.util.Set)":"java.text.AttributedCharacterator.getRunstart（java.util.set）\r\n"," implementation for use with enum type keys.":" 实现用于枚举类型密钥。\r\n"," object containing all client info properties.":" 包含所有客户端信息属性的对象。\r\n","This class represents the successful result of the PKIX certification\n            path validation algorithm.":"该课程代表了PKIX认证的成功结果\r\n            路径验证算法。\r\n","java.util.Scanner.next()":"java.util.scanner.next（）\r\n","java.util.concurrent.ConcurrentSkipListMap.lastEntry()":"java.util.concurrent.concurrentskiplistmap.lastentry（）\r\n"," if this\n            Spliterator is ":" 如果这\r\n            拆分器是\r\n","where":"在哪里\r\n","Sets the designated parameter to the given Java <code>byte</code> value.":"将指定的参数设置为给定的Java <code>字节</code>值。\r\n","if an error occurs accessing the database or if the statement\n             produces anything other than a single ":"如果发生错误访问数据库或语句\r\n             除了单一以外的任何东西\r\n","java.util.Base64.getUrlEncoder()":"java.util.base64.geturlencoder（）\r\n","java.util.TimeZone.getOffset(long)":"java.util.timezone.getOffset（long）\r\n","java.sql.DatabaseMetaData.supportsBatchUpdates()":"java.sql.databasemetadata.supportsbatchupdates（）\r\n","Removes all of the mappings from this map (optional operation).":"删除此地图（可选操作）中的所有映射。\r\n","java.security.Key":"java.security.key\r\n","Creates a <code>CallableStatement</code> object that will generate\n            <code>ResultSet</code> objects with the given type and concurrency.":"创建<code> CallableStatement </code>将生成的对象\r\n            <code> resultset </code>具有给定类型和并发的对象。\r\n","A file attribute view that supports reading or updating a file's Access\n            Control Lists (ACL) or file owner attributes.":"支持读取或更新文件的访问的文件属性视图\r\n            控制列表（ACL）或文件所有者属性。\r\n","java.sql.Types.NCLOB":"java.sql.types.nclob\r\n","java.security.spec.MGF1ParameterSpec.SHA256":"java.security.spec.mgf1parameterspec.sha256\r\n","java.sql.SQLXML.setResult(java.lang.Class)":"java.sql.sqlxml.setresult（java.lang.class）\r\n","A scalable concurrent ":"可扩展的并发\r\n"," if this set is empty.":" 如果此组为空。\r\n","Callable":"可召唤\r\n","Returns general information previously specified for this identity. -or- Specifies a general information string for this identity.":"返回先前为此身份指定的一般信息。 - 或 - 指定此身份的一般信息字符串。\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java，java。 lang.Object，java.lang.object，java.lang.object，java.lang.object，java.lang.object）\r\n","SecureDirectoryStream":"SecuredirectoryStream\r\n","java.util.Calendar.DAY_OF_WEEK_IN_MONTH":"java.util.calendar.day_of_week_in_month\r\n","Constructs a new <code>EmptyStackException</code> with ":"构建一个新的<code> emptystackexception </code>\r\n","java.sql.SQLDataException":"java.sql.sqldataexception\r\n"," has more elements.":" 有更多的元素。\r\n","Creates a new ECPublicKeySpec with the specified\n            parameter values.":"用指定的\r\n            参数值。\r\n","java.security.SignatureSpi.engineSetParameter(java.lang.String, java.lang.Object)":"java.security.signaturespi.EnginesetParameter（java.lang.string，java.lang.object）\r\n","Returns an estimate of the number of threads that are currently\n            stealing or executing tasks.":"返回当前线程数量的估计值\r\n            窃取或执行任务。\r\n","java.util.concurrent.ForkJoinTask.getForkJoinTaskTag()":"java.util.concurrent.forkjointask.getforkjointasktag（）\r\n","A hash table supporting full concurrency of retrievals and\n            high expected concurrency for updates.":"一张哈希表，支持全面的检索和\r\n            更新的高期望并发。\r\n","Gets the calendar associated with this date/time formatter. -or- Set the calendar to be used by this date format.":"获取与此日期/时间格式的日历相关联。 - 或设置该日期格式要使用的日历。\r\n"," interface, backed by a hash table\n            (actually a ":" 接口，由哈希表支持\r\n            （实际上是\r\n","java.util.OptionalDouble.empty()":"java.util.optionaldouble.empty（）\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given  <code>reason</code>, <code>SQLState</code>,\n            <code>vendorCode</code>  and <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>，<code> sqlstate </code>，\r\n            <code> VendorCode </code>和<code> FailedProperties </code>。\r\n","java.util.NavigableMap.pollFirstEntry()":"java.util.navigablemap.pollfirstentry（）\r\n","The ISO date formatter that formats or parses a date with an\n            offset, such as '2011-12-03+01:00'.":"格式或解析日期的ISO日期格式\r\n            偏移，例如“ 2011-12-03+01：00”。\r\n","SUBSIZED":"补充\r\n","Returns a fixed string based on a numeric value.":"根据数字值返回固定的字符串。\r\n","java.security.cert.Certificate.toString()":"java.security.cert.certificate.tostring（）\r\n","Updates the value of the archive attribute.":"更新存档属性的值。\r\n","Returns an object that uniquely identifies the given file, or ":"返回一个唯一标识给定文件的对象，或\r\n","java.time.format.DateTimeFormatter.getLocale()":"java.time.format.datetimeformatter.getLocale（）\r\n","java.util.SplittableRandom.nextDouble(double, double)":"java.util.splittablerandom.nextdouble（double，double）\r\n","Indicates whether it is possible for a write on the designated column to succeed.":"指示在指定的列上是否有可能取得成功。\r\n","Retrieves the designated parameter's mode.":"检索指定的参数模式。\r\n","Constructs a ProviderException with the specified detail\n            message.":"用指定的细节构建一个providerexception\r\n            信息。\r\n","java.security.MessageDigest.getInstance(java.lang.String)":"java.security.messagedigest.getinstance（java.lang.string）\r\n","If a value is present, invoke the specified consumer with the value,\n            otherwise do nothing.":"如果存在一个值，请调用具有该值的指定消费者，\r\n            否则什么都不做。\r\n","java.security.spec.MGF1ParameterSpec.getDigestAlgorithm()":"java.security.spec.mgf1parameterspec.getDigeStalgorithm（）\r\n","java.security.DomainLoadStoreParameter":"java.security.domainloadstoreparameter\r\n","java.sql.ResultSet.updateSQLXML(int, java.sql.SQLXML)":"java.sql.Resultset.updatesqlxml（int，java.sql.sqlxml）\r\n","java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext)":"java.security.accesscontroller.doprivileged（java.security.privilegedexceptionActionAction，java.security.accesscontrolcontext）\r\n","Executes the given SQL statement, which may return multiple results,\n            and signals the driver that any\n            auto-generated keys should be made available\n            for retrieval.":"执行给定的SQL语句，该语句可能返回多个结果，\r\n            并向驾驶员发出任何信号\r\n            应提供自动生成的键\r\n            取回。\r\n"," view of the mappings contained in this map.":" 此地图中包含的映射的视图。\r\n","java.security.cert.X509CertSelector.getSubjectAsString()":"java.security.cert.x509certselector.getSubjectAsstring（）\r\n","java.security.cert.CertStoreSpi.CertStoreSpi(java.security.cert.CertStoreParameters)":"java.security.cert.certstorespi.certstorespi（java.security.cert.certstoreparameters）\r\n","Type for secret keys.":"输入秘密键。\r\n","java.util.concurrent.BlockingDeque.offerFirst(java.lang.Object, long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.offerfirst（java.lang.object，long，java.util.concurrent.timeunit）\r\n"," that encodes using the\n            <a href=\"#mime\">MIME</a> type base64 encoding scheme.":" 使用\r\n            <a href=\"#mime\"> mime </a>键入base64编码方案。\r\n"," is negative; if\n             ":" 负面；如果\r\n             \r\n","java.util.Arrays.equals(java.lang.Object[], java.lang.Object[])":"java.util.arrays.equals（java.lang.object []，java.lang.object []）\r\n","java.util.LongSummaryStatistics.getAverage()":"java.util.longsummarystatistics.getAverage（）\r\n","Constructs a relative path between this path and a given path.":"构建此路径和给定路径之间的相对路径。\r\n","java.security.cert.CertStoreSpi":"java.security.cert.certstorespi\r\n","java.util.Map.clear()":"java.util.map.clear（）\r\n","Lists all the alias names of this keystore.":"列出此密钥库的所有别名名称。\r\n","java.security.AlgorithmParameterGenerator.generateParameters()":"java.security.algorithmparametergenerator.generateParameters（）\r\n"," instance with the specified\n certificate type and encoded data.":" 带有指定的实例\r\n 证书类型和编码数据。\r\n"," that compares by that sort key.":" 相比之下，该键。\r\n"," if there are any tasks submitted to this\n            pool that have not yet begun executing.":" 如果有任何任务提交了\r\n            尚未开始执行的池。\r\n","Adds an identity to this identity scope.":"在此身份范围内增加身份。\r\n","java.util.concurrent.BlockingDeque.offerLast(java.lang.Object)":"java.util.concurrent.blockingdeque.offerlast（java.lang.Object）\r\n","java.util.concurrent.ArrayBlockingQueue.drainTo(java.util.Collection)":"java.util.concurrent.ararayblockingqueue.drainto（java.util.collection）\r\n"," if the two specified arrays of bytes are\n            ":" 如果两个指定的字节阵列是\r\n            \r\n","java.security.SecureRandom.generateSeed(int)":"java.security.securerandom.generateseed（int）\r\n","java.security.cert.X509CRLEntry.toString()":"java.security.cert.x509crlentry.tostring（）\r\n","Writes an SQL <code>CLOB</code> value to the stream.":"将sql <code> clob </code>值写入流。\r\n","java.security.cert.PolicyQualifierInfo.getEncoded()":"java.security.cert.policyqualifierinfo.getencoded（）\r\n","java.sql.Connection.prepareCall(java.lang.String, int, int, int)":"java.sql.connection.preparecall（java.lang.string，int，int，int）\r\n","Gets the <code>DecimalFormatSymbols</code> instance for the specified\n            locale.":"获取指定的<code> Demalformatsymbols </code>实例\r\n            语言环境。\r\n"," object in the Java programming language.":" Java编程语言中的对象。\r\n","Retrieves whether this database supports correlated subqueries.":"检索该数据库是否支持相关的子查询。\r\n","Return the number of level runs.":"返回级别运行次数。\r\n","java.security.cert.X509CRL.getTBSCertList()":"java.security.cert.x509crl.gettbscertlist（）\r\n","java.nio.file.FileSystemException":"java.nio.file.filesystemexception\r\n","Unchecked exception thrown when a format string contains an illegal syntax\n            or a format specifier that is incompatible with the given arguments.":"当格式字符串包含非法语法时，未选中的异常\r\n            或与给定参数不相容的格式指定符。\r\n","java.text.ChoiceFormat.format(long, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.choiceformat.format（long，java.lang.stringbuffer，java.text.fieldposition）\r\n","java.sql.Types.ARRAY":"java.sql.types.array\r\n","java.security.SecurityPermission":"java.security.securitypermission\r\n","Updates the designated column using the given <code>Reader</code>\n            object, which is the given number of characters long.":"使用给定的<code>读取器</code>更新指定的列\r\n            对象，这是给定的字符数。\r\n","if an error occurred during construction.\n":"如果在施工期间发生错误。\r\n\r\n","s derived\n from this statement.":"S得出\r\n 从这个说法。\r\n","java.util.concurrent.ConcurrentLinkedQueue.iterator()":"java.util.concurrent.concurrentlinkedqueue.iterator（）\r\n","java.security.interfaces.ECKey":"java.security.interfaces.eckey\r\n","Constructs a <code>NoSuchElementException</code>, saving a reference\n            to the error message string ":"构建<code> nosuchelementException </code>，保存参考\r\n            到错误消息字符串\r\n","java.util.Spliterator.forEachRemaining(java.util.function.Consumer)":"java.util.spliterator.foreachremaining（java.util.function.consumer）\r\n","The public-exponent value F0 = 3.":"公共充满值f0 = 3。\r\n","java.sql.DatabaseMetaData.procedureNullableUnknown":"java.sql.databasemetadata.procedurenullableunknown\r\n","java.sql.ParameterMetaData.parameterNullable":"java.sql.parametermetadata.parameternullable\r\n","java.util.Arrays.equals(long[], long[])":"java.util.arrays.equals（long []，long []）\r\n","Return true if the specified text requires bidi analysis.":"如果指定的文本需要BIDI分析，则返回true。\r\n","java.security.interfaces.DSAParams.getQ()":"java.security.interfaces.dsaparams.getq（）\r\n","java.util.concurrent.ConcurrentSkipListMap.entrySet()":"java.util.concurrent.concurrentskiplistmap.entryset（）\r\n","java.util.concurrent.Executors.newWorkStealingPool()":"java.util.concurrent.executors.newworkstealingpool（）\r\n","Returns the count of values recorded.":"返回记录的值计数。\r\n","if there is a problem with the database or if the method is\n             called while in auto-commit mode of operation.\n":"如果数据库有问题或该方法是\r\n             以自动建设模式的方式调用。\r\n\r\n","ARRAY":"大批\r\n","The mapping in the Java<sup><font size=-2>TM</font></sup> programming language\n            for the SQL <code>NCLOB</code> type.":"java <sup> <font size = -2> tm </font> </sup>编程语言中的映射\r\n            对于SQL <code> NCLOB </code>类型。\r\n","PKIXCertPathBuilderResult":"pkixcertpathbuilderresult\r\n","Returns the built and validated certification path.":"返回已建立和验证的认证路径。\r\n","optional":"可选的\r\n","java.util.Vector.Vector(java.util.Collection)":"Java.util.Vector.Vector（Java.util.Collection）\r\n","java.util.AbstractList.addAll(int, java.util.Collection)":"java.util.abstractlist.addall（int，java.util.collection）\r\n","java.util.TreeMap.tailMap(java.lang.Object, boolean)":"java.util.treemap.tailmap（java.lang.Object，boolean）\r\n","java.util.UnknownFormatConversionException":"java.util.unknownformatConversionException\r\n","java.util.Collection#iterator()":"java.util.collection＃iterator（）\r\n","java.util.Comparator.comparing(java.util.function.Function)":"java.util.comparator.comparing（java.util.function.function）\r\n","Returns the subject (subject distinguished name) value from the\n            certificate as an ":"从主题（主题区分名称）值中返回\r\n            证书\r\n"," on its elements.":" 关于它的元素。\r\n","java.util.GregorianCalendar.getMaximum(int)":"java.util.gregoriancalendar.getmaximum（int）\r\n"," list for this\n database.":" 列表\r\n 数据库。\r\n","java.nio.file.DirectoryNotEmptyException":"java.nio.file.directorynotemptyException\r\n","java.security.cert.CertStoreException.CertStoreException(java.lang.String)":"java.security.cert.certstoreexception.certstoreexception（java.lang.string）\r\n","java.util.ServiceLoader.loadInstalled(java.lang.Class)":"java.util.serviceloader.loadinstalled（java.lang.class）\r\n","java.text.AttributedCharacterIterator.getRunLimit()":"java.text.AttributedCharacterator.getRunlimit（）\r\n","Resizable-array implementation of the ":"可解析的阵列实施\r\n","java.util.TreeMap.headMap(java.lang.Object, boolean)":"java.util.treemap.headmap（java.lang.Object，boolean）\r\n","java.security.cert.CertificateNotYetValidException.CertificateNotYetValidException()":"java.security.cert.certificatificatyetvalidexception.certificatenotyetvalidexception（）\r\n","java.security.SignatureSpi.engineSign()":"java.security.signaturespi.Enginesign（）\r\n","Searches a range of\n            the specified array of longs for the specified value using the\n            binary search algorithm.":"搜索一系列\r\n            使用\r\n            二进制搜索算法。\r\n","java.sql.DatabaseMetaData.procedureColumnReturn":"java.sql.databasemetadata.procedurecolumnreturn\r\n","Sets the default locale for the specified Category for this instance\n            of the Java Virtual Machine.":"为此实例设置指定类别的默认场所\r\n            Java虚拟机。\r\n","java.util.concurrent.CopyOnWriteArrayList.remove(java.lang.Object)":"java.util.concurrent.copyonwritearraylist.remove（java.lang.object）\r\n","java.util.Map.hashCode()":"java.util.map.hashcode（）\r\n","Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT\n            represented by this ":"自1970年1月1日，00:00：00 GMT返回毫秒数\r\n            以此为代表\r\n","TimeZone#SHORT":"时区＃短\r\n"," describing the ":" 描述\r\n","Unchecked exception thrown when a conversion and flag are incompatible.":"当转换和标志不兼容时，不受组织的例外。\r\n","Gets the complete list of fully defined transitions.":"获取完全定义的过渡的完整列表。\r\n","Useful constant for language.":"有用的语言常数。\r\n","Creates an empty Stack.":"创建一个空堆栈。\r\n","Interface to a DSA-specific set of key parameters, which defines a\n            DSA <em>key family</em>.":"与DSA特定集合的关键参数集的接口，该参数定义了\r\n            DSA <em>关键家庭</em>。\r\n","java.util.List.addAll(java.util.Collection)":"java.util.list.addall（java.util.Collection）\r\n","if signature verification failed.\n":"如果签名验证失败。\r\n\r\n","Returns the permissions for the given CodeSource object.":"返回给定代码对象的权限。\r\n","java.util.Properties.storeToXML(java.io.OutputStream, java.lang.String)":"java.util.properties.storetoxml（java.io.outputstream，java.lang.string）\r\n","Field number for <code>get</code> and <code>set</code> indicating the\n            month.":"<code> get </code>和<code> set </code>的字段编号指示\r\n            月。\r\n","java.nio.file.attribute.PosixFilePermissions.asFileAttribute(java.util.Set)":"java.nio.file.attribute.posixfilepermissions.asfileattribute（java.util.set）\r\n","Constructs a <code>SQLClientInfoException</code> object initialized with a\n            given <code>reason</code>, <code>cause</code> and\n            <code>failedProperties</code>.":"构造A <code> sqlClientInfoException </code>用一个初始化的对象\r\n            给定<code>原因</code>，<code>原因</code>和\r\n            <code> FailedProperties </code>。\r\n","LinkedHashMap":"LinkedHashmap\r\n","Returns true if this either implements the interface argument or is directly or indirectly a wrapper\n            for an object that does.":"如果这要么实现接口参数或直接或间接包装器，返回true\r\n            适用于这样做的对象。\r\n","The subclass of ":"子类\r\n","java.security.cert.PKIXParameters.isRevocationEnabled()":"java.security.cert.pkixparameters.isrevocationenabled（）\r\n","Returns a pattern string describing this date format.":"返回描述此日期格式的模式字符串。\r\n","An object that may be used to locate a file in a file system.":"可用于在文件系统中找到文件的对象。\r\n","Retrieves whether this database supports stored procedure calls\n            that use the stored procedure escape syntax.":"检索此数据库是否支持存储过程调用\r\n            使用存储过程逃脱语法。\r\n","java.util.Arrays.copyOf(float[], int)":"java.util.arrays.copyof（float []，int）\r\n","A public key.":"公钥。\r\n","java.util.Spliterator.IMMUTABLE":"java.util.spliterator.mmutable\r\n","java.nio.file.attribute.AclEntryType":"java.nio.file.attribute.aclentrytype\r\n","Provides an interface to a file system and is the factory for objects to\n            access files and other objects in the file system.":"提供文件系统的接口，是对象的工厂\r\n            访问文件系统中的文件和其他对象。\r\n","java.util.TreeSet.tailSet(java.lang.Object, boolean)":"java.util.treeset.tailset（java.lang.Object，boolean）\r\n","40":"40\r\n","java.util.List.copyOf(java.util.Collection)":"java.util.list.copyof（java.util.Collection）\r\n","Reads an SQL <code>DATALINK</code> value from the stream and returns it as a\n            <code>java.":"从流中读取SQL <code> datalink </code>值，并将其返回为\r\n            <code> Java。\r\n"," field indicating the\n            period of the day from midnight to just before noon.":" 指示\r\n            从午夜到中午之前的一天中。\r\n"," clause for\n this database.":" 子句\r\n 此数据库。\r\n","java.nio.file.DirectoryIteratorException.DirectoryIteratorException(java.io.IOException)":"java.nio.file.directoryiteratorexception.DirectoryIteratoreToreXception（Java.io.ioexception）\r\n","java.text.ChoiceFormat.toPattern()":"java.text.choiceformat.topattern（）\r\n","java.sql.ResultSet.updateNClob(int, java.sql.NClob)":"java.sql.Resultset.updatenclob（int，java.sql.nclob）\r\n","Returns the next token if it matches the pattern constructed from the\n            specified string.":"如果接下来的令牌与从\r\n            指定的字符串。\r\n","java.util.Collections.checkedList(java.util.List, java.lang.Class)":"Java.util.Collections.Checkedlist（Java.util.list，Java.lang.class）\r\n","This exception is thrown when a particular security provider is\n            requested but is not available in the environment.":"当特定的安全提供商是\r\n            请求但在环境中不可用。\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code>\n             with a given <code>reason</code>.":"构建<Code> SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION </code>\r\n             使用给定的<code>原因</code>。\r\n","Writes the next attribute to the stream as a stream of Unicode characters.":"将下一个属性作为Unicode字符流写入流。\r\n","java.sql.SQLFeatureNotSupportedException.SQLFeatureNotSupportedException(java.lang.String, java.lang.String, java.lang.Throwable)":"java.sql.sqlfeaturenotsupportedexception.sqlfeaturenotsupportedexception（java.lang.string，java.lang.string，java.lang.lang.thrang.throwable）\r\n","Get the designated column's table's schema.":"获取指定的专栏的表格。\r\n","#WRITE_DATA":"#WRITE_DATA\r\n","if the owner to be removed is the last owner and hence removing it\n             would make this object owner-less.\n":"如果要删除的所有者是最后一个所有者，因此将其删除\r\n             将使这个对象无用。\r\n\r\n","Retrieves whether this database supports the ODBC Core SQL grammar.":"检索该数据库是否支持ODBC Core SQL语法。\r\n","if there is an error while accessing the database or if the\n             fetch direction is unrecognized.\n":"如果访问数据库时存在错误或\r\n             提取方向未被认可。\r\n\r\n","if there is a problem accessing the database or if the target\n             connection instance is in auto-commit mode.\n":"如果访问数据库或目标存在问题\r\n             连接实例处于自动信号模式。\r\n\r\n","java.util.Vector.Vector(int, int)":"Java.util.Vector.Vector（INT，INT）\r\n","#estimateSize()":"#Estimatesize（）\r\n","Retrieves whether this database supports savepoints.":"检索此数据库是否支持保存点。\r\n","java.security.cert.X509CertSelector.addPathToName(int, byte[])":"java.security.cert.x509certselector.addpathtoname（int，byte []）\r\n","Decrements the iterator's index by one and returns the character\n            at the new index.":"将迭代器的索引减少一个并返回字符\r\n            在新索引。\r\n","java.security.AlgorithmParameterGenerator.getProvider()":"java.security.algorithmparametergenerator.getProvider（）\r\n","java.util.NavigableSet.headSet(java.lang.Object, boolean)":"java.util.navigableset.headset（java.lang.Object，boolean）\r\n","Retrieves and removes the head of this queue, waiting up to the\n specified wait time if necessary for an element to become available.":"检索并取下该队列的头部，等待\r\n 指定的等待时间（如有必要）使元素可用。\r\n","Constructs a <code>SQLWarning</code> object\n            with a given <code>reason</code>.":"构造<code> sqlwarning </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.security.Identity.Identity(java.lang.String)":"Java.Security.Identity.Identity（Java.lang.String）\r\n","Writes a formatted string to this object's destination using the\n            specified format string and arguments.":"使用该对象的目的地写一个格式的字符串\r\n            指定格式字符串和参数。\r\n","java.util.Arrays.fill(boolean[], int, int, boolean)":"java.util.arrays.fill（boolean []，int，int，boolean）\r\n","X500Principal":"x500原理\r\n","java.sql.Time.Time(long)":"java.sql.sql.time.time（long）\r\n","java.util.concurrent.ConcurrentSkipListMap.pollLastEntry()":"java.util.concurrent.concurrentskiplistmap.pollastentry（）\r\n","Converts the time value (millisecond offset from the <a\n            href=\"Calendar.":"转换时间值（毫秒偏移<a\r\n            href =“日历。\r\n","java.security.KeyStoreSpi.engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate)":"Java.security.Keystorespi.EngineseTcertificateTificateTry（java.lang.string，java.security.cert.cert.certificate）\r\n","java.sql.DatabaseMetaData.bestRowTemporary":"java.sql.databasemetadata.bestrowtemporary\r\n","Parse a date/time string according to the given parse position.":"根据给定的解析位置分析日期/时间字符串。\r\n","java.text.CollationElementIterator.setText(java.lang.String)":"java.text.collat​​ionelementiterator.setText（java.lang.string）\r\n","File attributes associated with a file in a file system that supports\n            legacy \"DOS\" attributes.":"与文件系统中的文件相关联的文件属性支持\r\n            遗产“ dos”属性。\r\n","java.time.temporal.WeekFields.getMinimalDaysInFirstWeek()":"java.time.temporal.weekfields.getminimaldaysinfirstweek（）\r\n","java.nio.file.attribute.DosFileAttributeView.name()":"java.nio.file.attribute.dosfileattributeview.name（）\r\n","The constant in the Java programming language, sometimes referred to\n            as a type code, that identifies the generic SQL type\n            <code>BLOB</code>.":"Java编程语言中的常数，有时也称为\r\n            作为类型代码，标识通用SQL类型\r\n            <code> blob </code>。\r\n","Returns a hashcode for this principal.":"返回此本金的哈希码。\r\n","java.util.Arrays.spliterator(java.lang.Object[], int, int)":"java.util.arrays.spliterator（java.lang.object []，int，int）\r\n","java.util.OptionalLong.empty()":"java.util.optionallong.empty（）\r\n","Reads the basic file attributes as a bulk operation.":"将基本文件属性读取为批量操作。\r\n","java.sql.DatabaseMetaData.nullsAreSortedAtStart()":"java.sql.databasemetadata.nullsaresortedatstart（）\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            a <code>long</code> in the Java programming language.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            Java编程语言中的<code>长</code>。\r\n","java.nio.file.Files.move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption)":"java.nio.file.files.move（java.nio.file.path，java.nio.file.path，java.nio.file.copyoption）\r\n","Returns true if this statement is poolable, false otherwise.":"如果此语句是可池，则返回true，否则为false。\r\n","java.sql.Timestamp.compareTo(java.sql.Timestamp)":"java.sql.timestamp.compareto（java.sql.timestamp）\r\n","java.util.Scanner.Scanner(java.nio.file.Path, java.lang.String)":"Java.util.Scanner.Scanner（Java.nio.file.path，Java.lang.String）\r\n","Updates the digest using the specified byte.":"使用指定的字节更新摘要。\r\n","#inForkJoinPool":"#inforkjoinpool\r\n","Sets the bit specified by the index to ":"将索引指定的位设置为\r\n","java.util.Scanner.nextLong(int)":"java.util.scanner.nextlong（int）\r\n","java.security.AlgorithmParameterGenerator.init(java.security.spec.AlgorithmParameterSpec)":"java.security.algorithmparametergenerator.init（java.security.spec.algorithmparameterspec）\r\n","Returns a ResultSet object which holds the entries of the SQL ":"返回一个保存SQL条目的结果集对象\r\n","java.sql.ResultSetMetaData.getColumnName(int)":"java.sql.ResultsetMetadata.getColumnname（int）\r\n"," (if necessary)\n            so the copy has the specified length.":" （如有必要）\r\n            因此副本具有指定的长度。\r\n","java.sql.ResultSet.previous()":"java.sql.Resultset.previous（）\r\n","Constructs an empty list.":"构建一个空列表。\r\n","Constructs a <code>SQLException</code> object with a given\n            <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","java.sql.DatabaseMetaData.storesLowerCaseIdentifiers()":"java.sql.databasemetadata.storeslowercaseidendifiers（）\r\n","java.util.concurrent.Exchanger.Exchanger()":"java.util.concurrent.exchanger.exchanger（）\r\n"," correspond to ":" 相当于\r\n","Checks if the duration of the unit is an estimate.":"检查设备的持续时间是否是估计值。\r\n","java.util.Deque.poll()":"java.util.deque.poll（）\r\n","java.util.Dictionary.Dictionary()":"java.util.dictionary.dictionary（）\r\n","The string tokenizer class allows an application to break a\n            string into tokens.":"字符串令牌类允许应用程序破坏\r\n            字符串进入令牌。\r\n","java.util.AbstractList.set(int, java.lang.Object)":"java.util.abstractlist.set（int，java.lang.object）\r\n","Useful constant for YEAR field alignment.":"对年度对齐的有用常数。\r\n","Generates a key pair.":"生成一个钥匙对。\r\n","java.security.ProtectionDomain":"Java.security.ProtectionDomain\r\n","Gets a string for the given key from this resource bundle or one of its parents.":"从此资源捆绑包或其父母之一中获取给定键的字符串。\r\n","java.text.Collator.SECONDARY":"java.text.collat​​or.secondary\r\n","java.sql.ResultSet.getBigDecimal(int)":"java.sql.Resultset.getBigDecimal（int）\r\n","The Signature class is used to provide applications the functionality\n            of a digital signature algorithm.":"签名类用于提供应用程序功能\r\n            数字签名算法。\r\n","Returns a copy of the info with a new character that represents the positive sign.":"返回具有代表积极标志的新字符的信息副本。\r\n","java.util.OptionalInt.ifPresent(java.util.function.IntConsumer)":"java.util.optionalint.ifpresent（java.util.function.intconsumer）\r\n","java.sql.DatabaseMetaData.locatorsUpdateCopy()":"java.sql.databasemetadata.locatorsupdatecopy（）\r\n","java.sql.Clob.setAsciiStream(long)":"java.sql.clob.setasciistream（long）\r\n","java.sql.ResultSet.getObject(java.lang.String)":"java.sql.Resultset.getObject（java.lang.string）\r\n"," instance.\n":" 实例。\r\n\r\n","Joins this task, without returning its result or throwing its\n            exception.":"加入此任务，没有返回结果或投掷其\r\n            例外。\r\n","The MGF1ParameterSpec which uses \"SHA-256\" message digest.":"使用“ SHA-256”消息摘要的MGF1ParametersPec。\r\n","Creates a new and empty file, failing if the file already exists.":"创建一个新的空文件，如果文件已经存在，则会失败。\r\n","java.util.concurrent.ForkJoinTask":"java.util.concurrent.forkjointask\r\n","Invoked for a file in a directory.":"在目录中调用文件。\r\n","java.util.Arrays.equals(int[], int[])":"java.util.arrays.equals（int []，int []）\r\n","java.nio.file.Files.deleteIfExists(java.nio.file.Path)":"java.nio.file.files.deleteifexists（java.nio.file.path）\r\n","java.time.temporal.ValueRange.of(long, long, long, long)":"java.time.temporal.valuerange.of（长，长，长，长）\r\n","Searches the specified array of doubles for the specified value using\n            the binary search algorithm.":"使用使用\r\n            二进制搜索算法。\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.String, java.lang.String)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.string，java.lang.string）\r\n","|format combination is not recognized, or\n             the resolution of any key parameter fails.\n":"|格式组合未识别，或者\r\n             任何密钥参数的分辨率都会失败。\r\n\r\n","serverName":"服务器名称\r\n","Inserts the specified element at the front of this list.":"将指定元素插入此列表的正面。\r\n","java.sql.Connection.prepareStatement(java.lang.String, int[])":"java.sql.connection.preparestatement（java.lang.string，int []）\r\n","Gets the character used to represent minus sign. -or- Sets the character used to represent minus sign.":"获取用来表示负符号的字符。 - 或设置用于表示减号的字符。\r\n","Returns the <code>IOException</code> last thrown by this\n            <code>Scanner</code>'s underlying <code>Readable</code>.":"返回<code> ioexception </code>最后一次投掷\r\n            <code>扫描仪</code>的基础<code>可读</code>。\r\n","java.util.Optional.orElse(java.lang.Object)":"java.util.optional.orelse（java.lang.Object）\r\n","Writes the given Java <code>String</code> to the <code>CLOB</code>\n            value that this <code>Clob</code> object designates at the position\n            <code>pos</code>.":"将给定的Java <code>字符串</code>写入<code> clob </code>\r\n            估算此<code> clob </code>对象在位置指定\r\n            <code> pos </code>。\r\n","java.sql.SQLException.iterator()":"java.sql.sqlexception.iterator（）\r\n","java.text.Bidi.getRunLevel(int)":"java.text.bidi.getRunlevel（int）\r\n","java.util.TreeMap.entrySet()":"java.util.treemap.entryset（）\r\n","if certificate information is incomplete or incorrect.":"如果证书信息不完整或不正确。\r\n","Adds an attribute to the entire string.":"将属性添加到整个字符串中。\r\n","java.sql.DatabaseMetaData.getColumnPrivileges(java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getColumnPrivileges（java.lang.string，java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.concurrent.CompletableFuture.toCompletableFuture()":"java.util.concurrent.completablefuture.tocompletablefuture（）\r\n","Constructs an empty list with an initial capacity of ten.":"构建一个最初容量十的空列表。\r\n","An object that can be used to get information about the types\n            and properties of the columns in a <code>ResultSet</code> object.":"可用于获取有关类型的信息的对象\r\n            和<code> Resultset </code>对象中的列的属性。\r\n","java.util.Arrays.copyOfRange(double[], int, int)":"java.util.arrays.copyofrange（double []，int，int）\r\n","java.util.MissingResourceException.MissingResourceException(java.lang.String, java.lang.String, java.lang.String)":"java.util.missingresourceexception.missingresourceexception（java.lang.string，java.lang.string，java.lang.string）\r\n","java.util.Locale.TRADITIONAL_CHINESE":"java.util.locale.traditional_chinese\r\n","java.text.Annotation":"java.text.annotation\r\n","Retrieves whether this database supports transactions.":"检索该数据库是否支持交易。\r\n","java.sql.CallableStatement.setCharacterStream(java.lang.String, java.io.Reader, long)":"java.sql.callablestatement.setcharacterstream（java.lang.string，java.io.Reader，long）\r\n"," sort key from a type ":" 从类型中排序键\r\n","java.util.List.toArray()":"java.util.list.toarray（）\r\n","java.text.BreakIterator.getWordInstance(java.util.Locale)":"java.text.breakiterator.getWordInstance（java.util.locale）\r\n","Returns the length of the input.":"返回输入的长度。\r\n","java.text.DateFormat.getNumberFormat()":"java.text.dateformat.getnumberformat（）\r\n","Assigns the specified Object reference to each element of the specified\n            range of the specified array of Objects.":"将指定的对象引用分配给指定的每个元素\r\n            指定对象数组的范围。\r\n","Returns the value to which the key is mapped in this dictionary.":"返回该字典中键映射的值。\r\n"," uses Daylight Saving Time.":" 使用日光节省时间。\r\n","java.sql.CallableStatement.setNClob(java.lang.String, java.sql.NClob)":"java.sql.callablestatement.setnclob（java.lang.string，java.sql.nclob）\r\n","Returns the name of the algorithm implemented by this SecureRandom\n            object.":"返回此SecureRandom实施的算法的名称\r\n            目的。\r\n","java.text.NumberFormat.getAvailableLocales()":"java.text.numberformat.getavailablebalelocales（）\r\n","LongSummaryStatistics":"隆起的统计学\r\n"," to iterate over\n            all entries in the directory.":" 迭代\r\n            目录中的所有条目。\r\n","java.util.Calendar.MILLISECOND":"java.util.calendar.millisecond\r\n","java.security.cert.CRLException":"java.security.cert.crlexception\r\n","Gets the DER-encoded certificate information, the\n            ":"获取DER编码的证书信息，\r\n            \r\n","java.text.NumberFormat.format(double)":"java.text.numberformat.format（double）\r\n","if a signer with the specified name already exists in the\n             provided scope.\n":"如果带有指定名称的签名者已经存在\r\n             提供范围。\r\n\r\n"," and return\n            the result of that invocation.":" 并返回\r\n            该调用的结果。\r\n","#SHORT_FORMAT":"#short_format\r\n","java.sql.SQLOutput.writeCharacterStream(java.io.Reader)":"java.sql.sqloutput.writecharacterstream（java.io.reader）\r\n","java.text.RuleBasedCollator.getCollationElementIterator(java.lang.String)":"java.text.rulebasedcollat​​or.getCollat​​ionElementiterator（java.lang.string）\r\n","Replaces each entry's value with the result of invoking the given\n            function on that entry until all entries have been processed or the\n            function throws an exception.":"用调用给定的结果代替每个条目的值\r\n            在该条目上功能直到处理所有条目或\r\n            功能引发异常。\r\n","Returns the permissions of the file.":"返回文件的权限。\r\n","Returns the destination for the output.":"返回输出的目的地。\r\n","java.text.DecimalFormatSymbols.DecimalFormatSymbols()":"java.text.decimalformatsymbols.decimalformatsymbols（）\r\n"," (exclusive) to ":" （独家）\r\n","estimateSize":"估计\r\n","Returns the parameters used with this signature object.":"返回此签名对象使用的参数。\r\n","java.util.Map.entrySet()":"java.util.map.entryset（）\r\n","The constant in the Java programming language, somtimes referred to\n            as a type code, that identifies the generic SQL type <code>DATALINK</code>.":"Java编程语言的常数，Somtime提及\r\n            作为类型代码，可以标识通用SQL类型<code> datalink </code>。\r\n","java.time.temporal.TemporalQueries":"java.time.temporal.temporalqueries\r\n","java.text.NumberFormat.setParseIntegerOnly(boolean)":"java.text.numberformat.setparseintegeronly（布尔）\r\n","Returns the public exponent ":"返回公共指数\r\n","java.sql.SQLNonTransientException.SQLNonTransientException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlnontransientException.sqlnontransientException（java.lang.string，java.lang.string，int，int，java.lang.thrang.throwable）\r\n","#SHORT_STANDALONE":"#short_standalone\r\n","java.sql.CallableStatement.setBinaryStream(java.lang.String, java.io.InputStream)":"java.sql.callablestatement.setbinarystream（java.lang.string，java.io.inputstream）\r\n","Removes from this list all of its elements that are contained in the\n            specified collection (optional operation).":"从此列表中删除其所有包含的元素\r\n            指定收集（可选操作）。\r\n","java.util.Locale.getDisplayScript()":"java.util.locale.getDisplayscript（）\r\n","Gets the set of available currencies.":"获取一组可用的货币。\r\n","java.util.concurrent.ConcurrentLinkedDeque.offerFirst(java.lang.Object)":"java.util.concurrent.concurrentlinkeddeque.offerfirst（java.lang.object）\r\n","if this connection is closed, or there's a problem creating a new blob.\n":"如果该连接已关闭，或者存在问题，创建新斑点。\r\n\r\n","BrokenBarrierException":"Brackbarrierexception\r\n","java.util.Set.toArray()":"java.util.set.toArray（）\r\n","Returns the day of the week represented by this date.":"以这个日期代表的一周中的回报。\r\n","java.time.temporal.TemporalAdjusters":"java.time.temporal.temporaladjusters\r\n","java.nio.file.AccessDeniedException.AccessDeniedException(java.lang.String, java.lang.String, java.lang.String)":"java.nio.file.accessdeniedexception.accessdeniedexception（java.lang.string，java.lang.string，java.lang.string）\r\n","The normalization forms supported by the Normalizer.":"归一化器支持的归一化形式。\r\n","java.util.ArrayDeque.remove()":"java.util.arraydeque.remove（）\r\n","java.nio.file.SimpleFileVisitor":"java.nio.file.simplefilevisitor\r\n","java.security.cert.PKIXReason":"java.security.cert.pkixreason\r\n","\n            String.":"\r\n            细绳。\r\n","The interface to an elliptic curve (EC) public key.":"椭圆曲线（EC）公钥的接口。\r\n","java.security.cert.X509CertSelector.addPathToName(int, java.lang.String)":"java.security.cert.x509certselector.addpathtoname（int，java.lang.string）\r\n","Returns the encoded form of this certificate.":"返回此证书的编码表格。\r\n","java.nio.file.FileStore.getAttribute(java.lang.String)":"java.nio.file.file.filestore.getAttribute（java.lang.string）\r\n","Converts a path string, or a sequence of strings that when joined form\n            a path string, to a ":"转换路径字符串或连接形式时的一系列字符串\r\n            路径字符串，到\r\n","java.security.SecureRandom.SecureRandom()":"java.security.securerandom.securerandom（）\r\n","Returns the cofactor.":"返回辅助因子。\r\n","Marks the month part of a date.":"标记日期的月份。\r\n","java.util.Spliterator.tryAdvance(java.util.function.Consumer)":"java.util.spliterator.tryadvance（java.util.function.consumer）\r\n"," with a\n password.":" 与\r\n 密码。\r\n","if the initialCapacity is less than 1.\n":"如果初始容量小于1。\r\n\r\n","java.util.concurrent.ForkJoinWorkerThread.onTermination(java.lang.Throwable)":"java.util.concurrent.forkjoinworkerthread.ontermination（java.lang.throwable）\r\n","if the an exception occurred while storing the certificates\n             of this code ":"如果在存储证书时发生异常\r\n             此代码\r\n","java.text.DecimalFormat.getPositiveSuffix()":"java.text.decimalformat.getPositivesuffix（）\r\n","User Defined Type":"用户定义的类型\r\n","if an error occurs during parsing.\n":"如果解析过程中发生错误。\r\n\r\n","java.util.Dictionary.keys()":"java.util.dictionary.keys（）\r\n","java.util.Arrays.binarySearch(byte[], byte)":"java.util.arrays.binarysearch（字节[]，字节）\r\n","java.sql.DatabaseMetaData.supportsResultSetType(int)":"java.sql.databasemetadata.supportsresultsettype（int）\r\n","SecretKey":"密钥\r\n"," object's current catalog name.":" 对象的当前目录名称。\r\n","publicKey":"publickey\r\n","java.text.DateFormatSymbols.DateFormatSymbols(java.util.Locale)":"java.text.dateformatsymbols.dateformatsymbols（java.util.locale）\r\n","Returns an unmodifiable list containing two elements.":"返回包含两个元素的不可变化列表。\r\n"," is invalid or an identity\n             with the same key already exists.\n":" 无效或身份\r\n             与相同的密钥已经存在。\r\n\r\n","java.util.Map.putAll(java.util.Map)":"java.util.map.putall（java.util.map）\r\n"," that would be produced by execution of the ":" 这将通过执行\r\n","SignatureSpi":"Signaturespi\r\n","java.security.cert.PKIXRevocationChecker":"java.security.cert.pkixrevocationChecker\r\n","java.security.Key.serialVersionUID":"java.security.key.SerialVersionUID\r\n"," field indicating the\n            fourth month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的第四个月在格里高利和朱利安日历中。\r\n","java.time.temporal.ValueRange.of(long, long)":"java.time.temporal.valuerange.of（长，长）\r\n","Checked exception thrown when a file cannot be moved as an atomic file system\n            operation.":"当无法将文件作为原子文件系统移动时，已检查异常\r\n            手术。\r\n","java.security.cert.PKIXParameters.getPolicyQualifiersRejected()":"java.security.cert.pkixparameters.getPolicyqualifiersReprejected（）\r\n","java.sql.SQLException.SQLException(java.lang.String, java.lang.Throwable)":"java.sql.sqlexception.sqlexception（java.lang.string，java.lang.throwable）\r\n","java.nio.file.SecureDirectoryStream.newDirectoryStream(java.lang.Object, java.nio.file.LinkOption)":"java.nio.file.securedirectorystream.newdirectorystream（java.lang.Object，java.nio.file.linkoption）\r\n","Gets the Collator for the desired locale.":"获取所需地区的碰撞器。\r\n","java.security.cert.X509CertSelector":"java.security.cert.x509certselector\r\n","An immutable policy qualifier represented by the ASN.":"由ASN代表的不变政策预选赛。\r\n","Performs a logical <b>AND</b> of this target bit set with the\n            argument bit set.":"执行此目标位的逻辑<b>和</b>与\r\n            参数位设置。\r\n","java.util.TimerTask.run()":"java.util.timertask.run（）\r\n","java.util.Arrays.sort(double[], int, int)":"java.util.arrays.sort（double []，int，int）\r\n","java.security.KeyStore.getProvider()":"java.security.keystore.getProvider（）\r\n","java.text.DateFormat.FULL":"java.text.dateformat.full\r\n","java.util.AbstractMap.size()":"java.util.abstractmap.size（）\r\n","java.util.Date.getSeconds()":"java.util.date.getSeconds（）\r\n","Indicates the nullability of values in the designated column.":"指示指定列中值的无效性。\r\n","java.util.Collections.min(java.util.Collection, java.util.Comparator)":"java.util.collections.min（java.util.collection，java.util.comparator）\r\n","Returns an empty navigable map (immutable).":"返回一个空的通航地图（不可变）。\r\n","Indicates that the parameter or column is a column in a result set.":"指示参数或列是结果集中的列。\r\n","Gets the CRL entry, if any, with the given certificate serialNumber.":"使用给定证书串行名录获取CRL条目（如果有）。\r\n","java.security.KeyFactorySpi":"java.security.keyfactoryspi\r\n"," field indicating the\n            second month of the year in the Gregorian and Julian calendars.":" 指示\r\n            一年中的第二个月在格里高利和朱利安日历中。\r\n","Records a new value into the summary information":"将新价值记录到摘要信息中\r\n","An iterator over a collection.":"收藏集的迭代器。\r\n","Creates an enum set initially containing the specified element.":"创建最初包含指定元素的枚举集。\r\n","java.util.ConcurrentModificationException":"java.util.concurrentModificationException\r\n","java.security.cert.CertPathBuilder.getInstance(java.lang.String, java.lang.String)":"java.security.cert.certpathbuilder.getinstance（java.lang.string，java.lang.string）\r\n","Returns an integer number format for the current default\n            ":"返回当前默认值的整数编号格式\r\n            \r\n","java.util.Set.add(java.lang.Object)":"java.util.set.add（java.lang.Object）\r\n","Sets this scanner's delimiting pattern to a pattern constructed from\n            the specified <code>String</code>.":"将此扫描仪的划界模式设置为从\r\n            指定的<code>字符串</code>。\r\n","Updates the designated column with a <code>short</code> value.":"用<code>简短</code>值更新指定的列。\r\n","Assigns the specified char value to each element of the specified array\n            of chars.":"将指定的炭子值分配给指定数组的每个元素\r\n            chars。\r\n","java.nio.file.attribute.PosixFilePermissions.fromString(java.lang.String)":"java.nio.file.attribute.posixfilepermissions.fromstring（java.lang.string）\r\n","java.sql.PreparedStatement.setBlob(int, java.io.InputStream, long)":"java.sql.preparedstatement.setBlob（int，java.io.inputstream，long）\r\n","java.text.Bidi":"java.text.bidi\r\n","java.security.Signature.verify(byte[], int, int)":"java.security.signature.verify（byte []，int，int）\r\n","java.sql.Connection":"java.sql.connection\r\n","Return the resolved level of the character at offset.":"返回偏移时角色的解析级别。\r\n","java.util.MissingFormatArgumentException":"java.util.missingformatargumentException\r\n","Constructs a MessageFormat for the default\n            ":"构造默认值\r\n            \r\n","java.util.Vector.clone()":"java.util.vector.clone（）\r\n","Returns an array containing all of the elements in this list in proper\n            sequence (from first to last element).":"返回一个列表中包含此列表中所有元素的数组\r\n            序列（从第一个到最后一个元素）。\r\n","Appends the specified element to the end of this list (optional\n            operation).":"将指定元素附加到此列表的末尾（可选\r\n            手术）。\r\n","Returns a list of matching languages tags using the basic filtering\n            mechanism defined in RFC 4647.":"使用基本过滤返回匹配语言标签的列表\r\n            RFC 4647中定义的机制。\r\n","Returns the primeP.":"返回PrimeP。\r\n","java.util.concurrent.CountDownLatch.CountDownLatch(int)":"java.util.concurrent.countdownlatch.countdownlatch（int）\r\n","java.sql.SQLOutput.writeFloat(float)":"java.sql.sqloutput.writefloat（float）\r\n","java.nio.file.attribute.BasicFileAttributes.lastAccessTime()":"java.nio.file.attribute.basicfileattributes.lastaccesstime（）\r\n","java.text.ChoiceFormat.nextDouble(double, boolean)":"java.text.ChoIceFormat.NextDouble（Double，Boolean）\r\n","java.sql.DatabaseMetaData.deletesAreDetected(int)":"java.sql.databasemetadata.deletesaredetected（int）\r\n","Walks a file tree.":"走一棵文件树。\r\n","java.util.Properties.getProperty(java.lang.String)":"java.util.properties.getProperty（java.lang.string）\r\n"," executing as a ForkJoinPool computation.":" 执行为forkjoinpool计算。\r\n","java.security.spec.DSAPublicKeySpec.getY()":"java.security.spec.dsapublickeyspec.gety（）\r\n","Return the value if present, otherwise invoke ":"返回值（如果存在），否则请调用\r\n","java.security.cert.X509Certificate.getExtendedKeyUsage()":"java.security.cert.x509certificate.getExtendedKeyusage（）\r\n","if there is a problem interfering with accessing the\n             database.\n":"如果有问题干扰访问\r\n             数据库。\r\n\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a byte value in the specified radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n            \r\n","Creates a default <code>PreparedStatement</code> object capable\n            of returning the auto-generated keys designated by the given array.":"创建一个默认<code>准备序列</code>对象\r\n            返回给定阵列指定的自动生成的键。\r\n","java.nio.file.Files.createDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute)":"java.nio.file.files.createdirectories（java.nio.file.path，java.nio.file.tribute.fileattribute）\r\n","java.sql.SQLNonTransientConnectionException.SQLNonTransientConnectionException(java.lang.Throwable)":"java.sql.sqlnontransientConnectionException.sqlnonTransientConnectionException（java.lang.throwable）\r\n","Constructs a <code>SQLNonTransientConnectionException</code> object.":"构造A <code> sqlnontransientConnectionException </code>对象。\r\n","Allocates a <code>Date</code> object and initializes it so that\n            it represents the date and time indicated by the string\n            <code>s</code>, which is interpreted as if by the\n            ":"分配<code> date </code>对象并初始化它，以便\r\n            它表示字符串指示的日期和时间\r\n            <code> s </code>，它像由\r\n            \r\n","java.util.concurrent.Executors.unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)":"java.util.concurrent.executors.unconfigurablescheduledexecutorservice（java.util.concurrent.scheduledexecutorservice）\r\n","Retrieves whether the current row has been updated.":"检索当前行是否已更新。\r\n","java.util.concurrent.ConcurrentHashMap":"java.util.concurrent.concurrenthashmap\r\n","java.util.DoubleSummaryStatistics.DoubleSummaryStatistics()":"java.util.doublesummarystatistics.doublesummarystatistics（）\r\n","java.security.PKCS12Attribute.getEncoded()":"java.security.pkcs12attribute.getencoded（）\r\n","The version number associated with this ":"与此关联的版本号\r\n","SortedMap":"排序图\r\n","java.security.cert.CertificateRevokedException.getInvalidityDate()":"java.security.cert.certificaterevokedexception.getInvalitydate（）\r\n","Returns the maximum size of a catalog name in this database.":"返回此数据库中目录名称的最大大小。\r\n","Retrieves whether this database supports using columns not included in\n            the <code>SELECT</code> statement in a <code>GROUP BY</code> clause\n            provided that all of the columns in the <code>SELECT</code> statement\n            are included in the <code>GROUP BY</code> clause.":"检索该数据库是否支持使用未包含在\r\n            <code>选择</code>在<code>组中的语句</code>子句\r\n            前提是<code>选择</code>语句中的所有列\r\n            包含在</code>子句中的<code>组中。\r\n","java.text.BreakIterator.getCharacterInstance()":"java.text.breakiterator.getCharacterinstance（）\r\n","java.security.cert.PolicyQualifierInfo.getPolicyQualifier()":"java.security.cert.policyqualifierinfo.getPolicyqualifier（）\r\n","Indicates that the column stores return values.":"指示该列存储返回值。\r\n","unit":"单元\r\n","java.nio.file.attribute.FileTime.fromMillis(long)":"java.nio.file.attribute.filetime.frommillis（long）\r\n","Gets the first warning generated by calls on this ":"获取通话产生的第一个警告\r\n","This is the exception for invalid parameter specifications.":"这是无效参数规范的例外。\r\n","java.util.AbstractCollection.add(java.lang.Object)":"java.util.abstractcollection.add（java.lang.Object）\r\n"," (inclusive) to ":" （包括）\r\n","Reads the next attribute in the stream and returns it as a <code>java.":"读取流中的下一个属性，并将其返回为<code> java。\r\n","java.sql.Connection.TRANSACTION_READ_UNCOMMITTED":"java.sql.connection.transaction_read_uncommitten\r\n","java.text.DecimalFormatSymbols.getCurrencySymbol()":"java.text.decimalformatsymbols.getCurrencysymbol（）\r\n","java.time.format.DateTimeFormatterBuilder.appendChronologyId()":"java.time.format.dateTimeFormatterBuilder.AppendChronologyId（）\r\n"," is invalid\n":" 是无效的\r\n\r\n","Returns the extendedKeyUsage criterion. -or- Sets the extendedKeyUsage criterion.":"返回扩展的按键标准。 - 或设置扩展的按键标准。\r\n","if the factory is null\n":"如果工厂为空\r\n\r\n","Returns the exception thrown by the base computation, or a\n            ":"返回基本计算抛出的异常或\r\n            \r\n","java.util.Collection.removeAll(java.util.Collection)":"java.util.collection.removeall（java.util.collection）\r\n","Convenience method that returns ":"返回的便利方法\r\n","Retrieves whether a catalog name can be used in a data manipulation statement.":"检索数据操作语句中是否可以使用目录名称。\r\n","java.sql.SQLInput.readString()":"java.sql.sqlinput.readstring（）\r\n","java.security.AlgorithmParameters.getInstance(java.lang.String, java.lang.String)":"java.security.algorithmparameters.getinstance（java.lang.string，java.lang.string）\r\n","\n             does.\n":"\r\n             做。\r\n\r\n","Cancels this timer task.":"取消此计时器任务。\r\n","if this queue is empty\n":"如果此队列为空\r\n\r\n","java.sql.DatabaseMetaData.supportsUnionAll()":"java.sql.databasemetadata.supportsunionall（）\r\n","java.text.DateFormat.DateFormat()":"java.text.dateformat.dateformat（）\r\n","#completeExceptionally(Throwable)":"#completeexceptionally（可投掷）\r\n"," if the two specified arrays of chars are\n            ":" 如果两个指定的字符阵列是\r\n            \r\n","java.security.KeyStoreException.KeyStoreException()":"Java.Security.KeyStoreException.KeystoreException（）\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n"," and their corresponding field values.":" 及其相应的字段值。\r\n","Indicates that this column contains table statistics that\n            are returned in conjunction with a table's index descriptions.":"表明此列包含表统计信息\r\n            与表的索引描述一起返回。\r\n","java.security.SecureRandom.next(int)":"java.security.securerandom.next（int）\r\n","java.sql.SQLException.getErrorCode()":"java.sql.sqlexception.getErrorcode（）\r\n","Key factories are used to convert ":"关键工厂用于转换\r\n","Vector":"向量\r\n","#DAY_OF_WEEK":"#day_of_week\r\n","java.security.SecureClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.CodeSource)":"java.security.secureclassloader.defineclass（java.lang.string，byte []，int，int，int，java.security.codesource）\r\n","Returns the fully-qualified name of the Java class whose instances\n            are manufactured if the method <code>ResultSet.":"返回其实例的Java类完全合格的名称\r\n            如果方法<code>结果集，则制造。\r\n","java.security.acl.AclEntry.removePermission(java.security.acl.Permission)":"java.security.acl.aclentry.removepermissermiss（java.security.acl.permission）\r\n","Constructs a <code>Date</code> object using the given milliseconds\n            time value.":"使用给定的毫秒\r\n            时间值。\r\n","A special event to indicate that events may have been lost or\n            discarded.":"一个特别活动，表明事件可能已经丢失或\r\n            丢弃。\r\n","java.security.spec.RSAKeyGenParameterSpec":"java.security.spec.rsakeygenparameterspec\r\n","java.util.Date.setMonth(int)":"java.util.date.setmonth（int）\r\n","java.text.AttributedString.getIterator()":"java.text.attributedstring.getiterator（）\r\n","java.sql.ResultSet.updateNClob(int, java.io.Reader, long)":"java.sql.Resultset.updatenclob（int，java.io.reader，long）\r\n","java.util.AbstractList.listIterator(int)":"java.util.abstractlist.listiterator（int）\r\n","Inserts the specified element at the specified position in this\n            list.":"在此插入指定位置的指定元素\r\n            列表。\r\n","Sets time zone strings.":"设置时区字符串。\r\n","java.util.AbstractMap.putAll(java.util.Map)":"java.util.abstractmap.putall（java.util.map）\r\n","java.security.spec.RSAKeyGenParameterSpec.getPublicExponent()":"java.security.spec.rsakeygenparameterspec.getpublicexponent（）\r\n","java.util.SimpleTimeZone.setStartRule(int, int, int, int)":"java.util.simpletimezone.setstartrule（int，int，int，int）\r\n","java.security.cert.X509CertSelector.setCertificateValid(java.util.Date)":"java.security.cert.x509certselector.setcertificatevalid（java.util.date）\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a short value in the specified radix using the\n            ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            使用\r\n            \r\n","Adds or subtracts (up/down) a single unit of time on the given time\n            field without changing larger fields.":"在给定时间内添加或减去单个时间单位\r\n            字段没有更改较大的字段。\r\n","java.util.concurrent.CountedCompleter":"java.util.concurrent.CountedCompleter\r\n","java.util.Iterator.forEachRemaining(java.util.function.Consumer)":"java.util.iterator.foreachremaining（java.util.function.consumer）\r\n","Unchecked exception thrown when an unknown flag is given.":"当给出一个未知标志时，未选中的例外。\r\n","java.sql.PreparedStatement.setAsciiStream(int, java.io.InputStream, int)":"java.sql.preparedstatement.setasciistream（int，java.io.inputstream，int）\r\n","Signals that a resource is missing.":"信号表明缺少资源。\r\n","java.util.concurrent.ConcurrentSkipListMap.compute(java.lang.Object, java.util.function.BiFunction)":"java.util.concurrent.concurrentskiplistmap.com pute（java.lang.object，java.util.function.bifunction）\r\n","java.text.BreakIterator.getLineInstance(java.util.Locale)":"java.text.breakiterator.getlinestance（java.util.locale）\r\n","Cancels this <code>Statement</code> object if both the DBMS and\n            driver support aborting an SQL statement.":"取消此<code>语句</code>对象，如果dbms和\r\n            驾驶员支持中止SQL语句。\r\n","if the encoding fails.\n":"如果编码失败。\r\n\r\n","java.util.Arrays.setAll(java.lang.Object[], java.util.function.IntFunction)":"java.util.arrays.setall（java.lang.object []，java.util.function.intfunction）\r\n","Unchecked exception thrown when a character with an invalid Unicode code\n            point as defined by ":"当具有无效Unicode代码的字符时，未选中的例外\r\n            定义的点\r\n"," and index is not\n             referencing an certificate in the certification path.\n":" 索引不是\r\n             在认证路径中引用证书。\r\n\r\n","java.security.cert.X509CRLSelector.getDateAndTime()":"java.security.cert.x509crlselector.getdateandtime（）\r\n","java.sql.SQLInput.readRef()":"java.sql.sqlinput.readref（）\r\n",",\n     or if ":"，，，，\r\n     或者如果\r\n","java.util.Optional.orElseGet(java.util.function.Supplier)":"java.util.optional.orelseget（java.util.function.supplier）\r\n","Constructs a new formatter with the specified output stream and\n            charset.":"用指定的输出流构建一个新的格式化器\r\n            charset。\r\n","Returns an <code>Enumeration</code> of the keys contained in\n            this <code>ResourceBundle</code> and its parent bundles.":"返回<code>枚举</code>\r\n            此<code> ResourceBundle </code>及其父捆绑包。\r\n","Timer":"计时器\r\n","java.sql.ResultSet.CONCUR_UPDATABLE":"java.sql.Resultset.concur_updatable\r\n","if an error occurs accessing the database, or if the rows\n             parameter is out of range.\n":"如果发生错误访问数据库或行\r\n             参数超出范围。\r\n\r\n","Removes and returns the last element from this list.":"删除并返回此列表中的最后一个元素。\r\n"," without prefix and\n            suffix as the next element if it is non-empty.":" 没有前缀和\r\n            后缀为下一个元素，如果它是非空的。\r\n","java.util.StringTokenizer.nextToken(java.lang.String)":"java.util.stringtokenizer.nexttoken（java.lang.string）\r\n","java.util.Hashtable.values()":"java.util.hashtable.values（）\r\n","java.security.KeyPairGenerator.getInstance(java.lang.String, java.security.Provider)":"java.security.keypairgenerator.getInstance（java.lang.string，java.security.provider）\r\n","java.util.EnumSet.of(java.lang.Enum, java.lang.Enum, java.lang.Enum)":"java.util.enumset.of（java.lang.enum，java.lang.enum，java.lang.enum）\r\n","java.security.cert.X509CRLSelector.setMinCRLNumber(java.math.BigInteger)":"java.security.cert.x509crlselector.setmincrlnumber（java.math.biginteger）\r\n","java.time.format.DateTimeFormatterBuilder.appendZoneId()":"java.time.format.datetimeformatterbuilder.appendzoneid（）\r\n","#getParent parent":"#getParent父母\r\n","java.text.NumberFormat.setMaximumFractionDigits(int)":"java.text.numberformat.setmaximumfractionDigits（int）\r\n","java.sql.ResultSetMetaData.isDefinitelyWritable(int)":"java.sql.ResultsetMetadata.isdefinalitelable（INT）\r\n","Indicates that <code>NULL</code> values might not be allowed.":"指示<code> null </code>值可能不允许。\r\n","java.util.Collection.equals(java.lang.Object)":"java.util.collection.equals（java.lang.Object）\r\n","java.text.Bidi.getLength()":"java.text.bidi.getLength（）\r\n","java.util.concurrent.ConcurrentHashMap.search(long, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.search（long，java.util.function.bifunction）\r\n","java.nio.file.ClosedFileSystemException.ClosedFileSystemException()":"java.nio.file.closedfilesystemexception.closedfilesystemexception（）\r\n","Useful constant for one-based HOUR_OF_DAY field alignment.":"一个有用的常数，用于一个基于_of_day的场地对齐。\r\n","java.sql.DatabaseMetaData.getProcedures(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getProcedures（java.lang.string，java.lang.string，java.lang.string）\r\n","Returns a copy of this deque.":"返回此Deque的副本。\r\n","java.security.cert.CertPathBuilderResult":"java.security.cert.certpathbuilderresult\r\n","java.util.Hashtable.Hashtable()":"java.util.hashtable.hashtable（）\r\n","Retrieves and removes the head of this queue, waiting up to the\n            specified wait time if necessary for an element to become available.":"检索并取下该队列的头部，等待\r\n            指定的等待时间（如有必要）使元素可用。\r\n","java.sql.DatabaseMetaData.supportsGetGeneratedKeys()":"java.sql.databasemetadata.supportgetgetGeneratedKeys（）\r\n"," if this set uses the Comparable\n            natural ordering of its elements.":" 如果此组使用可比的\r\n            自然订购其元素。\r\n"," implementation based on a ":" 基于\r\n","java.sql.DatabaseMetaData.typePredChar":"java.sql.databasemetadata.typepredchar\r\n","java.util.concurrent.ForkJoinTask.getQueuedTaskCount()":"java.util.concurrent.forkjointask.getqueuedtaskcount（）\r\n","Bidi":"比迪\r\n","java.text.NumberFormat.FRACTION_FIELD":"java.text.numberformat.fraction_field\r\n","Returns an estimate of the number of elements that would be\n            encountered by a ":"返回对将要元素数量的估计值\r\n            遇到一个\r\n","Constructs a new, empty ":"构建一个新的空\r\n","Constructs a <code>SQLDataException</code> object with a given\n            <code>reason</code>, <code>SQLState</code>  and\n            <code>vendorCode</code>.":"用给定的\r\n            <code>原因</code>，<code> sqlstate </code>和\r\n            <code> vendorCode </code>。\r\n","Formats an object and appends the resulting text to a given string\n            buffer.":"格式化对象并将结果文本附加到给定的字符串\r\n            缓冲。\r\n","java.sql.DatabaseMetaData":"Java.sql.Databasemetadata\r\n","Returns a dynamically typesafe view of the specified collection.":"返回指定集合的​​动态类型AFTE视图。\r\n","java.text.DecimalFormat.setParseBigDecimal(boolean)":"java.text.decimalformat.setparsebigdecimal（boolean）\r\n","Converts the current calendar field values in ":"将当前日历字段值转换为\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as a stream of two-byte\n            Unicode characters.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象作为两字节的流\r\n            Unicode字符。\r\n","java.util.concurrent.CyclicBarrier":"java.util.concurrent.Cycliclier\r\n","signerCertPath":"SignerCertPath\r\n","java.util.OptionalDouble.isPresent()":"java.util.optionaldouble.ispresent（）\r\n","java.util.concurrent.CopyOnWriteArrayList.indexOf(java.lang.Object, int)":"java.util.concurrent.copyonwritearraylist.indexof（java.lang.object，int）\r\n","Indicates that a <code>NULL</code> value is NOT allowed for this\n            data type.":"表示不允许这样的<code> null </code>值\r\n            数据类型。\r\n","FileAttribute#name name":"fileattribute＃名称名称\r\n","java.text.RuleBasedCollator.getRules()":"java.text.rulebasedcollat​​or.getrules（）\r\n","Performs the check(s) on the specified certificate using its internal\n            state and removes any critical extensions that it processes from the\n            specified collection of OID strings that represent the unresolved\n            critical extensions.":"使用其内部执行指定证书的检查\r\n            声明并删除其从\r\n            指定未解决的OID字符串集合\r\n            关键扩展。\r\n","Returns an array containing all of the elements in this set.":"返回包含本集中所有元素的数组。\r\n","CallbackHandler":"CallbackHandler\r\n","Returns the database connection that created this metadata.":"返回创建此元数据的数据库连接。\r\n","<code>ParsePosition</code> is a simple class used by <code>Format</code>\n            and its subclasses to keep track of the current position during parsing.":"<code> parseposition </code>是<code>格式</code>使用的简单类\r\n            及其子类以跟踪解析过程中的当前位置。\r\n","java.sql.SQLOutput.writeObject(java.sql.SQLData)":"java.sql.sqloutput.writeObject（java.sql.sqldata）\r\n","Generates a certificate object and initializes it with\n            the data read from the input stream ":"生成证书对象并用\r\n            从输入流读取的数据\r\n","java.security.cert.X509CRLEntry.getRevocationReason()":"java.security.cert.x509crlentry.getRevocationReason（）\r\n","java.nio.file.attribute.BasicFileAttributeView.readAttributes()":"java.nio.file.attribute.basicfileattributeview.readattributes（）\r\n","java.security.spec.DSAParameterSpec":"java.security.spec.dsaparameterspec\r\n","#SORTED":"#Sorted\r\n","java.text.DateFormat.YEAR_FIELD":"java.text.dateformat.year_field\r\n","java.util.AbstractMap.keySet()":"java.util.abstractmap.keyset（）\r\n","Updates the designated column with an <code>int</code> value.":"用<code> int </code>值更新指定的列。\r\n","Returns an iterator over the elements in this set in descending order.":"以降序顺序返回该集合中的元素。\r\n","SQLState":"SQLSTATE\r\n","Arranges to asynchronously execute this task in the pool the\n            current task is running in, if applicable, or using the ":"安排异步在池中执行此任务\r\n            当前任务正在运行，如果适用，或者使用\r\n","The constant indicating the type for a <code>ResultSet</code> object\n            that is scrollable and generally sensitive to changes to the data\n            that underlies the <code>ResultSet</code>.":"常数指示<code> resultset的类型</code>对象\r\n            这是可以滚动的，通常对数据更改敏感\r\n            这是<code> Resultset </code>的基础。\r\n","if there are invalid characters in the pattern.\n":"如果图案中有无效的字符。\r\n\r\n","Constructs a <code>SQLTimeoutException</code> object\n            with a given  <code>cause</code>.":"构造<code> sqltimeoutexception </code>对象\r\n            使用给定的<code>原因</code>。\r\n","java.util.WeakHashMap.entrySet()":"java.util.weakhashmap.entryset（）\r\n","java.util.Deque.pop()":"java.util.deque.pop（）\r\n","java.sql.ResultSet.updateByte(java.lang.String, byte)":"java.sql.Resultset.updatebyte（java.lang.string，byte）\r\n","java.util.concurrent.ForkJoinPool.getRunningThreadCount()":"java.util.concurrent.forkjoinpool.getRunningthreadCount（）\r\n","Returns the incompatible conversion.":"返回不兼容的转换。\r\n","java.security.KeyStoreSpi.engineContainsAlias(java.lang.String)":"java.security.keystorespi.enginecontainsalias（java.lang.string）\r\n","Retrieves and removes the Future representing the next\n            completed task, or ":"检索并删除代表下一个的未来\r\n            完成任务，或\r\n","java.nio.file.FileAlreadyExistsException.FileAlreadyExistsException(java.lang.String)":"java.nio.file.FileAredReadyExistSexception.filealReadyExistSexception（java.lang.string）\r\n","java.util.Properties.Properties(java.util.Properties)":"java.util.properties.properties（java.util.properties）\r\n"," thread was\n         interrupted or timed out while the current thread was\n         waiting, or the barrier was reset, or the barrier was broken\n         when ":" 线程是\r\n         当前线程是中断或计时的\r\n         等待，或者重置障碍物，否则障碍物被打破\r\n         什么时候\r\n","Constructs a MessageFormat for the specified locale and\n            pattern.":"为指定的语言环境构建一个消息形式和\r\n            图案。\r\n","java.util.EnumSet.of(java.lang.Enum, java.lang.Enum[])":"java.util.enumset.of（java.lang.enum，java.lang.enum []）\r\n","java.util.SplittableRandom.nextInt(int, int)":"java.util.splittablerandom.nextint（int，int）\r\n","Updates the value of the system attribute.":"更新系统属性的值。\r\n","java.sql.PreparedStatement.setRowId(int, java.sql.RowId)":"java.sql.preparedstatement.setrowid（int，java.sql.rowid）\r\n","Constructs an object that implements the <code>Blob</code> interface.":"构造一个实现<code> blob </code>接口的对象。\r\n","a utility method to answer the name of a resource according to the\n given bundleName and suffix":"一种实用方法，可以根据该方法回答资源名称\r\n 给定包装和后缀\r\n","Returns a locale specific date format for the ISO chronology.":"返回ISO年表的区域特定日期格式。\r\n"," object which created this statement.":" 创建此语句的对象。\r\n","KeyUsage":"钥匙用\r\n","Compares the specified object with this set for equality.":"将指定的对象与此集合进行比较。\r\n","q":"问\r\n","java.util.concurrent.ForkJoinPool.isShutdown()":"java.util.concurrent.forkjoinpool.isshutdown（）\r\n","tbsCertList":"tbscertlist\r\n","java.text.DateFormat.getCalendar()":"java.text.dateformat.getCalendar（）\r\n","Retrieves whether values for the designated parameter can be signed numbers.":"检索是否可以签署指定参数的值。\r\n","<code>FieldPosition</code> is a simple class used by <code>Format</code>\n            and its subclasses to identify fields in formatted output.":"<code> fieldposition </code>是<code>格式</code>使用的简单类\r\n            及其子类以识别格式输出中的字段。\r\n","if an error occurs in encoding\n":"如果编码发生错误\r\n\r\n","This is the generic KeyStore exception.":"这是通用密钥库异常。\r\n","java.nio.file.Files.getFileAttributeView(java.nio.file.Path, java.lang.Class, java.nio.file.LinkOption)":"java.nio.file.files.getfileattributeview（java.nio.file.path，java.lang.class，java.nio.file.linkoption）\r\n","java.sql.PreparedStatement":"java.sql.preparedstatement\r\n","compareTo":"相比于\r\n","java.sql.ResultSet.updateNCharacterStream(int, java.io.Reader, long)":"java.sql.Resultset.updatencharacterstream（int，java.io.reader，long）\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code> object\n             with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构建<Code> SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION </code>对象\r\n             给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","Constructs a <code>SQLTransientConnectionException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.":"构造<code> sqltransientConnectionException </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>和<code>原因</code>。\r\n","java.util.concurrent.ConcurrentLinkedDeque.ConcurrentLinkedDeque()":"java.util.concurrent.concurrentlinkeddeque.concurrentlinkeddeque（）\r\n","java.util.IllformedLocaleException.IllformedLocaleException(java.lang.String, int)":"java.util.illformedlocaleexception.illformedlocaleexception（java.lang.string，int）\r\n","Removes the specified member from the group.":"从小组中删除指定成员。\r\n","Retrieves a charset for the given charset name.":"检索给定的Charset名称的字符集。\r\n","java.text.NumberFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)":"java.text.numberformat.format（java.lang.object，java.lang.stringbuffer，java.text.fieldposition）\r\n","Returns an unmodifiable view of the specified set.":"返回指定集的无可置改的视图。\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>VARBINARY</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> varbinary </code>。\r\n","java.sql.PreparedStatement.setObject(int, java.lang.Object)":"java.sql.preparedstatement.setObject（int，java.lang.object）\r\n","java.text.DateFormatSymbols.getWeekdays()":"java.text.dateformatsymbols.getweekdays（）\r\n","Reads an SQL <code>XML</code> value from the stream and returns it as a\n            <code>SQLXML</code> object in the Java programming language.":"从流中读取SQL <code> XML </code>值，并将其返回为\r\n            <code> SQLXML </code> Java编程语言中的对象。\r\n","paragraphLength":"段落长度\r\n","java.util.BitSet.valueOf(java.nio.LongBuffer)":"java.util.bitset.valueof（java.nio.longbuffer）\r\n","java.security.GeneralSecurityException.GeneralSecurityException()":"java.security.generalsecurityexception.generalsecurityexception（）\r\n","CertificateException":"证书Exception\r\n","java.nio.charset.spi.CharsetProvider.charsets()":"java.nio.charset.spi.charsetprovider.charsets（）\r\n","\"PKCS#8\"":"“ PKCS＃8”\r\n","java.sql.SQLInvalidAuthorizationSpecException.SQLInvalidAuthorizationSpecException(java.lang.String, java.lang.Throwable)":"java.sql.sqlinvalidauthorizationspecexception.sqlinvalideuthorizationspecexception（java.lang.string，java.lang.thrang.throwable）\r\n","java.text.DateFormat.parseObject(java.lang.String, java.text.ParsePosition)":"java.text.dateformat.parseobject（java.lang.string，java.text.parseposition）\r\n","DoubleSummaryStatistics":"双重义统计\r\n","java.util.concurrent.ConcurrentLinkedDeque.ConcurrentLinkedDeque(java.util.Collection)":"java.util.concurrent.concurrentlinkeddeque.concurrentlinkeddeque（java.util.collection）\r\n","Gets the time zone offset, for current date, modified in case of\n            daylight savings.":"获取当前日期的时区偏移，以防万一\r\n            日光节省。\r\n","Removes the mapping for the specified key from this map if present.":"如果存在，请从此地图中删除指定键的映射。\r\n","toString":"to\r\n","A simple visitor of files with default behavior to visit all files and to\n            re-throw I/O errors.":"具有默认行为的文件的简单访问者，可以访问所有文件和\r\n            重新输入I/O错误。\r\n","Returns the provider of this algorithm parameter generator object.":"返回此算法参数生成器对象的提供商。\r\n","Returns the affine x-coordinate ":"返回仿射X坐标\r\n","Inserts the specified element at the front of this deque,\n            waiting if necessary for space to become available.":"将指定元素插入此Deque的前部，\r\n            如有必要，以便空间可用。\r\n","java.util.Base64.getEncoder()":"java.util.base64.getencoder（）\r\n","A cancellable asynchronous computation.":"可取消的异步计算。\r\n","Initialize this object for signing.":"初始化此对象进行签名。\r\n","if the specified coefficients are not in the specified field.\n":"如果指定的系数不在指定的字段中。\r\n\r\n","Constructs a <code>SQLIntegrityConstraintViolationException</code> object\n            with a given\n            <code>reason</code> and  <code>cause</code>.":"构建<Code> SQLINTEGRITYCONDRATENTVIOLATIONEXCEPTION </code>对象\r\n            给定\r\n            <code>原因</code>和<code>原因</code>。\r\n","Returns a reader that can be used to read character data from this SQL ":"返回可用于从此SQL读取字符数据的读者\r\n","java.sql.ParameterMetaData.isSigned(int)":"java.sql.parametermetadata.signed（int）\r\n","java.util.Map.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)":"java.util.map.of（java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object， java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java.lang.object，java，java。 lang.Object）\r\n","Searches the specified array of bytes for the specified value using the\n            binary search algorithm.":"搜索使用该字节的指定字节数组为指定值使用\r\n            二进制搜索算法。\r\n","java.util.Optional.map(java.util.function.Function)":"java.util.optional.map（java.util.function.function）\r\n","Constructs a TooManyListenersException with no detail message.":"构建ToomanylistenersException，没有详细信息。\r\n","Retrieves whether it is possible to have multiple <code>ResultSet</code> objects\n            returned from a <code>CallableStatement</code> object\n            simultaneously.":"检索是否可以拥有多个<code> Resultset </code>对象\r\n            从<code> callablestatement </code>对象返回\r\n            同时。\r\n","java.text.DecimalFormat.DecimalFormat(java.lang.String, java.text.DecimalFormatSymbols)":"java.text.decimalformat.decimalformat（java.lang.string，java.text.decimalformatsymbols）\r\n","CyclicBarrier":"循环携带者\r\n","Creates a new X509EncodedKeySpec with the given encoded key.":"使用给定的编码键创建一个新的X509encodedKeyspec。\r\n","java.util.concurrent.BlockingDeque.removeFirstOccurrence(java.lang.Object)":"java.util.concurrent.blockingdeque.removefirstoccurrence（java.lang.object）\r\n","Returns a synchronized (thread-safe) sorted map backed by the specified\n            sorted map.":"返回由指定的同步（线程安全）排序的地图\r\n            排序地图。\r\n"," is not appropriate\n             for initializing this ":" 不合适\r\n             为了初始化\r\n","Gets the DER-encoded OCTET string for the extension value\n            (<em>extnValue</em>) identified by the passed-in ":"获取用于扩展值的DER编码八位位字符串\r\n            （<em> extnvalue </em>）通过传递给\r\n","java.text.BreakIterator.preceding(int)":"java.text.breakiterator.preceding（int）\r\n"," if the two specified arrays of floats are\n            ":" 如果两个指定的浮子阵列为\r\n            \r\n","Return a PermissionCollection object containing the set of\n            permissions granted to the specified CodeSource.":"返回一个包含该集合的许可汇总对象\r\n            授予指定代码的权限。\r\n","Constructs a new hashtable with the same mappings as the given\n            Map.":"构建一个与给定映射相同的新标签\r\n            地图。\r\n","java.sql.DatabaseMetaData.getCrossReference(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getCrossReference（java.lang.string，java.lang.string，java.lang.string，java.lang.string，java.lang.lang.string，java.lang.lang.string）\r\n","java.sql.SQLRecoverableException.SQLRecoverableException(java.lang.String, java.lang.String, int, java.lang.Throwable)":"java.sql.sqlrecoverableException.sqlrecoverableException（java.lang.string，java.lang.string，int，int，java.lang.thrang.throwable）\r\n","Returns an enumeration over the specified collection.":"返回指定集合上的枚举。\r\n","java.text.DateFormatSymbols.getZoneStrings()":"java.text.dateformatsymbols.getzonestrings（）\r\n","stdName":"stdname\r\n","Retrieves the name of the unsupported charset.":"检索不受支持的Charset的名称。\r\n","Returns the next token in this string tokenizer's string.":"返回此字符串Tokenizer的字符串中的下一个令牌。\r\n","java.util.concurrent.CyclicBarrier.CyclicBarrier(int)":"java.util.concurrent.cyclarer.cyclarrier（int）\r\n","a list defines default format\n":"列表定义默认格式\r\n\r\n","java.util.TimeZone.setDefault(java.util.TimeZone)":"java.util.timezone.setDefault（java.util.timezone）\r\n","type, protectionParameter":"类型，保护参数\r\n","java.util.List.equals(java.lang.Object)":"java.util.list.equals（java.lang.Object）\r\n","Gets the transition instant as an epoch second.":"将过渡瞬间作为时代第二。\r\n","Returns the maximum number of characters in a schema name for this\n database.":"返回架构名称中的最大字符数量\r\n 数据库。\r\n","java.text.Bidi.DIRECTION_RIGHT_TO_LEFT":"java.text.bidi.direction_right_to_left\r\n","Gets if the cursor is on the first row of the ":"如果光标在\r\n","if the length of this attributed string is 0.":"如果此属性字符串的长度为0。\r\n","Creates a set containing all of the elements of the specified\n            collection.":"创建一个包含指定元素的集合\r\n            收藏。\r\n","java.util.WeakHashMap.WeakHashMap(java.util.Map)":"java.util.weakhashmap.weakhashmap（java.util.map）\r\n"," is neither a ":" 都是\r\n"," that\n encapsulates a ":" 那\r\n 封装\r\n","Calendar":"日历\r\n","The constant indicating that the parameter's mode is INOUT.":"常数表示参数的模式是inout。\r\n"," as defined in\n            the PKCS #1 standard using the specified message digest,\n            mask generation function, parameters for mask generation\n            function, salt length, and trailer field values.":" 如所定义\r\n            PKCS＃1标准使用指定的消息摘要，\r\n            掩模生成功能，掩模生成的参数\r\n            功能，盐长度和拖车场值。\r\n","Indicates that the parameter or column is an INOUT parameter.":"表示参数或列是INOUT参数。\r\n","java.util.concurrent.ForkJoinPool.commonPool()":"java.util.concurrent.forkjoinpool.commonpool（）\r\n","java.sql.SQLInput":"java.sql.sqlinput\r\n","java.util.InputMismatchException.InputMismatchException(java.lang.String)":"java.util.inputMismatchException.inputMismatchException（java.lang.string）\r\n","java.time.format.DateTimeFormatterBuilder.appendZoneOrOffsetId()":"java.time.format.datetimeformatterbuilder.appendzoneoroffsetid（）\r\n","if the implementation does not support the specified\n             ":"如果实现不支持指定的\r\n             \r\n","java.time.temporal.ValueRange.isValidIntValue(long)":"java.time.temporal.valuerange.isvalidintvalue（长）\r\n","InvalidKeyException":"InvalidKeyException\r\n","java.sql.SQLTransientException.SQLTransientException(java.lang.String, java.lang.String, int)":"java.sql.sqltransientException.sqltransientException（java.lang.string，java.lang.string，int）\r\n","Obtains the DecimalStyle for the default\n            ":"获得默认值的十分态\r\n            \r\n","A style specifier for <code>getDisplayName()</code> indicating\n            a short name, such as \"PST.":"<code> getDisPlayName（）</code>指示的样式说明符\r\n            一个简短的名称，例如“ PST。\r\n","#await":"＃等待\r\n","java.text.ChoiceFormat.ChoiceFormat(double[], java.lang.String[])":"java.text.ChoIceFormat.ChoIceFormat（double []，java.lang.string []）\r\n","Returns the unique index number of this thread in its pool.":"返回其池中此线程的唯一索引号。\r\n","Returns the minimum value for the given calendar field of this\n            <code>Calendar</code> instance.":"返回给定日历字段的最小值\r\n            <code>日历</code>实例。\r\n","Retrieves whether this database supports SQL <code>UNION ALL</code>.":"检索此数据库是否支持SQL <code>联合所有</code>。\r\n","Indicates whether the designated column is definitely not writable.":"指示指定的列是否绝对不是可写的。\r\n","java.sql.ResultSet.rowInserted()":"java.sql.Resultset.Rowinserted（）\r\n","java.sql.Types.BIT":"java.sql.types.bit\r\n","This class is an abstraction of certificate revocation lists (CRLs) that\n            have different formats but important common uses.":"此类是证书撤销列表（CRL）的抽象\r\n            具有不同的格式，但重要的常用用途。\r\n","Returns the signature bytes of all the data updated.":"返回所有已更新数据的签名字节。\r\n","Retrieves whether a row has been deleted.":"检索是否已删除。\r\n","Updates the designated column using the given input stream.":"使用给定的输入流更新指定的列。\r\n","java.sql.SQLInput.readBigDecimal()":"java.sql.sqlinput.readbigdecimal（）\r\n","Returns the name of the algorithm for this signature object.":"返回此签名对象的算法名称。\r\n","java.util.NavigableSet.pollFirst()":"java.util.navigableset.pollfirst（）\r\n","java.util.Queue.remove()":"java.util.queue.remove（）\r\n","Returns the <code>Currency</code> instance for the given currency code.":"返回给定货币代码的<code>货币</code>实例。\r\n","java.security.acl.Owner":"java.security.acl.outher\r\n"," and related operations.":" 和相关操作。\r\n","java.time.format.DecimalStyle.withPositiveSign(char)":"java.time.format.decimalstyle.withpositivesign（char）\r\n","java.util.concurrent.ConcurrentLinkedQueue.spliterator()":"java.util.concurrent.concurrentlinkedqueue.spliterator（）\r\n","java.util.Arrays.parallelSort(short[], int, int)":"java.util.arrays.parallelsort（short []，int，int）\r\n","Constructs a new formatter with the specified file name.":"用指定的文件名构建一个新的格式器。\r\n","Gets the DER-encoded signature algorithm parameters from this\n            CRL's signature algorithm.":"从此获取DER编码的签名算法参数\r\n            CRL的签名算法。\r\n","s that\n            match the specified selector.":"那\r\n            匹配指定的选择器。\r\n","java.util.Arrays.fill(float[], int, int, float)":"java.util.arrays.fill（float []，int，int，float）\r\n","java.text.DecimalFormatSymbols.DecimalFormatSymbols(java.util.Locale)":"java.text.decimalformatsymbols.decimalformatsymbols（java.util.locale）\r\n","if no installed provider provides the specified algorithm.":"如果没有安装的提供商提供指定的算法。\r\n","Value of the <code>ERA</code> field indicating\n            the period before the common era (before Christ), also known as BCE.":"<code> ERA的值</code>指示字段\r\n            共同时代（基督之前）（也称为BCE）之前的时期。\r\n","A Red-Black tree based ":"基于红黑的树\r\n"," is a marker interface for protection\n parameters.":" 是保护的标记接口\r\n 参数。\r\n"," for the SQLState class\n            value '":" 对于SQLSTATE类\r\n            价值 '\r\n","java.sql.ResultSet.updateNClob(java.lang.String, java.io.Reader)":"java.sql.Resultset.updatenclob（java.lang.string，java.io.reader）\r\n","Returns an empty list (immutable).":"返回一个空列表（不变）。\r\n"," instance to be the\n            list's current size.":" 实例是\r\n            列表的当前大小。\r\n","java.sql.SQLWarning.SQLWarning()":"java.sql.sqlwarning.sqlwarning（）\r\n","java.util.LongSummaryStatistics.combine(java.util.LongSummaryStatistics)":"java.util.longsummarystatistics.combine（java.util.longsummarystatistics）\r\n"," are not valid in respect to\n             ":" 对于\r\n             \r\n","java.util.PrimitiveIterator.forEachRemaining(java.lang.Object)":"java.util.primitiveIterator.ForeachRemaining（Java.lang.Object）\r\n","Reads the next attribute in the stream and returns it as a stream of Unicode characters.":"读取流中的下一个属性，并将其返回为Unicode字符的流。\r\n","java.text.NumberFormat.getNumberInstance(java.util.Locale)":"java.text.numberformat.getnumberinstance（java.util.locale）\r\n","Creates a ForkJoinWorkerThread operating in the given pool.":"在给定的池中创建一个forkjoinworkerThread。\r\n","#SHORT":"＃短的\r\n","Returns this identity's scope.":"返回该身份的范围。\r\n","This class specifies a DSA private key with its associated parameters.":"此类指定具有其关联参数的DSA私钥。\r\n","Constructs a <code>SQLTransactionRollbackException</code> object\n            with a given <code>reason</code> and <code>SQLState</code>.":"构造<code> sqltransactionRollbackexception </code>对象\r\n            使用给定的<code>原因</code>和<code> sqlstate </code>。\r\n","java.sql.DatabaseMetaData.importedKeyNoAction":"java.sql.databasemetadata.importedKeynoAction\r\n","The constant in the Java programming language, sometimes referred\n            to as a type code, that identifies the generic SQL type\n            <code>VARCHAR</code>.":"Java编程语言中的常数，有时被引用\r\n            作为类型代码，标识通用SQL类型\r\n            <code> varchar </code>。\r\n","java.util.Arrays.copyOf(java.lang.Object[], int, java.lang.Class)":"java.util.arrays.copyof（java.lang.object []，int，java.lang.class）\r\n","Retrieves whether this database treats mixed case unquoted SQL identifiers as\n            case insensitive and stores them in lower case.":"检索该数据库是否将混合情况视为未引用的SQL标识符为\r\n            病例不敏感并将其存储在较低的情况下。\r\n","Returns an immutable set containing four elements.":"返回一个不变的集合，其中包含四个元素。\r\n","Returns a non-null result from applying the given search\n            function on each (key, value), or null if none.":"返回通过应用给定搜索的非零结果\r\n            在每个（键，值）或null上函数，如果无。\r\n","If this task does not have a completer, invokes ":"如果此任务没有完成者，请调用\r\n","If the specified key is not already associated with a value,\n            attempts to compute its value using the given mapping function\n            and enters it into this map unless ":"如果指定的密钥尚未与值关联，\r\n            尝试使用给定的映射功能计算其值\r\n            除非\r\n","Retrieves and removes the first element of this deque, waiting\n            if necessary until an element becomes available.":"检索并删除此Deque的第一个元素，等待\r\n            如有必要，直到元素可用。\r\n","java.util.NavigableMap.lowerEntry(java.lang.Object)":"java.util.navigablemap.lowerentry（java.lang.Object）\r\n","Inserts the specified element into this priority queue.":"将指定元素插入此优先级队列。\r\n","Determines the date and time based on the arguments.":"根据参数确定日期和时间。\r\n","Returns the length of the digest in bytes, or 0 if this operation is\n            not supported by the provider and the implementation is not cloneable.":"返回字节中的摘要长度，或者如果此操作为0\r\n            提供商不支持，实施不可键入。\r\n","java.text.Format.Format()":"java.text.format.format（）\r\n","Constructs a <code>SQLInvalidAuthorizationSpecException</code> object\n            with a given\n            <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code>\n            and  <code>cause</code>.":"构造<code> sqlinvalidauthorizationspecexception </code>对象\r\n            给定\r\n            <code>原因</code>，<code> sqlstate </code>，<code> vendorcode </code>\r\n            和<code>原因</code>。\r\n","java.sql.ResultSet.getTime(java.lang.String)":"java.sql.Resultset.getTime（java.lang.string）\r\n","Gets the <code>DateFormatSymbols</code> instance for the default\n            locale.":"获取<code> dateformatsymbols </code>默认的实例\r\n            语言环境。\r\n","Allows you to get the behavior of the decimal separator with integers. -or- Allows you to set the behavior of the decimal separator with integers.":"允许您将小数分隔符的行为与整数相关。 - 或 - 允许您将小数分离器与整数设置为行为。\r\n","if there is a problem accessing the database\n":"如果访问数据库有问题\r\n\r\n"," value between zero (inclusive)\n            and the specified bound (exclusive).":" 零（包含）之间的值\r\n            和指定的绑定（独家）。\r\n","SubjectAltName":"主题名称\r\n","java.util.Calendar.SHORT_STANDALONE":"java.util.calendar.short_standalone\r\n","Removes all available elements from this queue and adds them\n            to the given collection.":"从此队列中删除所有可用元素，并添加它们\r\n            给定的集合。\r\n","java.util.concurrent.ForkJoinPool.getParallelism()":"java.util.concurrent.forkjoinpool.getParallelism（）\r\n","java.sql.CallableStatement.getURL(java.lang.String)":"java.sql.callablestatement.geturl（java.lang.string）\r\n","Refreshes the current row with its most recent value in\n            the database.":"以其最新价值在当前行中刷新当前行\r\n            数据库。\r\n","Returns a string representation of this CRL entry.":"返回此CRL条目的字符串表示。\r\n","java.security.cert.X509CertSelector.getSubjectPublicKeyAlgID()":"java.security.cert.x509certselector.getSubjectPublicKeyalGid（）\r\n","Returns the size of the file (in bytes).":"返回文件的大小（以字节为单位）。\r\n","Retrieves the designated column's database-specific type name.":"检索指定列的数据库特定类型名称。\r\n","java.security.AccessControlException.AccessControlException(java.lang.String)":"java.security.AccessControlexception.AccessControlexception（java.lang.string）\r\n","Retrieves whether deletes made by others are visible.":"检索他人是否可见的删除。\r\n","Writes the next attribute to the stream as a Java byte.":"将下一个属性写入流的java字节。\r\n","Saves a ":"保存a\r\n","java.security.cert.X509Extension.getExtensionValue(java.lang.String)":"java.security.cert.x509extension.getExtensionValue（java.lang.string）\r\n","java.security.cert.CertificateEncodingException.CertificateEncodingException()":"java.security.cert.certificateEncodingException.certificateEncodingException（）\r\n","java.sql.PreparedStatement.setURL(int, java.net.URL)":"java.sql.preparedstatement.seturl（int，java.net.url）\r\n","Resolves the given path against this path's ":"解决针对这条路的给定路径\r\n","Gets the designated column's table's catalog name.":"获取指定的列表的目录名称。\r\n","Returns a new CompletableFuture that is asynchronously completed\n            by a task running in the given executor with the value obtained\n            by calling the given Supplier.":"返回一个新的完整图，该备件已异步完成\r\n            通过在给定执行人中运行的任务，并获得的值\r\n            通过致电给定的供应商。\r\n","java.sql.DatabaseMetaData.getSuperTypes(java.lang.String, java.lang.String, java.lang.String)":"java.sql.databasemetadata.getsupertypes（java.lang.string，java.lang.string，java.lang.string）\r\n","java.sql.DatabaseMetaData.dataDefinitionIgnoredInTransactions()":"java.sql.databasemetadata.datadefinitionignignoredInsactions（）\r\n","java.security.cert.PKIXParameters.setCertPathCheckers(java.util.List)":"java.security.cert.pkixparameters.setcertpatheckers（java.util.list）\r\n","Abstract base class for tasks that run within a ":"在一个内部运行的任务的抽象基类\r\n"," elements, in which an element can only be taken\n            when its delay has expired.":" 元素，其中只能获取元素\r\n            当它的延迟过期。\r\n","java.sql.SQLTransientConnectionException.SQLTransientConnectionException(java.lang.Throwable)":"java.sql.sqltransientConnectionException.sqltransientConnectionException（java.lang.throwable）\r\n","java.util.concurrent.BlockingDeque.pollLast(long, java.util.concurrent.TimeUnit)":"java.util.concurrent.blockingdeque.polllast（long，java.util.concurrent.timeunit）\r\n","java.sql.PreparedStatement.setShort(int, short)":"java.sql.preparedstatement.setshort（int，short）\r\n","java.util.Arrays.binarySearch(float[], int, int, float)":"java.util.arrays.binarysearch（float []，int，int，float）\r\n","Moves to this <code>Statement</code> object's next result, deals with\n            any current <code>ResultSet</code> object(s) according  to the instructions\n            specified by the given flag, and returns\n            <code>true</code> if the next result is a <code>ResultSet</code> object.":"移至此<code>语句</code>对象的下一个结果，处理\r\n            任何当前<code> RESTERSET </code>对象根据指令\r\n            由给定标志指定并返回\r\n            <code> true </code>如果下一个结果是<code> Resultset </code>对象。\r\n","java.sql.PreparedStatement.setClob(int, java.io.Reader)":"java.sql.preparedstatement.setClob（int，java.io.reader）\r\n","Causes the current thread to wait until the latch has counted down to\n            zero, unless the thread is Thread#interrupt interrupted.":"导致当前线程等到闩锁计算为\r\n            零，除非线程为线程＃中断中断。\r\n","Registers the parameter named\n            <code>parameterName</code> to be of JDBC type\n            <code>sqlType</code>.":"登录名称的参数\r\n            <code> parametername </code>属于JDBC类型\r\n            <code> sqltype </code>。\r\n","Lookup a group principal by group name.":"查找小组校长按组名称。\r\n","Performs the check(s) on the specified certificate using its internal\n            state.":"使用其内部执行指定证书的检查\r\n            状态。\r\n","Decides whether a ":"决定是否\r\n","java.time.format.DateTimeFormatterBuilder.append(java.time.format.DateTimeFormatter)":"java.time.format.datetime formatterbuilder.append（java.time.format.datementimeformatter）\r\n","Initializes this signature object with the specified\n            private key and source of randomness for signing operations.":"用指定的对象初始化此签名对象\r\n            签署操作的私钥和随机性来源。\r\n","java.util.Arrays.binarySearch(java.lang.Object[], int, int, java.lang.Object)":"java.util.arrays.binarysearch（java.lang.object []，int，int，java.lang.object）\r\n","F:Java.Util.IFormattable.FormatTo":"f：java.util.simentAttable.formatto\r\n","Returns an array in which each item is a pair of objects in an\n            <code>Object</code> array.":"返回一个数组，其中每个项目是一对对象\r\n            <code>对象</code>数组。\r\n","Constructs a <code>SQLException</code> object.":"构造<Code> SQLEXCEPTION </code>对象。\r\n",", or cannot be compared to each other.\n":"，或不能相互比较。\r\n\r\n","java.time.format.DateTimeFormatter.withResolverStyle(java.time.format.ResolverStyle)":"java.time.format.datetimeformatter.withresolverstyle（java.time.format.resolverstyle）\r\n","java.sql.Blob.length()":"java.sql.blob.length（）\r\n","java.security.Signature.getParameter(java.lang.String)":"java.security.signature.getParameter（java.lang.string）\r\n","java.sql.DatabaseMetaData.importedKeyNotDeferrable":"java.sql.databasemetadata.importedkeynotdeferrable\r\n","java.security.cert.CertStore.getCertificates(java.security.cert.CertSelector)":"java.security.cert.certstore.getcertificates（java.security.cert.certselector）\r\n","Returns the maximum value recorded, or ":"返回记录的最大值，或\r\n","p":"p\r\n","Returns a copy of the otherPrimeInfo or null if there are\n            only two prime factors (p and q).":"如果有\r\n            只有两个主要因素（P和Q）。\r\n","java.security.spec.RSAPrivateKeySpec.RSAPrivateKeySpec(java.math.BigInteger, java.math.BigInteger)":"java.security.spec.rsaprivatekeyspec.rsaprivatekeyspec（java.math.biginteger，java.math.biginteger）\r\n","if this connection is closed, or there's a problem setting\n the property.\n":"如果关闭此连接，或者有问题设置\r\n 属性。\r\n\r\n","Moves the cursor to the given row number in\n            this <code>ResultSet</code> object.":"将光标移至给定的行号\r\n            此<code> Resultset </code>对象。\r\n","This immutable class defines an elliptic curve (EC)\n            characteristic 2 finite field.":"这个不变的类定义了椭圆曲线（EC）\r\n            特征2有限场。\r\n","Replaces each entry's value with the result of invoking the given\n            function on that entry, in the order entries are returned by an entry\n            set iterator, until all entries have been processed or the function\n            throws an exception.":"用调用给定的结果代替每个条目的值\r\n            在该条目上功能，在订单条目中由条目返回\r\n            设置迭代器，直到处理所有条目或功能\r\n            引发例外。\r\n","java.security.cert.X509CertSelector.match(java.security.cert.Certificate)":"java.security.cert.x509certselector.match（java.security.cert.certificate）\r\n","java.security.Principal.implies(javax.security.auth.Subject)":"java.security.principal.implies（javax.security.auth.subject）\r\n","java.util.concurrent.ConcurrentHashMap.reduceValues(long, java.util.function.BiFunction)":"java.util.concurrent.concurrenthashmap.reducevalues（long，java.util.function.bifunction）\r\n","fromElement":"元素\r\n","java.security.cert.Certificate.Certificate(java.lang.String)":"java.security.cert.certificate.certificate（java.lang.string）\r\n","Returns the locale set by the construction of this formatter.":"返回该格式化器的构造设置的语言环境。\r\n","java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale)":"java.util.resourcebundle.getBundle（java.lang.string，java.util.locale）\r\n","java.util.Deque.peekFirst()":"java.util.deque.peekfirst（）\r\n","java.util.Arrays.parallelSort(java.lang.Comparable[])":"java.util.arrays.parallelsort（java.lang.comparable []）\r\n","java.util.Map.forEach(java.util.function.BiConsumer)":"java.util.map.foreach（java.util.function.biconsumer）\r\n","The interface for an Elliptic Curve (EC) private key.":"椭圆曲线（EC）私钥的接口。\r\n","Constructs a new <code>Scanner</code> that produces values scanned\n            from the specified channel.":"构建一个新的<code>扫描仪</code>，该</code>产生扫描的值\r\n            从指定的通道。\r\n","Indicates the designated column's normal maximum width in characters.":"指示指定的列的正常最大宽度字符。\r\n","Returns the index of the certificate in the certification path\n            that caused the exception to be thrown.":"在认证路径中返回证书的索引\r\n            这导致了例外。\r\n","java.nio.file.Path.resolve(java.lang.String)":"java.nio.file.path.resolve（java.lang.string）\r\n","java.sql.CallableStatement.setTime(java.lang.String, java.sql.Time)":"java.sql.callablestatement.settime（java.lang.string，java.sql.time）\r\n","sigBytes":"Sigbytes\r\n","Retrieves whether this database supports <code>SELECT FOR UPDATE</code>\n            statements.":"检索此数据库是否支持<code>选择更新</code>\r\n            语句。\r\n","An abstract wrapper class for an ":"一个抽象包装班\r\n","java.util.TreeSet.subSet(java.lang.Object, boolean, java.lang.Object, boolean)":"java.util.treeset.subset（java.lang.Object，boolean，java.lang.object，boolean）\r\n","java.security.cert.CertPathBuilderException.CertPathBuilderException(java.lang.Throwable)":"java.security.cert.certpathbuilderexception.certpathbuilderexception（java.lang.throwable）\r\n","java.text.CharacterIterator.current()":"java.text.characteritator.current（）\r\n","java.util.concurrent.ForkJoinTask.peekNextLocalTask()":"java.util.concurrent.forkjointask.peeknextlocaltask（）\r\n","Returns an iterator over the elements in this deque in reverse\n            sequential order.":"返回迭代器，以反向以相反\r\n            顺序顺序。\r\n","Returns an unmodifiable view of the specified sorted map.":"返回指定的排序地图的无可置改的视图。\r\n"," should be granted.":" 应该授予。\r\n","if input has been exhausted.\n":"如果输入已经用尽。\r\n\r\n","Returns true if the next token in this scanner's input can be\n            interpreted as a <code>BigInteger</code> in the specified radix using\n            the ":"如果本扫描仪输入中的下一个令牌可以是返回true\r\n            在指定的radix中解释为<code> biginteger </code>使用\r\n            这\r\n","java.text.AttributedString.AttributedString(java.lang.String, java.util.Map)":"java.text.attributedstring.attributedstring（java.lang.string，java.util.map）\r\n","java.security.cert.CertPathBuilderSpi":"java.security.cert.certpathbuilderspi\r\n","if the resource is not found.\n":"如果找不到资源。\r\n\r\n","java.util.concurrent.ForkJoinPool.pollSubmission()":"java.util.concurrent.forkjoinpool.pollsubmission（）\r\n","java.util.MissingFormatArgumentException.MissingFormatArgumentException(java.lang.String)":"java.util.missingformatargumentException.missingformatargumentException（java.lang.string）\r\n","java.util.Locale.getDisplayName(java.util.Locale)":"java.util.locale.getDisplayname（java.util.locale）\r\n","java.security.cert.LDAPCertStoreParameters.getServerName()":"java.security.cert.ldapcertstoreparameters.getServername（）\r\n","Constructs a <code>GregorianCalendar</code> based on the current time\n            in the default time zone with the given locale.":"基于当前时间构建<code> GregorianCalendar </code>\r\n            在带有给定语言环境的默认时区。\r\n","Completes this builder by creating the ":"通过创建\r\n","java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier)":"java.util.concurrent.completablefuture.supplyasync（java.util.function.supplier）\r\n","Performs a final update on the digest using the specified array\n            of bytes, then completes the digest computation.":"使用指定的数组对Digest执行最终更新\r\n            字节，然后完成摘要计算。\r\n","java.security.GeneralSecurityException.GeneralSecurityException(java.lang.String, java.lang.Throwable)":"java.security.generalsecurityexception.generalsecurityexception（java.lang.string，java.lang.thrang.throwable）\r\n","#complete":"＃完全的\r\n","This immutable class represents a point on an elliptic curve (EC)\n            in affine coordinates.":"这个不变的类代表椭圆曲线（EC）上的一个点\r\n            在仿射坐标中。\r\n","java.security.spec.ECPoint":"java.security.spec.ecpoint\r\n","java.security.Identity":"Java.security.Identity\r\n","This class represents a scope for identities.":"此类代表身份的范围。\r\n","This class implements a hash table, which maps keys to values.":"该类实现一个哈希表，该表将键映射到值。\r\n","ForkJoinPool":"forkjoinpool\r\n","The constant indicating that a\n            column allows <code>NULL</code> values.":"常数表明\r\n            列允许<code> null </code>值。\r\n","java.security.interfaces.DSAKeyPairGenerator.initialize(int, boolean, java.security.SecureRandom)":"java.security.interfaces.dsakeypairgenerator.initialize（int，boolean，java.security.securerandom）\r\n","indicating the\n month. ":"指示\r\n 月。\r\n","Returns this signer's private key.":"返回该签名者的私钥。\r\n","java.sql.DatabaseMetaData.supportsExtendedSQLGrammar()":"java.sql.databasemetadata.supportsextendedsqlgrammar（）\r\n","Retrieves and removes the Future representing the next\n completed task, waiting if none are yet present.":"检索并删除代表下一个的未来\r\n 完成任务，如果没有，则等待。\r\n","Looks at the object at the top of this stack without removing it\n            from the stack.":"查看此堆栈顶部的对象而不将其删除\r\n            从堆栈。\r\n"," covering all of the specified array.":" 覆盖所有指定的数组。\r\n","java.text.Format.formatToCharacterIterator(java.lang.Object)":"java.text.format.formattocharacteriter（java.lang.Object）\r\n","java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble(long, java.util.function.ToDoubleFunction, double, java.util.function.DoubleBinaryOperator)":"java.util.concurrent.concurrenthashmap.reducevaluestostodouble（long，java.util.function.todoublefunction，double，double，java.util.function.doublebinaryoperator）\r\n","Ref":"参考\r\n","\n            given the modulus, publicExponent, privateExponent,\n            primeP, primeQ, primeExponentP, primeExponentQ,\n            crtCoefficient, and otherPrimeInfo as defined in PKCS#1 v2.":"\r\n            给定模量，publicexponent，privateeptonent，\r\n            PrimeP，PrimeQ，PrimeExponentP，PrimeExponentQ，\r\n            PKCS＃1 V2中定义的CRTCOFEFIDIES和其他PromimeInfo。\r\n",", even\n if this task completed abnormally, or ":"， 甚至\r\n 如果此任务异常完成，或者\r\n","java.text.Bidi.Bidi(java.text.AttributedCharacterIterator)":"java.text.bidi.bidi（java.text.attributed characteriterator）\r\n","java.security.cert.PKIXParameters.getSigProvider()":"java.security.cert.pkixparameters.getsigprovider（）\r\n","java.sql.SQLClientInfoException.SQLClientInfoException()":"java.sql.sqlclientinfoexception.sqlclientinfoexception（）\r\n","java.sql.DatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()":"java.sql.databasemetadata.supportscatalogsinprivilegedefinitions（）\r\n","java.security.ProviderException.ProviderException(java.lang.Throwable)":"java.security.providerexception.providerexception（java.lang.throwable）\r\n","java.util.Arrays.binarySearch(short[], short)":"java.util.arrays.binarysearch（短[]，简称）\r\n","java.util.EventObject.EventObject(java.lang.Object)":"java.util.eventobject.eventobject（java.lang.object）\r\n","Searches a range of\n            the specified array of bytes for the specified value using the\n            binary search algorithm.":"搜索一系列\r\n            使用该指定值的指定字节数组\r\n            二进制搜索算法。\r\n","java.util.Collections.nCopies(int, java.lang.Object)":"java.util.collections.ncopies（int，java.lang.object）\r\n","Verifies the passed-in signature.":"验证传递的签名。\r\n"," indicating this ":" 指示这一点\r\n","fixed-delay execution":"固定延期执行\r\n","Formattable":"格式\r\n","java.security.KeyStore.deleteEntry(java.lang.String)":"java.security.keystore.deleteentry（java.lang.string）\r\n","java.sql.CallableStatement.setRowId(java.lang.String, java.sql.RowId)":"java.sql.callablestatement.setrowid（java.lang.string，java.sql.Rowid）\r\n","java.security.acl.AclNotFoundException":"java.security.acl.aclnotfoundexception\r\n","RSAPrivateCrtKeySpec":"rsaprivatecrtkeyspec\r\n","Retrieves the value of the designated column in the current row\n            of this <code>ResultSet</code> object as\n            as a stream of two-byte 3 characters.":"检索当前行中指定列的值\r\n            此<code> resultset </code>对象为\r\n            作为两个字节的三个字符的流。\r\n","java.security.interfaces.ECPrivateKey":"java.security.interfaces.ecprivatekey\r\n"," class, which provides the functionality\n            of a message digest algorithm, such as MD5 or SHA.":" 类，提供功能\r\n            消息摘要算法，例如MD5或SHA。\r\n","java.util.Calendar.getTime()":"java.util.calendar.getTime（）\r\n"," if a file key is not available.":" 如果没有文件密钥。\r\n"}